<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Edgar&#39;s Blog</title>
  <subtitle>等待执剑少年修炼归来！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-02-06T13:07:10.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Edgar</name>
    <email>tbfungeek@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 进阶系列之容器</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E5%AE%B9%E5%99%A8/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之容器/</id>
    <published>2017-02-06T13:07:10.000Z</published>
    <updated>2017-02-06T13:07:10.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之IO</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8BIO/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之IO/</id>
    <published>2017-02-06T13:06:55.000Z</published>
    <updated>2017-02-06T13:06:55.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之多线程</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之多线程/</id>
    <published>2017-02-06T13:06:39.000Z</published>
    <updated>2017-02-06T13:06:39.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之注解</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E6%B3%A8%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之注解/</id>
    <published>2017-02-06T13:06:32.000Z</published>
    <updated>2017-02-15T16:20:29.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x7AE0;&amp;#x77E5;&amp;#x8BC6;&amp;#x70B9;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&lt;/li&gt;
&lt;li&gt;&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&lt;/li&gt;
&lt;li&gt;&amp;#x6CE8;&amp;#x89E3;&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5B9E;&amp;#x73B0;&lt;/li&gt;
&lt;li&gt;Android&amp;#x4E2D;&amp;#x7684;&amp;#x4E13;&amp;#x7528;&amp;#x6CE8;&amp;#x89E3;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&quot;&gt;&lt;a href=&quot;#JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&quot; class=&quot;headerlink&quot; title=&quot;JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&quot;&gt;&lt;/a&gt;JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&lt;/h4&gt;&lt;p&gt;Java&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x4E09;&amp;#x79CD;&amp;#x5185;&amp;#x5EFA;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F30;&amp;#x8BA1;&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x662F;&amp;#x6700;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x6CE8;&amp;#x89E3;&amp;#x4E86;&amp;#xFF0C;&amp;#x5B83;&amp;#x7528;&amp;#x4E8E;&amp;#x8868;&amp;#x793A;&amp;#x6240;&amp;#x6CE8;&amp;#x89E3;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x8986;&amp;#x76D6;&amp;#x7236;&amp;#x7C7B;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x5B58;&amp;#x5728;&amp;#x4EFB;&amp;#x4F55;&amp;#x7684;&amp;#x62FC;&amp;#x5199;&amp;#x9519;&amp;#x8BEF;&amp;#x5BFC;&amp;#x81F4;&amp;#x65B9;&amp;#x6CD5;&amp;#x7B7E;&amp;#x540D;&amp;#x5BF9;&amp;#x4E0D;&amp;#x4E0A;&amp;#x88AB;&amp;#x8986;&amp;#x76D6;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5C31;&amp;#x4F1A;&amp;#x53D1;&amp;#x51FA;&amp;#x9519;&amp;#x8BEF;&amp;#x63D0;&amp;#x793A;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@Deprecated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E00;&amp;#x822C;&amp;#x7528;&amp;#x4E8E;&amp;#x6807;&amp;#x8BB0;&amp;#x67D0;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF0C;&amp;#x5F00;&amp;#x53D1;&amp;#x8005;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E86;&amp;#x89E3;&amp;#x5230;&amp;#x54EA;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x662F;&amp;#x5904;&amp;#x4E8E;&amp;#x9057;&amp;#x5F03;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6CE8;&amp;#x91CA;&amp;#x7528;&amp;#x4E8E;&amp;#x5FFD;&amp;#x89C6;&amp;#x67D0;&amp;#x4E2A;&amp;#x8B66;&amp;#x544A;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&quot;&gt;&lt;a href=&quot;#&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&quot;&gt;&lt;/a&gt;&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&lt;/h4&gt;&lt;p&gt;Java&amp;#x4E2D;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x56DB;&amp;#x79CD;&amp;#x5143;&amp;#x6CE8;&amp;#x91CA;&amp;#x7528;&amp;#x4E8E;&amp;#x5B9A;&amp;#x4E49;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF0C;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;@Target    &amp;#x8868;&amp;#x793A;&amp;#x8BE5;&amp;#x6CE8;&amp;#x89E3;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5728;&amp;#x4EC0;&amp;#x4E48;&amp;#x5730;&amp;#x65B9;&amp;#xFF0C;&amp;#x7531;ElementType&amp;#x679A;&amp;#x4E3E;&amp;#x5B9A;&amp;#x4E49; ,&amp;#x5F53;&amp;#x6CE8;&amp;#x89E3;&amp;#x672A;&amp;#x6307;&amp;#x5B9A;Target&amp;#x503C;&amp;#x65F6;,&amp;#x8BE5;&amp;#x6CE8;&amp;#x89E3;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x5143;&amp;#x7D20;&amp;#x4E4B;&amp;#x4E0A;&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;PACKAGE&lt;/span&gt;&amp;#xFF1A;&amp;#x5305;&amp;#x58F0;&amp;#x660E;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;TYPE&lt;/span&gt;&amp;#xFF1A;&amp;#x7C7B;&amp;#x3001;&amp;#x63A5;&amp;#x53E3; &amp;#x6CE8;&amp;#x89E3;&amp;#x7C7B;&amp;#x578B;,&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;&amp;#x58F0;&amp;#x660E; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;ANNOTATION_TYPE&lt;/span&gt;&amp;#xFF1A;&amp;#x6CE8;&amp;#x89E3;&amp;#x58F0;&amp;#x660E;&amp;#xFF08;&amp;#x5E94;&amp;#x7528;&amp;#x4E8E;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x6CE8;&amp;#x89E3;&amp;#x4E0A;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;FIELD&lt;/span&gt;&amp;#xFF1A;&amp;#x57DF;&amp;#x58F0;&amp;#x660E;&amp;#xFF08;&amp;#x5305;&amp;#x62EC;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF09; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;CONSTRUCTOR&lt;/span&gt;&amp;#xFF1A;&amp;#x6784;&amp;#x9020;&amp;#x5668;&amp;#x7684;&amp;#x58F0;&amp;#x660E; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;METHOD&lt;/span&gt;&amp;#xFF1A;&amp;#x65B9;&amp;#x6CD5;&amp;#x58F0;&amp;#x660E; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;LOCAL_VARIABLE&lt;/span&gt;&amp;#xFF1A;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x58F0;&amp;#x660E; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;PARAMETER&lt;/span&gt;&amp;#xFF1A;&amp;#x53C2;&amp;#x6570;&amp;#x58F0;&amp;#x660E;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;TYPE_PARAMETER&lt;/span&gt;&amp;#xFF1A;&amp;#x7C7B;&amp;#x578B;&amp;#x53C2;&amp;#x6570;&amp;#x58F0;&amp;#x660E;&amp;#xFF08;&lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&amp;#x65B0;&amp;#x52A0;&amp;#x5165;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;TYPE_USE&lt;/span&gt;&amp;#xFF1A;&amp;#x7C7B;&amp;#x578B;&amp;#x4F7F;&amp;#x7528;&amp;#x58F0;&amp;#x660E;&amp;#xFF08;&lt;span class=&quot;number&quot;&gt;1.8&lt;/span&gt;&amp;#x65B0;&amp;#x52A0;&amp;#x5165;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;@Retention    &amp;#x8868;&amp;#x793A;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x4EC0;&amp;#x4E48;&amp;#x7EA7;&amp;#x522B;&amp;#x4FDD;&amp;#x5B58;&amp;#x8BE5;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x7531;RetentionPolicy&amp;#x679A;&amp;#x4E3E;&amp;#x5B9A;&amp;#x4E49;,&amp;#x5F53;&amp;#x6CE8;&amp;#x89E3;&amp;#x672A;&amp;#x5B9A;&amp;#x4E49;Retention&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x662F;CLASS&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;SOURCE&lt;/span&gt;&amp;#xFF1A;&amp;#x6CE8;&amp;#x89E3;&amp;#x5C06;&amp;#x88AB;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x4E22;&amp;#x5F03;&amp;#xFF08;&amp;#x8BE5;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#x53EA;&amp;#x4F1A;&amp;#x4FDD;&amp;#x7559;&amp;#x5728;&amp;#x6E90;&amp;#x7801;&amp;#x91CC;&amp;#xFF0C;&amp;#x6E90;&amp;#x7801;&amp;#x7ECF;&amp;#x8FC7;&amp;#x7F16;&amp;#x8BD1;&amp;#x540E;&amp;#xFF0C;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#x4F1A;&amp;#x88AB;&amp;#x4E22;&amp;#x5F03;&amp;#xFF0C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4FDD;&amp;#x7559;&amp;#x5728;&amp;#x7F16;&amp;#x8BD1;&amp;#x597D;&amp;#x7684;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;CLASS&lt;/span&gt;&amp;#xFF1A;&amp;#x6CE8;&amp;#x89E3;&amp;#x5728;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x53EF;&amp;#x7528;&amp;#xFF0C;&amp;#x4F46;&amp;#x4F1A;&amp;#x88AB;VM&amp;#x4E22;&amp;#x5F03;&amp;#xFF08;&amp;#x8BE5;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#x4F1A;&amp;#x4FDD;&amp;#x7559;&amp;#x5728;&amp;#x6E90;&amp;#x7801;&amp;#x91CC;&amp;#x548C;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x91CC;&amp;#xFF0C;&amp;#x5728;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x52A0;&amp;#x8F7D;&amp;#x5230;&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#xFF08;JVM&amp;#xFF09;&amp;#x4E2D;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;RUNTIME&lt;/span&gt;&amp;#xFF1A;VM&amp;#x5C06;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;&amp;#x671F;&amp;#x4E5F;&amp;#x4FDD;&amp;#x7559;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x53CD;&amp;#x5C04;&amp;#x673A;&amp;#x5236;&amp;#x8BFB;&amp;#x53D6;&amp;#x6CE8;&amp;#x89E3;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF08;&amp;#x6E90;&amp;#x7801;&amp;#x3001;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&amp;#x6587;&amp;#x4EF6;&amp;#x548C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x90FD;&amp;#x6709;&amp;#x6CE8;&amp;#x89E3;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;@Documented    &amp;#x8868;&amp;#x793A;&amp;#x6CE8;&amp;#x89E3;&amp;#x4F1A;&amp;#x88AB;&amp;#x5305;&amp;#x542B;&amp;#x5728;javaApi&amp;#x6587;&amp;#x6863;&amp;#x4E2D;&lt;br&gt;@Inherited    &amp;#x5141;&amp;#x8BB8;&amp;#x5B50;&amp;#x7C7B;&amp;#x7EE7;&amp;#x627F;&amp;#x7236;&amp;#x7C7B;&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x6CE8;&amp;#x89E3;&amp;#x7C7B;&amp;#x578B;&amp;#x80FD;&amp;#x88AB;&amp;#x81EA;&amp;#x52A8;&amp;#x7EE7;&amp;#x627F;&amp;#x3002; &amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7C7B;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86; @Inherited &amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF0C;&amp;#x5219;&amp;#x6B64;&amp;#x7C7B;&amp;#x7684;&amp;#x5B50;&amp;#x7C7B;&amp;#x4E5F;&amp;#x5C06;&amp;#x542B;&amp;#x6709;&amp;#x8BE5;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x8BED;&amp;#x6CD5;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x8BED;&amp;#x6CD5;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x8BED;&amp;#x6CD5;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x8BED;&amp;#x6CD5;&amp;#xFF1A;&lt;/h4&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.lang.annotation.*;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Target({ElementType.TYPE, ElementType.METHOD})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@Retention(RetentionPolicy.SOURCE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; @&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AnatationTest&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#x6CE8;&amp;#x89E3;&amp;#x4E5F;&amp;#x5C06;&amp;#x4F1A;&amp;#x7F16;&amp;#x8BD1;&amp;#x6210;class&amp;#x6587;&amp;#x4EF6;,&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x8FC7;javac&amp;#x5C06;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x7F16;&amp;#x8BD1;&amp;#x4E3A;&amp;#x5B57;&amp;#x8282;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;javap&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x53CD;&amp;#x7F16;&amp;#x8BD1;&amp;#xFF0C;&amp;#x5C06;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x5982;&amp;#x4E0B;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AnatationTest&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;annotation&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Annotation&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x4F7F;&amp;#x7528;@interface &amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x58F0;&amp;#x660E;&amp;#x4E00;&amp;#x4E2A;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x7EE7;&amp;#x627F; java.lang.annotation.Annotaion &amp;#x63A5;&amp;#x53E3;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x70B9;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x53C2;&amp;#x6570;&amp;#x6210;&amp;#x5458;&amp;#x8BBF;&amp;#x95EE;&amp;#x4FEE;&amp;#x9970;&amp;#x7B26;&amp;#x53EA;&amp;#x80FD;&amp;#x4F7F;&amp;#x7528; public &amp;#x6216;&amp;#x8005; default &amp;#x8FD9;&amp;#x4E2A;&amp;#x548C;&amp;#x679A;&amp;#x4E3E;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&lt;/li&gt;
&lt;li&gt;&amp;#x6CE8;&amp;#x89E3;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x80FD;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@interface &amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x6BCF;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x8868;&amp;#x793A;&amp;#x58F0;&amp;#x660E;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x914D;&amp;#x7F6E;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x65B9;&amp;#x6CD5;&amp;#x540D;&amp;#x5373;&amp;#x4F4D;&amp;#x53C2;&amp;#x6570;&amp;#x540D;&amp;#x3002;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x7C7B;&amp;#x578B;&amp;#x5C31;&amp;#x662F;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x80FD;&amp;#x591F;&amp;#x5141;&amp;#x8BB8;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6240;&amp;#x6709;&amp;#x57FA;&amp;#x672C;&amp;#x7C7B;&amp;#x578B;&amp;#xFF08;int,float,boolean,byte,double,char,long,short&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;constant&quot;&gt;Annotation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7C7B;&amp;#x578B;&amp;#x6240;&amp;#x7EC4;&amp;#x6210;&amp;#x7684; &amp;#x6570;&amp;#x7EC4;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x58F0;&amp;#x660E;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;default &amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x6CE8;&amp;#x89E3;&amp;#x5143;&amp;#x7D20;&amp;#x5FC5;&amp;#x987B;&amp;#x6709;&amp;#x786E;&amp;#x5B9A;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x8981;&amp;#x4E48;&amp;#x5728;&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x5143;&amp;#x7D20;&amp;#x65F6;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&amp;#x6307;&amp;#x5B9A;&amp;#xFF0C;&amp;#x8981;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;&amp;#x6B64;&amp;#x6CE8;&amp;#x89E3;&amp;#x65F6;&amp;#x6307;&amp;#x5B9A;&amp;#x3002;&amp;#x975E;&amp;#x57FA;&amp;#x672C;&amp;#x7C7B;&amp;#x578B;&amp;#x6CE8;&amp;#x89E3;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x503C;&amp;#x4E0D;&amp;#x53EF;&amp;#x4E3A; null&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;&amp;#x6CE8;&amp;#x89E3;&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5B9E;&amp;#x73B0;&quot;&gt;&lt;a href=&quot;#&amp;#x6CE8;&amp;#x89E3;&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5B9E;&amp;#x73B0;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6CE8;&amp;#x89E3;&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5B9E;&amp;#x73B0;&quot;&gt;&lt;/a&gt;&amp;#x6CE8;&amp;#x89E3;&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5B9E;&amp;#x73B0;&lt;/h4&gt;&lt;p&gt;&amp;#x6CE8;&amp;#x91CA;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x89E3;&amp;#x6790;&lt;br&gt;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x6CE8;&amp;#x89E3;&amp;#x6307;&amp;#x7684;&amp;#x662F;@Retention&amp;#x7684;&amp;#x503C;&amp;#x4E3A;RUNTIME&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;java.lang.reflect&amp;#x5305;&amp;#x4E2D;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;AnnotatedElement&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x7528;&amp;#x4E8E;&amp;#x83B7;&amp;#x53D6;&amp;#x6CE8;&amp;#x89E3;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x51E0;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;getAnnotation(Class annotationClass)                                &amp;#x5F53;&amp;#x5B58;&amp;#x5728;&amp;#x8BE5;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x6307;&amp;#x5B9A;&amp;#x7C7B;&amp;#x578B;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF0C;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;&amp;#x76F8;&amp;#x5E94;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;null&lt;br&gt;getAnnotations()                                                    &amp;#x8FD4;&amp;#x56DE;&amp;#x6B64;&amp;#x5143;&amp;#x7D20;&amp;#x4E0A;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x6CE8;&amp;#x89E3;&lt;br&gt;getDeclaredAnnotations()                                            &amp;#x8FD4;&amp;#x56DE;&amp;#x76F4;&amp;#x63A5;&amp;#x5B58;&amp;#x5728;&amp;#x4E8E;&amp;#x6B64;&amp;#x5143;&amp;#x7D20;&amp;#x4E0A;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;&lt;br&gt;isAnnotationPresent(Class&amp;lt;? extends Annotation&amp;gt; annotationClass)    &amp;#x5F53;&amp;#x5B58;&amp;#x5728;&amp;#x8BE5;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x6307;&amp;#x5B9A;&amp;#x7C7B;&amp;#x578B;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF0C;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;true&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;false&lt;br&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x89E3;&amp;#x6790;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x89E3;&amp;#x6790;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.PACKAGE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; PackageAnnotation {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.TYPE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; TypeAnnotation {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.CONSTRUCTOR)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; ConstructAnnotaion {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.FIELD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; FieldAnnotation {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.METHOD)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; MethodAnnotation {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Target&lt;/span&gt;(ElementType.PARAMETER)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.RUNTIME)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; ParamAnnotation {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String desc() &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@TypeAnnotation&lt;/span&gt;(desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is TypeAnnotation&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestClass&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@FieldAnnotation&lt;/span&gt;(desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is FieldAnnotation&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String mTestField = &lt;span class=&quot;string&quot;&gt;&amp;quot;mTestField&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@ConstructAnnotaion&lt;/span&gt;(desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is ConstructAnnotaion&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@MethodAnnotation&lt;/span&gt;(desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is MethodAnnotation&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@ParamAnnotation(desc = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is ParamAnnotation&amp;quot;&lt;/span&gt;)&lt;/span&gt;String param) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String localvalue = &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;method!!!!!&amp;quot;&lt;/span&gt;+param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;package-info.java&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;at_rule&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;PackageAnnotation(desc&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;This is a package annotation!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;package com.javabase.annotationbase.testclass&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.javabase&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.annotationbase&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.annotations&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.PackageAnnotation&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class &lt;span class=&quot;type&quot;&gt;RuntimeAnnotationProcessor&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testPackageAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clzz) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Package&lt;/span&gt; packageName = clzz.getPackage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(packageName.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;PackageAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;PackageAnnotation&lt;/span&gt; packageAnnotation = packageName.getAnnotation(&lt;span class=&quot;type&quot;&gt;PackageAnnotation&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(packageAnnotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testClassAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clz) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clz.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;TypeAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;TypeAnnotation&lt;/span&gt; typeAnnotation = clz.getAnnotation(&lt;span class=&quot;type&quot;&gt;TypeAnnotation&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(typeAnnotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testConstructureAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clz)  {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Constructor&lt;/span&gt;[] constructors = clz.getConstructors();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Constructor&lt;/span&gt; constructor : constructors) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(constructor.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;ConstructAnnotaion&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;ConstructAnnotaion&lt;/span&gt; annotation = (&lt;span class=&quot;type&quot;&gt;ConstructAnnotaion&lt;/span&gt;) constructor.getAnnotation(&lt;span class=&quot;type&quot;&gt;ConstructAnnotaion&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(annotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testFieldAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clz) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Field&lt;/span&gt;[] fields = clz.getFields();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(fields != null &amp;amp;&amp;amp; fields.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Field&lt;/span&gt; field: fields) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(field.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;FieldAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;FieldAnnotation&lt;/span&gt; fieldAnnotation = field.getAnnotation(&lt;span class=&quot;type&quot;&gt;FieldAnnotation&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(fieldAnnotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testMethodAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clz) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt;[] methods = clz.getMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (methods != null &amp;amp;&amp;amp; methods.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt; : methods) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;MethodAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;MethodAnnotation&lt;/span&gt; methodAnnotation = &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;.getAnnotation(&lt;span class=&quot;type&quot;&gt;MethodAnnotation&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;.invoke(clz.newInstance(), &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } catch (&lt;span class=&quot;type&quot;&gt;IllegalAccessException&lt;/span&gt; | &lt;span class=&quot;type&quot;&gt;InvocationTargetException&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            | &lt;span class=&quot;type&quot;&gt;InstantiationException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(methodAnnotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; testParamAnnotation(&lt;span class=&quot;type&quot;&gt;Class&lt;/span&gt;&amp;lt;?&amp;gt; clz) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt;[] methods = clz.getMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (methods != null &amp;amp;&amp;amp; methods.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt; : methods) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;MethodAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;Parameter&lt;/span&gt;[] parameters = &lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;.getParameters();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (parameters != null &amp;amp;&amp;amp; parameters.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Parameter&lt;/span&gt; parameter : parameters) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(parameter.isAnnotationPresent(&lt;span class=&quot;type&quot;&gt;ParamAnnotation&lt;/span&gt;.class)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;type&quot;&gt;ParamAnnotation&lt;/span&gt; paramAnnotation = parameter.getAnnotation(&lt;span class=&quot;type&quot;&gt;ParamAnnotation&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(paramAnnotation.desc());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;#x7F16;&amp;#x8BD1;&amp;#x65F6;&amp;#x89E3;&amp;#x6790;&lt;br&gt;&amp;#x7F16;&amp;#x8BD1;&amp;#x65F6;&amp;#x6CE8;&amp;#x89E3;&amp;#x6307;&amp;#x7684;&amp;#x662F;@Retention&amp;#x7684;&amp;#x503C;&amp;#x4E3A;CLASS&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;&amp;#x5BF9;&amp;#x4E8E;&amp;#x8FD9;&amp;#x7C7B;&amp;#x6CE8;&amp;#x89E3;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D3E;&amp;#x751F;&amp;#x81EA; AbstractProcessor&amp;#x7684;&amp;#x201C;&amp;#x6CE8;&amp;#x89E3;&amp;#x5904;&amp;#x7406;&amp;#x7C7B;&amp;#x201D;&amp;#x5E76;&amp;#x91CD;&amp;#x5199;process &amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;APT(Annotation Processing Tool)&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x5904;&amp;#x7406;&amp;#x6CE8;&amp;#x91CA;&amp;#x7684;&amp;#x5DE5;&amp;#x5177;&lt;br&gt;Annotation&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5728;&amp;#x5904;&amp;#x7406;&amp;#x6CE8;&amp;#x91CA;&amp;#x65F6;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x7684;Annotation&amp;#x751F;&amp;#x6210;&amp;#x989D;&amp;#x5916;&amp;#x7684;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x548C;&amp;#x5176;&amp;#x5B83;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;,APT&amp;#x8FD8;&amp;#x4F1A;&amp;#x7F16;&amp;#x8BD1;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x548C;&amp;#x539F;&amp;#x6765;&amp;#x7684;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5C06;&amp;#x5B83;&amp;#x4EEC;&amp;#x4E00;&amp;#x8D77;&amp;#x751F;&amp;#x6210;class&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x6CE8;&amp;#x89E3;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&amp;#x7531;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x6784;&amp;#x6210;&amp;#xFF1A;&lt;br&gt;&amp;#x6CE8;&amp;#x89E3;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF08;AbstractProcess&amp;#xFF09;+&amp;#x4EE3;&amp;#x7801;&amp;#x5904;&amp;#x7406;&amp;#xFF08;JavaPoet&amp;#xFF09;+&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6CE8;&amp;#x518C;&amp;#xFF08;AutoService&amp;#xFF09;+apt&lt;/li&gt;
&lt;li&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5206;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;1.&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#xFF08;&amp;#x5982;@automain&amp;#xFF09;&lt;br&gt;2.&amp;#x5B9A;&amp;#x4E49;&amp;#x6CE8;&amp;#x89E3;&amp;#x5904;&amp;#x7406;&amp;#x5668;&lt;br&gt;3.&amp;#x5728;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x91CC;&amp;#x9762;&amp;#x5B8C;&amp;#x6210;&amp;#x5904;&amp;#x7406;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x901A;&amp;#x5E38;&amp;#x662F;&amp;#x751F;&amp;#x6210;java&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x5230;&amp;#x4EE3;&amp;#x7801;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;4.&amp;#x6CE8;&amp;#x518C;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x7528;&amp;#x5230;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x6CE8;&amp;#x518C;&amp;#x3002;&lt;br&gt;5.&amp;#x5229;&amp;#x7528;APT&amp;#x8FDB;&amp;#x4E00;&amp;#x6B65;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;APT &amp;#x9879;&amp;#x76EE;&amp;#xFF0C;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;apt&amp;#x4F9D;&amp;#x8D56;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.android.tools.build:gradle:2.2.3&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.neenbedankt.gradle.plugins:android-apt:1.8&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;allprojects&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jcenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; clean(type: &lt;span class=&quot;keyword&quot;&gt;Delete&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; rootProject.buildDir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6DFB;&amp;#x52A0;apt &amp;#x63D2;&amp;#x4EF6;&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;APT plugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply &lt;span class=&quot;string&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.neenbedankt.android-apt&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;model &amp;#x547D;&amp;#x540D;&amp;#x4E3A;compiler &amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6CE8;&amp;#x89E3;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF1A;&lt;br&gt;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;autoservice &amp;#x548C;javapoet&amp;#x4F9D;&amp;#x8D56;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&amp;apos;java&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fileTree&lt;/span&gt;(dir: &lt;span class=&quot;string&quot;&gt;&amp;apos;libs&amp;apos;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&amp;apos;*.jar&amp;apos;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.squareup:javapoet:1.8.0&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.google.auto.service:auto-service:1.0-rc2&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sourceCompatibility&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;1.7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;targetCompatibility&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;1.7&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;AnnotationProcessor&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.google.auto.service.&lt;span class=&quot;type&quot;&gt;AutoService&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.squareup.javapoet.&lt;span class=&quot;type&quot;&gt;JavaFile&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.squareup.javapoet.&lt;span class=&quot;type&quot;&gt;MethodSpec&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; com.squareup.javapoet.&lt;span class=&quot;type&quot;&gt;TypeSpec&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.&lt;span class=&quot;type&quot;&gt;IOException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.&lt;span class=&quot;type&quot;&gt;Collections&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.&lt;span class=&quot;type&quot;&gt;Set&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.annotation.processing.&lt;span class=&quot;type&quot;&gt;AbstractProcessor&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.annotation.processing.&lt;span class=&quot;type&quot;&gt;Processor&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.annotation.processing.&lt;span class=&quot;type&quot;&gt;RoundEnvironment&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.lang.model.element.&lt;span class=&quot;type&quot;&gt;Modifier&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.lang.model.element.&lt;span class=&quot;type&quot;&gt;TypeElement&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@AutoService&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Processor&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AnnotationProcessor&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AbstractProcessor&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;Set&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; getSupportedAnnotationTypes() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Collections&lt;/span&gt;.singleton(&lt;span class=&quot;type&quot;&gt;TestAnnotation&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;.getCanonicalName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public boolean process(&lt;span class=&quot;type&quot;&gt;Set&lt;/span&gt;&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TypeElement&lt;/span&gt;&amp;gt; annotations, &lt;span class=&quot;type&quot;&gt;RoundEnvironment&lt;/span&gt; roundEnv) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;MethodSpec&lt;/span&gt; main = &lt;span class=&quot;type&quot;&gt;MethodSpec&lt;/span&gt;.methodBuilder(&lt;span class=&quot;string&quot;&gt;&amp;quot;main&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addModifiers(&lt;span class=&quot;type&quot;&gt;Modifier&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;PUBLIC&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Modifier&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;STATIC&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .returns(void.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addParameter(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[].&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addStatement(&lt;span class=&quot;string&quot;&gt;&amp;quot;$T.out.println($S)&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Hello, JavaPoet!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;TypeSpec&lt;/span&gt; helloWorld = &lt;span class=&quot;type&quot;&gt;TypeSpec&lt;/span&gt;.classBuilder(&lt;span class=&quot;string&quot;&gt;&amp;quot;HelloWorld&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addModifiers(&lt;span class=&quot;type&quot;&gt;Modifier&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;PUBLIC&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Modifier&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;FINAL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addMethod(main)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;JavaFile&lt;/span&gt; javaFile = &lt;span class=&quot;type&quot;&gt;JavaFile&lt;/span&gt;.builder(&lt;span class=&quot;string&quot;&gt;&amp;quot;com.example.helloworld&amp;quot;&lt;/span&gt;, helloWorld)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            javaFile.writeTo(processingEnv.getFiler());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;IOException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x7F16;&amp;#x8BD1;&amp;#x540E;&amp;#x4F1A;&amp;#x5728;/app/build/generated/source/apt/debug/&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x751F;&amp;#x6210;HelloWorld.java&amp;#x6587;&amp;#x4EF6;&lt;br&gt;&amp;#x53C2;&amp;#x8003;&amp;#x6750;&amp;#x6599;&lt;br&gt;&lt;a href=&quot;http://www.race604.com/annotation-processing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.race604.com/annotation-processing/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/1942ad208927&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/1942ad208927&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/lmj623565791/article/details/43452969&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/lmj623565791/article/details/43452969&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/taoweiji/DemoAPT?utm_source=tuicool&amp;amp;utm_medium=referral&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/taoweiji/DemoAPT?utm_source=tuicool&amp;amp;utm_medium=referral&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/lbangel/p/3523741.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/lbangel/p/3523741.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/94979c056b20&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/94979c056b20&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x7AE0;&amp;#x77E5;&amp;#x8BC6;&amp;#x70B9;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JDK&amp;#x5185;&amp;#x7F6E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6CE8;&amp;#x89E3;&lt;/li&gt;
&lt;li&gt;&amp;#x5143;&amp;#x6CE8;&amp;#x91C
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之反射</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E5%8F%8D%E5%B0%84/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之反射/</id>
    <published>2017-02-06T13:05:58.000Z</published>
    <updated>2017-02-06T13:05:58.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之泛型</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E6%B3%9B%E5%9E%8B/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之泛型/</id>
    <published>2017-02-06T13:05:43.000Z</published>
    <updated>2017-02-06T13:05:43.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 进阶系列之枚举</title>
    <link href="http://yoursite.com/2017/02/06/Java-%E8%BF%9B%E9%98%B6%E7%B3%BB%E5%88%97%E4%B9%8B%E6%9E%9A%E4%B8%BE/"/>
    <id>http://yoursite.com/2017/02/06/Java-进阶系列之枚举/</id>
    <published>2017-02-06T13:05:26.000Z</published>
    <updated>2017-02-07T15:19:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x672C;&amp;#x7AE0;&amp;#x77E5;&amp;#x8BC6;&amp;#x70B9;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enume &amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&lt;/li&gt;
&lt;li&gt;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4E3A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x6DFB;&amp;#x52A0;&amp;#x76F8;&amp;#x5173;&amp;#x65B9;&amp;#x6CD5;&lt;/li&gt;
&lt;li&gt;&amp;#x5206;&amp;#x7C7B;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&lt;/li&gt;
&lt;li&gt;EnumeSet &amp;#x548C; EnumeMap&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4ECA;&amp;#x5929;&amp;#x7684;&amp;#x4E13;&amp;#x9898;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x9700;&amp;#x8981;&amp;#x660E;&amp;#x786E;&amp;#x4E0B;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x5230;&amp;#x679A;&amp;#x4E3E;&amp;#xFF0C;&amp;#x5728;&amp;#x672A;&amp;#x63A5;&amp;#x89E6;&amp;#x679A;&amp;#x4E3E;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x6216;&amp;#x8BB8;&amp;#x5199;&amp;#x8FC7;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; LIGHT_STATUS_OFF = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//&amp;#x8868;&amp;#x793A;&amp;#x706F;&amp;#x5173;&amp;#x95ED;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; LIGHT_STATUS_ON = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x8868;&amp;#x793A;&amp;#x706F;&amp;#x5F00;&amp;#x542F;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x7528;&amp;#x4E00;&amp;#x4E9B;&amp;#x5E38;&amp;#x91CF;&amp;#x8868;&amp;#x793A;&amp;#x67D0;&amp;#x4E2A;&amp;#x65F6;&amp;#x523B;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x8868;&amp;#x793A;&amp;#x65B9;&amp;#x5F0F;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x7F3A;&amp;#x70B9;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x5B89;&amp;#x5168;&lt;br&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x5BF9;&amp;#x5E94;&amp;#x503C;&amp;#x662F;&amp;#x6574;&amp;#x578B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7A0B;&amp;#x5E8F;&amp;#x6267;&amp;#x884C;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5F88;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x4F20;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x4EFB;&amp;#x610F;&amp;#x7684;&amp;#x6574;&amp;#x6570;&amp;#x503C;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5BFC;&amp;#x81F4;&amp;#x51FA;&amp;#x73B0;&amp;#x9519;&amp;#x8BEF;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4E00;&amp;#x81F4;&amp;#x6027;&amp;#x5DEE;&lt;br&gt;&amp;#x56E0;&amp;#x4E3A;&amp;#x6574;&amp;#x578B;&amp;#x679A;&amp;#x4E3E;&amp;#x5C5E;&amp;#x4E8E;&amp;#x7F16;&amp;#x8BD1;&amp;#x671F;&amp;#x5E38;&amp;#x91CF;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7F16;&amp;#x8BD1;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5B8C;&amp;#x6210;&amp;#x540E;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x548C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#xFF0C;&amp;#x4F1A;&amp;#x76F4;&amp;#x63A5;&amp;#x5C06;&amp;#x6574;&amp;#x6570;&amp;#x503C;&amp;#x5199;&amp;#x5165;&amp;#x3002;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x5F53;&amp;#x4F60;&amp;#x4FEE;&amp;#x6539;&amp;#x65E7;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x6574;&amp;#x6570;&amp;#x503C;&amp;#x540E;&amp;#x6216;&amp;#x8005;&amp;#x589E;&amp;#x52A0;&amp;#x65B0;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x503C;&amp;#x540E;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x5F15;&amp;#x7528;&amp;#x5730;&amp;#x65B9;&amp;#x4EE3;&amp;#x7801;&amp;#x90FD;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x65B0;&amp;#x7F16;&amp;#x8BD1;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x523B;&amp;#x5C31;&amp;#x4F1A;&amp;#x51FA;&amp;#x73B0;&amp;#x9519;&amp;#x8BEF;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x53EF;&amp;#x8BFB;&amp;#x6027;&amp;#x5DEE;&lt;br&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7528;&amp;#x4E8E;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x4EC5;&amp;#x4EC5;&amp;#x662F;&amp;#x4E00;&amp;#x4E9B;&amp;#x65E0;&amp;#x4EFB;&amp;#x4F55;&amp;#x542B;&amp;#x4E49;&amp;#x7684;&amp;#x6574;&amp;#x6570;&amp;#x503C;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x8FD0;&amp;#x884C;&amp;#x671F;&amp;#x8C03;&amp;#x8BD5;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F60;&amp;#x5C31;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x65E5;&amp;#x5FD7;&amp;#x4E2D;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x96BE;&amp;#x4EE5;&amp;#x7406;&amp;#x89E3;&amp;#x7684;&amp;#x6570;&amp;#x5B57;&amp;#xFF0C;&amp;#x4F46;&amp;#x9664;&amp;#x4E86;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5458;&amp;#x672C;&amp;#x8EAB;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x4EBA;&amp;#x5F88;&amp;#x96BE;&amp;#x660E;&amp;#x767D;&amp;#x5176;&amp;#x6240;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x771F;&amp;#x5B9E;&amp;#x542B;&amp;#x4E49;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x4E0D;&amp;#x76F4;&amp;#x89C2;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;&amp;#x5728;5.0 &amp;#x7248;&amp;#x672C; SDK &amp;#x53D1;&amp;#x5E03;&amp;#x65F6;&amp;#x5019;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x679A;&amp;#x4E3E;&amp;#x7279;&amp;#x6027;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x679A;&amp;#x4E3E;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x5E38;&amp;#x91CF;&amp;#x5206;&amp;#x7EC4;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x91CC;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x679A;&amp;#x4E3E;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x6BD4;&amp;#x5E38;&amp;#x91CF;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x5E38;&amp;#x91CF;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; enume LIGHT_STATUS {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LIGHT_STATUS_OFF,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LIGHT_STATUS_ON&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Enume-&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#Enume-&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;Enume &amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;/a&gt;Enume &amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&lt;/h4&gt;&lt;p&gt;Enume &amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53EF;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0D;&amp;#x591A;,&amp;#x5217;&amp;#x4E3E;&amp;#x5982;&amp;#x4E0B;:&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#x7528;&amp;#x4E8E;&amp;#x8FD4;&amp;#x56DE;&amp;#x6574;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x6240;&amp;#x5305;&amp;#x542B;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x503C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#x7528;&amp;#x4E8E;&amp;#x8FD4;&amp;#x56DE;&amp;#x67D0;&amp;#x4E2A;enume item&amp;#x7684;&amp;#x540D;&amp;#x5B57;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#x7528;&amp;#x4E8E;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;enume item &amp;#x5728;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x4E2D;&amp;#x58F0;&amp;#x660E;&amp;#x65F6;&amp;#x5019;&amp;#x7684;&amp;#x6B21;&amp;#x5E8F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getDeclaringClass&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#x7528;&amp;#x4E8E;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;enume item&amp;#x5728;&amp;#x54EA;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x58F0;&amp;#x660E;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LIGHT_STATUS&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS_ON&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS_OFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void enumBaseUsage() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;There are &amp;quot;&lt;/span&gt;+&lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS&lt;/span&gt;.values().length+&lt;span class=&quot;string&quot;&gt;&amp;quot; members in LIGHT_STATUS&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;status:&lt;/span&gt;&lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS&lt;/span&gt;.values()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;constant&quot;&gt;System&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(status.ordinal()+&lt;span class=&quot;string&quot;&gt;&amp;quot; : &amp;quot;&lt;/span&gt;+status.name()+ &lt;span class=&quot;string&quot;&gt;&amp;quot; : Declaring in &amp;quot;&lt;/span&gt;+status.getDeclaringClass().getSimpleName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x4F9B;equals()&amp;#x4EE5;&amp;#x53CA;hashCode(),&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;==&amp;#x6765;&amp;#x6BD4;&amp;#x8F83;enume&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x7531;&amp;#x4E8E;&amp;#x5B83;&amp;#x4E5F;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;Comparable&amp;#x63A5;&amp;#x53E3;&amp;#x6240;&amp;#x4EE5;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;compareTo&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x9664;&amp;#x4E86;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;Comparable &amp;#x63A5;&amp;#x53E3;&amp;#x5916;&amp;#xFF0C;&amp;#x5B83;&amp;#x8FD8;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;Serializable&amp;#x63A5;&amp;#x53E3;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; enumeValueCompare() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LIGHT_STATUS statusA = LIGHT_STATUS.LIGHT_STATUS_ON;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LIGHT_STATUS statusB = LIGHT_STATUS.LIGHT_STATUS_ON;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LIGHT_STATUS statusC = LIGHT_STATUS.LIGHT_STATUS_OFF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(statusA == statusB) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;equals&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;not equals&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(statusA == statusC) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;equals&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;not equals&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(statusA.&lt;span class=&quot;keyword&quot;&gt;compareTo&lt;/span&gt;(statusC)&amp;gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;gt;0 &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(statusA.&lt;span class=&quot;keyword&quot;&gt;compareTo&lt;/span&gt;(statusC) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot; =0&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;keyword&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;lt;0&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4E3A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x6DFB;&amp;#x52A0;&amp;#x76F8;&amp;#x5173;&amp;#x65B9;&amp;#x6CD5;&quot;&gt;&lt;a href=&quot;#&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4E3A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x6DFB;&amp;#x52A0;&amp;#x76F8;&amp;#x5173;&amp;#x65B9;&amp;#x6CD5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4E3A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x6DFB;&amp;#x52A0;&amp;#x76F8;&amp;#x5173;&amp;#x65B9;&amp;#x6CD5;&quot;&gt;&lt;/a&gt;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4E3A;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x6DFB;&amp;#x52A0;&amp;#x76F8;&amp;#x5173;&amp;#x65B9;&amp;#x6CD5;&lt;/h4&gt;&lt;p&gt;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x548C;&amp;#x7C7B;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5341;&amp;#x5206;&amp;#x76F8;&amp;#x4F3C;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E5F;&amp;#x5B58;&amp;#x5728;&amp;#x7740;&amp;#x4E00;&amp;#x4E9B;&amp;#x533A;&amp;#x522B;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4E8C;&amp;#x8005;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#x70B9;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x9996;&amp;#x5148;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x80FD;&amp;#x4F7F;&amp;#x7528;extends&amp;#x8FDB;&amp;#x884C;&amp;#x7EE7;&amp;#x627F;&lt;/li&gt;
&lt;li&gt;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5206;&amp;#x6210;&amp;#x4E24;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x7528;&amp;#x4E8E;&amp;#x5B9A;&amp;#x4E49;&amp;#x679A;&amp;#x4E3E;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x90E8;&amp;#x5206;&amp;#x7528;&amp;#x4E8E;&amp;#x5B9A;&amp;#x4E49;&amp;#x5C5E;&amp;#x6027;&amp;#x4EE5;&amp;#x53CA;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x70B9;&amp;#x662F;&amp;#x5728;&amp;#x5B9A;&amp;#x4E49;enume&amp;#x5B9E;&amp;#x4F8B;&amp;#x4E4B;&amp;#x524D;&amp;#x4E0D;&amp;#x80FD;&amp;#x5B9A;&amp;#x4E49;&amp;#x5148;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x4F55;&amp;#x5C5E;&amp;#x6027;&amp;#x6D3B;&amp;#x7740;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;enume&amp;#x5B9A;&amp;#x4E49;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x5C31;&amp;#x4E0D;&amp;#x5141;&amp;#x8BB8;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x4F7F;&amp;#x7528;&amp;#x5176;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x4EFB;&amp;#x4F55;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; ITEM_TYPE {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ITEM_TYPE_NORMAL(&lt;span class=&quot;string&quot;&gt;&amp;quot;The item which is used to show normal item&amp;quot;&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;ITEM_TYPE_NORMAL&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ITEM_TYPE_NEWEST(&lt;span class=&quot;string&quot;&gt;&amp;quot;The item which is used to show newest item&amp;quot;&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;ITEM_TYPE_NEWEST&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ITEM_TYPE_HOTEST(&lt;span class=&quot;string&quot;&gt;&amp;quot;The item which is used to show hotest item&amp;quot;&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.out.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;ITEM_TYPE_HOTEST&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String description;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getInfo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ITEM_TYPE(String description) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.description = description;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;String &lt;span class=&quot;title&quot;&gt;getDescription&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; description;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5B83;&amp;#x5305;&amp;#x62EC;&amp;#x6BCF;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6D4B;&amp;#x8BD5;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x8FC7;&amp;#x58F0;&amp;#x660E;&amp;#x62BD;&amp;#x8C61;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;&amp;#x6BCF;&amp;#x4E2A;enume &amp;#x5B9E;&amp;#x4F8B;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x8986;&amp;#x5199;&amp;#xFF0C;&amp;#x6765;&amp;#x6307;&amp;#x5B9A;&amp;#x6BCF;&amp;#x4E2A;enume&amp;#x5B9E;&amp;#x4F8B;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x800C;&amp;#x5728;&amp;#x5B9E;&amp;#x4F8B;&amp;#x58F0;&amp;#x660E;&amp;#x4E4B;&amp;#x540E;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x662F;&amp;#x5168;&amp;#x90E8;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5171;&amp;#x6709;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public void &lt;span class=&quot;function&quot;&gt;customEnume&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (ITEM_TYPE itemType &lt;span class=&quot;value&quot;&gt;: ITEM_TYPE.&lt;span class=&quot;function&quot;&gt;values&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;function&quot;&gt;println&lt;/span&gt;(itemType.&lt;span class=&quot;function&quot;&gt;name&lt;/span&gt;() +&lt;span class=&quot;string&quot;&gt;&amp;quot; : &amp;quot;&lt;/span&gt; + itemType.&lt;span class=&quot;function&quot;&gt;getDescription&lt;/span&gt;() );&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;sdk&amp;#x6E90;&amp;#x7801;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x53D1;&amp;#x73B0;enume&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x7EE7;&amp;#x627F;&amp;#x81EA;Enume&amp;#x7C7B;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;Enume &amp;#x7C7B;&amp;#x4E2D;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;values&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;values&amp;#x662F;&amp;#x7F16;&amp;#x8BD1;&amp;#x5668;&amp;#x6DFB;&amp;#x52A0;&amp;#x7684;&amp;#x9759;&amp;#x6001;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;enume&amp;#x5B9E;&amp;#x4F8B;&amp;#x5411;&amp;#x4E0A;&amp;#x8F6C;&amp;#x578B;&amp;#x4E3A;Enum  &amp;#x90A3;&amp;#x4E48; values&amp;#x65B9;&amp;#x6CD5;&amp;#x5C31;&amp;#x4E0D;&amp;#x53EF;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x501F;&amp;#x52A9;Class&amp;#x7C7B;&amp;#x4E2D;&amp;#x7684;getEnumeConstants &amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x6240;&amp;#x6709;enume&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;public&lt;/span&gt; void getEnumeConstants() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Enum&amp;lt;&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;itemTypeEnum &lt;/span&gt;= &lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.ITEM_TYPE_NEWEST;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    for (Enum &lt;span class=&quot;keyword&quot;&gt;item &lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;itemTypeEnum.getClass().getEnumConstants()) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.println(&lt;span class=&quot;keyword&quot;&gt;item.name());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;&amp;#x5206;&amp;#x7C7B;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x5206;&amp;#x7C7B;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5206;&amp;#x7C7B;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x5206;&amp;#x7C7B;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x65B9;&amp;#x5F0F;&lt;/h4&gt;&lt;p&gt;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x6BCF;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x5B9E;&amp;#x4F8B;&amp;#x4E2D;&amp;#x8FD8;&amp;#x5305;&amp;#x542B;&amp;#x5176;&amp;#x4ED6;&amp;#x5206;&amp;#x7C7B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x8981;&amp;#x8BB2;&amp;#x7A76;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x7684;&amp;#x5206;&amp;#x7C7B;&amp;#x4E86;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x6BD4;&amp;#x8F83;&amp;#x6807;&amp;#x51C6;&amp;#x7684;&amp;#x5206;&amp;#x7C7B;&amp;#x5199;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F7F;&amp;#x7528;&amp;#x63A5;&amp;#x53E3;Food&amp;#x5C06;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5B50;&amp;#x7C7B;&amp;#x7EC4;&amp;#x7EC7;&amp;#x8D77;&amp;#x6765;&amp;#xFF0C;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;getEnumConstants&lt;br&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x6BCF;&amp;#x79CD;&amp;#x5B50;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x503C;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FOOD&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;COFFEE&lt;/span&gt;(&lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt;.&lt;span class=&quot;constant&quot;&gt;Coffee&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;),&lt;span class=&quot;constant&quot;&gt;DESSERT&lt;/span&gt;(&lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt;.&lt;span class=&quot;constant&quot;&gt;Dessert&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; interface &lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Coffee&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Food&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;constant&quot;&gt;BLACK_COFFEE&lt;/span&gt;,&lt;span class=&quot;constant&quot;&gt;WHITE_COFFEE&lt;/span&gt;,&lt;span class=&quot;constant&quot;&gt;TEA&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Dessert&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Food&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;constant&quot;&gt;FRUIT&lt;/span&gt;,&lt;span class=&quot;constant&quot;&gt;GELATO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt;[] &lt;span class=&quot;constant&quot;&gt;ItemValues&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;FOOD&lt;/span&gt;(&lt;span class=&quot;constant&quot;&gt;Class&lt;/span&gt;&amp;lt;? extends &lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt;&amp;gt; cls) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;constant&quot;&gt;ItemValues&lt;/span&gt; = cls.getEnumConstants();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;constant&quot;&gt;Food&lt;/span&gt;[] getItemValues() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;ItemValues&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;EnumeSet-&amp;#x548C;-EnumeMap&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;a href=&quot;#EnumeSet-&amp;#x548C;-EnumeMap&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot; class=&quot;headerlink&quot; title=&quot;EnumeSet &amp;#x548C; EnumeMap&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&quot;&gt;&lt;/a&gt;EnumeSet &amp;#x548C; EnumeMap&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&lt;/h4&gt;&lt;p&gt;EnumeSet&amp;#x7528;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;&amp;#x521A;&amp;#x63A5;&amp;#x89E6;&amp;#x679A;&amp;#x4E3E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5F53;&amp;#x65F6;&amp;#x6CA1;&amp;#x6709;&amp;#x89C9;&amp;#x5F97;&amp;#x5B83;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x7528;&amp;#x5904;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x611F;&amp;#x89C9;&amp;#x5B83;&amp;#x548C;&amp;#x679A;&amp;#x4E3E;&amp;#x6CA1;&amp;#x5565;&amp;#x533A;&amp;#x522B;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x540E;&amp;#x9762;&amp;#x624D;&amp;#x53D1;&amp;#x73B0;&amp;#x4E8C;&amp;#x8005;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF0C;&amp;#x4F20;&amp;#x7EDF;&amp;#x7684;enume&amp;#x4E0D;&amp;#x80FD;&amp;#x6DFB;&amp;#x52A0;&amp;#x6216;&amp;#x8005;&amp;#x5220;&amp;#x9664;&amp;#x5143;&amp;#x7D20;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;EnumeSet &amp;#x53EF;&amp;#x4EE5;&amp;#x6DFB;&amp;#x52A0;&amp;#x5220;&amp;#x9664;&amp;#x3002;&lt;br&gt;&amp;#x5047;&amp;#x8BBE;&amp;#x6211;&amp;#x4EEC;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x67D0;&amp;#x4E2A;&amp;#x7248;&amp;#x672C;&amp;#x6709;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x7279;&amp;#x6027;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7279;&amp;#x6027;&amp;#x5206;&amp;#x522B;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&amp;#x5B9E;&amp;#x4F8B;&amp;#x6765;&amp;#x8868;&amp;#x793A;&amp;#x3002;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x6784;&amp;#x9020;&amp;#x4E00;&amp;#x4E2A;&amp;#x5177;&amp;#x6709;&amp;#x5168;&amp;#x90E8;&amp;#x7279;&amp;#x6027;&amp;#x7684;EnumeSet  &amp;#x518D;&amp;#x6839;&amp;#x636E;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x6765;&amp;#x5C06;&amp;#x4EE3;&amp;#x8868;&amp;#x67D0;&amp;#x5199;&amp;#x7279;&amp;#x6027;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x503C;&amp;#x6DFB;&amp;#x52A0;&amp;#x6216;&amp;#x8005;&amp;#x79FB;&amp;#x9664;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;public&lt;/span&gt; void testEnumeSet() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    EnumSet&amp;lt;&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;itemTypes &lt;/span&gt;= EnumSet.allOf(&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    System.out.println(&lt;span class=&quot;keyword&quot;&gt;itemTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;itemTypes &lt;/span&gt;= EnumSet.noneOf(&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    System.out.println(&lt;span class=&quot;keyword&quot;&gt;itemTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;itemTypes &lt;/span&gt;= EnumSet.of(&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.ITEM_TYPE_HOTEST);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    System.out.println(&lt;span class=&quot;keyword&quot;&gt;itemTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;itemTypes &lt;/span&gt;= EnumSet.range(&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.ITEM_TYPE_NEWEST, &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;ITEM_TYPE.ITEM_TYPE_HOTEST);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    System.out.println(&lt;span class=&quot;keyword&quot;&gt;itemTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;EnumeMap&amp;#x7528;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;testEnumeMap&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    EnumMap&amp;lt;LIGHT_STATUS, command&amp;gt; itemMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EnumMap&amp;lt;LIGHT_STATUS, command&amp;gt;(LIGHT_STATUS.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemMap.put(LIGHT_STATUS.LIGHT_STATUS_ON, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; command() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @&lt;span class=&quot;function&quot;&gt;Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;action&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;The light is on, i will turn off the light&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemMap.put(LIGHT_STATUS.LIGHT_STATUS_OFF, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; command() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @&lt;span class=&quot;function&quot;&gt;Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;action&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;The light is off, i will turn on the light&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemMap.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(LIGHT_STATUS.LIGHT_STATUS_ON).action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemMap.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(LIGHT_STATUS.LIGHT_STATUS_OFF).action();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;&amp;#x5982;&amp;#x4F55;&amp;#x907F;&amp;#x514D;&amp;#x9519;&amp;#x8BEF;&amp;#x4F7F;&amp;#x7528;-Enum&quot;&gt;&lt;a href=&quot;#&amp;#x5982;&amp;#x4F55;&amp;#x907F;&amp;#x514D;&amp;#x9519;&amp;#x8BEF;&amp;#x4F7F;&amp;#x7528;-Enum&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5982;&amp;#x4F55;&amp;#x907F;&amp;#x514D;&amp;#x9519;&amp;#x8BEF;&amp;#x4F7F;&amp;#x7528; Enum&quot;&gt;&lt;/a&gt;&amp;#x5982;&amp;#x4F55;&amp;#x907F;&amp;#x514D;&amp;#x9519;&amp;#x8BEF;&amp;#x4F7F;&amp;#x7528; Enum&lt;/h4&gt;&lt;p&gt;&amp;#x5728;&amp;#x4F7F;&amp;#x7528; Enum &amp;#x65F6;&amp;#x5019;&amp;#x6709;&amp;#x51E0;&amp;#x4E2A;&amp;#x5730;&amp;#x65B9;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF1A;&lt;br&gt;enum &amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x652F;&amp;#x6301; public &amp;#x548C; protected &amp;#x4FEE;&amp;#x9970;&amp;#x7B26;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x662F; private&amp;#x3002;&amp;#x4E5F;&amp;#x6B63;&amp;#x56E0;&amp;#x4E3A;&amp;#x5982;&amp;#x6B64;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x679A;&amp;#x4E3E;&amp;#x5BF9;&amp;#x8C61;&amp;#x662F;&amp;#x65E0;&amp;#x6CD5;&amp;#x5728;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7684;&amp;#x3002;&lt;br&gt;&amp;#x5B9A;&amp;#x4E49; enum &amp;#x7C7B;&amp;#x578B;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x503C;&amp;#x540E;&amp;#x4E0D;&amp;#x7528;&amp;#x8DDF;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B26;&amp;#x53F7;&amp;#xFF1B;&amp;#x4F46;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x5B9A;&amp;#x5236;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x503C;&amp;#x4E0E;&amp;#x540E;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x8981;&amp;#x7528;&amp;#x5206;&amp;#x53F7;&amp;#x2019;;&amp;#x2019;&amp;#x9694;&amp;#x5F00;&amp;#xFF0C;&amp;#x4E0D;&amp;#x80FD;&amp;#x7528;&amp;#x9017;&amp;#x53F7;&amp;#x6216;&amp;#x7A7A;&amp;#x683C;&amp;#x3002;&lt;br&gt;&amp;#x7531;&amp;#x4E8E; enum &amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x503C;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD0;&amp;#x884C;&amp;#x671F;&amp;#x6784;&amp;#x9020;&amp;#x51FA;&amp;#x5BF9;&amp;#x8C61;&amp;#x6765;&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728; cluster &amp;#x73AF;&amp;#x5883;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#x90FD;&amp;#x4F1A;&amp;#x6784;&amp;#x9020;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x540C;&amp;#x4E49;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x56E0;&amp;#x800C;&amp;#x5728;&amp;#x505A;&amp;#x6BD4;&amp;#x8F83;&amp;#x64CD;&amp;#x4F5C;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x76F4;&amp;#x63A5;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;&amp;#x7B49;&amp;#x53F7; ( &amp;#x2018; == &amp;#x2019; ) &amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x770B;&amp;#x4F3C;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x503C;&amp;#x4E00;&amp;#x5B9A;&amp;#x4E0D;&amp;#x76F8;&amp;#x7B49;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E0D;&amp;#x662F;&amp;#x540C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;br&gt;&amp;#x4E00;&amp;#x4E2A; Java &amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x6700;&amp;#x591A;&amp;#x53EA;&amp;#x80FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A; public &amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E14;&amp;#x8BE5; Java &amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x4E5F;&amp;#x5FC5;&amp;#x987B;&amp;#x548C;&amp;#x8BE5;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x7684;&amp;#x7C7B;&amp;#x540D;&amp;#x76F8;&amp;#x540C;&lt;br&gt;&amp;#x4F7F;&amp;#x7528; enum &amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7EE7;&amp;#x627F;&amp;#x4E86; java.lang.Enum &amp;#x7C7B;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86; java.lang.Seriablizable &amp;#x548C; java.lang.Comparable &amp;#x4E24;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;;&lt;br&gt;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5B9E;&amp;#x4F8B;(&amp;#x679A;&amp;#x4E3E;&amp;#x503C;)&amp;#x5FC5;&amp;#x987B;&amp;#x5728;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x884C;&amp;#x663E;&amp;#x5F0F;&amp;#x5730;&amp;#x5217;&amp;#x51FA;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8FD9;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x5C06;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x80FD;&amp;#x4EA7;&amp;#x751F;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&amp;#x5217;&amp;#x51FA;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5B9E;&amp;#x4F8B;(&amp;#x679A;&amp;#x4E3E;&amp;#x503C;)&amp;#x65F6;&amp;#xFF0C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x6DFB;&amp;#x52A0; public static final &amp;#x4FEE;&amp;#x9970;&amp;#xFF0C;&amp;#x65E0;&amp;#x9700;&amp;#x663E;&amp;#x5F0F;&amp;#x6DFB;&amp;#x52A0;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x5728;Android-&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x8282;&amp;#x5236;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&quot;&gt;&lt;a href=&quot;#&amp;#x5728;Android-&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x8282;&amp;#x5236;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5728;Android &amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x8282;&amp;#x5236;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&quot;&gt;&lt;/a&gt;&amp;#x5728;Android &amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x8282;&amp;#x5236;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&lt;/h4&gt;&lt;p&gt;(&amp;#x8BE5;&amp;#x90E8;&amp;#x5206;&amp;#x5F15;&amp;#x7528;&amp;#x81EA; &lt;a href=&quot;http://www.codeceo.com/article/why-android-not-use-enums.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.codeceo.com/article/why-android-not-use-enums.html&lt;/a&gt;)&lt;br&gt;&amp;#x5173;&amp;#x4E8E;Android&amp;#x6027;&amp;#x80FD;&amp;#x4F18;&amp;#x5316;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x5EFA;&amp;#x8BAE;&amp;#x662F;&amp;#x4E0D;&amp;#x8981;&amp;#x5728;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4F7F;&amp;#x7528;Enums&amp;#xFF0C;&amp;#x5C31;&amp;#x8FDE; Android&amp;#x5B98;&amp;#x7F51;&amp;#x4E0A;&amp;#x90FD;&amp;#x5F3A;&amp;#x70C8;&amp;#x5EFA;&amp;#x8BAE;&amp;#x4E0D;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;br&gt;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&amp;#x4E4B;&amp;#x540E;&amp;#x589E;&amp;#x52A0;&amp;#x4E86;dex&amp;#x5305;&amp;#x7684;&amp;#x5927;&amp;#x5C0F;&amp;#xFF0C;&amp;#x7406;&amp;#x8BBA;&amp;#x4E0A;dex&amp;#x5305;&amp;#x8D8A;&amp;#x5927;&amp;#xFF0C;&amp;#x52A0;&amp;#x8F7D;&amp;#x901F;&amp;#x5EA6;&amp;#x8D8A;&amp;#x6162;&lt;br&gt;&amp;#x540C;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x7684;&amp;#x5185;&amp;#x5B58;&amp;#x5360;&amp;#x7528;&amp;#x4E5F;&amp;#x4F1A;&amp;#x76F8;&amp;#x5BF9;&amp;#x53D8;&amp;#x5927; &amp;#xFF08;Enums often require more than twice as much memory as static constants&amp;#xFF09;&lt;/p&gt;
&lt;p&gt;Android&amp;#x4E2D;&amp;#x5F53;&amp;#x4F60;&amp;#x7684;App&amp;#x542F;&amp;#x52A8;&amp;#x540E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4F1A;&amp;#x7ED9;App&amp;#x5355;&amp;#x72EC;&amp;#x5206;&amp;#x914D;&amp;#x4E00;&amp;#x5757;&amp;#x5185;&amp;#x5B58;&amp;#x3002;App&amp;#x7684;DEX code&amp;#x3001;Heap&amp;#x4EE5;&amp;#x53CA;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x7684;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x914D;&amp;#x90FD;&amp;#x4F1A;&amp;#x5728;&amp;#x8FD9;&amp;#x5757;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E24;&amp;#x79CD;&amp;#x5199;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;#x4F7F;&amp;#x7528;Int&amp;#x8868;&amp;#x793A;&amp;#x72B6;&amp;#x6001;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; VALUE1 =&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; VALUE1 =&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; VALUE1 =&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x4F7F;&amp;#x7528;Enums&amp;#x8868;&amp;#x793A;&amp;#x72B6;&amp;#x6001;&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Value&lt;/span&gt;{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;constant&quot;&gt;VALUE1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;constant&quot;&gt;VALUE2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;constant&quot;&gt;VALUE3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x60C5;&amp;#x5F62;2&amp;#x4E2D;&amp;#x7684;DEX size&amp;#x589E;&amp;#x52A0;&amp;#x662F;&amp;#x60C5;&amp;#x5F62;1&amp;#x4E2D;&amp;#x7684;13&amp;#x500D;&amp;#x4E4B;&amp;#x591A;&amp;#x3002;&amp;#x8FD9;&amp;#x8FD8;&amp;#x53EA;&amp;#x662F;DEX code&amp;#x7684;&amp;#x589E;&amp;#x52A0;&amp;#xFF0C;&amp;#x540C;&amp;#x6837;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x7684;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x914D;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;enum&amp;#x503C;&amp;#x7684;&amp;#x58F0;&amp;#x660E;&amp;#x4F1A;&amp;#x6D88;&amp;#x8017;&amp;#x81F3;&amp;#x5C11;20 bytes&amp;#xFF0C;&amp;#x8FD9;&amp;#x8FD8;&amp;#x4E0D;&amp;#x7B97;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x6570;&amp;#x7EC4;&amp;#x9700;&amp;#x8981;&amp;#x4FDD;&amp;#x6301;&amp;#x5BF9;enum&amp;#x503C;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;Why&amp;#xFF1F;&amp;#x4F7F;&amp;#x7528;javap&amp;#x53CD;&amp;#x7F16;&amp;#x8BD1;&amp;#x60C5;&amp;#x5F62;&amp;#x4E8C;&amp;#x4E2D;&amp;#x751F;&amp;#x6210;&amp;#x7684;class&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x53BB;&amp;#x6389;&amp;#x6C47;&amp;#x7F16;&amp;#x4EE3;&amp;#x7801;&amp;#x540E;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;VALUE&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Enum&lt;/span&gt;&lt;/span&gt;{  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; VALUE VALUE1;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; VALUE VALUE2;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; VALUE VALUE3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; VALUE[] values[];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt;{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;enum&amp;#x7C7B;&amp;#x578B;&amp;#x7EE7;&amp;#x627F;java.lang.Enum&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x9879;&amp;#x90FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x58F0;&amp;#x660E;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x9759;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5E76;&amp;#x88AB;&amp;#x8D4B;&amp;#x503C;&amp;#x3002;VALUE value1 = VALUE.VALUE1&amp;#x5219;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;&amp;#x5BF9;&amp;#x9759;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;br&gt;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5F53;&amp;#x4F60;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6216;&amp;#x5305;&amp;#x542B;&amp;#x7684;Lib&amp;#x4E2D;&amp;#x5927;&amp;#x91CF;&amp;#x4F7F;&amp;#x7528;enums&amp;#x65F6;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x672C;&amp;#x8EAB;&amp;#x5185;&amp;#x5B58;&amp;#x5C0F;&amp;#x7684;&amp;#x624B;&amp;#x673A;&amp;#x5C06;&amp;#x662F;&amp;#x707E;&amp;#x96BE;&amp;#x6027;&amp;#x7684;&amp;#x3002;&amp;#x4E0D;&amp;#x53EF;&amp;#x5426;&amp;#x8BA4;enums&amp;#x4F1A;&amp;#x4F7F;&amp;#x5F97;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x6613;&amp;#x8BFB;&amp;#x66F4;&amp;#x5B89;&amp;#x5168;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x5982;&amp;#x4F55;&amp;#x5728;&amp;#x4E8C;&amp;#x8005;&amp;#x4E4B;&amp;#x95F4;&amp;#x505A;&amp;#x6743;&amp;#x8861;&amp;#x5462;&amp;#xFF1A;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E16;&amp;#x5B50;&amp;#x7684;&amp;#x56DE;&amp;#x7B54;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android&lt;/a&gt;&lt;br&gt;&amp;#x5927;&amp;#x4F53;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x662F;&amp;#xFF0C;&amp;#x5728;&amp;#x5982;&amp;#x4E0B;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x8003;&amp;#x8651;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x9700;&amp;#x8981;&amp;#x7C7B;&amp;#x578B;&amp;#x68C0;&amp;#x67E5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x53EA;&amp;#x80FD;&amp;#x63A5;&amp;#x53D7;&amp;#x67D0;&amp;#x4E9B;&amp;#x975E;&amp;#x8FDE;&amp;#x7EED;&amp;#x7684;&amp;#x503C;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&amp;#x53D8;&amp;#x91CF;&amp;#x53EF;&amp;#x4EE5;&amp;#x6709;&amp;#x6548;&amp;#x907F;&amp;#x514D;&amp;#x4F20;&amp;#x5165;&amp;#x975E;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x503C;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x4F60;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x542B;&amp;#x4E0D;&amp;#x6B62;&amp;#x4E00;&amp;#x4E2A;&amp;#x4FE1;&amp;#x606F;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x4E0D;&amp;#x80FD;&amp;#x653E;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x4E2D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x4F60;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x9700;&amp;#x8981;&amp;#x4E00;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#x65B9;&amp;#x6CD5;&amp;#x4F5C;&amp;#x7528;&amp;#x5728;&amp;#x5B83;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x9664;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E9B;&amp;#x60C5;&amp;#x51B5;&amp;#x5927;&amp;#x5BB6;&amp;#x5C3D;&amp;#x91CF;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;&amp;#x679A;&amp;#x4E3E;&amp;#xFF0C;&amp;#x7B80;&amp;#x5355;&amp;#x6765;&amp;#x8BF4;&amp;#x5C31;&amp;#x662F;&amp;#x80FD;&amp;#x4E0D;&amp;#x7528;enume &amp;#x7684;&amp;#x5C3D;&amp;#x91CF;&amp;#x4E0D;&amp;#x7528;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x662F;&amp;#x5426;&amp;#x80FD;&amp;#x591F;&amp;#x514B;&amp;#x670D;&amp;#x4F7F;&amp;#x7528;&amp;#x9759;&amp;#x6001;&amp;#x5E38;&amp;#x91CF;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x5462;&amp;#xFF1F;&amp;#x80AF;&amp;#x5B9A;&amp;#x662F;&amp;#x6709;&amp;#x529E;&amp;#x6CD5;&amp;#x7684;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x5C31;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E0B;Android&amp;#x4E2D;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&amp;#xFF1A;&lt;/p&gt;
&lt;h4 id=&quot;Android&amp;#x4E2D;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&quot;&gt;&lt;a href=&quot;#Android&amp;#x4E2D;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&quot; class=&quot;headerlink&quot; title=&quot;Android&amp;#x4E2D;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&quot;&gt;&lt;/a&gt;Android&amp;#x4E2D;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&lt;/h4&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Sexs&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@IntDef&lt;/span&gt;({MALE, FEMALE})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Retention&lt;/span&gt;(RetentionPolicy.SOURCE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@interface&lt;/span&gt; PersonSex{}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; MALE = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; FEMALE = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Activity&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setContentView(R.layout.main_activity);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Person person = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        person.setSex(MALE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ((Button) findViewById(R.id.test)).setText(person.getSexDes());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Sexs&lt;/span&gt;.PersonSex &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setSex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Sexs.PersonSex &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sex)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sex = sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;annotation&quot;&gt;@Sexs&lt;/span&gt;.&lt;span class=&quot;function&quot;&gt;PersonSex &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getSex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getSexDes&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sex == MALE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x7537;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x5973;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;@SEX&amp;#x6CE8;&amp;#x89E3;&amp;#x53EF;&amp;#x4EE5;&amp;#x653E;&amp;#x5230;&amp;#x5C5E;&amp;#x6027;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x7B49;&amp;#x5730;&amp;#x65B9;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#x8FDB;&amp;#x884C;&amp;#x9650;&amp;#x5236;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;Enume-&amp;#x4E0D;&amp;#x80FD;&amp;#x7EE7;&amp;#x627F;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x7EE7;&amp;#x627F;&quot;&gt;&lt;a href=&quot;#&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;Enume-&amp;#x4E0D;&amp;#x80FD;&amp;#x7EE7;&amp;#x627F;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x7EE7;&amp;#x627F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;Enume &amp;#x4E0D;&amp;#x80FD;&amp;#x7EE7;&amp;#x627F;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x7EE7;&amp;#x627F;&quot;&gt;&lt;/a&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;Enume &amp;#x4E0D;&amp;#x80FD;&amp;#x7EE7;&amp;#x627F;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x7EE7;&amp;#x627F;&lt;/h4&gt;&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BF4;&amp;#x660E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x7F16;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EnumeTest&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS_ON&lt;/span&gt;,&lt;span class=&quot;constant&quot;&gt;LIGHT_STATUS_OFF&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7136;&amp;#x540E;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C06;&amp;#x8BE5;&amp;#x7C7B;&amp;#x7F16;&amp;#x8BD1;&amp;#x6210;class&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;javap&amp;#x6765;&amp;#x53CD;&amp;#x7F16;&amp;#x8BD1;&amp;#x67E5;&amp;#x770B;&amp;#x5230;&amp;#x5E95;&amp;#x957F;&amp;#x5565;&amp;#x6837;,&amp;#x4E0B;&amp;#x9762;&amp;#x5C31;&amp;#x662F;&amp;#x53CD;&amp;#x7F16;&amp;#x8BD1;&amp;#x540E;&amp;#x7684;&amp;#x6837;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
 &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;EnumeTest&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;java&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;lang&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Enum&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;EnumeTest&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; EnumeTest LIGHT_STATUS_ON;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; EnumeTest LIGHT_STATUS_OFF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; EnumeTest[] values();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; EnumeTest &lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(java.lang.String)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; {};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &amp;#x5927;&amp;#x5BB6;&amp;#x5E94;&amp;#x8BE5;&amp;#x77E5;&amp;#x9053;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;enume&amp;#x540E;&amp;#x9762;&amp;#x4E0D;&amp;#x80FD;&amp;#x4F7F;&amp;#x7528;extends&amp;#x6765;&amp;#x7EE7;&amp;#x627F;&amp;#x5176;&amp;#x4ED6;&amp;#x7C7B;&amp;#x4E86;&amp;#x5427;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7EE7;&amp;#x627F;&amp;#x4E86;Enum&amp;#xFF0C;Java&amp;#x4E2D;&amp;#x4E0D;&amp;#x652F;&amp;#x6301;&amp;#x591A;&amp;#x7EE7;&amp;#x627F;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E3A;&amp;#x5565;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x5176;&amp;#x4ED6;&amp;#x7EE7;&amp;#x627F;&amp;#xFF1F;&amp;#x56E0;&amp;#x4E3A;&amp;#x662F;final &amp;#x7C7B;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x679A;&amp;#x4E3E;&amp;#x4E0E;&amp;#x6DF7;&amp;#x6DC6;&quot;&gt;&lt;a href=&quot;#&amp;#x679A;&amp;#x4E3E;&amp;#x4E0E;&amp;#x6DF7;&amp;#x6DC6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x679A;&amp;#x4E3E;&amp;#x4E0E;&amp;#x6DF7;&amp;#x6DC6;&quot;&gt;&lt;/a&gt;&amp;#x679A;&amp;#x4E3E;&amp;#x4E0E;&amp;#x6DF7;&amp;#x6DC6;&lt;/h4&gt;&lt;p&gt;&amp;#x6DF7;&amp;#x6DC6;&amp;#x5927;&amp;#x5BB6;&amp;#x4F30;&amp;#x8BA1;&amp;#x90FD;&amp;#x61C2;&amp;#x5427;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x4E0D;&amp;#x61C2;&amp;#x4E5F;&amp;#x542C;&amp;#x8BF4;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x589E;&amp;#x5F3A;&amp;#x53CD;&amp;#x7F16;&amp;#x8BD1;&amp;#x7684;&amp;#x96BE;&amp;#x5EA6;&amp;#xFF0C;&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x7684;app&amp;#x5728;&amp;#x53D1;&amp;#x5E03;&amp;#x4E4B;&amp;#x524D;&amp;#x90FD;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;&amp;#x6DF7;&amp;#x6DC6;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x5728;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x6DF7;&amp;#x6DC6;&amp;#x914D;&amp;#x7F6E;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;,&amp;#x5DF2;&amp;#x7ECF;&amp;#x52A0;&amp;#x5165;&amp;#x4E86;&amp;#x5BF9;&amp;#x679A;&amp;#x4E3E;&amp;#x6DF7;&amp;#x6DC6;&amp;#x7684;&amp;#x5904;&amp;#x7406;&lt;br&gt;&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-keepclassmembers &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; * {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static **[] values();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static ** valueOf(java.lang.&lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x4F7F;&amp;#x7528;proguard&amp;#x4F18;&amp;#x5316;&quot;&gt;&lt;a href=&quot;#&amp;#x4F7F;&amp;#x7528;proguard&amp;#x4F18;&amp;#x5316;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4F7F;&amp;#x7528;proguard&amp;#x4F18;&amp;#x5316;&quot;&gt;&lt;/a&gt;&amp;#x4F7F;&amp;#x7528;proguard&amp;#x4F18;&amp;#x5316;&lt;/h4&gt;&lt;p&gt;&amp;#x4F7F;&amp;#x7528;Proguard&amp;#x8FDB;&amp;#x884C;&amp;#x4F18;&amp;#x5316;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x679A;&amp;#x4E3E;&amp;#x5C3D;&amp;#x53EF;&amp;#x80FD;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x6210;int&amp;#x3002;&amp;#x914D;&amp;#x7F6E;&amp;#x5982;&amp;#x4E0B;&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt;optimizations &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;unboxing&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;enum&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x786E;&amp;#x4FDD;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4EE3;&amp;#x7801;&amp;#x751F;&amp;#x6548;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x786E;proguard&amp;#x914D;&amp;#x7F6E;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0D;&amp;#x5305;&amp;#x542B;-dontoptimize&amp;#x6307;&amp;#x4EE4;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x53C2;&amp;#x8003;&amp;#x8D44;&amp;#x6599;&quot;&gt;&lt;a href=&quot;#&amp;#x53C2;&amp;#x8003;&amp;#x8D44;&amp;#x6599;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x53C2;&amp;#x8003;&amp;#x8D44;&amp;#x6599;&quot;&gt;&lt;/a&gt;&amp;#x53C2;&amp;#x8003;&amp;#x8D44;&amp;#x6599;&lt;/h4&gt;&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/java/j-lo-enum/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.ibm.com/developerworks/cn/java/j-lo-enum/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.liaohuqiu.net/cn/posts/android-enum-memory-usage/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.liaohuqiu.net/cn/posts/android-enum-memory-usage/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/zgz345/p/5871351.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/zgz345/p/5871351.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/29183904/should-i-strictly-avoid-using-enums-on-android&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://droidyue.com/blog/2016/11/29/dive-into-enum/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://droidyue.com/blog/2016/11/29/dive-into-enum/index.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/f8ac84a3e3c1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/f8ac84a3e3c1&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x672C;&amp;#x7AE0;&amp;#x77E5;&amp;#x8BC6;&amp;#x70B9;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Enume &amp;#x679A;&amp;#x4E3E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x65B9;&amp;#x6CD5;&amp;#x76
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript 查缺补漏清单</title>
    <link href="http://yoursite.com/2017/01/17/JavaScript-%E6%9F%A5%E7%BC%BA%E8%A1%A5%E6%BC%8F%E6%B8%85%E5%8D%95/"/>
    <id>http://yoursite.com/2017/01/17/JavaScript-查缺补漏清单/</id>
    <published>2017-01-17T15:48:52.000Z</published>
    <updated>2017-01-17T15:53:05.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;$&amp;#x6216;&amp;#x8005; _&amp;#x5F00;&amp;#x5934; &lt;/li&gt;
&lt;li&gt;javascript &amp;#x6709;&amp;#x4E03;&amp;#x79CD;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;:Number , String ,Boolean, Object,null,undefined,symbol.&lt;br&gt;&amp;#x7531;&amp;#x4E8E;JavaScript&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;for&amp;#x5FAA;&amp;#x73AF;&amp;#x7B49;&amp;#x8BED;&amp;#x53E5;&amp;#x5757;&amp;#x4E2D;&amp;#x662F;&amp;#x65E0;&amp;#x6CD5;&amp;#x5B9A;&amp;#x4E49;&amp;#x5177;&amp;#x6709;&amp;#x5C40;&amp;#x90E8;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#xFF1A;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i += &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;#x4ECD;&amp;#x7136;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F15;&amp;#x7528;&amp;#x53D8;&amp;#x91CF;i&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x5757;&amp;#x7EA7;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#xFF0C;ES6&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x65B0;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x5B57;let&amp;#xFF0C;&amp;#x7528;let&amp;#x66FF;&amp;#x4EE3;var&amp;#x53EF;&amp;#x4EE5;&amp;#x7533;&amp;#x660E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5757;&amp;#x7EA7;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum += i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// SyntaxError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;var&amp;#x548C;let&amp;#x7533;&amp;#x660E;&amp;#x7684;&amp;#x662F;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x7533;&amp;#x660E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x91CF;&amp;#xFF0C;&amp;#x5728;ES6&amp;#x4E4B;&amp;#x524D;&amp;#x662F;&amp;#x4E0D;&amp;#x884C;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x5E38;&amp;#x7528;&amp;#x5168;&amp;#x90E8;&amp;#x5927;&amp;#x5199;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x6765;&amp;#x8868;&amp;#x793A;&amp;#x201C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E38;&amp;#x91CF;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;&amp;#x5B83;&amp;#x7684;&amp;#x503C;&amp;#x201D;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; PI&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ES6&amp;#x6807;&amp;#x51C6;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x65B0;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x5B57;const&amp;#x6765;&amp;#x5B9A;&amp;#x4E49;&amp;#x5E38;&amp;#x91CF;&amp;#xFF0C;const&amp;#x4E0E;let&amp;#x90FD;&amp;#x5177;&amp;#x6709;&amp;#x5757;&amp;#x7EA7;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; PI = &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PI = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;#x67D0;&amp;#x4E9B;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x4E0D;&amp;#x62A5;&amp;#x9519;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x65E0;&amp;#x6548;&amp;#x679C;&amp;#xFF01;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PI; &lt;span class=&quot;comment&quot;&gt;// 3.14&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;var&amp;#x7533;&amp;#x660E;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x5219;&amp;#x4E0D;&amp;#x662F;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x8303;&amp;#x56F4;&amp;#x88AB;&amp;#x9650;&amp;#x5236;&amp;#x5728;&amp;#x8BE5;&amp;#x53D8;&amp;#x91CF;&amp;#x88AB;&amp;#x7533;&amp;#x660E;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x5185;&amp;#xFF0C;&amp;#x540C;&amp;#x540D;&amp;#x53D8;&amp;#x91CF;&amp;#x5728;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x4F53;&amp;#x5185;&amp;#x4E92;&amp;#x4E0D;&amp;#x51B2;&amp;#x7A81;&amp;#x3002;&lt;br&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x4FEE;&amp;#x8865;JavaScript&amp;#x8FD9;&amp;#x4E00;&amp;#x4E25;&amp;#x91CD;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7F3A;&amp;#x9677;&amp;#xFF0C;ECMA&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x89C4;&amp;#x8303;&amp;#x4E2D;&amp;#x63A8;&amp;#x51FA;&amp;#x4E86;strict&amp;#x6A21;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5728;strict&amp;#x6A21;&amp;#x5F0F;&amp;#x4E0B;&amp;#x8FD0;&amp;#x884C;&amp;#x7684;JavaScript&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5F3A;&amp;#x5236;&amp;#x901A;&amp;#x8FC7;var&amp;#x7533;&amp;#x660E;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x672A;&amp;#x4F7F;&amp;#x7528;var&amp;#x7533;&amp;#x660E;&amp;#x53D8;&amp;#x91CF;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x5C06;&amp;#x5BFC;&amp;#x81F4;&amp;#x8FD0;&amp;#x884C;&amp;#x9519;&amp;#x8BEF;&amp;#x3002;&amp;#x542F;&amp;#x7528;strict&amp;#x6A21;&amp;#x5F0F;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;JavaScript&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x884C;&amp;#x5199;&amp;#x4E0A;&amp;#xFF1A;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x4E0D;&amp;#x652F;&amp;#x6301;strict&amp;#x6A21;&amp;#x5F0F;&amp;#x7684;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x4F1A;&amp;#x628A;&amp;#x5B83;&amp;#x5F53;&amp;#x505A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x8BED;&amp;#x53E5;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x652F;&amp;#x6301;strict&amp;#x6A21;&amp;#x5F0F;&amp;#x7684;&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x5C06;&amp;#x5F00;&amp;#x542F;strict&amp;#x6A21;&amp;#x5F0F;&amp;#x8FD0;&amp;#x884C;JavaScript&amp;#x3002;&lt;br&gt;JavaScript&amp;#x5728;&amp;#x8BBE;&amp;#x8BA1;&amp;#x4E4B;&amp;#x521D;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x65B9;&amp;#x4FBF;&amp;#x521D;&amp;#x5B66;&amp;#x8005;&amp;#x5B66;&amp;#x4E60;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0D;&amp;#x5F3A;&amp;#x5236;&amp;#x8981;&amp;#x6C42;&amp;#x7528;var&amp;#x7533;&amp;#x660E;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BBE;&amp;#x8BA1;&amp;#x9519;&amp;#x8BEF;&amp;#x5E26;&amp;#x6765;&amp;#x4E86;&amp;#x4E25;&amp;#x91CD;&amp;#x7684;&amp;#x540E;&amp;#x679C;&amp;#xFF1A;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x6CA1;&amp;#x6709;&amp;#x901A;&amp;#x8FC7;var&amp;#x7533;&amp;#x660E;&amp;#x5C31;&amp;#x88AB;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x8BE5;&amp;#x53D8;&amp;#x91CF;&amp;#x5C31;&amp;#x81EA;&amp;#x52A8;&amp;#x88AB;&amp;#x7533;&amp;#x660E;&amp;#x4E3A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1A;&lt;br&gt;i = 10; // i&amp;#x73B0;&amp;#x5728;&amp;#x662F;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&lt;br&gt;&amp;#x5B9A;&amp;#x4E49;&amp;#x503C;&amp;#x7684;&amp;#x6807;&amp;#x5FD7;&amp;#x6709;&amp;#x4E09;&amp;#x79CD; var  let const&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;null &amp;#x548C;undefined&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&lt;br&gt;JavaScript&amp;#x7684;&amp;#x8BBE;&amp;#x8BA1;&amp;#x8005;&amp;#x5E0C;&amp;#x671B;&amp;#x7528;null&amp;#x8868;&amp;#x793A;&amp;#x4E00;&amp;#x4E2A;&amp;#x7A7A;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x800C;undefined&amp;#x8868;&amp;#x793A;&amp;#x503C;&amp;#x672A;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&amp;#x4E8B;&amp;#x5B9E;&amp;#x8BC1;&amp;#x660E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x5375;&amp;#x7528;&amp;#xFF0C;&amp;#x533A;&amp;#x5206;&amp;#x4E24;&amp;#x8005;&amp;#x7684;&amp;#x610F;&amp;#x4E49;&amp;#x4E0D;&amp;#x5927;&amp;#x3002;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x90FD;&amp;#x5E94;&amp;#x8BE5;&amp;#x7528;null&amp;#x3002;undefined&amp;#x4EC5;&amp;#x4EC5;&amp;#x5728;&amp;#x5224;&amp;#x65AD;&amp;#x51FD;&amp;#x6570;&amp;#x53C2;&amp;#x6570;&amp;#x662F;&amp;#x5426;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x6709;&amp;#x7528;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BB0;&amp;#x4F4F;&amp;#xFF0C;&amp;#x5BF9;&amp;#x8C61;&amp;#x7C7B;&amp;#x578B;&amp;#x7528;null&amp;#x3002;&amp;#x57FA;&amp;#x672C;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#x7528;undefined&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5173;&amp;#x4E8E;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;br&gt;&amp;#x2018;&amp;#x2019;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#x53EF;&amp;#x4EE5;&amp;#x5305;&amp;#x542B;&amp;#x53CC;&amp;#x5F15;&amp;#x53F7;&amp;#xFF0C;&amp;#x53CC;&amp;#x5F15;&amp;#x53F7;&amp;#x5185;&amp;#x90E8;&amp;#x53EF;&amp;#x4EE5;&amp;#x5305;&amp;#x542B;&amp;#x5355;&amp;#x5F15;&amp;#x53F7;&amp;#xFF0C;&amp;#xB7; &amp;#xB7; &amp;#x5185;&amp;#x90E8;&amp;#x53EF;&amp;#x4EE5;&amp;#x5305;&amp;#x542B;&amp;#x5F88;&amp;#x591A;&amp;#x5305;&amp;#x62EC;&amp;#x6362;&amp;#x884C;&amp;#x5728;&amp;#x5185;&amp;#x7684;&amp;#x7B26;&amp;#x53F7;&amp;#x7531;&amp;#x4E8E;&amp;#x591A;&amp;#x884C;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x7528;\n&amp;#x5199;&amp;#x8D77;&amp;#x6765;&amp;#x6BD4;&amp;#x8F83;&amp;#x8D39;&amp;#x4E8B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6700;&amp;#x65B0;&amp;#x7684;ES6&amp;#x6807;&amp;#x51C6;&amp;#x65B0;&amp;#x589E;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x591A;&amp;#x884C;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x7684;&amp;#x8868;&amp;#x793A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7528;&lt;code&gt;...&lt;/code&gt;&amp;#x8868;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&lt;code&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;
&amp;#x591A;&amp;#x884C;
&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&lt;/code&gt;;&lt;br&gt;&amp;#x8981;&amp;#x628A;&amp;#x591A;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x8FDE;&amp;#x63A5;&amp;#x8D77;&amp;#x6765;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;+&amp;#x53F7;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF1A;&lt;figure class=&quot;highlight delphi&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x5C0F;&amp;#x660E;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;message&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x4F60;&amp;#x597D;, &amp;apos;&lt;/span&gt; + name + &lt;span class=&quot;string&quot;&gt;&amp;apos;, &amp;#x4F60;&amp;#x4ECA;&amp;#x5E74;&amp;apos;&lt;/span&gt; + age + &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x5C81;&amp;#x4E86;!&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(&lt;span class=&quot;keyword&quot;&gt;message&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x53D8;&amp;#x91CF;&amp;#x9700;&amp;#x8981;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;&amp;#x7528;+&amp;#x53F7;&amp;#x5C31;&amp;#x6BD4;&amp;#x8F83;&amp;#x9EBB;&amp;#x70E6;&amp;#x3002;ES6&amp;#x65B0;&amp;#x589E;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x6A21;&amp;#x677F;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x65B9;&amp;#x6CD5;&amp;#x548C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x591A;&amp;#x884C;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5B83;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x66FF;&amp;#x6362;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x4E2D;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x5C0F;&amp;#x660E;&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; message = &lt;span class=&quot;string&quot;&gt;`&amp;#x4F60;&amp;#x597D;, &lt;span class=&quot;subst&quot;&gt;${name}&lt;/span&gt;, &amp;#x4F60;&amp;#x4ECA;&amp;#x5E74;&lt;span class=&quot;subst&quot;&gt;${age}&lt;/span&gt;&amp;#x5C81;&amp;#x4E86;!`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(message);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x8981;&amp;#x7279;&amp;#x522B;&amp;#x6CE8;&amp;#x610F;&amp;#x76F8;&amp;#x7B49;&amp;#x8FD0;&amp;#x7B97;&amp;#x7B26;==&amp;#x3002;JavaScript&amp;#x5728;&amp;#x8BBE;&amp;#x8BA1;&amp;#x65F6;&amp;#xFF0C;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x6BD4;&amp;#x8F83;&amp;#x8FD0;&amp;#x7B97;&amp;#x7B26;&amp;#xFF1A;&lt;br&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;==&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x8F6C;&amp;#x6362;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#x518D;&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x5F88;&amp;#x591A;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5F97;&amp;#x5230;&amp;#x975E;&amp;#x5E38;&amp;#x8BE1;&amp;#x5F02;&amp;#x7684;&amp;#x7ED3;&amp;#x679C;&amp;#xFF1B;&lt;br&gt;&amp;#x7B2C;&amp;#x4E8C;&amp;#x79CD;&amp;#x662F;===&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E0D;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x8F6C;&amp;#x6362;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6570;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;false&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x518D;&amp;#x6BD4;&amp;#x8F83;&amp;#x3002;&lt;br&gt;&amp;#x7531;&amp;#x4E8E;JavaScript&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7F3A;&amp;#x9677;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;==&amp;#x6BD4;&amp;#x8F83;&amp;#xFF0C;&amp;#x59CB;&amp;#x7EC8;&amp;#x575A;&amp;#x6301;&amp;#x4F7F;&amp;#x7528;===&amp;#x6BD4;&amp;#x8F83;&amp;#x3002;&lt;br&gt;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x7684;&amp;#x5BF9;&amp;#x6BD4;&amp;#x7B26;&amp;#x53F7;&amp;#x4E3A;&amp;#x5168;&amp;#x4E0D;&amp;#x7B49;&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x503C;&amp;#x548C;&amp;#x7C7B;&amp;#x578B;&amp;#x90FD;&amp;#x4E0D;&amp;#x76F8;&amp;#x7B49;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;amp;&amp;amp; &amp;#x548C;|| &amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53EF;&amp;#x4EE5;&amp;#x5224;&amp;#x65AD;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;&amp;#x503C;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;for in&lt;br&gt;for&amp;#x5FAA;&amp;#x73AF;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x53D8;&amp;#x4F53;&amp;#x662F;for &amp;#x2026; in&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x5B83;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5C5E;&amp;#x6027;&amp;#x4F9D;&amp;#x6B21;&amp;#x5FAA;&amp;#x73AF;&amp;#x51FA;&amp;#x6765;&amp;#xFF1A;&lt;figure class=&quot;highlight cal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&amp;apos;Jack&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    city: &lt;span class=&quot;string&quot;&gt;&amp;apos;Beijing&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; o) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(key); // &lt;span class=&quot;string&quot;&gt;&amp;apos;name&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;age&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;city&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;Array&amp;#x4E5F;&amp;#x662F;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x800C;&amp;#x5B83;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x88AB;&amp;#x89C6;&amp;#x4E3A;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;for &amp;#x2026; in&amp;#x5FAA;&amp;#x73AF;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x5FAA;&amp;#x73AF;&amp;#x51FA;Array&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var a = [&lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;B&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for &lt;span class=&quot;comment&quot;&gt;(var i in a)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert&lt;span class=&quot;comment&quot;&gt;(i)&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;apos;0&amp;apos;, &amp;apos;1&amp;apos;, &amp;apos;2&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert&lt;span class=&quot;comment&quot;&gt;(a[i])&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;apos;A&amp;apos;, &amp;apos;B&amp;apos;, &amp;apos;C&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;for of &amp;#x4E0E;for in&amp;#x7684;&amp;#x533A;&amp;#x522B;&lt;/p&gt;
&lt;p&gt;for &amp;#x2026; in&amp;#x5FAA;&amp;#x73AF;&amp;#x7531;&amp;#x4E8E;&amp;#x5386;&amp;#x53F2;&amp;#x9057;&amp;#x7559;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x5B83;&amp;#x904D;&amp;#x5386;&amp;#x7684;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x540D;&amp;#x79F0;&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;Array&amp;#x6570;&amp;#x7EC4;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4E5F;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x88AB;&amp;#x89C6;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x3002;&amp;#x5F53;&amp;#x6211;&amp;#x4EEC;&amp;#x624B;&amp;#x52A8;&amp;#x7ED9;Array&amp;#x5BF9;&amp;#x8C61;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E86;&amp;#x989D;&amp;#x5916;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x540E;&amp;#xFF0C;for &amp;#x2026; in&amp;#x5FAA;&amp;#x73AF;&amp;#x5C06;&amp;#x5E26;&amp;#x6765;&amp;#x610F;&amp;#x60F3;&amp;#x4E0D;&amp;#x5230;&amp;#x7684;&amp;#x610F;&amp;#x5916;&amp;#x6548;&amp;#x679C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;B&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.name = &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; a) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(x); // &lt;span class=&quot;string&quot;&gt;&amp;apos;0&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;1&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;2&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;name&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;for &amp;#x2026; in&amp;#x5FAA;&amp;#x73AF;&amp;#x5C06;&amp;#x628A;name&amp;#x5305;&amp;#x62EC;&amp;#x5728;&amp;#x5185;&amp;#xFF0C;&amp;#x4F46;Array&amp;#x7684;length&amp;#x5C5E;&amp;#x6027;&amp;#x5374;&amp;#x4E0D;&amp;#x5305;&amp;#x62EC;&amp;#x5728;&amp;#x5185;&amp;#x3002;&lt;br&gt;for &amp;#x2026; of&amp;#x5FAA;&amp;#x73AF;&amp;#x5219;&amp;#x5B8C;&amp;#x5168;&amp;#x4FEE;&amp;#x590D;&amp;#x4E86;&amp;#x8FD9;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x5B83;&amp;#x53EA;&amp;#x5FAA;&amp;#x73AF;&amp;#x96C6;&amp;#x5408;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;&amp;#x5143;&amp;#x7D20;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [&lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;B&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a.name = &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; a) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(x); // &lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;B&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8981;&amp;#x5F15;&amp;#x5165;&amp;#x65B0;&amp;#x7684;for &amp;#x2026; of&amp;#x5FAA;&amp;#x73AF;&amp;#x3002;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JavaScript&amp;#x628A;null&amp;#x3001;undefined&amp;#x3001;0&amp;#x3001;NaN&amp;#x548C;&amp;#x7A7A;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x2019;&amp;#x2019;&amp;#x89C6;&amp;#x4E3A;false&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x503C;&amp;#x4E00;&amp;#x6982;&amp;#x89C6;&amp;#x4E3A;true&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;NaN&amp;#x8FD9;&amp;#x4E2A;&amp;#x7279;&amp;#x6B8A;&amp;#x7684;Number&amp;#x4E0E;&amp;#x6240;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x503C;&amp;#x90FD;&amp;#x4E0D;&amp;#x76F8;&amp;#x7B49;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x5B83;&amp;#x81EA;&amp;#x5DF1;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt; === &lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x552F;&amp;#x4E00;&amp;#x80FD;&amp;#x5224;&amp;#x65AD;NaN&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;isNaN()&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;isNaN&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;NaN&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x6570;&amp;#x7EC4;&amp;#xFF1A;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello&amp;apos;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// &amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x6570;&amp;#x7EC4;[1, 2, 3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&amp;#x4EFB;&amp;#x610F;&amp;#x5143;&amp;#x7D20;&lt;br&gt;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x548C;&amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&lt;br&gt;&amp;#x8981;&amp;#x53D6;&amp;#x5F97;Array&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8BBF;&amp;#x95EE;length&amp;#x5C5E;&amp;#x6027;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3.14&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;Hello&amp;apos;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.length; &lt;span class=&quot;comment&quot;&gt;// 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8BF7;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x7ED9;Array&amp;#x7684;length&amp;#x8D4B;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x503C;&amp;#x4F1A;&amp;#x5BFC;&amp;#x81F4;Array&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.length; &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.length = &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr; &lt;span class=&quot;comment&quot;&gt;// arr&amp;#x53D8;&amp;#x4E3A;[1, 2, 3, undefined, undefined, undefined]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr.length = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr; &lt;span class=&quot;comment&quot;&gt;// arr&amp;#x53D8;&amp;#x4E3A;[1, 2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Array&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x7D22;&amp;#x5F15;&amp;#x628A;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5143;&amp;#x7D20;&amp;#x4FEE;&amp;#x6539;&amp;#x4E3A;&amp;#x65B0;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5BF9;Array&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x8FDB;&amp;#x884C;&amp;#x8D4B;&amp;#x503C;&amp;#x4F1A;&amp;#x76F4;&amp;#x63A5;&amp;#x4FEE;&amp;#x6539;&amp;#x8FD9;&amp;#x4E2A;Array&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight prolog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;atom&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;atom&quot;&gt;arr&lt;/span&gt; = [&lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;B&amp;apos;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;atom&quot;&gt;arr&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;atom&quot;&gt;arr&lt;/span&gt;; // &lt;span class=&quot;atom&quot;&gt;arr&lt;/span&gt;&amp;#x73B0;&amp;#x5728;&amp;#x53D8;&amp;#x4E3A;[&lt;span class=&quot;string&quot;&gt;&amp;apos;A&amp;apos;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;C&amp;apos;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8BF7;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x901A;&amp;#x8FC7;&amp;#x7D22;&amp;#x5F15;&amp;#x8D4B;&amp;#x503C;&amp;#x65F6;&amp;#xFF0C;&amp;#x7D22;&amp;#x5F15;&amp;#x8D85;&amp;#x8FC7;&amp;#x4E86;&amp;#x8303;&amp;#x56F4;&amp;#xFF0C;&amp;#x540C;&amp;#x6837;&amp;#x4F1A;&amp;#x5F15;&amp;#x8D77;Array&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var arr = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;apos;x&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr; &lt;span class=&quot;comment&quot;&gt;// arr&amp;#x53D8;&amp;#x4E3A;[1, 2, 3, undefined, undefined, &amp;apos;x&amp;apos;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x5176;&amp;#x4ED6;&amp;#x7F16;&amp;#x7A0B;&amp;#x8BED;&amp;#x8A00;&amp;#x4E0D;&amp;#x5141;&amp;#x8BB8;&amp;#x76F4;&amp;#x63A5;&amp;#x6539;&amp;#x53D8;&amp;#x6570;&amp;#x7EC4;&amp;#x7684;&amp;#x5927;&amp;#x5C0F;&amp;#xFF0C;&amp;#x8D8A;&amp;#x754C;&amp;#x8BBF;&amp;#x95EE;&amp;#x7D22;&amp;#x5F15;&amp;#x4F1A;&amp;#x62A5;&amp;#x9519;&amp;#x3002;&amp;#x7136;&amp;#x800C;&amp;#xFF0C;JavaScript&amp;#x7684;Array&amp;#x5374;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x9519;&amp;#x8BEF;&amp;#x3002;&amp;#x5728;&amp;#x7F16;&amp;#x5199;&amp;#x4EE3;&amp;#x7801;&amp;#x65F6;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5EFA;&amp;#x8BAE;&amp;#x76F4;&amp;#x63A5;&amp;#x4FEE;&amp;#x6539;Array&amp;#x7684;&amp;#x5927;&amp;#x5C0F;&amp;#xFF0C;&amp;#x8BBF;&amp;#x95EE;&amp;#x7D22;&amp;#x5F15;&amp;#x65F6;&amp;#x8981;&amp;#x786E;&amp;#x4FDD;&amp;#x7D22;&amp;#x5F15;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8D8A;&amp;#x754C;&amp;#x3002;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x51FD;&amp;#x6570;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x53C2;&amp;#x6570;&amp;#x7C7B;&lt;br&gt;JavaScript&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5728;&amp;#x67E5;&amp;#x627E;&amp;#x53D8;&amp;#x91CF;&amp;#x65F6;&amp;#x4ECE;&amp;#x81EA;&amp;#x8EAB;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x4ECE;&amp;#x201C;&amp;#x5185;&amp;#x201D;&amp;#x5411;&amp;#x201C;&amp;#x5916;&amp;#x201D;&amp;#x67E5;&amp;#x627E;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5185;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E0E;&amp;#x5916;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x91CD;&amp;#x540D;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5219;&amp;#x5185;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x5C06;&amp;#x201C;&amp;#x5C4F;&amp;#x853D;&amp;#x201D;&amp;#x5916;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;br&gt;&amp;#x53C2;&amp;#x6570;&amp;#x4E2A;&amp;#x6570;&amp;#x5224;&amp;#x65AD;&lt;br&gt;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;return&amp;#x8BED;&amp;#x53E5;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#x6BD5;&amp;#x540E;&amp;#x4E5F;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x7ED3;&amp;#x679C;&amp;#x4E3A;undefined&amp;#x3002;&lt;br&gt;&amp;#x7531;&amp;#x4E8E;JavaScript&amp;#x5141;&amp;#x8BB8;&amp;#x4F20;&amp;#x5165;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x800C;&amp;#x4E0D;&amp;#x5F71;&amp;#x54CD;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x6BD4;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x591A;&amp;#x4E5F;&amp;#x6CA1;&amp;#x6709;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x867D;&amp;#x7136;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x5E76;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&lt;br&gt;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x6BD4;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x5C11;&amp;#x4E5F;&amp;#x6CA1;&amp;#x6709;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;arguments&lt;/p&gt;
&lt;p&gt;JavaScript&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x514D;&amp;#x8D39;&amp;#x8D60;&amp;#x9001;&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x5B57;arguments&amp;#xFF0C;&amp;#x5B83;&amp;#x53EA;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x8D77;&amp;#x4F5C;&amp;#x7528;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x6C38;&amp;#x8FDC;&amp;#x6307;&amp;#x5411;&amp;#x5F53;&amp;#x524D;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x8005;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x3002;arguments&amp;#x7C7B;&amp;#x4F3C;Array&amp;#x4F46;&amp;#x5B83;&amp;#x4E0D;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;Array&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;function &lt;span class=&quot;function&quot;&gt;foo&lt;/span&gt;(x) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;alert&lt;/span&gt;(x); &lt;span class=&quot;comment&quot;&gt;// 10for (var i=0; i&amp;lt;arguments.length; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;alert&lt;/span&gt;(arguments&lt;span class=&quot;attr_selector&quot;&gt;[i]&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 10, 20, 30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;foo&lt;/span&gt;(10, 20, 30);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5229;&amp;#x7528;arguments&amp;#xFF0C;&amp;#x4F60;&amp;#x53EF;&amp;#x4EE5;&amp;#x83B7;&amp;#x5F97;&amp;#x8C03;&amp;#x7528;&amp;#x8005;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x51FD;&amp;#x6570;&amp;#x4E0D;&amp;#x5B9A;&amp;#x4E49;&amp;#x4EFB;&amp;#x4F55;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x62FF;&amp;#x5230;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x503C;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;function &lt;span class=&quot;title&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (arguments.length === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var x = arguments[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? x : -x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(); &lt;span class=&quot;comment&quot;&gt;// 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(-&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;arguments&amp;#x6700;&amp;#x5E38;&amp;#x7528;&amp;#x4E8E;&amp;#x5224;&amp;#x65AD;&amp;#x4F20;&amp;#x5165;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x4E2A;&amp;#x6570;&amp;#x3002;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x5199;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo(a[, b], c)// &amp;#x63A5;&amp;#x6536;2~3&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;b&amp;#x662F;&amp;#x53EF;&amp;#x9009;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x4F20;2&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;b&amp;#x9ED8;&amp;#x8BA4;&amp;#x4E3A;null&amp;#xFF1A;function foo(a, b, c) {if (arguments.length === 2) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &amp;#x5B9E;&amp;#x9645;&amp;#x62FF;&amp;#x5230;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x662F;a&amp;#x548C;b&amp;#xFF0C;c&amp;#x4E3A;undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c = b; &lt;span class=&quot;comment&quot;&gt;// &amp;#x628A;b&amp;#x8D4B;&amp;#x7ED9;c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        b = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// b&amp;#x53D8;&amp;#x4E3A;&amp;#x9ED8;&amp;#x8BA4;&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8981;&amp;#x628A;&amp;#x4E2D;&amp;#x95F4;&amp;#x7684;&amp;#x53C2;&amp;#x6570;b&amp;#x53D8;&amp;#x4E3A;&amp;#x201C;&amp;#x53EF;&amp;#x9009;&amp;#x201D;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EA;&amp;#x80FD;&amp;#x901A;&amp;#x8FC7;arguments&amp;#x5224;&amp;#x65AD;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x91CD;&amp;#x65B0;&amp;#x8C03;&amp;#x6574;&amp;#x53C2;&amp;#x6570;&amp;#x5E76;&amp;#x8D4B;&amp;#x503C;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;rest&amp;#x53C2;&amp;#x6570;&lt;/p&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;JavaScript&amp;#x51FD;&amp;#x6570;&amp;#x5141;&amp;#x8BB8;&amp;#x63A5;&amp;#x6536;&amp;#x4EFB;&amp;#x610F;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x7528;arguments&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x6240;&amp;#x6709;&amp;#x53C2;&amp;#x6570;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a, b&lt;/span&gt;) &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i, rest = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.length &amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rest.push(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;a = &amp;apos;&lt;/span&gt; + a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;b = &amp;apos;&lt;/span&gt; + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(rest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x83B7;&amp;#x53D6;&amp;#x9664;&amp;#x4E86;&amp;#x5DF2;&amp;#x5B9A;&amp;#x4E49;&amp;#x53C2;&amp;#x6570;a&amp;#x3001;b&amp;#x4E4B;&amp;#x5916;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x7528;arguments&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5FAA;&amp;#x73AF;&amp;#x8981;&amp;#x4ECE;&amp;#x7D22;&amp;#x5F15;2&amp;#x5F00;&amp;#x59CB;&amp;#x4EE5;&amp;#x4FBF;&amp;#x6392;&amp;#x9664;&amp;#x524D;&amp;#x4E24;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x5199;&amp;#x6CD5;&amp;#x5F88;&amp;#x522B;&amp;#x626D;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x83B7;&amp;#x5F97;&amp;#x989D;&amp;#x5916;&amp;#x7684;rest&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x6709;&amp;#x6CA1;&amp;#x6709;&amp;#x66F4;&amp;#x597D;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1F;&lt;/p&gt;
&lt;p&gt;ES6&amp;#x6807;&amp;#x51C6;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;rest&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x6539;&amp;#x5199;&amp;#x4E3A;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a, b, &lt;span class=&quot;rest_arg&quot;&gt;...rest&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;a = &amp;apos;&lt;/span&gt; + a);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&lt;span class=&quot;string&quot;&gt;&amp;apos;b = &amp;apos;&lt;/span&gt; + b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(rest);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x7ED3;&amp;#x679C;:// a = 1// b = 2// Array [ 3, 4, 5 ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x7ED3;&amp;#x679C;:// a = 1// b = undefined// Array []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;rest&amp;#x53C2;&amp;#x6570;&amp;#x53EA;&amp;#x80FD;&amp;#x5199;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x524D;&amp;#x9762;&amp;#x7528;&amp;#x2026;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x4ECE;&amp;#x8FD0;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#x53EF;&amp;#x77E5;&amp;#xFF0C;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x5148;&amp;#x7ED1;&amp;#x5B9A;a&amp;#x3001;b&amp;#xFF0C;&amp;#x591A;&amp;#x4F59;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4EE5;&amp;#x6570;&amp;#x7EC4;&amp;#x5F62;&amp;#x5F0F;&amp;#x4EA4;&amp;#x7ED9;&amp;#x53D8;&amp;#x91CF;rest&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x4E0D;&amp;#x518D;&amp;#x9700;&amp;#x8981;arguments&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x83B7;&amp;#x53D6;&amp;#x4E86;&amp;#x5168;&amp;#x90E8;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x8FDE;&amp;#x6B63;&amp;#x5E38;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x90FD;&amp;#x6CA1;&amp;#x586B;&amp;#x6EE1;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x8981;&amp;#x7D27;&amp;#xFF0C;rest&amp;#x53C2;&amp;#x6570;&amp;#x4F1A;&amp;#x63A5;&amp;#x6536;&amp;#x4E00;&amp;#x4E2A;&amp;#x7A7A;&amp;#x6570;&amp;#x7EC4;&amp;#xFF08;&amp;#x6CE8;&amp;#x610F;&amp;#x4E0D;&amp;#x662F;undefined&lt;/p&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;JavaScript&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x5D4C;&amp;#x5957;&amp;#xFF0C;&amp;#x6B64;&amp;#x65F6;&amp;#xFF0C;&amp;#x5185;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;&amp;#x5916;&amp;#x90E8;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x53CD;&amp;#x8FC7;&amp;#x6765;&amp;#x5219;&amp;#x4E0D;&amp;#x884C;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y = x + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// bar&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;foo&amp;#x7684;&amp;#x53D8;&amp;#x91CF;x!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; z = y + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// ReferenceError! foo&amp;#x4E0D;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBF;&amp;#x95EE;bar&amp;#x7684;&amp;#x53D8;&amp;#x91CF;y!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x540D;&amp;#x5B57;&amp;#x7A7A;&amp;#x95F4;&lt;/p&gt;
&lt;p&gt;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#x4F1A;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;window&amp;#x4E0A;&amp;#xFF0C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;JavaScript&amp;#x6587;&amp;#x4EF6;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x76F8;&amp;#x540C;&amp;#x7684;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x76F8;&amp;#x540C;&amp;#x540D;&amp;#x5B57;&amp;#x7684;&amp;#x9876;&amp;#x5C42;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x90FD;&amp;#x4F1A;&amp;#x9020;&amp;#x6210;&amp;#x547D;&amp;#x540D;&amp;#x51B2;&amp;#x7A81;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5F88;&amp;#x96BE;&amp;#x88AB;&amp;#x53D1;&amp;#x73B0;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x51CF;&amp;#x5C11;&amp;#x51B2;&amp;#x7A81;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x628A;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53D8;&amp;#x91CF;&amp;#x548C;&amp;#x51FD;&amp;#x6570;&amp;#x5168;&amp;#x90E8;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#x4E2D;&amp;#x3002;&amp;#x4F8B;&amp;#x5982;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x552F;&amp;#x4E00;&amp;#x7684;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;MYAPP:var MYAPP = {};&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x5176;&amp;#x4ED6;&amp;#x53D8;&amp;#x91CF;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.name = &lt;span class=&quot;string&quot;&gt;&amp;apos;myapp&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.version = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x5176;&amp;#x4ED6;&amp;#x51FD;&amp;#x6570;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MYAPP.foo = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;foo&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x628A;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5168;&amp;#x90E8;&amp;#x653E;&amp;#x5165;&amp;#x552F;&amp;#x4E00;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x7A7A;&amp;#x95F4;MYAPP&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5927;&amp;#x5927;&amp;#x51CF;&amp;#x5C11;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#x51B2;&amp;#x7A81;&amp;#x7684;&amp;#x53EF;&amp;#x80FD;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5168;&amp;#x5C40;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x5728;&amp;#x4EFB;&amp;#x4F55;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x5C31;&amp;#x5177;&amp;#x6709;&amp;#x5168;&amp;#x5C40;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x3002;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#xFF0C;JavaScript&amp;#x9ED8;&amp;#x8BA4;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x5BF9;&amp;#x8C61;window&amp;#xFF0C;&amp;#x5168;&amp;#x5C40;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x88AB;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;window&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; course = &lt;span class=&quot;string&quot;&gt;&amp;apos;Learn JavaScript&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(course); &lt;span class=&quot;comment&quot;&gt;// &amp;apos;Learn JavaScript&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alert(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.course); &lt;span class=&quot;comment&quot;&gt;// &amp;apos;Learn JavaScript&amp;apos;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8BBF;&amp;#x95EE;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;course&amp;#x548C;&amp;#x8BBF;&amp;#x95EE;window.course&amp;#x662F;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4F60;&amp;#x53EF;&amp;#x80FD;&amp;#x731C;&amp;#x5230;&amp;#x4E86;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x51FD;&amp;#x6570;&amp;#x5B9A;&amp;#x4E49;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53D8;&amp;#x91CF;&amp;#x65B9;&amp;#x5F0F;var foo = function () {}&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4E5F;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x9876;&amp;#x5C42;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E5F;&amp;#x88AB;&amp;#x89C6;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ED1;&amp;#x5B9A;&amp;#x5230;window&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;pi&quot;&gt;&amp;apos;use strict&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&amp;apos;foo&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo(); &lt;span class=&quot;comment&quot;&gt;// &amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;foo()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.foo(); &lt;span class=&quot;comment&quot;&gt;// &amp;#x901A;&amp;#x8FC7;window.foo()&amp;#x8C03;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x540D;&amp;#x79F0;&amp;#x7A7A;&amp;#x95F4;&lt;br&gt;&amp;#x5168;&amp;#x5C40;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&lt;br&gt;&amp;#x5C40;&amp;#x90E8;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&lt;br&gt;&amp;#x53C2;&amp;#x6570;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&lt;/p&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&amp;#x8BBF;&amp;#x95EE;&amp;#x5C5E;&amp;#x6027;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;.&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;&amp;#x8FD9;&amp;#x8981;&amp;#x6C42;&amp;#x5C5E;&amp;#x6027;&amp;#x540D;&amp;#x5FC5;&amp;#x987B;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5C5E;&amp;#x6027;&amp;#x540D;&amp;#x5305;&amp;#x542B;&amp;#x7279;&amp;#x6B8A;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x5C31;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;&amp;#x2019;&amp;#x2019;&amp;#x62EC;&amp;#x8D77;&amp;#x6765;&amp;#xFF1A;&lt;br&gt;&amp;#x8BBF;&amp;#x95EE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x4E5F;&amp;#x65E0;&amp;#x6CD5;&amp;#x4F7F;&amp;#x7528;.&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x7528;[&amp;#x2018;xxx&amp;#x2019;]&amp;#x6765;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x4EEC;&amp;#x8981;&amp;#x68C0;&amp;#x6D4B;xiaoming&amp;#x662F;&amp;#x5426;&amp;#x62E5;&amp;#x6709;&amp;#x67D0;&amp;#x4E00;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;in&amp;#x64CD;&amp;#x4F5C;&amp;#x7B26;&amp;#xFF1A;&lt;br&gt;&amp;#x8981;&amp;#x5224;&amp;#x65AD;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C5E;&amp;#x6027;&amp;#x662F;&amp;#x5426;&amp;#x662F;xiaoming&amp;#x81EA;&amp;#x8EAB;&amp;#x62E5;&amp;#x6709;&amp;#x7684;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x7EE7;&amp;#x627F;&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;hasOwnProperty()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;apos;name&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xiaoming; &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;apos;grade&amp;apos;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; xiaoming; &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xiaoming.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&amp;apos;name&amp;apos;&lt;/span&gt;); &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xiaoming.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&amp;apos;toString&amp;apos;&lt;/span&gt;); &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JavaScript&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x90FD;&amp;#x4F1A;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x578B;&amp;#xFF0C;&amp;#x6307;&amp;#x5411;&amp;#x5B83;&amp;#x7684;&amp;#x539F;&amp;#x578B;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x6211;&amp;#x4EEC;&amp;#x7528;obj.xxx&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#x65F6;&amp;#xFF0C;JavaScript&amp;#x5F15;&amp;#x64CE;&amp;#x5148;&amp;#x5728;&amp;#x5F53;&amp;#x524D;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0A;&amp;#x67E5;&amp;#x627E;&amp;#x8BE5;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x627E;&amp;#x5230;&amp;#xFF0C;&amp;#x5C31;&amp;#x5230;&amp;#x5176;&amp;#x539F;&amp;#x578B;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0A;&amp;#x627E;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6709;&amp;#x627E;&amp;#x5230;&amp;#xFF0C;&amp;#x5C31;&amp;#x4E00;&amp;#x76F4;&amp;#x4E0A;&amp;#x6EAF;&amp;#x5230;Object.prototype&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6709;&amp;#x627E;&amp;#x5230;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EA;&amp;#x80FD;&amp;#x8FD4;&amp;#x56DE;undefined&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; myObject = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	objectName : &lt;span class=&quot;string&quot;&gt;&amp;quot;jimmy&amp;quot;&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;/*&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x9017;&amp;#x53F7;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&amp;quot;object-Age&amp;quot;&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;/*&amp;#x540D;&amp;#x5B57;&amp;#x53EF;&amp;#x4EE5;&amp;#x5305;&amp;#x542B;&amp;#x7279;&amp;#x6B8A;&amp;#x5B57;&amp;#x7B26;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x7279;&amp;#x6B8A;&amp;#x5B57;&amp;#x7B26;&amp;#x9700;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x5F15;&amp;#x53F7;&amp;#x9614;&amp;#x8D77;&amp;#x6765;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	getAge : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&amp;quot;object-Age&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	}&lt;span class=&quot;comment&quot;&gt;/*&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x6CA1;&amp;#x6709;&amp;#x5206;&amp;#x53F7;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(myObject.getAge());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(myObject[&lt;span class=&quot;string&quot;&gt;&amp;quot;object-Age&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;firstName,lastName&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.firstName = firstName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lastName = lastName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayHello = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(firstName + &lt;span class=&quot;string&quot;&gt;&amp;quot; : &amp;quot;&lt;/span&gt; +lastName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; user = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;string&quot;&gt;&amp;quot;jimmy&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;lin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;user.sayHello();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x5220;&amp;#x9664;&amp;#x67D0;&amp;#x4E2A;&amp;#x719F;&amp;#x6089;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; user.firstName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; user) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&amp;quot;key ====&amp;quot;&lt;/span&gt;+key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4F7F;&amp;#x7528;apply&amp;#x548C;call&amp;#x6765;&amp;#x7ED1;&amp;#x5B9A;this&amp;#x7684;&amp;#x6307;&amp;#x5411;&lt;br&gt;&amp;#x867D;&amp;#x7136;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x72EC;&amp;#x7ACB;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x662F;strict&amp;#x6A21;&amp;#x5F0F;&amp;#xFF0C;this&amp;#x6307;&amp;#x5411;undefined&amp;#x6216;window&amp;#xFF0C;&amp;#x4E0D;&amp;#x8FC7;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A7;&amp;#x5236;this&amp;#x7684;&amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#xFF01;&lt;/p&gt;
&lt;p&gt;&amp;#x8981;&amp;#x6307;&amp;#x5B9A;&amp;#x51FD;&amp;#x6570;&amp;#x7684;this&amp;#x6307;&amp;#x5411;&amp;#x54EA;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;apply&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x63A5;&amp;#x6536;&amp;#x4E24;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5C31;&amp;#x662F;&amp;#x9700;&amp;#x8981;&amp;#x7ED1;&amp;#x5B9A;&amp;#x7684;this&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x662F;Array&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x7528;apply&amp;#x4FEE;&amp;#x590D;getAge()&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getAge&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; y = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;().getFullYear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; y - &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.birth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xiaoming = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&amp;apos;&amp;#x5C0F;&amp;#x660E;&amp;apos;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    birth: &lt;span class=&quot;number&quot;&gt;1990&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    age: getAge&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xiaoming.age(); &lt;span class=&quot;comment&quot;&gt;// 25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getAge.apply(xiaoming, []); &lt;span class=&quot;comment&quot;&gt;// 25, this&amp;#x6307;&amp;#x5411;xiaoming, &amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x7A7A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0E;apply()&amp;#x7C7B;&amp;#x4F3C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;call()&amp;#xFF0C;&amp;#x552F;&amp;#x4E00;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#xFF1A;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;apply()&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x6253;&amp;#x5305;&amp;#x6210;Array&amp;#x518D;&amp;#x4F20;&amp;#x5165;&amp;#xFF1B;&lt;/p&gt;
&lt;p&gt;call()&amp;#x628A;&amp;#x53C2;&amp;#x6570;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x4F20;&amp;#x5165;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6BD4;&amp;#x5982;&amp;#x8C03;&amp;#x7528;Math.max(3, 5, 4)&amp;#xFF0C;&amp;#x5206;&amp;#x522B;&amp;#x7528;apply()&amp;#x548C;call()&amp;#x5B9E;&amp;#x73B0;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Math.max.apply(null, [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Math.max.call(null, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5BF9;&amp;#x666E;&amp;#x901A;&amp;#x51FD;&amp;#x6570;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x5E38;&amp;#x628A;this&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E3A;null&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x88C5;&amp;#x9970;&amp;#x5668;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5229;&amp;#x7528;apply()&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x52A8;&amp;#x6001;&amp;#x6539;&amp;#x53D8;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x884C;&amp;#x4E3A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;JavaScript&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5BF9;&amp;#x8C61;&amp;#x90FD;&amp;#x662F;&amp;#x52A8;&amp;#x6001;&amp;#x7684;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x5185;&amp;#x7F6E;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x91CD;&amp;#x65B0;&amp;#x6307;&amp;#x5411;&amp;#x65B0;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x5047;&amp;#x5B9A;&amp;#x6211;&amp;#x4EEC;&amp;#x60F3;&amp;#x7EDF;&amp;#x8BA1;&amp;#x4E00;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x4E00;&amp;#x5171;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&amp;#x591A;&amp;#x5C11;&amp;#x6B21;parseInt()&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x90FD;&amp;#x627E;&amp;#x51FA;&amp;#x6765;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x624B;&amp;#x52A8;&amp;#x52A0;&amp;#x4E0A;count += 1&amp;#xFF0C;&amp;#x4E0D;&amp;#x8FC7;&amp;#x8FD9;&amp;#x6837;&amp;#x505A;&amp;#x592A;&amp;#x50BB;&amp;#x4E86;&amp;#x3002;&amp;#x6700;&amp;#x4F73;&amp;#x65B9;&amp;#x6848;&amp;#x662F;&amp;#x7528;&amp;#x6211;&amp;#x4EEC;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x66FF;&amp;#x6362;&amp;#x6389;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;parseInt()&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oldParseInt = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// &amp;#x4FDD;&amp;#x5B58;&amp;#x539F;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.parseInt = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; oldParseInt.apply(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// &amp;#x8C03;&amp;#x7528;&amp;#x539F;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// &amp;#x6D4B;&amp;#x8BD5;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;10&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;20&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;30&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;count; &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x662F;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x7ACB;&amp;#x523B;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x76F4;&amp;#x5230;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;f()&amp;#x624D;&amp;#x6267;&amp;#x884C;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD4;&amp;#x56DE;&amp;#x95ED;&amp;#x5305;&amp;#x65F6;&amp;#x7262;&amp;#x8BB0;&amp;#x7684;&amp;#x4E00;&amp;#x70B9;&amp;#x5C31;&amp;#x662F;&amp;#xFF1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x51FD;&amp;#x6570;&amp;#x4E0D;&amp;#x8981;&amp;#x5F15;&amp;#x7528;&amp;#x4EFB;&amp;#x4F55;&amp;#x5FAA;&amp;#x73AF;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x540E;&amp;#x7EED;&amp;#x4F1A;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x5316;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x95ED;&amp;#x5305;&amp;#xFF08;closure&amp;#xFF09;&amp;#x662F;Javascript&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x96BE;&amp;#x70B9;&amp;#xFF0C;&amp;#x4E5F;&amp;#x662F;&amp;#x5B83;&amp;#x7684;&amp;#x7279;&amp;#x8272;&amp;#xFF0C;&amp;#x5F88;&amp;#x591A;&amp;#x9AD8;&amp;#x7EA7;&amp;#x5E94;&amp;#x7528;&amp;#x90FD;&amp;#x8981;&amp;#x4F9D;&amp;#x9760;&amp;#x95ED;&amp;#x5305;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x7684;&amp;#x5B66;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;&amp;#xFF0C;&amp;#x5BF9;&amp;#x4E8E;Javascript&amp;#x521D;&amp;#x5B66;&amp;#x8005;&amp;#x5E94;&amp;#x8BE5;&amp;#x662F;&amp;#x5F88;&amp;#x6709;&amp;#x7528;&amp;#x7684;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E00;&amp;#x3001;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8981;&amp;#x7406;&amp;#x89E3;&amp;#x95ED;&amp;#x5305;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5FC5;&amp;#x987B;&amp;#x7406;&amp;#x89E3;Javascript&amp;#x7279;&amp;#x6B8A;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;#x65E0;&amp;#x975E;&amp;#x5C31;&amp;#x662F;&amp;#x4E24;&amp;#x79CD;&amp;#xFF1A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#x548C;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Javascript&amp;#x8BED;&amp;#x8A00;&amp;#x7684;&amp;#x7279;&amp;#x6B8A;&amp;#x4E4B;&amp;#x5904;&amp;#xFF0C;&amp;#x5C31;&amp;#x5728;&amp;#x4E8E;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8BFB;&amp;#x53D6;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;alert(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;f1(); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x53E6;&amp;#x4E00;&amp;#x65B9;&amp;#x9762;&amp;#xFF0C;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x5916;&amp;#x90E8;&amp;#x81EA;&amp;#x7136;&amp;#x65E0;&amp;#x6CD5;&amp;#x8BFB;&amp;#x53D6;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;alert(n); &lt;span class=&quot;comment&quot;&gt;// error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x5730;&amp;#x65B9;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x58F0;&amp;#x660E;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;&amp;#x547D;&amp;#x4EE4;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x7528;&amp;#x7684;&amp;#x8BDD;&amp;#xFF0C;&amp;#x4F60;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x58F0;&amp;#x660E;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF01;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;f1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;alert(n); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E8C;&amp;#x3001;&amp;#x5982;&amp;#x4F55;&amp;#x4ECE;&amp;#x5916;&amp;#x90E8;&amp;#x8BFB;&amp;#x53D6;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF1F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x51FA;&amp;#x4E8E;&amp;#x79CD;&amp;#x79CD;&amp;#x539F;&amp;#x56E0;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x5F97;&amp;#x5230;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#xFF0C;&amp;#x524D;&amp;#x9762;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BF4;&amp;#x8FC7;&amp;#x4E86;&amp;#xFF0C;&amp;#x6B63;&amp;#x5E38;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x529E;&amp;#x4E0D;&amp;#x5230;&amp;#x7684;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x901A;&amp;#x8FC7;&amp;#x53D8;&amp;#x901A;&amp;#x65B9;&amp;#x6CD5;&amp;#x624D;&amp;#x80FD;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x90A3;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x518D;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;alert(n); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;f2&amp;#x5C31;&amp;#x88AB;&amp;#x5305;&amp;#x62EC;&amp;#x5728;&amp;#x51FD;&amp;#x6570;f1&amp;#x5185;&amp;#x90E8;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;f1&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5BF9;f2&amp;#x90FD;&amp;#x662F;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x53CD;&amp;#x8FC7;&amp;#x6765;&amp;#x5C31;&amp;#x4E0D;&amp;#x884C;&amp;#xFF0C;f2&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5BF9;f1&amp;#x5C31;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;Javascript&amp;#x8BED;&amp;#x8A00;&amp;#x7279;&amp;#x6709;&amp;#x7684;&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x94FE;&amp;#x5F0F;&amp;#x4F5C;&amp;#x7528;&amp;#x57DF;&amp;quot;&lt;/span&gt;&amp;#x7ED3;&amp;#x6784;&amp;#xFF08;chain scope&amp;#xFF09;&amp;#xFF0C;&amp;#x5B50;&amp;#x5BF9;&amp;#x8C61;&amp;#x4F1A; &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x4E00;&amp;#x7EA7;&amp;#x4E00;&amp;#x7EA7;&amp;quot;&lt;/span&gt; &amp;#x5730;&amp;#x5411;&amp;#x4E0A;&amp;#x5BFB;&amp;#x627E;&amp;#x6240;&amp;#x6709;&amp;#x7236;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x7236;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5B50;&amp;#x5BF9;&amp;#x8C61;&amp;#x90FD;&amp;#x662F;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#xFF0C;&amp;#x53CD;&amp;#x4E4B;&amp;#x5219;&amp;#x4E0D;&amp;#x6210;&amp;#x7ACB;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x65E2;&amp;#x7136;f2&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x53D6;f1&amp;#x4E2D;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x53EA;&amp;#x8981;&amp;#x628A;f2&amp;#x4F5C;&amp;#x4E3A;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;f1&amp;#x5916;&amp;#x90E8;&amp;#x8BFB;&amp;#x53D6;&amp;#x5B83;&amp;#x7684;&amp;#x5185;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x4E86;&amp;#x5417;&amp;#xFF01;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;alert(n); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result=f1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;result(); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E09;&amp;#x3001;&amp;#x95ED;&amp;#x5305;&amp;#x7684;&amp;#x6982;&amp;#x5FF5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E0A;&amp;#x4E00;&amp;#x8282;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x7684;f2&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x95ED;&amp;#x5305;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5404;&amp;#x79CD;&amp;#x4E13;&amp;#x4E1A;&amp;#x6587;&amp;#x732E;&amp;#x4E0A;&amp;#x7684;&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x95ED;&amp;#x5305;&amp;quot;&lt;/span&gt;&amp;#xFF08;closure&amp;#xFF09;&amp;#x5B9A;&amp;#x4E49;&amp;#x975E;&amp;#x5E38;&amp;#x62BD;&amp;#x8C61;&amp;#xFF0C;&amp;#x5F88;&amp;#x96BE;&amp;#x770B;&amp;#x61C2;&amp;#x3002;&amp;#x6211;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x662F;&amp;#xFF0C;&amp;#x95ED;&amp;#x5305;&amp;#x5C31;&amp;#x662F;&amp;#x80FD;&amp;#x591F;&amp;#x8BFB;&amp;#x53D6;&amp;#x5176;&amp;#x4ED6;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x5728;Javascript&amp;#x8BED;&amp;#x8A00;&amp;#x4E2D;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x5B50;&amp;#x51FD;&amp;#x6570;&amp;#x624D;&amp;#x80FD;&amp;#x8BFB;&amp;#x53D6;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x95ED;&amp;#x5305;&amp;#x7B80;&amp;#x5355;&amp;#x7406;&amp;#x89E3;&amp;#x6210;&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x5B9A;&amp;#x4E49;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x51FD;&amp;#x6570;&amp;quot;&lt;/span&gt;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x5728;&amp;#x672C;&amp;#x8D28;&amp;#x4E0A;&amp;#xFF0C;&amp;#x95ED;&amp;#x5305;&amp;#x5C31;&amp;#x662F;&amp;#x5C06;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x548C;&amp;#x51FD;&amp;#x6570;&amp;#x5916;&amp;#x90E8;&amp;#x8FDE;&amp;#x63A5;&amp;#x8D77;&amp;#x6765;&amp;#x7684;&amp;#x4E00;&amp;#x5EA7;&amp;#x6865;&amp;#x6881;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x56DB;&amp;#x3001;&amp;#x95ED;&amp;#x5305;&amp;#x7684;&amp;#x7528;&amp;#x9014;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x95ED;&amp;#x5305;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5728;&amp;#x8BB8;&amp;#x591A;&amp;#x5730;&amp;#x65B9;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x6700;&amp;#x5927;&amp;#x7528;&amp;#x5904;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x524D;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BFB;&amp;#x53D6;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C31;&amp;#x662F;&amp;#x8BA9;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x503C;&amp;#x59CB;&amp;#x7EC8;&amp;#x4FDD;&amp;#x6301;&amp;#x5728;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x53E5;&amp;#x8BDD;&amp;#x5462;&amp;#xFF1F;&amp;#x8BF7;&amp;#x770B;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n=&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;nAdd=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{n+=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;alert(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result=f1();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;result(); &lt;span class=&quot;comment&quot;&gt;// 999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;nAdd();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;result(); &lt;span class=&quot;comment&quot;&gt;// 1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#xFF0C;result&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;&amp;#x95ED;&amp;#x5305;f2&amp;#x51FD;&amp;#x6570;&amp;#x3002;&amp;#x5B83;&amp;#x4E00;&amp;#x5171;&amp;#x8FD0;&amp;#x884C;&amp;#x4E86;&amp;#x4E24;&amp;#x6B21;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x7684;&amp;#x503C;&amp;#x662F;&lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x6B21;&amp;#x7684;&amp;#x503C;&amp;#x662F;&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x8BC1;&amp;#x660E;&amp;#x4E86;&amp;#xFF0C;&amp;#x51FD;&amp;#x6570;f1&amp;#x4E2D;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;n&amp;#x4E00;&amp;#x76F4;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5728;f1&amp;#x8C03;&amp;#x7528;&amp;#x540E;&amp;#x88AB;&amp;#x81EA;&amp;#x52A8;&amp;#x6E05;&amp;#x9664;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x4F1A;&amp;#x8FD9;&amp;#x6837;&amp;#x5462;&amp;#xFF1F;&amp;#x539F;&amp;#x56E0;&amp;#x5C31;&amp;#x5728;&amp;#x4E8E;f1&amp;#x662F;f2&amp;#x7684;&amp;#x7236;&amp;#x51FD;&amp;#x6570;&amp;#xFF0C;&amp;#x800C;f2&amp;#x88AB;&amp;#x8D4B;&amp;#x7ED9;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5BFC;&amp;#x81F4;f2&amp;#x59CB;&amp;#x7EC8;&amp;#x5728;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#xFF0C;&amp;#x800C;f2&amp;#x7684;&amp;#x5B58;&amp;#x5728;&amp;#x4F9D;&amp;#x8D56;&amp;#x4E8E;f1&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x56E0;&amp;#x6B64;f1&amp;#x4E5F;&amp;#x59CB;&amp;#x7EC8;&amp;#x5728;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E0D;&amp;#x4F1A;&amp;#x5728;&amp;#x8C03;&amp;#x7528;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#xFF0C;&amp;#x88AB;&amp;#x5783;&amp;#x573E;&amp;#x56DE;&amp;#x6536;&amp;#x673A;&amp;#x5236;&amp;#xFF08;garbage collection&amp;#xFF09;&amp;#x56DE;&amp;#x6536;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x503C;&amp;#x5F97;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&lt;span class=&quot;string&quot;&gt;&amp;quot;nAdd=function(){n+=1}&amp;quot;&lt;/span&gt;&amp;#x8FD9;&amp;#x4E00;&amp;#x884C;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5728;nAdd&amp;#x524D;&amp;#x9762;&amp;#x6CA1;&amp;#x6709;&amp;#x4F7F;&amp;#x7528;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;&amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;nAdd&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5176;&amp;#x6B21;&amp;#xFF0C;nAdd&amp;#x7684;&amp;#x503C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#xFF08;anonymous &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;&amp;#xFF09;&amp;#xFF0C;&amp;#x800C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#x672C;&amp;#x8EAB;&amp;#x4E5F;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x95ED;&amp;#x5305;&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6240;&amp;#x4EE5;&lt;span class=&quot;title&quot;&gt;nAdd&lt;/span&gt;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&lt;span class=&quot;title&quot;&gt;setter&lt;/span&gt;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x5916;&amp;#x90E8;&amp;#x5BF9;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x8FDB;&amp;#x884C;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E94;&amp;#x3001;&amp;#x4F7F;&amp;#x7528;&amp;#x95ED;&amp;#x5305;&amp;#x7684;&amp;#x6CE8;&amp;#x610F;&amp;#x70B9;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1&amp;#xFF09;&amp;#x7531;&amp;#x4E8E;&amp;#x95ED;&amp;#x5305;&amp;#x4F1A;&amp;#x4F7F;&amp;#x5F97;&amp;#x51FD;&amp;#x6570;&amp;#x4E2D;&amp;#x7684;&amp;#x53D8;&amp;#x91CF;&amp;#x90FD;&amp;#x88AB;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5185;&amp;#x5B58;&amp;#x6D88;&amp;#x8017;&amp;#x5F88;&amp;#x5927;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4E0D;&amp;#x80FD;&amp;#x6EE5;&amp;#x7528;&amp;#x95ED;&amp;#x5305;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x4F1A;&amp;#x9020;&amp;#x6210;&amp;#x7F51;&amp;#x9875;&amp;#x7684;&amp;#x6027;&amp;#x80FD;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x5728;&lt;span class=&quot;title&quot;&gt;IE&lt;/span&gt;&amp;#x4E2D;&amp;#x53EF;&amp;#x80FD;&amp;#x5BFC;&amp;#x81F4;&amp;#x5185;&amp;#x5B58;&amp;#x6CC4;&amp;#x9732;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#xFF0C;&amp;#x5728;&amp;#x9000;&amp;#x51FA;&amp;#x51FD;&amp;#x6570;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5C06;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x5168;&amp;#x90E8;&amp;#x5220;&amp;#x9664;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&amp;#xFF09;&amp;#x95ED;&amp;#x5305;&amp;#x4F1A;&amp;#x5728;&amp;#x7236;&amp;#x51FD;&amp;#x6570;&amp;#x5916;&amp;#x90E8;&amp;#xFF0C;&amp;#x6539;&amp;#x53D8;&amp;#x7236;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x503C;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x628A;&amp;#x7236;&amp;#x51FD;&amp;#x6570;&amp;#x5F53;&amp;#x4F5C;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF08;&lt;span class=&quot;title&quot;&gt;object&lt;/span&gt;&amp;#xFF09;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x628A;&amp;#x95ED;&amp;#x5305;&amp;#x5F53;&amp;#x4F5C;&amp;#x5B83;&amp;#x7684;&amp;#x516C;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF08;&lt;span class=&quot;title&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Method&lt;/span&gt;&amp;#xFF09;&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x628A;&amp;#x5185;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x5F53;&amp;#x4F5C;&amp;#x5B83;&amp;#x7684;&amp;#x79C1;&amp;#x6709;&amp;#x5C5E;&amp;#x6027;&amp;#xFF08;&lt;span class=&quot;title&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;value&lt;/span&gt;&amp;#xFF09;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x5C0F;&amp;#x5FC3;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8981;&amp;#x968F;&amp;#x4FBF;&amp;#x6539;&amp;#x53D8;&amp;#x7236;&amp;#x51FD;&amp;#x6570;&amp;#x5185;&amp;#x90E8;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x503C;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x516D;&amp;#x3001;&amp;#x601D;&amp;#x8003;&amp;#x9898;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5982;&amp;#x679C;&amp;#x4F60;&amp;#x80FD;&amp;#x7406;&amp;#x89E3;&amp;#x4E0B;&amp;#x9762;&amp;#x4E24;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x5E94;&amp;#x8BE5;&amp;#x5C31;&amp;#x7B97;&amp;#x7406;&amp;#x89E3;&amp;#x95ED;&amp;#x5305;&amp;#x7684;&amp;#x8FD0;&amp;#x884C;&amp;#x673A;&amp;#x5236;&amp;#x4E86;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x7247;&amp;#x6BB5;&amp;#x4E00;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;title&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;name&lt;/span&gt; = &amp;quot;&lt;span class=&quot;title&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Window&lt;/span&gt;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;title&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;object&lt;/span&gt; = &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;name : &lt;span class=&quot;string&quot;&gt;&amp;quot;My Object&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;getNameFunc : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;span class=&quot;comment&quot;&gt;//alert(this.name);//My Object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;span class=&quot;comment&quot;&gt;// &amp;#x7A7A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;span class=&quot;comment&quot;&gt;// The Window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;alert(object.getNameFunc()()); &lt;span class=&quot;comment&quot;&gt;// &amp;#x7A7A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x7247;&amp;#x6BB5;&amp;#x4E8C;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&amp;quot;The Window&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; object = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;name : &lt;span class=&quot;string&quot;&gt;&amp;quot;My Object&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;getNameFunc : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; that = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; that.name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;&amp;#x3000;&amp;#x3000;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x3000;&amp;#x3000;alert(object.getNameFunc()()); &lt;span class=&quot;comment&quot;&gt;// My Object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x4E00;&amp;#x5C42;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E00;&amp;#x5C42;&amp;#xFF0C;&amp;#x4E0D;&amp;#x80FD;&amp;#x8DE8;&amp;#x5C42;&amp;#x8BBF;&amp;#x95EE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7BAD;&amp;#x5934;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A; &amp;#x7528;&amp;#x7BAD;&amp;#x5934;&amp;#x5B9A;&amp;#x4E49;&amp;#x51FD;&amp;#x6570;&amp;#x2026;&amp;#x2026;..&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var fun = x=&amp;gt;x*x
alert(fun(2))            //&amp;#x5355;&amp;#x53C2;&amp;#x6570;
var fun1 = ()=&amp;gt;2
alert(fun1())        //&amp;#x65E0;&amp;#x53C2;&amp;#x6570;
var fun2 = (x,y)=&amp;gt;x+y
alert(fun2(1,2))        //&amp;#x53CC;&amp;#x53C2;&amp;#x6570;
var fun3 = ()=&amp;gt;({a:12})
alert(fun3().a)          //&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x662F;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF08;&amp;#x8981;&amp;#x52A0;&amp;#x62EC;&amp;#x53F7;&amp;#xFF09;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;#x7BAD;&amp;#x5934;&amp;#x51FD;&amp;#x6570;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x683C;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4E00;&amp;#x79CD;&amp;#x50CF;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#xFF0C;&amp;#x53EA;&amp;#x5305;&amp;#x542B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8868;&amp;#x8FBE;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FDE;{ &amp;#x2026; }&amp;#x548C;return&amp;#x90FD;&amp;#x7701;&amp;#x7565;&amp;#x6389;&amp;#x4E86;&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x53EF;&amp;#x4EE5;&amp;#x5305;&amp;#x542B;&amp;#x591A;&amp;#x6761;&amp;#x8BED;&amp;#x53E5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x4E0D;&amp;#x80FD;&amp;#x7701;&amp;#x7565;{ &amp;#x2026; }&amp;#x548C;return&amp;#xFF1A;&lt;br&gt;&amp;#x7BAD;&amp;#x5934;&amp;#x51FD;&amp;#x6570;&amp;#x548C;&amp;#x533F;&amp;#x540D;&amp;#x51FD;&amp;#x6570;&amp;#x4E00;&amp;#x4E2A;&amp;#x660E;&amp;#x663E;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#x662F;this&amp;#x6307;&amp;#x9488;&amp;#x3002;&amp;#x7BAD;&amp;#x5934;&amp;#x51FD;&amp;#x6570;&amp;#x4E2D;&amp;#x7684;this&amp;#x6307;&amp;#x9488;&amp;#x7531;&amp;#x4E0A;&amp;#x4E0B;&amp;#x6587;&amp;#x51B3;&amp;#x5B9A;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x51FD;&amp;#x6570;&amp;#x4E2D;&amp;#x5B9A;&amp;#x4E49;&amp;#x51FD;&amp;#x6570;&lt;br&gt;&amp;#x5C06;&amp;#x51FD;&amp;#x6570;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&lt;br&gt;&amp;#x5C06;&amp;#x51FD;&amp;#x6570;&amp;#x4F5C;&amp;#x4E3A;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&amp;#x53D8;&amp;#x91CF;&amp;#x540D;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;$&amp;#x6216;&amp;#x8005; _&amp;#x5F00;&amp;#x5934; &lt;/li&gt;
&lt;li&gt;javascript &amp;#x6709;&amp;#x4E03;&amp;#
    
    </summary>
    
      <category term="JavaScript理论" scheme="http://yoursite.com/categories/JavaScript%E7%90%86%E8%AE%BA/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Android 开源项目学习之Retrofit2.0使用篇</title>
    <link href="http://yoursite.com/2016/10/30/Android-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE%E5%AD%A6%E4%B9%A0%E4%B9%8BRetrofit2-0%E4%BD%BF%E7%94%A8%E7%AF%87/"/>
    <id>http://yoursite.com/2016/10/30/Android-开源项目学习之Retrofit2-0使用篇/</id>
    <published>2016-10-30T15:12:30.000Z</published>
    <updated>2016-10-30T15:50:17.000Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5F15;&amp;#x5165;Retrofit &amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x5E93;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;io.reactivex:rxjava:1.1.0&amp;apos;&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;//RxJava &amp;#x76F8;&amp;#x5173;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;io.reactivex:rxandroid:1.1.0&amp;apos;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//RxJava &amp;#x76F8;&amp;#x5173;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4&amp;apos;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//Retrofit Rxjava Adapter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.squareup.retrofit2:retrofit:2.0.0-beta4&amp;apos;&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;//Retrofit &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.squareup.retrofit2:converter-gson:2.0.0-beta4&amp;apos;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//Gson Adapter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;com.google.code.gson:gson:2.6.2&amp;apos;&lt;/span&gt;                    &lt;span class=&quot;comment&quot;&gt;//Gson&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5B9A;&amp;#x4E49; Api &amp;#x63A5;&amp;#x53E3;&lt;br&gt;&amp;#x4E00;&amp;#x4E2A;Service&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E00;&amp;#x822C;&amp;#x6307;&amp;#x5B9A;&amp;#x4E86;http&amp;#x65B9;&amp;#x5F0F;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;get&amp;#x8FD8;&amp;#x662F;post&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;&amp;#x76F8;&amp;#x5BF9;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;OpenWeatherApi&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;weather&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Call&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;function&quot;&gt;getCityWeather&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) String id,&lt;span class=&quot;variable&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;appid&amp;quot;&lt;/span&gt;) String ApiId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x6CE8;&amp;#x91CA;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;url&lt;br&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x9762;&amp;#x8BF7;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF0C;&amp;#x4E2A;&amp;#x4EBA;&amp;#x8BA4;&amp;#x4E3A;&amp;#x603B;&amp;#x7ED3;&amp;#x5F97;&amp;#x5341;&amp;#x5206;&amp;#x5168;&amp;#x9762;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8F6C;&amp;#x8FC7;&amp;#x6765;&amp;#x4E86;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/stven_king/article/details/52372172&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/stven_king/article/details/52372172&lt;/a&gt;&lt;br&gt;&amp;#x6700;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;@GET @POST&lt;br&gt;&amp;#x8BF7;&amp;#x6C42;url&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF1A;&lt;br&gt;@Query&amp;#xFF0C;@QueryMap&amp;#xFF0C;@Field&amp;#xFF0C;@FieldMap&amp;#xFF0C;@FormUrlEncoded&amp;#xFF0C;@Path&amp;#xFF0C;@Url &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;( 1 ) GET &amp;#x8BF7;&amp;#x6C42;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface &lt;span class=&quot;constant&quot;&gt;GitHubService&lt;/span&gt; {&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x65E0;&amp;#x53C2;&amp;#x6570;&lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x5C11;&amp;#x6570;&amp;#x53C2;&amp;#x6570;&lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos(&lt;span class=&quot;variable&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;) long time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x53C2;&amp;#x6570;&amp;#x8F83;&amp;#x591A;&lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos(&lt;span class=&quot;variable&quot;&gt;@QueryMap&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;&amp;gt; params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;( 2 ) POST &amp;#x8BF7;&amp;#x6C42;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public interface &lt;span class=&quot;constant&quot;&gt;GitHubService&lt;/span&gt; {&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x65E0;&amp;#x53C2;&amp;#x6570;&lt;span class=&quot;variable&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x5C11;&amp;#x6570;&amp;#x53C2;&amp;#x6570;&lt;span class=&quot;variable&quot;&gt;@FormUrlEncoded&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos(&lt;span class=&quot;variable&quot;&gt;@Field&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;time&amp;quot;&lt;/span&gt;) long time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;&amp;#x53C2;&amp;#x6570;&amp;#x8F83;&amp;#x591A;&lt;span class=&quot;variable&quot;&gt;@FormUrlEncoded&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;@POST&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/stven0king/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;prompt&quot;&gt;&amp;gt;&amp;gt; &lt;/span&gt;listRepos(&lt;span class=&quot;variable&quot;&gt;@FieldMap&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;constant&quot;&gt;String&lt;/span&gt;&amp;gt; params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;@POST @GET&amp;#x591A;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;@FromUrlEncoded&amp;#x7684;&amp;#x6CE8;&amp;#x89E3;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x53BB;&amp;#x6389;@FromUrlEncoded&amp;#x5728;post&amp;#x8BF7;&amp;#x6C42;&amp;#x4E2D;&amp;#x4F7F;&amp;#x7528;@Field&amp;#x548C;@FieldMap&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x7A0B;&amp;#x5E8F;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;Java.lang.IllegalArgumentException: @Field parameters can only be used with form encoding. (parameter #1)&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;( 3 ) &amp;#x534A;&amp;#x9759;&amp;#x6001;&amp;#x7684;url &amp;#x5730;&amp;#x5740;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;GitHubService&lt;/span&gt; {&lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;users/{user}/repos&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Call&amp;lt;List&amp;lt;Repo&amp;gt;&amp;gt; &lt;span class=&quot;function&quot;&gt;listRepos&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Path&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;) String user);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;( 4 ) &amp;#x52A8;&amp;#x6001;&amp;#x7684;url&amp;#x5730;&amp;#x5740;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;GitHubService&lt;/span&gt; {&lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Call&amp;lt;List&amp;lt;Repo&amp;gt;&amp;gt; &lt;span class=&quot;function&quot;&gt;listRepos&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Url&lt;/span&gt; String user);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x521B;&amp;#x5EFA;retrofit&amp;#x5BF9;&amp;#x8C61;&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt; retrofit = new &lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .baseUrl(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://api.openweathermap.org/data/2.5/&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addConverterFactory(&lt;span class=&quot;type&quot;&gt;GsonConverterFactory&lt;/span&gt;.create&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .build&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x5728;Retrofit 2.0&amp;#x4E2D;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x6211;&amp;#x4EEC;&amp;#x81EA;&amp;#x5DF1;&amp;#x5F15;&amp;#x5165;Converter &amp;#x4E0D;&amp;#x7136;&amp;#x7684;&amp;#x8BDD;Retrofit &amp;#x53EA;&amp;#x80FD;&amp;#x63A5;&amp;#x6536;&amp;#x5B57;&amp;#x7B26;&amp;#x4E32;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;retrofit &amp;#x652F;&amp;#x6301;&amp;#x7684;json converter&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Gson&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-gson&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Jackson&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-jackson&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Moshi&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-moshi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Protobuf&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-protobuf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Wire&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-wire&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;Simple&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;XML&lt;/span&gt;: &lt;span class=&quot;tag&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.squareup&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.retrofit&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;:converter-simplexml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;retrofit&amp;#x5BF9;&amp;#x8C61;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;API&amp;#x63A5;&amp;#x53E3;&amp;#xFF1A;&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OpenWeatherApi mWeatherService = retrofit.&lt;span class=&quot;keyword&quot;&gt;create&lt;/span&gt;(OpenWeatherApi.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;5.&amp;#x4F7F;&amp;#x7528;&amp;#x4E0A;&amp;#x9762;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;API&amp;#x63A5;&amp;#x53E3;&amp;#x6765;&amp;#x8BBF;&amp;#x95EE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x670D;&amp;#x52A1;&amp;#xFF1A;&lt;br&gt;&amp;#xFF08;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3A;&amp;#x4E86;&amp;#x5B89;&amp;#x5168;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x8FD9;&amp;#x8FB9;&amp;#x7528;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F2A;appid&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x81EA;&amp;#x5DF1;&amp;#x7533;&amp;#x8BF7;&amp;#x7136;&amp;#x540E;&amp;#x66FF;&amp;#x6362;&amp;#xFF09;&lt;br&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; resultCall = mWeatherService.getCityWeather(&lt;span class=&quot;string&quot;&gt;&amp;quot;1790437&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;f8ddddd63c40c0bcb89&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;resultCall.enqueue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;WeatherResult&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body() == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Request Failed Response Code = &amp;quot;&lt;/span&gt;+ &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.code());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Templete = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getMain().getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;getDescription = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getWeather().&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getDescription());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onFailure(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, Throwable t) {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5F02;&amp;#x6B65;&amp;#x8BF7;&amp;#x6C42;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;resultCall.enqueue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;WeatherResult&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body() == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Request Failed Response Code = &amp;quot;&lt;/span&gt;+ &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.code());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Templete = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getMain().getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;getDescription = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getWeather().&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getDescription());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onFailure(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, Throwable t) {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x4EE5;&amp;#x4E0A;&amp;#x4EE3;&amp;#x7801;&amp;#x53D1;&amp;#x8D77;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x5E76;&amp;#x4ECE;response &amp;#x7684;response.body()&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x679C;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;onResponse&amp;#x548C;onFailure&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x540C;&amp;#x6B65;&amp;#x8BF7;&amp;#x6C42;&lt;br&gt;&amp;#x540C;&amp;#x6B65;&amp;#x8BF7;&amp;#x6C42;&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;execute&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x7531;&amp;#x4E8E;&amp;#x540C;&amp;#x6B65;&amp;#x65B9;&amp;#x5F0F;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6240;&amp;#x4EE5;&amp;#x4E0D;&amp;#x80FD;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x5426;&amp;#x5219;&amp;#x4F1A;&amp;#x9047;&amp;#x5230;NetworkOnMainThreadException&amp;#x5F02;&amp;#x5E38;&amp;#x3002;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;new &lt;span class=&quot;type&quot;&gt;AsyncTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt;&amp;gt;(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt; doInBackground(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;... params) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(params == null|| params[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == null||params[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]== null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt; retrofit = new &lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Builder&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .baseUrl(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://api.openweathermap.org/data/2.5/&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .addConverterFactory(&lt;span class=&quot;type&quot;&gt;GsonConverterFactory&lt;/span&gt;.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;OpenWeatherApi&lt;/span&gt; mWeatherService = retrofit.create(&lt;span class=&quot;type&quot;&gt;OpenWeatherApi&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final &lt;span class=&quot;type&quot;&gt;Call&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt; resultCall = mWeatherService.getCityWeather(params[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;],params[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = resultCall.execute();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } catch (&lt;span class=&quot;type&quot;&gt;IOException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    protected &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; onPostExecute(&lt;span class=&quot;type&quot;&gt;Response&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt; response) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(response == null || response.body() == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Templete = &amp;quot;&lt;/span&gt;+response.body().getMain().getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;getDescription = &amp;quot;&lt;/span&gt;+response.body().getWeather().get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getDescription());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}.execute(&lt;span class=&quot;string&quot;&gt;&amp;quot;1790437&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;f8ddddcb89&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;8 &amp;#x53D6;&amp;#x6D88;&amp;#x6B63;&amp;#x5728;&amp;#x8FDB;&amp;#x884C;&amp;#x4E2D;&amp;#x8BBF;&amp;#x95EE;&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;cancel&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;9 &amp;#x83B7;&amp;#x53D6;&amp;#x7ED3;&amp;#x679C;&amp;#x7684;&amp;#x5904;&amp;#x7406;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;Retrofit 1.9&amp;#x4E2D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x83B7;&amp;#x53D6;&amp;#x7684; response &amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x6210;&amp;#x5B9A;&amp;#x4E49;&amp;#x597D;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5219;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;failure&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5728;Retrofit 2.0&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E0D;&amp;#x7BA1; response &amp;#x662F;&amp;#x5426;&amp;#x80FD;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x3002;onResponse&amp;#x603B;&amp;#x662F;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x7ED3;&amp;#x679C;&amp;#x4E0D;&amp;#x80FD;&amp;#x88AB;&amp;#x89E3;&amp;#x6790;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;response.body()&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;null&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;response&amp;#x5B58;&amp;#x5728;&amp;#x4EC0;&amp;#x4E48;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;onResponse&amp;#x4E5F;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;response.errorBody().string()&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x4E3B;&amp;#x4F53;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;10 Retrofix &amp;#x7ED3;&amp;#x5408; Rxjava&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;OpenWeatherApis&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;@GET&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;weather&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Observable&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;function&quot;&gt;getCityWeather&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;) String id, &lt;span class=&quot;variable&quot;&gt;@Query&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;appid&amp;quot;&lt;/span&gt;) String ApiId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt; retrofit = new &lt;span class=&quot;type&quot;&gt;Retrofit&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Builder&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .baseUrl(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://api.openweathermap.org/data/2.5/&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addConverterFactory(&lt;span class=&quot;type&quot;&gt;GsonConverterFactory&lt;/span&gt;.create&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addCallAdapterFactory(&lt;span class=&quot;type&quot;&gt;RxJavaCallAdapterFactory&lt;/span&gt;.create&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .build&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;OpenWeatherApis&lt;/span&gt; openWeatherApis = retrofit.create(&lt;span class=&quot;type&quot;&gt;OpenWeatherApis&lt;/span&gt;.class);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = openWeatherApis.getCityWeather(&lt;span class=&quot;string&quot;&gt;&amp;quot;1790437&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;f8d8edded5c40c0bcbdd89&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.observeOn(&lt;span class=&quot;type&quot;&gt;AndroidSchedulers&lt;/span&gt;.mainThread())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeOn(&lt;span class=&quot;type&quot;&gt;Schedulers&lt;/span&gt;.io())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribe(new &lt;span class=&quot;type&quot;&gt;Action1&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt;&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; call(&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt; weatherResult) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Templete = &amp;quot;&lt;/span&gt;+weatherResult.getMain().getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;getDescription = &amp;quot;&lt;/span&gt;+weatherResult.getWeather().get(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getDescription());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;11 &amp;#x6DFB;&amp;#x52A0;log&amp;#x652F;&amp;#x6301;&lt;br&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HttpLoggingInterceptor httpLoggingInterceptor = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HttpLoggingInterceptor();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;httpLoggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OkHttpClient okHttpClient = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OkHttpClient.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addInterceptor(httpLoggingInterceptor)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Retrofit retrofit = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Retrofit.Builder()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .baseUrl(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://api.openweathermap.org/data/2.5/&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addConverterFactory(GsonConverterFactory.create())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .client(okHttpClient)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OpenWeatherApi mWeatherService = retrofit.create(OpenWeatherApi.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;final &lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; resultCall = mWeatherService.getCityWeather(&lt;span class=&quot;string&quot;&gt;&amp;quot;1790437&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;f8d8ead8299f963abcded5c40c0bcb89&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;resultCall.enqueue(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Callback&amp;lt;WeatherResult&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onResponse(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;Response&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body() == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Request Failed Response Code = &amp;quot;&lt;/span&gt;+ &lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.code());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Templete = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getMain().getTemp());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.i(&lt;span class=&quot;string&quot;&gt;&amp;quot;xiaohai.lin&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;getDescription = &amp;quot;&lt;/span&gt;+&lt;span class=&quot;built_in&quot;&gt;response&lt;/span&gt;.body().getWeather().&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getDescription());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; void onFailure(&lt;span class=&quot;keyword&quot;&gt;Call&lt;/span&gt;&amp;lt;WeatherResult&amp;gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt;, Throwable t) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;});&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;11 Retrofix &amp;#x7ED3;&amp;#x5408; Realm:&lt;/p&gt;
&lt;p&gt;Realm &amp;#x662F;&amp;#x6211;&amp;#x4E2A;&amp;#x4EBA;&amp;#x7684;&amp;#x559C;&amp;#x597D;&amp;#xFF0C;&amp;#x662F;&amp;#x7528;&amp;#x5F97;&amp;#x6700;&amp;#x723D;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;nosql&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x6CA1;&amp;#x6709;&amp;#x4E4B;&amp;#x4E00;&amp;#x3002;&lt;br&gt;Realm &amp;#x53EF;&amp;#x4EE5;&amp;#x4E0E; Retrofit 1.x &amp;#x548C; 2.x &amp;#x65E0;&amp;#x7F1D;&amp;#x914D;&amp;#x5408;&amp;#x5DE5;&amp;#x4F5C;&amp;#x3002;&amp;#x4F46;&amp;#x6CE8;&amp;#x610F; Retrofit &amp;#x4E0D;&amp;#x4F1A;&amp;#x81EA;&amp;#x52A8;&amp;#x5C06;&amp;#x5BF9;&amp;#x8C61;&amp;#x5B58;&amp;#x5165; Realm&amp;#x3002;&lt;br&gt;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528; Realm.copyToRealm() &amp;#x6216; Realm.copyToRealmOrUpdate() &amp;#x6765;&amp;#x5C06;&amp;#x5B83;&amp;#x4EEC;&amp;#x5B58;&amp;#x5165; Realm&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;realm.beginTransaction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;WeatherResult&lt;/span&gt; realmWhether = realm.copyToRealmOrUpdate(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;realm.commitTransaction();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x5F15;&amp;#x5165;Retrofit &amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x5E93;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android 开源源码" scheme="http://yoursite.com/tags/Android-%E5%BC%80%E6%BA%90%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 开源框架源码分析之picasso</title>
    <link href="http://yoursite.com/2016/10/30/Android-%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B8%80-picasso/"/>
    <id>http://yoursite.com/2016/10/30/Android-开源框架源码分析一-picasso/</id>
    <published>2016-10-30T14:24:18.000Z</published>
    <updated>2016-10-30T15:50:56.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x5F00;&amp;#x59CB;&amp;#x6211;&amp;#x5C06;&amp;#x5BF9;&amp;#x76EE;&amp;#x524D;&amp;#x8F83;&amp;#x4E3A;&amp;#x6D41;&amp;#x884C;&amp;#x7684;&amp;#x5F00;&amp;#x6E90;&amp;#x5E93;&amp;#x4EE5;&amp;#x53CA;&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x5E0C;&amp;#x671B;&amp;#x80FD;&amp;#x591F;&amp;#x901A;&amp;#x8FC7;&amp;#x5B66;&amp;#x4E60;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6E90;&amp;#x7801;&amp;#x80CC;&amp;#x540E;&amp;#x7684;&amp;#x8BBE;&amp;#x8BA1;&amp;#x601D;&amp;#x60F3;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x8BA9;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x7F16;&amp;#x7A0B;&amp;#x548C;&amp;#x8BBE;&amp;#x8BA1;&amp;#x80FD;&amp;#x529B;&amp;#x6709;&amp;#x6240;&amp;#x63D0;&amp;#x9AD8;&amp;#x3002;&lt;br&gt;&amp;#x5E9F;&amp;#x8BDD;&amp;#x4E0D;&amp;#x591A;&amp;#x8BF4;&amp;#xFF0C;&amp;#x5207;&amp;#x5165;&amp;#x6B63;&amp;#x9898;&amp;#x3002;&amp;#x4ECA;&amp;#x5929;&amp;#x7ED9;&amp;#x5927;&amp;#x5BB6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;picasso&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x56FE;&amp;#x7247;&amp;#x7F13;&amp;#x5B58;&amp;#x5E93;&amp;#xFF0C;&amp;#x60F3;&amp;#x5FC5;&amp;#x5F88;&amp;#x591A;&amp;#x4EBA;&amp;#x5BF9;&amp;#x4ED6;&amp;#x90FD;&amp;#x5F88;&amp;#x719F;&amp;#x6089;&amp;#x4E86;&amp;#xFF0C;&amp;#x5B83;&amp;#x652F;&amp;#x6301;&amp;#x4E09;&amp;#x7EA7;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x6781;&amp;#x4E3A;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x4E5F;&amp;#x652F;&amp;#x6301;&amp;#x5341;&amp;#x5206;&amp;#x7075;&amp;#x6D3B;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x5730;&amp;#x5740;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5230;&amp;#x6E90;&amp;#x7801; &lt;a href=&quot;http://square.github.io/picasso/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://square.github.io/picasso/&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5206;&amp;#x6790;&amp;#x60C5;&amp;#x666F;&amp;#x4ECB;&amp;#x7ECD;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x4E00;&amp;#x4E2A;&amp;#x6700;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x60C5;&amp;#x666F;&amp;#x6765;&amp;#x5BF9;&amp;#x6E90;&amp;#x7801;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Picasso.&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt;(context).load(&lt;span class=&quot;string&quot;&gt;&amp;quot;http://image.baidu.com/search/detail?z=0&amp;amp;ipn=&amp;quot;&lt;/span&gt;).&lt;span class=&quot;keyword&quot;&gt;into&lt;/span&gt;(imageView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x6267;&amp;#x884C;&amp;#x4ECE;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E0A;&amp;#x52A0;&amp;#x8F7D;&amp;#x5730;&amp;#x5740;&amp;#x4E3A;&lt;a href=&quot;http://image.baidu.com/search/detail?z=0&amp;amp;ipn=&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://image.baidu.com/search/detail?z=0&amp;amp;ipn=&lt;/a&gt; &amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x5230;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;imageView&amp;#x63A7;&amp;#x4EF6;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x7EC4;&amp;#x7EC7;&amp;#x7ED3;&amp;#x6784;&amp;#x4ECB;&amp;#x7ECD;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5206;&amp;#x6790;&amp;#x6E90;&amp;#x7801;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x6574;&amp;#x4E2A;&amp;#x5F00;&amp;#x6E90;&amp;#x5E93;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7EC4;&amp;#x7EC7;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5927;&amp;#x5BB6;&amp;#x5982;&amp;#x679C;&amp;#x5C06;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5230;&amp;#x672C;&amp;#x5730;&amp;#x540E;&amp;#x4F1A;&amp;#x611F;&amp;#x5230;&amp;#x5931;&amp;#x671B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E2A;&amp;#x4EBA;&amp;#x8BA4;&amp;#x4E3A;picasso&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x7EC4;&amp;#x7EC7;&amp;#x662F;&amp;#x6781;&amp;#x4E3A;&amp;#x4E0D;&amp;#x89C4;&amp;#x8303;&amp;#x7684;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x6E90;&amp;#x7801;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;package&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6211;&amp;#x6839;&amp;#x636E;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x5C06;&amp;#x5176;&amp;#x6E90;&amp;#x7801;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x65B0;&amp;#x7684;&amp;#x7EC4;&amp;#x7EC7;&amp;#x3002;&amp;#x603B;&amp;#x5171;&amp;#x5206;&amp;#x6210;5&amp;#x4E2A;&amp;#x5305;&amp;#xFF0C;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/10/30/Android-&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E00;-picasso/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;action&amp;#x5305;&amp;#x5305;&amp;#x542B;&amp;#x6709;&amp;#xFF1A;Action&amp;#x62BD;&amp;#x8C61;&amp;#x7C7B;&amp;#xFF0C;FetchAction&amp;#xFF0C;GetAction&amp;#xFF0C;ImageViewAction&amp;#xFF0C;RemoteViewsAction&amp;#xFF0C;Target&amp;#xFF0C;TargetAction&amp;#x3002;&lt;/li&gt;
&lt;li&gt;requst&amp;#x5305;&amp;#x4E2D;&amp;#x5305;&amp;#x542B;&amp;#x7684;&amp;#x662F;&amp;#xFF1A;Request&amp;#xFF0C;RequestCreator&amp;#xFF0C;DeferredRequestCreator&lt;/li&gt;
&lt;li&gt;requesthandler&amp;#x5305;&amp;#x4E2D;&amp;#x5305;&amp;#x542B;&amp;#x7684;&amp;#x662F;&amp;#xFF1A;AssetRequestHandler&amp;#xFF0C;ContactsPhotoRequestHandler&amp;#xFF0C;ContentStreamRequestHandler&amp;#xFF0C;FileRequestHandler&amp;#xFF0C;MediaStoreRequestHandler&amp;#xFF0C;NetworkRequestHandler&amp;#xFF0C;ResourceRequestHandler&amp;#xFF0C;RequestHandler&lt;/li&gt;
&lt;li&gt;core&amp;#x5305;&amp;#x4E2D;&amp;#x5305;&amp;#x542B;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF1A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2016/10/30/Android-&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E00;-picasso/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x8FD9;&amp;#x6837;&amp;#x5206;&amp;#x5305;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x5B8C;&amp;#x540E;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x4EE5;&amp;#x53CA;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7C7B;&amp;#x5BF9;&amp;#x804C;&amp;#x8D23;&amp;#x6709;&amp;#x8F83;&amp;#x4E3A;&amp;#x6DF1;&amp;#x5165;&amp;#x4E86;&amp;#x89E3;&amp;#x540E;&amp;#x8FDB;&amp;#x884C;&amp;#x601D;&amp;#x8003;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;3 .&amp;#x8BE6;&amp;#x7EC6;&amp;#x6D41;&amp;#x7A0B;&amp;#x4ECB;&amp;#x7ECD;&lt;/p&gt;
&lt;p&gt;3.1 with  &amp;#x6D41;&amp;#x7A0B;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;with&amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x5168;&amp;#x5C40;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;Picasso&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x6240;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x4E00;&amp;#x822C;&amp;#x6765;&amp;#x8BF4;&amp;#x80FD;&amp;#x591F;&amp;#x9002;&amp;#x5408;&amp;#x4E8E;&amp;#x7EDD;&amp;#x5927;&amp;#x591A;&amp;#x6570;&amp;#x5E94;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x6EE1;&amp;#x8DB3;&amp;#x53EF;&amp;#x4EE5;&amp;#x81EA;&amp;#x5DF1;&amp;#x901A;&amp;#x8FC7;Builder&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;setSingletonInstance&amp;#x6765;&amp;#x6CE8;&amp;#x5165;&amp;#x6211;&amp;#x4EEC;&amp;#x81EA;&amp;#x5DF1;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;Picasso&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x9700;&amp;#x8981;&amp;#x5728;with&amp;#x65B9;&amp;#x6CD5;&amp;#x524D;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;picasso&amp;#x4F7F;&amp;#x7528;&amp;#x5BF9;&amp;#x662F;&amp;#x5355;&amp;#x4F8B;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;picasso&amp;#x9ED8;&amp;#x8BA4;&amp;#x5BF9;&amp;#x914D;&amp;#x7F6E;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;(1) &amp;#x7F13;&amp;#x5B58;&amp;#x4F7F;&amp;#x7528;LRU &amp;#x7F13;&amp;#x5B58;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x7F13;&amp;#x5B58;&amp;#x5927;&amp;#x5C0F;&amp;#x5360;&amp;#x7528;&amp;#x5E94;&amp;#x7528;&amp;#x53EF;&amp;#x7528;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;15% RAM&lt;br&gt;(2) &amp;#x786C;&amp;#x76D8;&amp;#x7F13;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x5360;&amp;#x7528;&amp;#x624B;&amp;#x673A;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;2%&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5927;&amp;#x5C0F;&amp;#x4E0D;&amp;#x5C0F;&amp;#x4E8E;5M&amp;#xFF0C;&amp;#x6700;&amp;#x5927;50MB&amp;#x3002;&lt;br&gt;(3) &amp;#x5177;&amp;#x6709;3&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7528;&amp;#x4E8E;&amp;#x78C1;&amp;#x76D8;&amp;#x548C;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BBF;&amp;#x95EE;&lt;br&gt;(4) &amp;#x7F13;&amp;#x5B58;&amp;#x4F4D;&amp;#x4E8E;&amp;#x5E94;&amp;#x7528;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x5BF9;picasso-cache&amp;#x76EE;&amp;#x5F55;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x5B83;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5B8C;&amp;#x6210;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5B83;&amp;#x4F7F;&amp;#x7528;&amp;#x5EFA;&amp;#x9020;&amp;#x8005;&amp;#x6A21;&amp;#x5F0F;&amp;#x7ED3;&amp;#x5408;&amp;#x5355;&amp;#x4F8B;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;picasso&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x4E4B;&amp;#x6240;&amp;#x4EE5;&amp;#x91C7;&amp;#x7528;&amp;#x5EFA;&amp;#x9020;&amp;#x8005;&amp;#x6A21;&amp;#x5F0F;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x79CD;&amp;#x6A21;&amp;#x5F0F;&amp;#x80FD;&amp;#x591F;&amp;#x7ED9;&amp;#x914D;&amp;#x7F6E;&amp;#x53C2;&amp;#x6570;&amp;#x591A;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x6784;&amp;#x5EFA;&amp;#x5E26;&amp;#x6765;&amp;#x5F88;&amp;#x5927;&amp;#x7684;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight d&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Picasso &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;@NonNull&lt;/span&gt; Context context) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (context == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;context == null&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (singleton == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (Picasso.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (singleton == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        singleton = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Builder(context).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; singleton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x80FD;&amp;#x4ECE;Builder&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4EC0;&amp;#x4E48;&amp;#x4FE1;&amp;#x606F;&amp;#x5462;&amp;#xFF1F;&amp;#x4E00;&amp;#x822C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;Builder&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x5411;&amp;#x5916;&amp;#x9762;&amp;#x66B4;&amp;#x9732;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5185;&amp;#x90E8;&amp;#x7EC4;&amp;#x4EF6;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#xFF08;&amp;#x6B64;&amp;#x63A5;&amp;#x53E3;&amp;#x975E;&amp;#x5F7C;&amp;#x63A5;&amp;#x53E3;&amp;#xFF09;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x66B4;&amp;#x9732;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x6765;&amp;#x6CE8;&amp;#x5165;&amp;#x6211;&amp;#x4EEC;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;Picasso &amp;#x7684; Builder&amp;#x4E5F;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x5B83;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x6CE8;&amp;#x5165;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&amp;#xFF0C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#xFF0C;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF0C;&amp;#x5185;&amp;#x90E8;&amp;#x4E8B;&amp;#x4EF6;&amp;#x76D1;&amp;#x542C;&amp;#x3002;&amp;#x5B83;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;builder&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x7528;&amp;#x5904;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x5168;&amp;#x90E8;&amp;#x8BBE;&amp;#x7F6E;&amp;#x540E;&amp;#xFF0C;&amp;#x68C0;&amp;#x67E5;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x7EC4;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x8BBE;&amp;#x7F6E;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x521B;&amp;#x5EFA;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7EC4;&amp;#x4EF6;&amp;#x6765;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Builder&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; final Context context;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0A;&amp;#x4E0B;&amp;#x6587;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Downloader downloader;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ExecutorService service;              &lt;span class=&quot;comment&quot;&gt;//&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Cache cache;                          &lt;span class=&quot;comment&quot;&gt;//&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Listener listener;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; RequestTransformer transformer;       &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;RequestHandler&amp;gt; requestHandlers; &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Bitmap.Config defaultBitmapConfig;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x56FE;&amp;#x50CF;&amp;#x914D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; boolean indicatorsEnabled;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x5426;&amp;#x663E;&amp;#x793A;&amp;#x6307;&amp;#x793A;&amp;#x6807;&amp;#x5FD7;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; boolean loggingEnabled;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x5426;&amp;#x5F00;&amp;#x542F;Log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**Builder&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Builder&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Context context&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (context == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Context must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context = context.getApplicationContext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&amp;#x6307;&amp;#x5B9A;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7528;&amp;#x4E8E;&amp;#x89E3;&amp;#x7801;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x7684;BitmapConfig*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;defaultBitmapConfig&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Bitmap.Config bitmapConfig&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmapConfig == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Bitmap config must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.defaultBitmapConfig = bitmapConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&amp;#x6307;&amp;#x5B9A;&amp;#x7528;&amp;#x4E8E;&amp;#x4E0B;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;downloader&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Downloader downloader&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (downloader == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Downloader must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.downloader != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Downloader already set.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.downloader = downloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x6307;&amp;#x5B9A;&amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x4E0B;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x540E;&amp;#x53F0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;executor&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull ExecutorService executorService&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (executorService == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Executor service must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.service != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Executor service already set.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.service = executorService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x6307;&amp;#x5B9A;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6700;&amp;#x8FD1;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x7F13;&amp;#x5B58; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;memoryCache&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Cache memoryCache&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (memoryCache == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Memory cache must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cache != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Memory cache already set.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cache = memoryCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x6307;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x76D1;&amp;#x542C;&amp;#x4E8B;&amp;#x4EF6;&amp;#x7684;&amp;#x76D1;&amp;#x542C;&amp;#x5668; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;listener&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Listener listener&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Listener must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listener != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Listener already set.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listener = listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&amp;#x6307;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x6240;&amp;#x6709;&amp;#x5230;&amp;#x6765;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FDB;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;requestTransformer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull RequestTransformer transformer&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformer == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transformer must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transformer != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transformer already set.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.transformer = transformer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x6DFB;&amp;#x52A0;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;addRequestHandler&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull RequestHandler requestHandler&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestHandler == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;RequestHandler must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestHandlers == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      requestHandlers = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;RequestHandler&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestHandlers.contains(requestHandler)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;RequestHandler already registered.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    requestHandlers.add(requestHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x662F;&amp;#x5426;&amp;#x663E;&amp;#x793A;&amp;#x8C03;&amp;#x8BD5;&amp;#x7684;&amp;#x6807;&amp;#x5FD7;&amp;#x5728;&amp;#x56FE;&amp;#x7247;&amp;#x4E0A; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;indicatorsEnabled&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;boolean enabled&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.indicatorsEnabled = enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x662F;&amp;#x5426;&amp;#x663E;&amp;#x793A;Log*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Builder &lt;span class=&quot;title&quot;&gt;loggingEnabled&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;boolean enabled&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.loggingEnabled = enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/** &amp;#x914D;&amp;#x7F6E;&amp;#x4E86;&amp;#x8BF8;&amp;#x5982;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;memory cache&amp;#x7B49;&amp;#xFF1A; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Picasso &lt;span class=&quot;title&quot;&gt;build&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x67D0;&amp;#x4E9B;&amp;#x6CA1;&amp;#x6709;&amp;#x8FDB;&amp;#x884C;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Context context = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (downloader == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      downloader = Utils.createDefaultDownloader(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cache == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cache = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LruCache(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      service = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PicassoExecutorService();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transformer == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      transformer = RequestTransformer.IDENTITY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Stats stats = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Stats(cache);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Dispatcher dispatcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Dispatcher(context, service, HANDLER, downloader, cache, stats);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Picasso(context, dispatcher, cache, listener, transformer, requestHandlers, stats,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        defaultBitmapConfig, indicatorsEnabled, loggingEnabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;builder&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x4EEC;&amp;#x6CA1;&amp;#x6709;&amp;#x6CE8;&amp;#x5165;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;createDefaultDownloader&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x79CD;&amp;#x5199;&amp;#x6CD5;&amp;#x4E5F;&amp;#x662F;&amp;#x6BD4;&amp;#x8F83;&amp;#x503C;&amp;#x5F97;&amp;#x501F;&amp;#x9274;&amp;#x7684;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;create&amp;#x65B9;&amp;#x6CD5;&amp;#x53EA;&amp;#x662F;&amp;#x5728;&amp;#x5E94;&amp;#x7528;&amp;#x7F13;&amp;#x5B58;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;picasso-cache&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x76EE;&amp;#x5F55;&amp;#x3002;&amp;#x540E;&amp;#x7EED;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x90FD;&amp;#x7F13;&amp;#x5B58;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x3002;&lt;br&gt;/**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4F18;&amp;#x5148;&amp;#x9009;&amp;#x7528;OKHttp3.&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;OkHttp&amp;#xFF0C;&amp;#x518D;&amp;#x6CA1;&amp;#x6709;&amp;#x90A3;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;Android &amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x65B9;&amp;#x5F0F;&lt;br&gt;*/&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Downloader &lt;span class=&quot;title&quot;&gt;createDefaultDownloader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (SDK_INT &amp;gt;= GINGERBREAD) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Class.forName(&lt;span class=&quot;string&quot;&gt;&amp;quot;okhttp3.OkHttpClient&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x4F1A;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x76EE;&amp;#x5F55;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OkHttp3DownloaderCreator.&lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(context)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException ignored) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Class.forName(&lt;span class=&quot;string&quot;&gt;&amp;quot;com.squareup.okhttp.OkHttpClient&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x4F1A;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x76EE;&amp;#x5F55;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OkHttpDownloaderCreator.&lt;span class=&quot;title&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(context)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ClassNotFoundException ignored) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; UrlConnectionDownloader(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x8BBE;&amp;#x7F6E;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LruCache&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Context context)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(Utils.calculateMemoryCacheSize(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6839;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x5927;&amp;#x5806;&amp;#x6808;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x5219;&amp;#x83B7;&amp;#x53D6;&amp;#x5927;&amp;#x5806;&amp;#x6808;&amp;#x5B58;&amp;#x50A8;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x83B7;&amp;#x53D6;&amp;#x6807;&amp;#x51C6;&amp;#x5806;&amp;#x6808;&amp;#x5B58;&amp;#x50A8;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;&amp;#x5927;&amp;#x6982;15%&amp;#x7684;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x4F5C;&amp;#x4E3A;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calculateMemoryCacheSize&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ActivityManager am = getService(context, ACTIVITY_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  boolean largeHeap = (context.getApplicationInfo().flags &amp;amp; FLAG_LARGE_HEAP) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; memoryClass = am.getMemoryClass();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (largeHeap &amp;amp;&amp;amp; SDK_INT &amp;gt;= HONEYCOMB) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    memoryClass = ActivityManagerHoneycomb.getLargeMemoryClass(am);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Target ~15% of the available heap.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) (&lt;span class=&quot;number&quot;&gt;1024L&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1024L&lt;/span&gt; * memoryClass / &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x7684;&amp;#x8BBE;&amp;#x7F6E;&amp;#xFF1A;&lt;br&gt;&amp;#x5B83;&amp;#x662F;&amp;#x7EE7;&amp;#x627F;&amp;#x81EA;ThreadPoolExcutor&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PicassoExecutorService&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;type&quot;&gt;PicassoExecutorService&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * corePoolSize  &amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x4E2D;&amp;#x5BB9;&amp;#x7EB3;&amp;#x7684;&amp;#x6838;&amp;#x5FC3;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6570;&amp;#x76EE;&amp;#xFF0C;&amp;#x5373;&amp;#x4F7F;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x7A7A;&amp;#x95F2;&amp;#x7684;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x88AB;&amp;#x4FDD;&amp;#x7559;&amp;#x5728;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x4E2D;&amp;#xFF0C;&amp;#x9664;&amp;#x975E;allowCoreThreadTimeOut&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * maximumPoolSize  &amp;#x6700;&amp;#x5927;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * keepAliveTime    &amp;#x5B58;&amp;#x6D3B;&amp;#x65F6;&amp;#x95F4; &amp;#x5F53;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x4E2D;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6570;&amp;#x5927;&amp;#x4E8E;&amp;#x6838;&amp;#x5FC3;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6570;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5728;&amp;#x8FBE;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x7B49;&amp;#x5F85;&amp;#x65B0;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x7A7A;&amp;#x95F2;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x7EC8;&amp;#x6B62;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * unit  keepAliveTime &amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x5355;&amp;#x4F4D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * workQueue &amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x4EFB;&amp;#x52A1;&amp;#x6267;&amp;#x884C;&amp;#x524D;&amp;#x4FDD;&amp;#x5B58;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x961F;&amp;#x5217;&amp;#x5C06;&amp;#x53EA;&amp;#x4F1A;&amp;#x4FDD;&amp;#x7559;&amp;#x901A;&amp;#x8FC7;execute&amp;#x65B9;&amp;#x6CD5;&amp;#x63D0;&amp;#x4EA4;&amp;#x7684;Runnable&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   * threadFactory &amp;#x5728;excutor&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;DEFAULT_THREAD_COUNT&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;DEFAULT_THREAD_COUNT&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;TimeUnit&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;MILLISECONDS&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;PriorityBlockingQueue&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Runnable&lt;/span&gt;&amp;gt;(), &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Utils&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;PicassoThreadFactory&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PicassoThreadFactory&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ThreadFactory&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;NullableProblems&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public &lt;span class=&quot;type&quot;&gt;Thread&lt;/span&gt; newThread(&lt;span class=&quot;type&quot;&gt;Runnable&lt;/span&gt; r) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;PicassoThread&lt;/span&gt;(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; static &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PicassoThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  public &lt;span class=&quot;type&quot;&gt;PicassoThread&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Runnable&lt;/span&gt; r) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(r);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt; public void run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Process&lt;/span&gt;.setThreadPriority(&lt;span class=&quot;type&quot;&gt;THREAD_PRIORITY_BACKGROUND&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF1A;&lt;br&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x4F1A;&amp;#x5728;&amp;#x6BCF;&amp;#x6B21;&amp;#x8BF7;&amp;#x6C42;&amp;#x88AB;&amp;#x63D0;&amp;#x4EA4;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x7528;&amp;#x4E8E;&amp;#x4FEE;&amp;#x6539;&amp;#x67D0;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x505A;&amp;#x4EFB;&amp;#x4F55;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5C06;&amp;#x539F;&amp;#x5148;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight vbscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; interface RequestTransformer {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt; transformRequest(&lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  RequestTransformer IDENTITY = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RequestTransformer() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt; transformRequest(&lt;span class=&quot;built_in&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return &lt;span class=&quot;built_in&quot;&gt;request&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Picasso &amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EDF;&amp;#x8BA1;&amp;#x5BF9;&amp;#x8C61;States&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x7EDF;&amp;#x8BA1;Picasso&amp;#x4E2D;&amp;#x7684;&amp;#x5404;&amp;#x79CD;&amp;#x4E8B;&amp;#x4EF6;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x5BF9;&amp;#x8C61;&amp;#x53EA;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x5E26;&amp;#x6709;&amp;#x6D88;&amp;#x606F;&amp;#x5904;&amp;#x7406;&amp;#x80FD;&amp;#x529B;&amp;#x7684;HandlerThread&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;Cache&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;Handler&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HandlerThread statsThread;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Cache cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Handler &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5B83;&amp;#x7684;&amp;#x7EDF;&amp;#x8BA1;&amp;#x5BF9;&amp;#x8C61;&amp;#x6570;&amp;#x636E;&amp;#x6709;&amp;#xFF1A;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cacheHits;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x7F13;&amp;#x5B58;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cacheMisses;                  &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x5176;&amp;#x4ED6;&amp;#x65B9;&amp;#x5F0F;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; totalDownloadSize;              &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#x603B;&amp;#x6570;&amp;#x636E;&amp;#x91CF;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; totalOriginalBitmapSize;              &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7EDF;&amp;#x8BA1;&amp;#x603B;&amp;#x56FE;&amp;#x7247;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; totalTransformedBitmapSize;           &lt;span class=&quot;comment&quot;&gt;//&amp;#x56FE;&amp;#x50CF;&amp;#x8F6C;&amp;#x6362;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; averageDownloadSize;                  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5E73;&amp;#x5747;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; averageOriginalBitmapSize;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5E73;&amp;#x5747;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x56FE;&amp;#x7247;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; averageTransformedBitmapSize;         &lt;span class=&quot;comment&quot;&gt;//&amp;#x5E73;&amp;#x5747;&amp;#x8F6C;&amp;#x6362;&amp;#x540E;&amp;#x56FE;&amp;#x7247;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; downloadCount;                 &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x8F7D;&amp;#x6B21;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; originalBitmapCount;             &lt;span class=&quot;comment&quot;&gt;//&amp;#x539F;&amp;#x59CB;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; transformedBitmapCount;                                 &lt;span class=&quot;comment&quot;&gt;//&amp;#x8F6C;&amp;#x6362;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&amp;#x5916;&amp;#x754C;&amp;#x901A;&amp;#x8FC7;State&amp;#x5BF9;&amp;#x8C61;&amp;#x8C03;&amp;#x7528;dispatchXXXX&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;dispatch&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5F80;Handler&amp;#x4E2D;&amp;#x53D1;&amp;#x9001;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x8C03;&amp;#x7528;performXXXX&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/10/30/Android-&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E00;-picasso/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;Dispatcher&amp;#xFF0C;&amp;#x5B83;&amp;#x8D1F;&amp;#x8D23;&amp;#x5206;&amp;#x53D1;Action&amp;#x7684;&amp;#xFF1A;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x5979;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Dispatcher(Context context, ExecutorService service, Handler mainThreadHandler,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Downloader downloader, Cache cache, Stats stats) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5206;&amp;#x53D1;&amp;#x7EBF;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dispatcherThread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DispatcherThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dispatcherThread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5206;&amp;#x53D1;Handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.handler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DispatcherHandler(dispatcherThread.getLooper(), &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;Handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mainThreadHandler = mainThreadHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.service = service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.hunterMap = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, BitmapHunter&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.failedActions = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WeakHashMap&amp;lt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;, Action&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pausedActions = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WeakHashMap&amp;lt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;, Action&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.pausedTags = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.downloader = downloader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cache = cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.stats = stats;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.batch = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;BitmapHunter&amp;gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.airplaneMode = Utils.isAirplaneModeOn(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.scansNetworkChanges = hasPermission(context, Manifest.permission.ACCESS_NETWORK_STATE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7F51;&amp;#x7EDC;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.receiver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NetworkBroadcastReceiver(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  receiver.register();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; &amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x8FD8;&amp;#x662F;&amp;#x548C;State&amp;#x5BF9;&amp;#x8C61;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x4E5F;&amp;#x662F;&amp;#x7531;HandlerThread + Handler&amp;#x6784;&amp;#x6210;&amp;#xFF0C;&amp;#x5916;&amp;#x90E8;&amp;#x8C03;&amp;#x7528;dispatchXXX&amp;#x65B9;&amp;#x6CD5;&amp;#x4F20;&amp;#x9012;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5728;Handler&amp;#x4E2D;&amp;#x5468;&amp;#x8F6C;&amp;#x4E0B;&amp;#x6700;&amp;#x7EC8;&amp;#x8C03;&amp;#x7528;performXXXX&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5177;&amp;#x4F53;&amp;#x6D89;&amp;#x53CA;&amp;#x5230;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x518D;&amp;#x91CD;&amp;#x70B9;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;br&gt;&amp;#x5728;build&amp;#x6700;&amp;#x540E;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Picass&amp;#x5BF9;&amp;#x8C61;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;Picass&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;/**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Picasso &amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1A;&lt;/li&gt;
&lt;li&gt;RequestTransformer:&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&lt;/li&gt;
&lt;li&gt;Dispatcher&amp;#xFF1A;&amp;#x8BF7;&amp;#x6C42;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&lt;/li&gt;
&lt;li&gt;allRequestHandlers:&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&lt;/li&gt;
&lt;li&gt;Cache &amp;#x7F13;&amp;#x5B58;&amp;#x5668;&lt;/li&gt;
&lt;li&gt;Stats &amp;#x4E8B;&amp;#x4EF6;&amp;#x7EDF;&amp;#x8BA1;&lt;/li&gt;
&lt;li&gt;CleanupThread &amp;#x6E05;&amp;#x9664;&amp;#x7EBF;&amp;#x7A0B;&lt;br&gt;*/&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Picasso(Context context, Dispatcher dispatcher, Cache cache, Listener listener,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RequestTransformer requestTransformer, List&amp;lt;RequestHandler&amp;gt; extraRequestHandlers, Stats stats,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bitmap.Config defaultBitmapConfig, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; indicatorsEnabled, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; loggingEnabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.context = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.dispatcher = dispatcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cache = cache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.listener = listener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.requestTransformer = requestTransformer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.defaultBitmapConfig = defaultBitmapConfig;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5185;&amp;#x90E8;&amp;#x6709;7&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF0C;&amp;#x989D;&amp;#x5916;&amp;#x7684;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; builtInHandlers = &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Adjust this as internal handlers are added or removed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; extraCount = (extraRequestHandlers != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? extraRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  List&amp;lt;RequestHandler&amp;gt; allRequestHandlers = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;RequestHandler&amp;gt;(builtInHandlers + extraCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5404;&amp;#x4E2A;RequestHandler&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;allRequestHandlers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ResourceRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (extraRequestHandlers != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allRequestHandlers.addAll(extraRequestHandlers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContactsPhotoRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaStoreRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentStreamRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AssetRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileRequestHandler(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  allRequestHandlers.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NetworkRequestHandler(dispatcher.downloader, stats));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  requestHandlers = Collections.unmodifiableList(allRequestHandlers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.stats = stats;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x50A8;Traget&amp;#x548C;Action&amp;#x7684;Map&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.targetToAction = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WeakHashMap&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;, Action&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.targetToDeferredRequestCreator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WeakHashMap&amp;lt;ImageView, DeferredRequestCreator&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x961F;&amp;#x5217;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.referenceQueue = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ReferenceQueue&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Object&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x6E05;&amp;#x9664;&amp;#x7EBF;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cleanupThread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CleanupThread(referenceQueue, HANDLER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.cleanupThread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x8BD5;&amp;#x76F8;&amp;#x5173;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.indicatorsEnabled = indicatorsEnabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.loggingEnabled = loggingEnabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x7684;requestHandler&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x6D41;&amp;#x7A0B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5728;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;br&gt;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;Picasso&amp;#x7684;&amp;#x5927;&amp;#x4F53;&amp;#x7ED3;&amp;#x6784;&amp;#x5165;&amp;#x4E0B;&amp;#x56FE;&amp;#x6240;&amp;#x793A;:&lt;br&gt;&lt;img src=&quot;/2016/10/30/Android-&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E00;-picasso/4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x4E3B;&amp;#x8981;&amp;#x5305;&amp;#x62EC;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x7C7B;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#xFF0C;&amp;#x800C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x5219;&amp;#x8D1F;&amp;#x8D23;&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x5206;&amp;#x53D1;&amp;#x548C;&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;with&amp;#x6D41;&amp;#x7A0B;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;with&amp;#x9636;&amp;#x6BB5;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;&amp;#x5EFA;&amp;#x9020;&amp;#x6A21;&amp;#x5F0F;&amp;#x548C;&amp;#x5355;&amp;#x4F8B;&amp;#x6A21;&amp;#x5F0F;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;Picasso&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x5728;&amp;#x901A;&amp;#x8FC7;Picasso&amp;#x7684;Builder&amp;#x63A5;&amp;#x53E3;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;Picasso&amp;#x53EF;&amp;#x4EE5;&amp;#x5141;&amp;#x8BB8;&amp;#x6211;&amp;#x4EEC;&amp;#x6CE8;&amp;#x5165;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5668;&amp;#xFF0C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#xFF0C;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#xFF0C;&amp;#x5185;&amp;#x90E8;&amp;#x4E8B;&amp;#x4EF6;&amp;#x76D1;&amp;#x542C;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;build&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x68C0;&amp;#x67E5;&amp;#x54EA;&amp;#x4E9B;&amp;#x5BF9;&amp;#x8C61;&amp;#x8FD8;&amp;#x6CA1;&amp;#x521B;&amp;#x5EFA;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD8;&amp;#x6CA1;&amp;#x521B;&amp;#x5EFA;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x65B9;&amp;#x6848;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;Picasso&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x6CE8;&amp;#x518C;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x4E3A;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;&amp;#x8FD9;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x5B66;&amp;#x5230;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Builder + &amp;#x5355;&amp;#x4F8B;&amp;#x6A21;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x8C61;&lt;/li&gt;
&lt;li&gt;&amp;#x901A;&amp;#x8FC7;Builder&amp;#x6CE8;&amp;#x5165;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E00;&amp;#x822C;&amp;#x662F;&amp;#x62BD;&amp;#x8C61;&amp;#x7C7B;&amp;#x6216;&amp;#x8005;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x53EF;&amp;#x4EE5;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E00;&amp;#x4E2A;&amp;#x6A21;&amp;#x677F;&amp;#xFF0C;&amp;#x7528;&amp;#x6237;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x6765;&amp;#x6839;&amp;#x636E;&amp;#x6A21;&amp;#x677F;&amp;#x521B;&amp;#x5EFA;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;3.2   load&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; RequestCreator &lt;span class=&quot;title&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Nullable Uri uri)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RequestCreator(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, uri, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;load&amp;#x9636;&amp;#x6BB5;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x6807;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&amp;#x7684;Uri. path resourceId&amp;#x7B49;&amp;#x3002;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;RequestCreator&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RequestCreator(Picasso picasso, &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; resourceId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (picasso.shutdown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;Picasso instance already shut down. Cannot submit new requests.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.picasso = picasso;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.data = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Request.Builder(uri, resourceId, picasso.defaultBitmapConfig);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; &amp;#x8FD9;&amp;#x91CC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x53EA;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;Request.Builder&amp;#x4E3A;&amp;#x521B;&amp;#x5EFA;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x3002;load&amp;#x9636;&amp;#x6BB5;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5427;&amp;#x3002; &amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x91CD;&amp;#x70B9;&amp;#x8BB0;&amp;#x4F4F;load&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x79CD;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public RequestCreator &lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;load&lt;/span&gt;(@Nullable Uri uri) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; RequestCreator &lt;span class=&quot;keyword&quot;&gt;load&lt;/span&gt;(@Nullable &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;path&lt;/span&gt;)    //android.&lt;span class=&quot;keyword&quot;&gt;resource&lt;/span&gt;:   &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;:  &lt;span class=&quot;keyword&quot;&gt;content&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; RequestCreator &lt;span class=&quot;keyword&quot;&gt;load&lt;/span&gt;(@NonNull &lt;span class=&quot;keyword&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt;)        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; RequestCreator &lt;span class=&quot;keyword&quot;&gt;load&lt;/span&gt;(@DrawableRes &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; resourceId)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;load&amp;#x9636;&amp;#x6BB5;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;load&amp;#x9636;&amp;#x6BB5;&amp;#x5C31;&amp;#x5B8C;&amp;#x6210;&amp;#x4E24;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;RequestCreator&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;Requst.Builder.&amp;#x4E3A;into&amp;#x9636;&amp;#x6BB5;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;3.3  into&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6B65;&amp;#x9AA4;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x4E00;&amp;#x4E00;&amp;#x5C55;&amp;#x5F00;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;into&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ImageView &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, Callback callback)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x521B;&amp;#x5EFA;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; started = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x6CE8;&amp;#x610F;into&amp;#x9636;&amp;#x6BB5;&amp;#x5FC5;&amp;#x987B;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x9700;&amp;#x8981;&amp;#x68C0;&amp;#x67E5;&amp;#x4E0B;&amp;#x5F53;&amp;#x524D;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  checkMain();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Target must not be null.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x8F93;&amp;#x5165;&amp;#x7684;Uri&amp;#x8FDB;&amp;#x884C;&amp;#x68C0;&amp;#x67E5;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;Uri&amp;#x6216;&amp;#x8005;resourceId&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x53D6;&amp;#x6D88;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x8981;&amp;#x6C42;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x663E;&amp;#x793A;&amp;#x5360;&amp;#x4F4D;&amp;#x56FE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!data.hasImage()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    picasso.cancelRequest(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (setPlaceholder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      setPlaceholder(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, getPlaceholderDrawable());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (deferred) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.hasSize()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Fit cannot be used with resize.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (width == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || height == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.isLayoutRequested()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (setPlaceholder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setPlaceholder(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, getPlaceholderDrawable());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      picasso.defer(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DeferredRequestCreator(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, callback));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data.resize(width, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x8BF7;&amp;#x6C42;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5143;&amp;#x7D20;id&amp;#x4EE5;&amp;#x53CA;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x5B8C;&amp;#x540E;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x5148;&amp;#x8FDB;&amp;#x884C;&amp;#x521D;&amp;#x6B65;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Request request = createRequest(started);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x751F;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  String requestKey = createKey(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x770B;&amp;#x8BF7;&amp;#x6C42;&amp;#x7B56;&amp;#x7565;&amp;#xFF0C;&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldReadFromMemoryCache(memoryPolicy)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;key&amp;#x5728;cache&amp;#x4E2D;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x50CF;&amp;#xFF0C;&amp;#x5E76;&amp;#x7EDF;&amp;#x8BA1;&amp;#x83B7;&amp;#x53D6;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bitmap bitmap = picasso.quickMemoryCacheCheck(requestKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4E86;&amp;#x5C31;&amp;#x53D6;&amp;#x6D88;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x56FE;&amp;#x7247;&amp;#xFF0C;&amp;#x56DE;&amp;#x8C03;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      picasso.cancelRequest(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      setBitmap(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, picasso.context, bitmap, MEMORY, noFade, picasso.indicatorsEnabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (picasso.loggingEnabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        log(OWNER_MAIN, VERB_COMPLETED, request.plainId(), &lt;span class=&quot;string&quot;&gt;&amp;quot;from &amp;quot;&lt;/span&gt; + MEMORY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (callback != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        callback.onSuccess();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x4ECE;&amp;#x5176;&amp;#x4ED6;&amp;#x5730;&amp;#x65B9;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x5148;&amp;#x663E;&amp;#x793A;&amp;#x5360;&amp;#x4F4D;&amp;#x56FE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (setPlaceholder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setPlaceholder(&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, getPlaceholderDrawable());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E00;&amp;#x4E2A;Action&amp;#x5E76;&amp;#x63D0;&amp;#x4EA4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Action action = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ImageViewAction(picasso, &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, request, memoryPolicy,networkPolicy, errorResId, errorDrawable, requestKey, tag, callback, noFade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  picasso.enqueueAndSubmit(action);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.1.1  Request&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&lt;/p&gt;
&lt;p&gt;into&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x5148;&amp;#x5BF9;&amp;#x4F20;&amp;#x5165;&amp;#x7684;Uri&amp;#x8FDB;&amp;#x884C;&amp;#x5224;&amp;#x65AD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E3A;&amp;#x7A7A;&amp;#x5C31;&amp;#x53D6;&amp;#x6D88;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x9700;&amp;#x8981;&amp;#x51B3;&amp;#x5B9A;&amp;#x662F;&amp;#x5426;&amp;#x663E;&amp;#x793A;&amp;#x5360;&amp;#x4F4D;&amp;#x7B26;&lt;br&gt;&amp;#x7136;&amp;#x540E;&amp;#x4F7F;&amp;#x7528;load&amp;#x9636;&amp;#x6BB5;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;Request.Builder&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x90FD;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;id&amp;#x4E00;&amp;#x4E2A;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x521B;&amp;#x5EFA;&amp;#x5B8C;Request&amp;#x5BF9;&amp;#x8C61;&amp;#x540E;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Request &lt;span class=&quot;title&quot;&gt;createRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; started)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id = nextId.getAndIncrement(); &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Request request = data.build();    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;RequestBuidler &amp;#x521B;&amp;#x5EFA;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;Requst&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  request.id = id;                   &lt;span class=&quot;comment&quot;&gt;//&amp;#x7ED9;&amp;#x8BF7;&amp;#x6C42;&amp;#x8BBE;&amp;#x7F6E;id&amp;#x4EE5;&amp;#x53CA;&amp;#x521B;&amp;#x5EFA;&amp;#x65F6;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  request.started = started;         &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BF7;&amp;#x6C42;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x6765;&amp;#x6807;&amp;#x793A;&amp;#x4E00;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Request transformed = picasso.transformRequest(request);  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FDB;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&amp;#xFF0C;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x4E3A;&amp;#x7A7A;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&amp;#x539F;&amp;#x6765;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; transformed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;Request.Builder &amp;#x7684; build&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Request &lt;span class=&quot;title&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (centerInside &amp;amp;&amp;amp; centerCrop) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Center crop and center inside can not be used together.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (centerCrop &amp;amp;&amp;amp; (targetWidth == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; targetHeight == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&amp;quot;Center crop requires calling resize with positive width and height.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (centerInside &amp;amp;&amp;amp; (targetWidth == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; targetHeight == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;string&quot;&gt;&amp;quot;Center inside requires calling resize with positive width and height.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (priority == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      priority = Priority.NORMAL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Request(uri, resourceId, stableKey, transformations, targetWidth, targetHeight,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        centerCrop, centerInside, centerCropGravity, onlyScaleDown, rotationDegrees,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rotationPivotX, rotationPivotY, hasRotationPivot, purgeable, config, priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;build&amp;#x8FC7;&amp;#x7A0B;&amp;#x9996;&amp;#x5148;&amp;#x5BF9;&amp;#x53C2;&amp;#x6570;&amp;#x8FDB;&amp;#x884C;&amp;#x68C0;&amp;#x67E5;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;Requst&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x6CE8;&amp;#x5165;&amp;#x4E86;&amp;#x5305;&amp;#x62EC;uri&amp;#x5728;&amp;#x5185;&amp;#x7684;&amp;#x4F17;&amp;#x591A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;br&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x662F;&amp;#x6839;&amp;#x636E;request&amp;#x5BF9;&amp;#x8C61;&amp;#x6765;&amp;#x751F;&amp;#x6210;&amp;#x7528;&amp;#x4E8E;&amp;#x6807;&amp;#x793A;Requst&amp;#x7684;RequestKey&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; createKey(Request data, StringBuilder builder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.stableKey != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.ensureCapacity(data.stableKey.length() + KEY_PADDING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.stableKey);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.uri != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path = data.uri.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.ensureCapacity(path.length() + KEY_PADDING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.ensureCapacity(KEY_PADDING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.resourceId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.rotationDegrees != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation:&amp;quot;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.rotationDegrees);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.hasRotationPivot) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;@&amp;apos;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.rotationPivotX).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;x&amp;apos;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.rotationPivotY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.hasSize()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;resize:&amp;quot;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.targetWidth).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;apos;x&amp;apos;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.targetHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.centerCrop) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;centerCrop:&amp;quot;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.centerCropGravity).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.centerInside) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;centerInside&amp;quot;&lt;/span&gt;).&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.transformations != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//noinspection ForLoopReplaceableByForEach&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, count = data.transformations.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;(); i &amp;lt; count; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(data.transformations.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(i).&lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      builder.&lt;span class=&quot;built_in&quot;&gt;append&lt;/span&gt;(KEY_SEPARATOR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; builder.toString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.1.2  &amp;#x53D1;&amp;#x8D77;&amp;#x8BF7;&amp;#x6C42;&lt;/p&gt;
&lt;p&gt;( 1 ) &amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x9884;&amp;#x53D6;&lt;br&gt;&amp;#x5728;&amp;#x53D1;&amp;#x8D77;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9996;&amp;#x5148;&amp;#x67E5;&amp;#x770B;&amp;#x4E0B;&amp;#x7F13;&amp;#x5B58;&amp;#x7B56;&amp;#x7565;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x4F18;&amp;#x5148;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7684;&amp;#x8BDD;&amp;#x5C31;&amp;#x8C03;&amp;#x7528;picasso.quickMemoryCacheCheck&amp;#x6765;&amp;#x68C0;&amp;#x67E5;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x662F;&amp;#x5426;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6709;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E86;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x5C31;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5C06;&amp;#x7ED3;&amp;#x679C;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x7EDF;&amp;#x8BA1;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x53D6;&amp;#x6D88;&amp;#x73B0;&amp;#x6709;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x56FE;&amp;#x50CF;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;ImageView&amp;#x4E0A;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Bitmap quickMemoryCacheCheck(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Bitmap cached = cache.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;key&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cached != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stats.dispatchCacheHit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stats.dispatchCacheMiss();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cached;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;(2) &amp;#x521B;&amp;#x5EFA;Action &amp;#x901A;&amp;#x8FC7;&amp;#x5176;&amp;#x4ED6;&amp;#x9014;&amp;#x5F84;&amp;#x83B7;&amp;#x53D6;&lt;br&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;ImageViewAction&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;picasso.enqueueAndSubmit&amp;#x5C06;Action&amp;#x53D1;&amp;#x51FA;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x975E;&amp;#x5E38;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x8FDB;&amp;#x884C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E4B;&amp;#x524D;&amp;#x8FDB;&amp;#x884C;&amp;#x4E00;&amp;#x4E0B;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;into&amp;#x9636;&amp;#x6BB5;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;load&amp;#x9636;&amp;#x6BB5;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;RequstCreator&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Request&amp;#xFF0C;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;Requst&amp;#x7684;id&amp;#x4EE5;&amp;#x53CA;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5173;&amp;#x952E;&amp;#xFF0C;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;Request&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x4F1A;&amp;#x5148;&amp;#x68C0;&amp;#x67E5;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;Requst&amp;#x5BF9;&amp;#x8C61;&amp;#x51FA;&amp;#x6765;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4F7F;&amp;#x7528;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x7684;Requst&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4F5C;&amp;#x4E3A;Request&amp;#x6807;&amp;#x793A;&amp;#x7684;requestKey&amp;#x3002;&lt;br&gt;&amp;#x518D;&amp;#x6839;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7B56;&amp;#x7565;&amp;#xFF0C;&amp;#x67E5;&amp;#x770B;&amp;#x662F;&amp;#x5426;&amp;#x4F18;&amp;#x5148;&amp;#x4F7F;&amp;#x7528;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x56FE;&amp;#x50CF;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7684;&amp;#x8BDD;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;&amp;#x4E0A;&amp;#x9762;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;requstKey&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x7ED3;&amp;#x679C;&amp;#x53CD;&amp;#x9988;&amp;#x7ED9;stats&amp;#x5BF9;&amp;#x8C61;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x8BA1;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x4F18;&amp;#x5148;&amp;#x4F7F;&amp;#x7528;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x56FE;&amp;#x50CF;&amp;#x7684;&amp;#x8BDD;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;Action&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;picasso.enqueueAndSubmit&amp;#x5C06;Action&amp;#x53D1;&amp;#x51FA;&amp;#x3002;&lt;br&gt;Action &amp;#x662F;Target &amp;#x4EE5;&amp;#x53CA;Request&amp;#x7684;&amp;#x5C01;&amp;#x88C5;&amp;#xFF0C;&amp;#x5B83;&amp;#x6709;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;abstract void complete(Bitmap result, Picasso.LoadedFrom from)&amp;#x5728;&amp;#x8BF7;&amp;#x6C42;&amp;#x7ED3;&amp;#x675F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x540E;&amp;#x7EED;&amp;#x4F1A;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF0C;Action&amp;#x7684;&amp;#x5B50;&amp;#x7C7B;&amp;#x76EE;&amp;#x524D;&amp;#x6709;GetAction  FetchAction  TargetAction ImageViewAction RmoteViewAction&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;&amp;#x63D0;&amp;#x4EA4;&amp;#x5230;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D;Action&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#x662F;&amp;#x5426;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E86;&amp;#x53E6;&amp;#x5916;&amp;#x7684;Action&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7684;&amp;#x8BDD;&amp;#x90A3;&amp;#x4E48;&amp;#x53D6;&amp;#x6D88;&amp;#x539F;&amp;#x5148;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;Action&amp;#x548C;Target&amp;#x653E;&amp;#x5230;targetToAction&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x63D0;&amp;#x4EA4;&amp;#x5230;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x4E0A;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void enqueueAndSubmit(&lt;span class=&quot;keyword&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x83B7;&amp;#x53D6;&lt;span class=&quot;keyword&quot;&gt;Action&lt;/span&gt;&amp;#x4E2D;&amp;#x7684;&lt;span class=&quot;type&quot;&gt;target&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Object &lt;span class=&quot;type&quot;&gt;target&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt;.getTarget();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;targetToAction &amp;#x4E2D;&amp;#x8BB0;&amp;#x5F55;&amp;#x7684; &lt;span class=&quot;type&quot;&gt;Target&lt;/span&gt;&amp;#x4E2D;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;&lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt;&amp;#x4E0D;&amp;#x662F;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt; &amp;#x8BF4;&amp;#x660E;&amp;#x4E4B;&amp;#x524D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6307;&amp;#x5B9A;&amp;#x4E86;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x53D6;&amp;#x6D88;&amp;#x539F;&amp;#x5148;&amp;#x7684;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;!= null &amp;amp;&amp;amp; targetToAction.get(target) != action) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cancelExistingRequest(&lt;span class=&quot;type&quot;&gt;target&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x63D0;&amp;#x4EA4;&amp;#x5230;targetToAction&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    targetToAction.put(&lt;span class=&quot;type&quot;&gt;target&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x63D0;&amp;#x4EA4;&amp;#x5230;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  submit(&lt;span class=&quot;keyword&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x5206;&amp;#x53D1;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight sqf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void submit(&lt;span class=&quot;built_in&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x5206;&amp;#x53D1;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dispatcher.dispatchSubmit(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchSubmit&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Action action)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.sendMessage(&lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.obtainMessage(REQUEST_SUBMIT, action));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Message msg)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (msg.what) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; REQUEST_SUBMIT: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Action action = (Action) msg.obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dispatcher.performSubmit(action);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//...............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sqf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void performSubmit(&lt;span class=&quot;built_in&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  performSubmit(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x7531;&amp;#x5916;&amp;#x90E8;&amp;#x8C03;&amp;#x7528;dispatchXXXX&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;Hander&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7531;performXXXXX&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5339;&amp;#x914D;requestHandler&amp;#x5C01;&amp;#x88C5;&amp;#x5230;BitmapHunter&amp;#xFF1A;&lt;br&gt;&amp;#x5728;performSubmit&amp;#x4E2D;&amp;#x6839;&amp;#x636E;Action&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x90A3;&amp;#x4E2A;requstHandler&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E2A;requstHandler&amp;#x4F20;&amp;#x9012;&amp;#x5230;&amp;#x65B0;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;BitmapHunter&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight sqf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void performSubmit(&lt;span class=&quot;built_in&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;, boolean dismissFailed) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pausedTags.contains(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getTag())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pausedActions.put(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getTarget(), &lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x770B;&amp;#x662F;&amp;#x5426;&amp;#x5728;&amp;#x505C;&amp;#x6B62;&amp;#x7684;&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;hunterMap&amp;#x901A;&amp;#x8FC7;RequestKey&amp;#x67E5;&amp;#x627E;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5B58;&amp;#x5728;&amp;#x7684;BitmapHunter(&amp;#x641C;&amp;#x7D22;&amp;#x8005;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  BitmapHunter hunter = hunterMap.get(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getKey());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hunter != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hunter.attach(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x627E;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;RequestHandler&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x5C01;&amp;#x88C5;&amp;#x5230;BitmapHunter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hunter = forRequest(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getPicasso(), this, cache, stats, &lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//BitmapHunter &amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C06;&amp;#x5176;&amp;#x4E22;&amp;#x5230;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x8FDB;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x8FDB;&amp;#x5165;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x540E;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;run&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hunter.future = service.submit(hunter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;hunterMap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hunterMap.put(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getKey(), hunter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dismissFailed) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    failedActions.remove(&lt;span class=&quot;built_in&quot;&gt;action&lt;/span&gt;.getTarget());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;forRequst &amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x5217;&amp;#x8868;&amp;#x3002;&amp;#x4F9D;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7684;canHandleRequst&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;requstHandler&amp;#x662F;&amp;#x5426;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; BitmapHunter forRequest(Picasso picasso, Dispatcher dispatcher, Cache cache, Stats stats, Action action) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;Action&amp;#x4E2D;&amp;#x5C01;&amp;#x88C5;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Request request = action.getRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;Picasso&amp;#x6CE8;&amp;#x518C;&amp;#x7684;RequestHandlers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  List&amp;lt;RequestHandler&amp;gt; requestHandlers = picasso.getRequestHandlers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x904D;&amp;#x5386;&amp;#x6BCF;&amp;#x4E2A;RequestHandler &amp;#x770B;&amp;#x4E0B;&amp;#x90A3;&amp;#x4E2A;Handler&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; = requestHandlers.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;(); i &amp;lt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RequestHandler requestHandler = requestHandlers.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;Uri&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x90A3;&amp;#x4E2A;Handler&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestHandler.canHandleRequest(request)) { &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x8BF7;&amp;#x6C42;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x5C06;Action&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;&amp;#x65B0;&amp;#x5EFA;&amp;#x7684;BitmapHunter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BitmapHunter(picasso, dispatcher, cache, stats, action, requestHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BitmapHunter(picasso, dispatcher, cache, stats, action, ERRORING_HANDLER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x4E2A;requestHandler&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;canHandleRequst&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;request&amp;#x8FDB;&amp;#x53BB;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x6839;&amp;#x636E;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;Uri&amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x5339;&amp;#x914D;&amp;#x3002;&amp;#x5F53;&amp;#x524D;&amp;#x662F;&amp;#x5426;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;new Picasso &amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5404;&amp;#x4E2A;requestHandler&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x6DFB;&amp;#x52A0;&amp;#x987A;&amp;#x5E8F;&amp;#x5F88;&amp;#x5173;&amp;#x952E;&amp;#x3002;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&amp;#x5904;&amp;#x7406;&amp;#x5668;&amp;#x7684;canHandleRequest&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; canHandleRequest(Request &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; scheme = &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;uri&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getScheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (SCHEME_HTTP&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(scheme) &lt;span class=&quot;subst&quot;&gt;||&lt;/span&gt; SCHEME_HTTPS&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(scheme));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;BitmapHunter&amp;#x7684;run&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;run&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;Bitmap&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x6765;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x4FEE;&amp;#x6539;&amp;#x7EBF;&amp;#x7A0B;&amp;#x540D;&amp;#x5B57;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    updateThreadName(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&amp;#x5E76;&amp;#x5B8C;&amp;#x6210;&amp;#x8F6C;&amp;#x6362;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x5148;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&lt;span class=&quot;type&quot;&gt;RequestHandler&lt;/span&gt; load&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x5185;&amp;#x90E8;&amp;#x8F6C;&amp;#x6362;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = hunt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x5411;&amp;#x5206;&amp;#x53D1;&amp;#x5668;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dispatcher.dispatchFailed(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      dispatcher.dispatchComplete(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;requestHandler&amp;#x4E2D;&amp;#x7684;load&amp;#x65B9;&amp;#x6CD5;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x636E;&amp;#xFF1A;&lt;br&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;hunt&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x5148;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x6CA1;&amp;#x6709;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x901A;&amp;#x8FC7;requstHandler&amp;#x4E2D;&amp;#x7684;load&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x53EF;&amp;#x80FD;&amp;#xFF0C;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;Bitmap&amp;#x3002;&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;InputStream&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x662F;Bitmap&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8FDB;&amp;#x5165;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B65;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x8F93;&amp;#x5165;&amp;#x6D41;&amp;#x7684;&amp;#x8BDD;&amp;#x9700;&amp;#x8981;&amp;#x5C06;&amp;#x4ECE;&amp;#x6D41;&amp;#x4E2D;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; hunt() throws &lt;span class=&quot;type&quot;&gt;IOException&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; bitmap = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x5148;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldReadFromMemoryCache(memoryPolicy)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bitmap = cache.get(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      stats.dispatchCacheHit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      loadedFrom = &lt;span class=&quot;type&quot;&gt;MEMORY&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data.networkPolicy = retryCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;type&quot;&gt;NetworkPolicy&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;OFFLINE&lt;/span&gt;.index : networkPolicy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x8C03;&amp;#x7528;requestHandler&amp;#x7684;load&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;RequestHandler&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = requestHandler.load(data, networkPolicy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loadedFrom = &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.getLoadedFrom();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exifOrientation = &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.getExifOrientation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bitmap = &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.getBitmap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x76F4;&amp;#x63A5;&amp;#x83B7;&amp;#x53D6;&lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      //&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x884C;&amp;#x7684;&amp;#x8BDD;&amp;#x5C1D;&amp;#x8BD5;&amp;#x83B7;&amp;#x53D6;&amp;#x8F93;&amp;#x5165;&amp;#x6D41;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;InputStream&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.getStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x4F7F;&amp;#x7528;&amp;#x8F93;&amp;#x5165;&amp;#x6D41;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bitmap = decodeStream(&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;, data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Utils&lt;/span&gt;.closeQuietly(&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x7EDF;&amp;#x8BA1;&amp;#x89E3;&amp;#x7801;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stats.dispatchBitmapDecoded(bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x56FE;&amp;#x7247;&amp;#x8F6C;&amp;#x6362;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x8FDB;&amp;#x884C;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.needsTransformation() || exifOrientation != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      synchronized (&lt;span class=&quot;type&quot;&gt;DECODE_LOCK&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x8C03;&amp;#x7528;transformResult&amp;#x8FDB;&amp;#x884C;&amp;#x56FE;&amp;#x7247;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.needsMatrixTransform() || exifOrientation != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          bitmap = transformResult(data, bitmap, exifOrientation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x6548;&amp;#x679C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x8C03;&amp;#x7528;applyCustomTransformations &amp;#x5E94;&amp;#x7528;&amp;#x56FE;&amp;#x7247;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data.hasCustomTransformations()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          bitmap = applyCustomTransformations(data.transformations, bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      //&amp;#x7EDF;&amp;#x8BA1;&amp;#x8F6C;&amp;#x6362;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stats.dispatchBitmapTransformed(bitmap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bitmap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Result &lt;span class=&quot;title&quot;&gt;load&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;Request request, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; networkPolicy&lt;/span&gt;) throws IOException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;Downloader&amp;#x8FDB;&amp;#x884C;&amp;#x4E0B;&amp;#x8F7D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Response response = downloader.load(request.uri, request.networkPolicy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x770B;&amp;#x662F;&amp;#x4ECE;&amp;#x54EA;&amp;#x91CC;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#xFF1F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Picasso.LoadedFrom loadedFrom = response.cached ? DISK : NETWORK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Bitmap bitmap = response.getBitmap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x636E;&amp;#x4E0D;&amp;#x4E3A;&amp;#x7A7A;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD4;&amp;#x56DE;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bitmap != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Result(bitmap, loadedFrom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  InputStream &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; = response.getInputStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loadedFrom == DISK &amp;amp;&amp;amp; response.getContentLength() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Utils.closeQuietly(&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentLengthException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Received response with 0 content-length header.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loadedFrom == NETWORK &amp;amp;&amp;amp; response.getContentLength() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stats.dispatchDownloadFinished(response.getContentLength());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Result(&lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;, loadedFrom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x56FE;&amp;#x50CF;&amp;#x6267;&amp;#x884C;&amp;#x5185;&amp;#x90E8;&amp;#x4EE5;&amp;#x53CA;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x53D8;&amp;#x6362;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;br&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;Bitmap&amp;#x6570;&amp;#x636E;&amp;#x4E4B;&amp;#x540E;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x8FDB;&amp;#x884C;&amp;#x56FE;&amp;#x50CF;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x8FDB;&amp;#x884C;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;transformRequst&amp;#x8FDB;&amp;#x884C;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static Bitmap transformResult(Request &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;, Bitmap result, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; exifOrientation) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; inWidth = result.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; inHeight = result.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  boolean onlyScaleDown = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.onlyScaleDown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; drawX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; drawY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; drawWidth = inWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; drawHeight = inHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Matrix matrix = new Matrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.needsMatrixTransform() || exifOrientation &lt;span class=&quot;comment&quot;&gt;!= 0) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; targetWidth = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; targetHeight = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; targetRotation = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (targetRotation &lt;span class=&quot;comment&quot;&gt;!= 0) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; cosR = Math.&lt;span class=&quot;built_in&quot;&gt;cos&lt;/span&gt;(Math.toRadians(targetRotation));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; sinR = Math.&lt;span class=&quot;built_in&quot;&gt;sin&lt;/span&gt;(Math.toRadians(targetRotation));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.hasRotationPivot) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.setRotate(targetRotation, &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotX, &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Recalculate dimensions after rotation around pivot point&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x1T = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotX * (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; - cosR) + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotY * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y1T = &lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotY * (&lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; - cosR) - (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.rotationPivotX * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x2T = x1T + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y2T = y1T + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x3T = x1T + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * cosR) - (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y3T = y1T + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * sinR) + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x4T = x1T - (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y4T = y1T + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; maxX = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x4T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x3T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x1T, x2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; minX = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x4T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x3T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x1T, x2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; maxY = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y4T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y3T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y1T, y2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; minY = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y4T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y3T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y1T, y2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetWidth = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;floor&lt;/span&gt;(maxX - minX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetHeight  = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;floor&lt;/span&gt;(maxY - minY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.setRotate(targetRotation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Recalculate dimensions after rotation (around origin)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x1T = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y1T = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x2T = (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y2T = (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x3T = (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * cosR) - (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y3T = (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetWidth * sinR) + (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; x4T = -(&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * sinR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; y4T = (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.targetHeight * cosR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; maxX = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x4T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x3T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(x1T, x2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; minX = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x4T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x3T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(x1T, x2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; maxY = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y4T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y3T, Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(y1T, y2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;double&lt;/span&gt; minY = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y4T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y3T, Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(y1T, y2T)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetWidth = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;floor&lt;/span&gt;(maxX - minX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetHeight  = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;floor&lt;/span&gt;(maxY - minY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exifOrientation &lt;span class=&quot;comment&quot;&gt;!= 0) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; exifRotation = getExifRotation(exifOrientation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; exifTranslation = getExifTranslation(exifOrientation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exifRotation &lt;span class=&quot;comment&quot;&gt;!= 0) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.preRotate(exifRotation);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exifRotation == &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt; || exifRotation == &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           // Recalculate dimensions after exif rotation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; tmpHeight = targetHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           targetHeight = targetWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           targetWidth = tmpHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exifTranslation &lt;span class=&quot;comment&quot;&gt;!= 1) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.postScale(exifTranslation, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerCrop) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // Keep aspect ratio &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; one &lt;span class=&quot;type&quot;&gt;dimension&lt;/span&gt; is set to &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; widthRatio =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetWidth &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetWidth / (float) inWidth : targetHeight / (float) inHeight;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; heightRatio =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetHeight &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetHeight / (float) inHeight : targetWidth / (float) inWidth;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; scaleX, scaleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (widthRatio &amp;gt; heightRatio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; newSize = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.ceil(inHeight * (heightRatio / widthRatio));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerCropGravity &amp;amp; Gravity.TOP) == Gravity.TOP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawY = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerCropGravity &amp;amp; Gravity.BOTTOM) == Gravity.BOTTOM) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawY = inHeight - newSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawY = (inHeight - newSize) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drawHeight = newSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleX = widthRatio;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleY = targetHeight / (&lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;) drawHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (widthRatio &amp;lt; heightRatio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; newSize = (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt;) Math.ceil(inWidth * (widthRatio / heightRatio));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerCropGravity &amp;amp; Gravity.LEFT) == Gravity.LEFT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerCropGravity &amp;amp; Gravity.RIGHT) == Gravity.RIGHT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawX = inWidth - newSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawX = (inWidth - newSize) / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drawWidth = newSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleX = targetWidth / (&lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt;) drawWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleY = heightRatio;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drawX = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drawWidth = inWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleX = scaleY = heightRatio;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldResize(onlyScaleDown, inWidth, inHeight, targetWidth, targetHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.preScale(scaleX, scaleY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;data&lt;/span&gt;.centerInside) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // Keep aspect ratio &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; one &lt;span class=&quot;type&quot;&gt;dimension&lt;/span&gt; is set to &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; widthRatio =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetWidth &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetWidth / (float) inWidth : targetHeight / (float) inHeight;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; heightRatio =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetHeight &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetHeight / (float) inHeight : targetWidth / (float) inWidth;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt; = widthRatio &amp;lt; heightRatio ? widthRatio : heightRatio;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldResize(onlyScaleDown, inWidth, inHeight, targetWidth, targetHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.preScale(&lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((targetWidth &lt;span class=&quot;comment&quot;&gt;!= 0 || targetHeight != 0) //&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;amp;&amp;amp; (targetWidth &lt;span class=&quot;comment&quot;&gt;!= inWidth || targetHeight != inHeight)) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // &lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt; an explicit &lt;span class=&quot;type&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; has been specified and they &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; not match the results bounds,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // pre-&lt;span class=&quot;built_in&quot;&gt;scale&lt;/span&gt; the existing matrix appropriately.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // Keep aspect ratio &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; one &lt;span class=&quot;type&quot;&gt;dimension&lt;/span&gt; is set to &lt;span class=&quot;number&quot;&gt;0.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; sx =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetWidth &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetWidth / (float) inWidth : targetHeight / (float) inHeight;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;float&lt;/span&gt; sy =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          targetHeight &lt;span class=&quot;comment&quot;&gt;!= 0 ? targetHeight / (float) inHeight : targetWidth / (float) inWidth;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldResize(onlyScaleDown, inWidth, inHeight, targetWidth, targetHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matrix.preScale(sx, sy);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Bitmap newResult = Bitmap.createBitmap(result, drawX, drawY, drawWidth, drawHeight, matrix, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newResult &lt;span class=&quot;comment&quot;&gt;!= result) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result.recycle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = newResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x662F;&amp;#x8FDB;&amp;#x884C;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FDB;&amp;#x884C;&amp;#x81EA;&amp;#x5DF1;&amp;#x8BBE;&amp;#x7F6E;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; applyCustomTransformations(&lt;span class=&quot;type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Transformation&lt;/span&gt;&amp;gt; transformations, &lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, count = transformations.size(); i &amp;lt; count; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    final &lt;span class=&quot;type&quot;&gt;Transformation&lt;/span&gt; transformation = transformations.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; newResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      newResult = transformation.transform(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } catch (final &lt;span class=&quot;type&quot;&gt;RuntimeException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      //.................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = newResult;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F80;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x8FD4;&amp;#x56DE;&amp;#x5904;&amp;#x7406;&amp;#x540E;&amp;#x7684;Bitmap&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchComplete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(BitmapHunter hunter)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.sendMessage(&lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.obtainMessage(HUNTER_COMPLETE, hunter));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;case&lt;/span&gt; HUNTER_COMPLETE: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;BitmapHunter &lt;/span&gt;hunter = (&lt;span class=&quot;keyword&quot;&gt;BitmapHunter) &lt;/span&gt;msg.obj&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dispatcher.performComplete(hunter)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;performComplete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(BitmapHunter hunter)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x5199;&amp;#x5165;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldWriteToMemoryCache(hunter.getMemoryPolicy())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cache.&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;(hunter.getKey(), hunter.getResult());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x79FB;&amp;#x9664;hunterMap&amp;#x4E2D;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hunterMap.remove(hunter.getKey());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x56FE;&amp;#x7247;&amp;#x5C55;&amp;#x73B0;&amp;#x51FA;&amp;#x6765;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  batch(hunter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;batch&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(BitmapHunter hunter)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hunter.isCancelled()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  batch.add(hunter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.hasMessages(HUNTER_DELAY_NEXT_BATCH)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.sendEmptyMessageDelayed(HUNTER_DELAY_NEXT_BATCH, BATCH_DELAY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;HUNTER_DELAY_NEXT_BATCH:&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dispatcher.performBatchComplete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C06;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;BitmapHandler&amp;#x6570;&amp;#x7EC4;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED9;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; performBatchComplete() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  List&amp;lt;BitmapHunter&amp;gt; &lt;span class=&quot;built_in&quot;&gt;copy&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;BitmapHunter&amp;gt;(batch);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  batch.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x5C06;&amp;#x5176;&amp;#x8F6C;&amp;#x9001;&amp;#x5230;Picasso&amp;#x7C7B;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;mainThreadHandler&amp;#x662F;&amp;#x5728;&amp;#x521D;&amp;#x59CB;&amp;#x5316;DisPatcher&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;&amp;#x7684;HANDLER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mainThreadHandler.sendMessage(mainThreadHandler.obtainMessage(HUNTER_BATCH_COMPLETE, &lt;span class=&quot;built_in&quot;&gt;copy&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;complete&amp;#x9636;&amp;#x6BB5;&amp;#x6BCF;&amp;#x4E2A;BitmapHunter&amp;#x90FD;&amp;#x4F1A;&amp;#x5C06;&amp;#x81EA;&amp;#x5DF1;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;Picasso complete&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;case&lt;/span&gt; HUNTER_BATCH_COMPLETE: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x83B7;&amp;#x53D6;&lt;span class=&quot;keyword&quot;&gt;BitmapHunter&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BitmapHunter&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;batch &lt;/span&gt;= (List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BitmapHunter&amp;gt;) &lt;/span&gt;msg.obj&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x5BF9;&lt;span class=&quot;keyword&quot;&gt;BitmapHandler&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;handler&amp;#x8C03;&amp;#x7528;complete&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;  for (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, n = &lt;span class=&quot;keyword&quot;&gt;batch.size(); &lt;/span&gt;i &amp;lt; n&lt;span class=&quot;comment&quot;&gt;; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x8C03;&amp;#x7528;complete&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BitmapHunter &lt;/span&gt;hunter = &lt;span class=&quot;keyword&quot;&gt;batch.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    hunter.picasso.complete(hunter)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;Picasso&amp;#x7684;complete&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x4ECE;BitmapHunter&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;deliverAction&amp;#x8FDB;&amp;#x884C;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x663E;&amp;#x793A;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; complete(&lt;span class=&quot;type&quot;&gt;BitmapHunter&lt;/span&gt; hunter) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Action&lt;/span&gt; single = hunter.getAction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Action&lt;/span&gt;&amp;gt; joined = hunter.getActions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  boolean hasMultiple = joined != null &amp;amp;&amp;amp; !joined.isEmpty();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  boolean shouldDeliver = single != null || hasMultiple;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!shouldDeliver) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x4ECE;hunter&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&lt;span class=&quot;type&quot;&gt;Uri&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;&amp;#x4EE5;&amp;#x53CA;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x6765;&amp;#x6E90;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Uri&lt;/span&gt; uri = hunter.getData().uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; exception = hunter.getException();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = hunter.getResult();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;LoadedFrom&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; = hunter.getLoadedFrom();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (single != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    deliverAction(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, single);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hasMultiple) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, n = joined.size(); i &amp;lt; n; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;type&quot;&gt;Action&lt;/span&gt; join = joined.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      deliverAction(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, join);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x901A;&amp;#x8FC7;&amp;#x56DE;&amp;#x8C03;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener != null &amp;amp;&amp;amp; exception != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listener.onImageLoadFailed(this, uri, exception);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;deliverAction&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;Action&amp;#x4E2D;&amp;#x7684;complete&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x5C06;&amp;#x56FE;&amp;#x50CF;&amp;#x663E;&amp;#x793A;&amp;#x5230;&amp;#x63A7;&amp;#x4EF6;&amp;#x4E0A;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; deliverAction(&lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;LoadedFrom&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Action&lt;/span&gt; action) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x8C03;&amp;#x7528;&lt;span class=&quot;type&quot;&gt;Action&lt;/span&gt;&amp;#x7684;complete&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    action.complete(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    action.error();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x7EC8;&amp;#x662F;&amp;#x8C03;&amp;#x7528;PicassoDrawable&amp;#x7684;setBitmap&amp;#x65B9;&amp;#x6CD5;&amp;#x663E;&amp;#x793A;&amp;#x5230;ImageView&amp;#x4E0A;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt; public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; complete(&lt;span class=&quot;type&quot;&gt;Bitmap&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Picasso&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;LoadedFrom&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    throw new &lt;span class=&quot;type&quot;&gt;AssertionError&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;.format(&lt;span class=&quot;string&quot;&gt;&amp;quot;Attempted to complete action with no result!\n%s&amp;quot;&lt;/span&gt;, this));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x53D6;&amp;#x51FA;&amp;#x8981;&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&lt;span class=&quot;type&quot;&gt;ImageView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;ImageView&lt;/span&gt; target = this.target.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (target == null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;Context&lt;/span&gt; context = picasso.context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x4F7F;&amp;#x7528;&lt;span class=&quot;type&quot;&gt;PicassoDrawable&lt;/span&gt;  setBitmap &amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x56FE;&amp;#x7247;&amp;#x663E;&amp;#x793A;&amp;#x5230;&lt;span class=&quot;type&quot;&gt;ImageView&lt;/span&gt;&amp;#x4E0A;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;type&quot;&gt;PicassoDrawable&lt;/span&gt;.setBitmap(target, context, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt;, noFade, indicatorsEnabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  //&amp;#x56DE;&amp;#x8C03;&amp;#x653E;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (callback != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    callback.onSuccess();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setBitmap&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ImageView &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;, Context context, Bitmap bitmap,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Picasso.LoadedFrom loadedFrom, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; noFade, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; debugging)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Drawable placeholder = &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.getDrawable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (placeholder &lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt; AnimationDrawable) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ((AnimationDrawable) placeholder).stop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PicassoDrawable drawable = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PicassoDrawable(context, bitmap, placeholder, loadedFrom, noFade, debugging);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//&amp;#x6700;&amp;#x7EC8;&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.setImageDrawable(drawable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x5927;&amp;#x81F4;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/10/30/Android-&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E00;-picasso/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x5F00;&amp;#x59CB;&amp;#x6211;&amp;#x5C06;&amp;#x5BF9;&amp;#x76EE;&amp;#x524D;&amp;#x8F83;&amp;#x4E3A;&amp;#x6D41;&amp;#x884C;&amp;#x7684;&amp;#x5F00;&amp;#x6E90;&amp;#x5E93;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android 开源源码" scheme="http://yoursite.com/tags/Android-%E5%BC%80%E6%BA%90%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之TODO MVP Loaders</title>
    <link href="http://yoursite.com/2016/08/22/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BTODO-MVP-Loaders/"/>
    <id>http://yoursite.com/2016/08/22/Android-源码分析之TODO-MVP-Loaders/</id>
    <published>2016-08-22T10:08:19.000Z</published>
    <updated>2016-10-30T15:31:53.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x5728;&amp;#x770B;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4E4B;&amp;#x524D;&amp;#x8BF7;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;Android &amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO MVP &amp;#x4EE5;&amp;#x53CA;Android &amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x8BBE;&amp;#x8BA1;&amp;#x6A21;&amp;#x5F0F; &amp;#x4E8C; MVP&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;&amp;#x6574;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x5728;Android &amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO MVP&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5C06;&amp;#x53EA;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5DEE;&amp;#x5F02;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x662F;&amp;#x8001;&amp;#x6837;&amp;#x5B50;&amp;#x4ECE;TasksActivity&amp;#x5F00;&amp;#x59CB;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; static &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;CURRENT_FILTERING_KEY&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;CURRENT_FILTERING_KEY&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;DrawerLayout&lt;/span&gt; mDrawerLayout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TasksPresenter&lt;/span&gt; mTasksPresenter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt; tasksFragment =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt;) getSupportFragmentManager().findFragmentById(&lt;span class=&quot;type&quot;&gt;R&lt;/span&gt;.id.contentFrame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasksFragment == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Create the fragment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tasksFragment = &lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt;.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;ActivityUtils&lt;/span&gt;.addFragmentToActivity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    getSupportFragmentManager(), tasksFragment, &lt;span class=&quot;type&quot;&gt;R&lt;/span&gt;.id.contentFrame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Create the presenter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;TasksRepository&lt;/span&gt; repository = &lt;span class=&quot;type&quot;&gt;Injection&lt;/span&gt;.provideTasksRepository(getApplicationContext());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;TasksLoader&lt;/span&gt; tasksLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TasksLoader&lt;/span&gt;(getApplicationContext(), repository);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksPresenter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TasksPresenter&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tasksLoader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getSupportLoaderManager(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                repository,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tasksFragment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//......................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x53EA;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x52A0;&amp;#x8F7D;&amp;#x65B9;&amp;#x5F0F;&amp;#x505A;&amp;#x4E86;&amp;#x4FEE;&amp;#x6539;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;View&amp;#x5C42;TasksFragment&amp;#x6CA1;&amp;#x6709;&amp;#x591A;&amp;#x5927;&amp;#x7684;&amp;#x6539;&amp;#x53D8;&amp;#x3002; &amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; TasksRepository &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; TasksDataSource {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksRepository INSTANCE = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksDataSource mTasksRemoteDataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksDataSource mTasksLocalDataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;TasksRepositoryObserver&amp;gt; mObservers = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;TasksRepositoryObserver&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x5185;&amp;#x5B58;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; mCachedTasks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Marks the cache as invalid, to force an update the next time data is requested. This variable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * has package local visibility so it can be accessed from tests.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7528;&amp;#x4E8E;&amp;#x8868;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x53EF;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mCacheIsDirty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Returns the single instance of this class, creating it if necessary.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasksRemoteDataSource the backend data source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasksLocalDataSource  the device storage data source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return the {@link TasksRepository} instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5355;&amp;#x4F8B;&amp;#x65B9;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;TasksRepository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksRepository getInstance(TasksDataSource tasksRemoteDataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              TasksDataSource tasksLocalDataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (INSTANCE == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TasksRepository(tasksRemoteDataSource, tasksLocalDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INSTANCE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Used to force {@link #getInstance(TasksDataSource, TasksDataSource)} to create a new instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * next time it&amp;apos;s called.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; destroyInstance() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        INSTANCE = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Prevent direct instantiation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksRepository(@NonNull TasksDataSource tasksRemoteDataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            @NonNull TasksDataSource tasksLocalDataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource = checkNotNull(tasksRemoteDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource = checkNotNull(tasksLocalDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6CE8;&amp;#x518C;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x53D8;&amp;#x5316;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; addContentObserver(TasksRepositoryObserver observer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mObservers.contains(observer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mObservers.add(observer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x79FB;&amp;#x9664;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x53D8;&amp;#x5316;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; removeContentObserver(TasksRepositoryObserver observer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mObservers.contains(observer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mObservers.remove(observer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x77E5;&amp;#x76D1;&amp;#x542C;&amp;#x8005;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; notifyContentObserver() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (TasksRepositoryObserver observer : mObservers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.onTasksChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Gets tasks from cache, local data source (SQLite) or remote data source, whichever is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * available first. This is done synchronously because it&amp;apos;s used by the {@link TasksLoader},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * which implements the async mechanism.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Nullable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; getTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mCacheIsDirty) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8868;&amp;#x793A;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x6570;&amp;#x636E;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Respond immediately with cache if available and not dirty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tasks = getCachedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tasks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Query the local storage if available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tasks = mTasksLocalDataSource.getTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// To simplify, we&amp;apos;ll consider the local data source fresh when it has data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4ECE;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x5B8C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8DD1;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;&amp;#x5BF9;&amp;#x7ED3;&amp;#x679C;&amp;#x8FDB;&amp;#x884C;&amp;#x5224;&amp;#x65AD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7A7A;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x6CA1;&amp;#x6709;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4ECE;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || tasks.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Grab remote data if cache is dirty or local data not available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tasks = mTasksRemoteDataSource.getTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// We copy the data to the device so we don&amp;apos;t need to query the network next time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x7F13;&amp;#x5B58;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F9B;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B21;&amp;#x4F7F;&amp;#x7528;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            saveTasksInLocalDataSource(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0D;&amp;#x8BBA;&amp;#x662F;&amp;#x4ECE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x8FD8;&amp;#x662F;&amp;#x4ECE;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x90FD;&amp;#x9700;&amp;#x8981;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x5230;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processLoadedTasks(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; getCachedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x53EF;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; cachedTasksAvailable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedTasks != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !mCacheIsDirty;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; getCachedTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; : &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(mCachedTasks.values());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6307;&amp;#x5B9A;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; getCachedTask(String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedTasks.get(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; saveTasksInLocalDataSource(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasks != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; : tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksLocalDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x5230;&amp;#x5185;&amp;#x5B58;&amp;#x4E0A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; processLoadedTasks(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; : tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FDD;&amp;#x5B58;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; saveTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; completeTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.completeTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.completeTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; completedTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getTitle(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getDescription(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), completedTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; completeTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        completeTask(getTaskWithId(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x6FC0;&amp;#x6D3B;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; activateTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.activateTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.activateTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; activeTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getTitle(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getDescription(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), activeTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x6FC0;&amp;#x6D3B;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; activateTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        activateTask(getTaskWithId(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6E05;&amp;#x9664;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; clearCompletedTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Iterator&amp;lt;Map.Entry&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt;&amp;gt; it = mCachedTasks.entrySet().iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Map.Entry&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; entry = it.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.getValue().isCompleted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                it.remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Gets tasks from local data source (sqlite) unless the table is new or empty. In that case it&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * uses the network data source. This is done to simplify the sample.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; getTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; cachedTask = getTaskWithId(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Respond immediately with cache if we have one&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cachedTask != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cachedTask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Is the task in the local data source? If not, query the network.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; = mTasksLocalDataSource.getTask(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; = mTasksRemoteDataSource.getTask(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Nullable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; getTaskWithId(@NonNull String id) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || mCachedTasks.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedTasks.get(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; refreshTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; deleteAllTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.deleteAllTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.deleteAllTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; deleteTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.deleteTask(checkNotNull(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.deleteTask(checkNotNull(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.remove(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update the UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyContentObserver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; TasksRepositoryObserver {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onTasksChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x6765;&amp;#x770B;&amp;#x5176;&amp;#x5B9E;TasksRepository &amp;#x4E3B;&amp;#x8981;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#x4E0D;&amp;#x5927;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x5C06;&amp;#x539F;&amp;#x5148;&amp;#x7684;Callback&amp;#x56DE;&amp;#x8C03;&amp;#x53D8;&amp;#x6210;&amp;#x4E86;&amp;#x89C2;&amp;#x5BDF;&amp;#x8005;&amp;#x6A21;&amp;#x5F0F;&amp;#x3002;TasksLocalDataSource&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;TasksRemoteDataSource&amp;#x53D8;&amp;#x5316;&amp;#x4E5F;&amp;#x4E0D;&amp;#x5927;&amp;#x3002;&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#x5E94;&amp;#x5F53;&amp;#x5C5E;&amp;#x4E8E;TasksLoader&lt;br&gt;&amp;#x5B83;&amp;#x662F;&amp;#x7EE7;&amp;#x627F;&amp;#x81EA;AsyncTaskLoader&amp;#x4EE5;&amp;#x53CA;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;TasksRepositoryObserver&amp;#x3002;AsyncTaskLoader &amp;#x8FD9;&amp;#x4E2A;&amp;#x4E4B;&amp;#x524D;&amp;#x90FD;&amp;#x6CA1;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x8865;&amp;#x4E0A;&amp;#x3002;&lt;br&gt;&amp;#x4E00;&amp;#x63D0;&amp;#x5230;AsyncTaskLoader&amp;#x4F30;&amp;#x8BA1;&amp;#x5C31;&amp;#x4F1A;&amp;#x60F3;&amp;#x5230;CursorLoader&amp;#x4EE5;&amp;#x53CA;AysncTask&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x4E5F;&amp;#x5DEE;&amp;#x4E0D;&amp;#x591A;&amp;#xFF0C;&amp;#x5B83;&amp;#x5C31;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksLoader&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTaskLoader&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Task&lt;/span&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksRepository&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;TasksRepositoryObserver&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksRepository mRepository;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksLoader&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, @NonNull TasksRepository repository)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(repository);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRepository = repository;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;Task&amp;gt; &lt;span class=&quot;title&quot;&gt;loadInBackground&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mRepository.getTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deliverResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;Task&amp;gt; data)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x540E;&amp;#x53F0;&amp;#x52A0;&amp;#x8F7D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6CA1;&amp;#x6709;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isReset()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x7ED3;&amp;#x679C;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;UI&amp;#x7EBF;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isStarted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.deliverResult(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStartLoading&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x90A3;&amp;#x4E48;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Deliver any previously loaded data immediately if available.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRepository.cachedTasksAvailable()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            deliverResult(mRepository.getCachedTasks());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x76D1;&amp;#x542C;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Begin monitoring the underlying data source.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRepository.addContentObserver(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5185;&amp;#x5BB9;&amp;#x6709;&amp;#x6539;&amp;#x53D8;&amp;#x6216;&amp;#x8005;&amp;#x5185;&amp;#x5B58;&amp;#x7F13;&amp;#x5B58;&amp;#x5185;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0D;&amp;#x53EF;&amp;#x7528;&amp;#x90A3;&amp;#x4E48;&amp;#x5F3A;&amp;#x5236;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;&amp;#x52A0;&amp;#x8F7D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (takeContentChanged() || !mRepository.cachedTasksAvailable()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// When a change has  been delivered or the repository cache isn&amp;apos;t available, we force&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// a load.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            forceLoad();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStopLoading&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cancelLoad();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onReset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cancelLoad();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRepository.removeContentObserver(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x4E2D;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x5316;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x6B21;&amp;#x52A0;&amp;#x8F7D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTasksChanged&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isStarted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            forceLoad();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksPresenter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksContract&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Presenter&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;LoaderManager&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;LoaderCallbacks&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;List&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Task&lt;/span&gt;&amp;gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; TASKS_QUERY = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksRepository mTasksRepository;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksContract.View mTasksView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksLoader mLoader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; LoaderManager mLoaderManager;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; List&amp;lt;Task&amp;gt; mCurrentTasks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksFilterType mCurrentFiltering = TasksFilterType.ALL_TASKS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mFirstLoad;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksPresenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull TasksLoader loader, @NonNull LoaderManager loaderManager,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          @NonNull TasksRepository tasksRepository, @NonNull TasksContract.View tasksView)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLoader = checkNotNull(loader, &lt;span class=&quot;string&quot;&gt;&amp;quot;loader cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLoaderManager = checkNotNull(loaderManager, &lt;span class=&quot;string&quot;&gt;&amp;quot;loader manager cannot be null&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository = checkNotNull(tasksRepository, &lt;span class=&quot;string&quot;&gt;&amp;quot;tasksRepository cannot be null&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView = checkNotNull(tasksView, &lt;span class=&quot;string&quot;&gt;&amp;quot;tasksView cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.setPresenter(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If a task was successfully added, show snackbar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (AddEditTaskActivity.REQUEST_ADD_TASK == requestCode &amp;amp;&amp;amp; Activity.RESULT_OK == resultCode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.showSuccessfullySavedMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x542F;&amp;#x52A8;AsyncTaskLoader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLoaderManager.initLoader(TASKS_QUERY, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Loader&amp;lt;List&amp;lt;Task&amp;gt;&amp;gt; onCreateLoader(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; id, Bundle args) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.setLoadingIndicator(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD4;&amp;#x56DE;&amp;#x4ECE;TaskActivity&amp;#x4E2D;&amp;#x4F20;&amp;#x6765;&amp;#x7684;TasksLoader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mLoader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLoadFinished&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Loader&amp;lt;List&amp;lt;Task&amp;gt;&amp;gt; loader, List&amp;lt;Task&amp;gt; data)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.setLoadingIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentTasks = data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.showLoadingTasksError();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            showFilteredTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showFilteredTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        List&amp;lt;Task&amp;gt; tasksToDisplay = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentTasks != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Task task : mCurrentTasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ALL_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tasksToDisplay.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task.isActive()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            tasksToDisplay.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task.isCompleted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            tasksToDisplay.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tasksToDisplay.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processTasks(tasksToDisplay);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLoaderReset&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Loader&amp;lt;List&amp;lt;Task&amp;gt;&amp;gt; loader)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// no-op&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; forceUpdate Pass in true to refresh the data in the {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksDataSource}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; forceUpdate)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (forceUpdate || mFirstLoad) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFirstLoad = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksRepository.refreshTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            showFilteredTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;Task&amp;gt; tasks)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasks.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Show a message indicating there are no tasks for that filter type.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processEmptyTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Show the list of tasks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.showTasks(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Set the filter label&amp;apos;s text.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            showFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showFilterLabel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showActiveFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showCompletedFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showAllFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processEmptyTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoActiveTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addNewTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showAddTask();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;openTaskDetails&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task requestedTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(requestedTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;requestedTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskDetailsUi(requestedTask.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task completedTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(completedTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;completedTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.completeTask(completedTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskMarkedComplete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activateTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task activeTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(activeTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;activeTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.activateTask(activeTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskMarkedActive();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearCompletedTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showCompletedTasksCleared();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Sets the current task filtering type.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; requestType Can be {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#ALL_TASKS},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *                    {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#COMPLETED_TASKS}, or {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#ACTIVE_TASKS}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TasksFilterType requestType)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentFiltering = requestType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TasksFilterType &lt;span class=&quot;title&quot;&gt;getFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCurrentFiltering;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD4;&amp;#x8FC7;&amp;#x5934;&amp;#x770B;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x548C;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x5DEE;&amp;#x522B;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x5927;&amp;#xFF0C;&amp;#x5DEE;&amp;#x522B;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x589E;&amp;#x52A0;&amp;#x4E86;TasksLoader&amp;#xFF0C;&amp;#x5C06;&amp;#x539F;&amp;#x5148;&amp;#x5728;&amp;#x4E3B;&amp;#x8981;&amp;#x7EBF;&amp;#x7A0B;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6539;&amp;#x6210;&amp;#x4F7F;&amp;#x7528;Loader&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4F7F;&amp;#x7528;Observer&amp;#x6765;&amp;#x76D1;&amp;#x542C;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x5408;&amp;#x7684;&amp;#x53D8;&amp;#x5316;&amp;#xFF0C;&amp;#x6765;&amp;#x4EE3;&amp;#x66FF;&amp;#x56DE;&amp;#x8C03;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/22/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO-MVP-Loaders/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x770B;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4E4B;&amp;#x524D;&amp;#x8BF7;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;Android &amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android 开源源码" scheme="http://yoursite.com/tags/Android-%E5%BC%80%E6%BA%90%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之TODO MVP</title>
    <link href="http://yoursite.com/2016/08/22/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BTODO-MVP-1/"/>
    <id>http://yoursite.com/2016/08/22/Android-源码分析之TODO-MVP-1/</id>
    <published>2016-08-22T04:30:23.000Z</published>
    <updated>2016-10-30T17:25:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x65B0;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5B9A;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x4E0A;&amp;#x73ED;&amp;#x4E4B;&amp;#x524D;&amp;#x6709;&amp;#x70B9;&amp;#x4E8B;&amp;#x60C5;&amp;#x9700;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#xFF0C;&amp;#x4E5F;&amp;#x8D81;&amp;#x673A;&amp;#x4F11;&amp;#x606F;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x597D;&amp;#x51E0;&amp;#x5929;&amp;#x6CA1;&amp;#x6709;&amp;#x66F4;&amp;#x65B0;&amp;#x535A;&amp;#x5BA2;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5FC3;&amp;#x91CC;&amp;#x8FD8;&amp;#x662F;&amp;#x60E6;&amp;#x8BB0;&amp;#x7740;&amp;#x4ECA;&amp;#x540E;&amp;#x9700;&amp;#x8981;&amp;#x5199;&amp;#x70B9;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x611F;&amp;#x89C9;&amp;#x8FD8;&amp;#x662F;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x9700;&amp;#x8981;&amp;#x5B66;&amp;#x4E60;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x4F1A;&amp;#x504F;&amp;#x5411;&amp;#x4E8E;&amp;#x901A;&amp;#x8FC7;&amp;#x5B9E;&amp;#x4F8B;&amp;#x6765;&amp;#x5206;&amp;#x6790;&amp;#x67B6;&amp;#x6784;&amp;#x8BBE;&amp;#x8BA1;&amp;#x4E0A;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x6280;&amp;#x672F;&amp;#x5427;&amp;#x3002;&amp;#x603B;&amp;#x7684;&amp;#x6765;&amp;#x8BF4;&amp;#x4ECA;&amp;#x5929;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4F1A;&amp;#x4ECE;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x65B9;&amp;#x9762;&amp;#x8FDB;&amp;#x884C;&amp;#x5C55;&amp;#x5F00;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5F00;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x67B6;&amp;#x6784;&amp;#x5206;&amp;#x6790;&lt;/li&gt;
&lt;li&gt;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;View + &amp;#x8BBE;&amp;#x8BA1;&amp;#x65B9;&amp;#x9762;&amp;#x7684;&amp;#x77E5;&amp;#x8BC6; + MD &amp;#x98CE;&amp;#x683C;&lt;/li&gt;
&lt;li&gt;AOSP&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&lt;/li&gt;
&lt;li&gt;RectNative + H5&lt;/li&gt;
&lt;li&gt;&amp;#x5F00;&amp;#x6E90;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&lt;br&gt;&amp;#x5E0C;&amp;#x671B;&amp;#x4ECA;&amp;#x5E74;&amp;#x80FD;&amp;#x591F;&amp;#x5728;&amp;#x67B6;&amp;#x6784;&amp;#x4E0A;&amp;#x6709;&amp;#x6240;&amp;#x63D0;&amp;#x9AD8;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#xFF0C;&amp;#x8F6C;&amp;#x5165;&amp;#x6B63;&amp;#x9898;&amp;#xFF0C;&amp;#x4ECA;&amp;#x5929;&amp;#x60F3;&amp;#x5411;&amp;#x5927;&amp;#x5BB6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x662F;Google Sample&amp;#x53D1;&amp;#x5E03;&amp;#x7684;android&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x7684;&amp;#x6846;&amp;#x67B6;&amp;#x8BBE;&amp;#x8BA1;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x5B8C;&amp;#x6574;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x5982;&amp;#x4E0B;&amp;#x94FE;&amp;#x63A5;&amp;#x4E2D;&amp;#x4E0B;&amp;#x8F7D;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;https://github.com/googlesamples/android-architecture&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Architecture&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5305;&amp;#x62EC;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp/ - Basic Model-View-Presenter architecture.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-loaders/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, fetches data &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Loaders.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-databinding/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; the Data Binding &lt;span class=&quot;keyword&quot;&gt;Library&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-clean/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; concepts &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; Clean Architecture.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-dagger/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; Dagger2 &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; Dependency Injection&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-contentproviders/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp-loaders, fetches data &lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; Loaders &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; Content Providers&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dev-todo-mvp-rxjava/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; RxJava &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; concurrency &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; data layer abstraction.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;todo-mvp-fragmentless/ - Based &lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt; todo-mvp, &lt;span class=&quot;keyword&quot;&gt;uses&lt;/span&gt; Android views instead &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; Fragments.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C06;&amp;#x4F1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E2A;&amp;#x5BF9;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4EE3;&amp;#x7801;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x5728;&amp;#x7EE7;&amp;#x7EED;&amp;#x5F80;&amp;#x4E0B;&amp;#x770B;&amp;#x4E4B;&amp;#x524D;&amp;#x5EFA;&amp;#x8BAE;&amp;#x5927;&amp;#x5BB6;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x6211;&amp;#x4E4B;&amp;#x524D;&amp;#x5199;&amp;#x7684;MVC&amp;#xFF0C;MVP&amp;#xFF0C;MVVM&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5C06;&amp;#x4F1A;&amp;#x5BF9;todo-mvp&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x540E;&amp;#x7EED;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#xFF0C;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x5B83;&amp;#x7684;&amp;#x7C7B;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/22/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO-MVP-1/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x518D;&amp;#x548C;&lt;br&gt;&lt;img src=&quot;/2016/08/22/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO-MVP-1/2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x8FDB;&amp;#x884C;&amp;#x5BF9;&amp;#x6BD4;&amp;#x4E0B;&amp;#x8FD9;&amp;#x6837;&amp;#x4F1A;&amp;#x66F4;&amp;#x5BB9;&amp;#x6613;&amp;#x7406;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;MVP&amp;#x6A21;&amp;#x5F0F;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x9879;&amp;#x76EE;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x7EC4;&amp;#x7EC7;&amp;#x7684;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/22/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;TODO-MVP-1/3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;addedittask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;label&quot;&gt;statistics&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;taskdetail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;tasks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E09;&amp;#x4E2A;&amp;#x5305;&amp;#x662F;&amp;#x5E76;&amp;#x5217;&amp;#x7684;&amp;#x5206;&amp;#x522B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x662F;&amp;#x6DFB;&amp;#x52A0;&amp;#x7F16;&amp;#x8F91;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x7EDF;&amp;#x8BA1;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4FE1;&amp;#x606F;&amp;#x67E5;&amp;#x8BE2;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C55;&amp;#x73B0;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x8FB9;&amp;#x53EA;&amp;#x4EE5;tasks&amp;#xFF08;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C55;&amp;#x73B0;&amp;#x529F;&amp;#x80FD;&amp;#xFF09;&amp;#x529F;&amp;#x80FD;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5206;&amp;#x6790;&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;module &amp;#x5C42;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E;/data  &amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x4E0A;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x4E09;&amp;#x7EA7;&amp;#x7F13;&amp;#x5B58;&amp;#xFF1A;&amp;#x5185;&amp;#x5B58;&amp;#x7EA7;&amp;#x522B;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x7EA7;&amp;#x522B;&amp;#xFF0C;&amp;#x8FDC;&amp;#x7A0B;&amp;#x7F51;&amp;#x7EDC;&amp;#x7EA7;&amp;#x522B;&amp;#x3002;&lt;br&gt;View &amp;#x5C42;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E;TasksFragment&amp;#x4E2D;&lt;br&gt;Presenter &amp;#x5C42;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E;TasksPresenter&lt;/p&gt;
&lt;p&gt;TasksContract &amp;#x662F;&amp;#x5408;&amp;#x540C;&amp;#x7C7B;&amp;#xFF0C;&amp;#x5F53;&amp;#x4E2D;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;MVP&amp;#x6A21;&amp;#x5F0F;&amp;#x4E2D;&amp;#x4F7F;&amp;#x7528;&amp;#x5230;&amp;#x7684;View&amp;#x548C;Presenter&amp;#x63A5;&amp;#x53E3;&amp;#x3002;&lt;br&gt;TasksActivity&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;View&amp;#x548C;Presenter&lt;br&gt;BasePresenter &amp;#x662F;&amp;#x6240;&amp;#x6709;Presenter&amp;#x7684;&amp;#x7236;&amp;#x63A5;&amp;#x53E3;&lt;br&gt;BaseView &amp;#x662F;&amp;#x6240;&amp;#x6709;View&amp;#x5C42;&amp;#x7684;&amp;#x7236;&amp;#x63A5;&amp;#x53E3;&lt;/p&gt;
&lt;p&gt;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8FDB;&amp;#x884C;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;BaseView&amp;#x8FD9;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x7684;View&amp;#x90FD;&amp;#x4F1A;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x5B83;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x58F0;&amp;#x660E;setPresenter&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x4E3A;View&amp;#x5C42;&amp;#x8BBE;&amp;#x7F6E;Presenter&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.android.architecture.blueprints.todoapp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseView&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;T&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setPresenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T presenter)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x540C;&amp;#x6837;&amp;#x770B;&amp;#x4E0B;&amp;#x6240;&amp;#x6709;Presenter&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x540C;&amp;#x6837;&amp;#x4E5F;&amp;#x53EA;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;start&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.example.android.architecture.blueprints.todoapp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BasePresenter&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x770B;&amp;#x5230;&amp;#x6240;&amp;#x6709;&amp;#x7684;Presenter&amp;#x90FD;&amp;#x4F1A;&amp;#x5B9E;&amp;#x73B0;BasePresenter&amp;#xFF0C;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x7C7B;&amp;#x90FD;&amp;#x4F1A;&amp;#x5B9E;&amp;#x73B0;BaseView&amp;#x3002;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x6240;&amp;#x6709;&amp;#x7684;Presenter&amp;#x4EE5;&amp;#x53CA;View&amp;#x7684;&amp;#x516C;&amp;#x5171;&amp;#x63A5;&amp;#x53E3;&amp;#x653E;&amp;#x7F6E;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5730;&amp;#x65B9;&amp;#x58F0;&amp;#x660E;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x5408;&amp;#x540C;&amp;#x7C7B;&amp;#xFF1A;TasksContract&lt;br&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;&amp;#x4E0B;&amp;#x5408;&amp;#x540C;&amp;#x7C7B;&amp;#x662F;&amp;#x7528;&amp;#x6765;&amp;#x5E72;&amp;#x561B;&amp;#x7684;&amp;#xFF0C;&amp;#x5408;&amp;#x540C;&amp;#x7C7B;&amp;#x5176;&amp;#x5B9E;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x89C4;&amp;#x8303;View&amp;#x5C42;&amp;#x548C;Presenter&amp;#x4EA4;&amp;#x4E92;&amp;#x63A5;&amp;#x53E3;&amp;#x7684;&amp;#x7C7B;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;&amp;#x5408;&amp;#x540C;&amp;#x7C7B;&amp;#x4E2D;View&amp;#x63A5;&amp;#x53E3;&amp;#x90FD;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x64CD;&amp;#x4F5C;&amp;#x754C;&amp;#x9762;&amp;#x4E0A;&amp;#x7684;&amp;#x63A7;&amp;#x5236;&amp;#xFF0C;Presenter&amp;#x63A5;&amp;#x53E3;&amp;#x57FA;&amp;#x672C;&amp;#x4E0A;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;Presenter&amp;#x6765;&amp;#x64CD;&amp;#x4F5C;module&amp;#x5C42;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksContract&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BaseView&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;Presenter&lt;/span&gt;&amp;gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setLoadingIndicator&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; active)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;Task&amp;gt; tasks)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showAddTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showTaskDetailsUi&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String taskId)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showTaskMarkedComplete&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showTaskMarkedActive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showCompletedTasksCleared&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showLoadingTasksError&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showNoTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showActiveFilterLabel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showCompletedFilterLabel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showAllFilterLabel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showNoActiveTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showNoCompletedTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showSuccessfullySavedMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isActive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showFilteringPopUpMenu&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Presenter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BasePresenter&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; forceUpdate)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addNewTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;openTaskDetails&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task requestedTask)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task completedTask)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activateTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task activeTask)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearCompletedTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TasksFilterType requestType)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;TasksFilterType &lt;span class=&quot;title&quot;&gt;getFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#x540E;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x5177;&amp;#x4F53;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;TasksActivity&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksActivity&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AppCompatActivity&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TasksPresenter&lt;/span&gt; mTasksPresenter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void onCreate(&lt;span class=&quot;type&quot;&gt;Bundle&lt;/span&gt; savedInstanceState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;TaskFragment View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt; tasksFragment = (&lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt;) getSupportFragmentManager().findFragmentById(&lt;span class=&quot;type&quot;&gt;R&lt;/span&gt;.id.contentFrame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasksFragment == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;TaskFragment View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tasksFragment = &lt;span class=&quot;type&quot;&gt;TasksFragment&lt;/span&gt;.newInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;ActivityUtils&lt;/span&gt;.addFragmentToActivity(getSupportFragmentManager(), tasksFragment, &lt;span class=&quot;type&quot;&gt;R&lt;/span&gt;.id.contentFrame);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Presenter &amp;#x8FD9;&amp;#x4E2A;Presenter&amp;#x6301;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;Module&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;TaskFragment&amp;#x8FD9;&amp;#x4E2A;View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksPresenter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;TasksPresenter&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;Injection&lt;/span&gt;.provideTasksRepository(getApplicationContext()), tasksFragment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//..........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;TaskFragment&amp;#x4F5C;&amp;#x4E3A;View&amp;#x5C42;&amp;#x3002;&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;TasksActivity&amp;#x4E0A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;TasksPresenter&amp;#xFF0C;TasksPresenter &amp;#x4E2D;&amp;#x6301;&amp;#x6709;&amp;#x6570;&amp;#x636E;&amp;#x5C42;TasksRepository&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;View&amp;#x5C42;TasksFragment&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;View&amp;#x5C42;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksFragment&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Fragment&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksContract&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;View&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksContract.Presenter mPresenter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksAdapter mListAdapter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; View mNoTasksView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ImageView mNoTaskIcon;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mNoTaskMainView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mNoTaskAddView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; LinearLayout mTasksView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TextView mFilteringLabelView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksFragment&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Requires empty public constructor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksFragment &lt;span class=&quot;title&quot;&gt;newInstance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TasksFragment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@Nullable Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onCreate(savedInstanceState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;Adapter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mListAdapter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TasksAdapter(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Task&amp;gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), mItemListener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onResume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPresenter.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setPresenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull TasksContract.Presenter presenter)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x7ED9;&amp;#x5F53;&amp;#x524D;&amp;#x7684;View&amp;#x8BBE;&amp;#x7F6E;Presenter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPresenter = checkNotNull(presenter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onActivityResult&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode, Intent data)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPresenter.result(requestCode, resultCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Nullable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View &lt;span class=&quot;title&quot;&gt;onCreateView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(LayoutInflater inflater, ViewGroup container,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             Bundle savedInstanceState)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View root = inflater.inflate(R.layout.tasks_frag, container, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set up tasks view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListView listView = (ListView) root.findViewById(R.id.tasks_list);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listView.setAdapter(mListAdapter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFilteringLabelView = (TextView) root.findViewById(R.id.filteringLabel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView = (LinearLayout) root.findViewById(R.id.tasksLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set up  no tasks view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoTasksView = root.findViewById(R.id.noTasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoTaskIcon = (ImageView) root.findViewById(R.id.noTasksIcon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoTaskMainView = (TextView) root.findViewById(R.id.noTasksMain);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoTaskAddView = (TextView) root.findViewById(R.id.noTasksAdd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoTaskAddView.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnClickListener() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPresenter.addNewTask();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set up floating action button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FloatingActionButton fab = (FloatingActionButton) getActivity().findViewById(R.id.fab_add_task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fab.setImageResource(R.drawable.ic_add);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fab.setOnClickListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View.OnClickListener() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View v)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPresenter.addNewTask();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set up progress indicator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ScrollChildSwipeRefreshLayout swipeRefreshLayout = (ScrollChildSwipeRefreshLayout) root.findViewById(R.id.refresh_layout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swipeRefreshLayout.setColorSchemeColors(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ContextCompat.getColor(getActivity(), R.color.colorPrimary),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ContextCompat.getColor(getActivity(), R.color.colorAccent),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ContextCompat.getColor(getActivity(), R.color.colorPrimaryDark)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set the scrolling view in the custom SwipeRefreshLayout.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swipeRefreshLayout.setScrollUpChild(listView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        swipeRefreshLayout.setOnRefreshListener(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SwipeRefreshLayout.OnRefreshListener() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onRefresh&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPresenter.loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setHasOptionsMenu(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; root;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;View&amp;#x5C42;&amp;#x4E2D;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;setPresenter&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x8BA9;View&amp;#x5C42;&amp;#x6301;&amp;#x6709;Presenter&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x6709;&amp;#x4E86;Presenter&amp;#x5F15;&amp;#x7528;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;View&amp;#x5C42;&amp;#x4E2D;&amp;#x7684;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x79FB;&amp;#x5230;Presenter&amp;#x4E0A;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x4FDD;&amp;#x8BC1;View&amp;#x5C42;&amp;#x7684;&amp;#x8F7B;&amp;#x4FBF;&amp;#x3002;&lt;br&gt;&amp;#x800C;View&amp;#x5C42;&amp;#x4E2D;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x548C;&amp;#x9875;&amp;#x9762;&amp;#x4E0A;&amp;#x63A7;&amp;#x4EF6;&amp;#x64CD;&amp;#x4F5C;&amp;#x6709;&amp;#x5173;&amp;#x3002;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x4F9B;Presenter&amp;#x8C03;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Injection&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksRepository &lt;span class=&quot;title&quot;&gt;provideTasksRepository&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Context context&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; TasksRepository.getInstance(TasksRemoteDataSource.getInstance(),TasksLocalDataSource.getInstance(context));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;TasksDataSource&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x56DE;&amp;#x8C03;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x56DE;&amp;#x8C03;&amp;#x63A5;&amp;#x53E3;&amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x5B8C;&amp;#x6210;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E4B;&amp;#x540E;&amp;#x56DE;&amp;#x8C03;&amp;#x901A;&amp;#x77E5;Presenter&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksDataSource&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LoadTasksCallback&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTasksLoaded&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;List&amp;lt;Task&amp;gt; tasks&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDataNotAvailable&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;GetTaskCallback&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTaskLoaded&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;Task task&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDataNotAvailable&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTasks&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull LoadTasksCallback callback&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull String taskId, @NonNull GetTaskCallback callback&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;saveTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Task task&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Task task&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull String taskId&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activateTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull Task task&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activateTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull String taskId&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearCompletedTasks&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;refreshTasks&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deleteAllTasks&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;deleteTask&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;@NonNull String taskId&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;TasksDataSource&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;TasksRepository&amp;#x7C7B;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x3002;&amp;#x5B83;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5BF9;&amp;#x8C61;mTasksRemoteDataSource&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x6A21;&amp;#x62DF;&amp;#x7F51;&amp;#x7EDC;&amp;#x5C42;&amp;#x6570;&amp;#x636E;&amp;#x6765;&amp;#x6E90;&amp;#x3002;mTasksLocalDataSource &amp;#x7528;&amp;#x4E8E;&amp;#x8868;&amp;#x793A;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x6765;&amp;#x6E90;&amp;#x8FD9;&amp;#x91CC;&amp;#x4EE3;&amp;#x8868;&amp;#x7684;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x3002;&lt;br&gt;mCachedTasks &amp;#x662F;&amp;#x5185;&amp;#x5B58;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;mCacheIsDirty&amp;#x8868;&amp;#x793A;&amp;#x7F13;&amp;#x5B58;&amp;#x5185;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6548;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; TasksRepository &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; TasksDataSource {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksRepository INSTANCE = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6A21;&amp;#x62DF;&amp;#x7F51;&amp;#x7EDC;&amp;#x5C42;&amp;#x6570;&amp;#x636E;&amp;#x6765;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksDataSource mTasksRemoteDataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6A21;&amp;#x62DF;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x6765;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksDataSource mTasksLocalDataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x5185;&amp;#x5B58;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; mCachedTasks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x7528;&amp;#x4E8E;&amp;#x8868;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6548;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Marks the cache as invalid, to force an update the next time data is requested. This variable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * has package local visibility so it can be accessed from tests.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksRepository(@NonNull TasksDataSource tasksRemoteDataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            @NonNull TasksDataSource tasksLocalDataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource = checkNotNull(tasksRemoteDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource = checkNotNull(tasksLocalDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Returns the single instance of this class, creating it if necessary.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasksRemoteDataSource the backend data source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasksLocalDataSource  the device storage data source&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return the {@link TasksRepository} instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;// &amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x4F8B;&amp;#x521B;&amp;#x5EFA;TasksRepository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; TasksRepository getInstance(TasksDataSource tasksRemoteDataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              TasksDataSource tasksLocalDataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (INSTANCE == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            INSTANCE = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TasksRepository(tasksRemoteDataSource, tasksLocalDataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INSTANCE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Used to force {@link #getInstance(TasksDataSource, TasksDataSource)} to create a new instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * next time it&amp;apos;s called.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; destroyInstance() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        INSTANCE = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#xFF08;SQLite&amp;#xFF09;&amp;#x6216;&amp;#x8005;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6; Task&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Gets tasks from cache, local data source (SQLite) or remote data source, whichever is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * available first.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Note: {@link LoadTasksCallback#onDataNotAvailable()} is fired if all data sources fail to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * get the data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; getTasks(@NonNull &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; LoadTasksCallback callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Respond immediately with cache if available and not dirty&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &amp;#x5982;&amp;#x679C;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#x6709;&amp;#x5185;&amp;#x5BB9;&amp;#x5E76;&amp;#x4E14;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x90A3;&amp;#x4E48;&amp;#x76F4;&amp;#x63A5;&amp;#x5C06;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x4F20;&amp;#x9012;&amp;#x51FA;&amp;#x53BB;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !mCacheIsDirty) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            callback.onTasksLoaded(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(mCachedTasks.values()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCacheIsDirty) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;///&amp;#x5982;&amp;#x679C;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E0D;&amp;#x53EF;&amp;#x7528;&amp;#x90A3;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x4ECE;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x65B0;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If the cache is dirty we need to fetch new data from the network.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getTasksFromRemoteDataSource(callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Query the local storage if available. If not, query the network.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E00;&amp;#x822C;&amp;#x53D1;&amp;#x751F;&amp;#x5728;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;mCachedTasks = null &amp;#x5E76;&amp;#x4E14;mCacheIsDirty = false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksLocalDataSource.getTasks(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LoadTasksCallback() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onTasksLoaded(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    refreshCache(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    callback.onTasksLoaded(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(mCachedTasks.values()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onDataNotAvailable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x6CA1;&amp;#x6709;&amp;#x6570;&amp;#x636E;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    getTasksFromRemoteDataSource(callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x8981;&amp;#x4FDD;&amp;#x5B58;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; saveTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  &amp;#x6DFB;&amp;#x52A0;&amp;#x5B8C;&amp;#x6210;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x5C06;complete&amp;#x6807;&amp;#x5FD7;&amp;#x4E3A;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; completeTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.completeTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.completeTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; completedTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getTitle(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getDescription(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), completedTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; completeTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        completeTask(getTaskWithId(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x6FC0;&amp;#x6D3B;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E0A;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x5F97;&amp;#x5C06;complete&amp;#x8BBE;&amp;#x7F6E;&amp;#x6210;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; activateTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.activateTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.activateTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; activeTask = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getTitle(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getDescription(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), activeTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; activateTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        activateTask(getTaskWithId(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x6E05;&amp;#x9664;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; clearCompletedTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Do in memory cache update to keep the app UI up to date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Iterator&amp;lt;Map.Entry&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt;&amp;gt; it = mCachedTasks.entrySet().iterator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it.hasNext()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Map.Entry&amp;lt;String, &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; entry = it.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.getValue().isCompleted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                it.remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Gets tasks from local data source (sqlite) unless the table is new or empty. In that case it&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * uses the network data source. This is done to simplify the sample.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Note: {@link LoadTasksCallback#onDataNotAvailable()} is fired if both data sources fail to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * get the data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  &amp;#x4F9D;&amp;#x6B21;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#xFF0C;&amp;#x8FDC;&amp;#x7A0B;&amp;#x4E2D;&amp;#x67E5;&amp;#x627E;&amp;#x67D0;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param taskId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param callback&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; getTask(@NonNull &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String taskId, @NonNull &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; GetTaskCallback callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x6307;&amp;#x5B9A;&amp;#x4EFB;&amp;#x52A1;id&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; cachedTask = getTaskWithId(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Respond immediately with cache if available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cachedTask != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            callback.onTaskLoaded(cachedTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4EE5;&amp;#x53CA;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x83B7;&amp;#x53D6;&amp;#x6307;&amp;#x5B9A;id&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Load from server/persisted if needed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Is the task in the local data source? If not, query the network.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.getTask(taskId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GetTaskCallback() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onTaskLoaded(&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                callback.onTaskLoaded(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onDataNotAvailable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksRemoteDataSource.getTask(taskId, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GetTaskCallback() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onTaskLoaded(&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        callback.onTaskLoaded(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onDataNotAvailable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        callback.onDataNotAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7F13;&amp;#x5B58;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x4E0D;&amp;#x53EF;&amp;#x7528;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; refreshTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x5220;&amp;#x9664;&amp;#x8FDC;&amp;#x7A0B;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; deleteAllTasks() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.deleteAllTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.deleteAllTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x5C06;&amp;#x67D0;&amp;#x4E2A;&amp;#x4EFB;&amp;#x52A1;&amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x8FDC;&amp;#x7A0B;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5220;&amp;#x9664;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param taskId&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; deleteTask(@NonNull String taskId) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.deleteTask(checkNotNull(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.deleteTask(checkNotNull(taskId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.remove(taskId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x4ECE;&amp;#x8FDC;&amp;#x7A0B;&amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x4EFB;&amp;#x52A1;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#x548C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param callback&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; getTasksFromRemoteDataSource(@NonNull &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; LoadTasksCallback callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRemoteDataSource.getTasks(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LoadTasksCallback() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onTasksLoaded(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;///&amp;#x4ECE;&amp;#x8FDC;&amp;#x7A0B;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x540E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#x548C;&amp;#x672C;&amp;#x5730;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                refreshCache(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                refreshLocalDataSource(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                callback.onTasksLoaded(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;&amp;gt;(mCachedTasks.values()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            @Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; onDataNotAvailable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                callback.onDataNotAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x7684;tasks&amp;#x6765;&amp;#x586B;&amp;#x5145;mCachedTasks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; refreshCache(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LinkedHashMap&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCachedTasks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; : tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCachedTasks.put(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;.getId(), &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCacheIsDirty = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *  &amp;#x7528;&amp;#x53C2;&amp;#x6570;&amp;#x7684;tasks&amp;#x6765;&amp;#x586B;&amp;#x5145;mTasksLocalDataSource&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param tasks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; refreshLocalDataSource(List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt;&amp;gt; tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksLocalDataSource.deleteAllTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt; : tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksLocalDataSource.saveTask(&lt;span class=&quot;keyword&quot;&gt;task&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;#x4ECE;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x6307;&amp;#x5B9A;id&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @param id  &amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;id&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @Nullable&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;Task&lt;/span&gt; getTaskWithId(@NonNull String id) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCachedTasks == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || mCachedTasks.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCachedTasks.get(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;&amp;#x597D;&amp;#x5904;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x968F;&amp;#x4FBF;&amp;#x66F4;&amp;#x6362;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x6570;&amp;#x636E;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#x5E95;&amp;#x5C42;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&amp;#x800C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x6539;&amp;#x52A8;&amp;#x5230;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x6211;&amp;#x4EEC;&amp;#x4FEE;&amp;#x6539;&amp;#x65B9;&amp;#x6848;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6309;&amp;#x7167;&amp;#x63A5;&amp;#x53E3;&amp;#x5B9A;&amp;#x4E49;&amp;#x89C4;&amp;#x8303;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9E;&amp;#x73B0;&amp;#x5373;&amp;#x53EF;&amp;#x3002;&amp;#x8FD9;&amp;#x6837;&amp;#x5BF9;&amp;#x4E8E;&amp;#x591A;&amp;#x4EBA;&amp;#x5F00;&amp;#x53D1;&amp;#x4E5F;&amp;#x662F;&amp;#x6709;&amp;#x5F88;&amp;#x5927;&amp;#x597D;&amp;#x5904;&amp;#x7684;&amp;#xFF0C;&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x5206;&amp;#x89E3;&amp;#x8026;&amp;#x4E86;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5355;&amp;#x72EC;&amp;#x5F00;&amp;#x53D1;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;Presenter&amp;#x8868;&amp;#x793A;&amp;#x5C42;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksPresenter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksContract&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;Presenter&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksRepository mTasksRepository;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; TasksContract.View mTasksView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TasksFilterType mCurrentFiltering = TasksFilterType.ALL_TASKS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; mFirstLoad = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TasksPresenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull TasksRepository tasksRepository, @NonNull TasksContract.View tasksView)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6570;&amp;#x636E;&amp;#x5C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository = checkNotNull(tasksRepository, &lt;span class=&quot;string&quot;&gt;&amp;quot;tasksRepository cannot be null&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x89C6;&amp;#x56FE;&amp;#x5C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView = checkNotNull(tasksView, &lt;span class=&quot;string&quot;&gt;&amp;quot;tasksView cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;Presenter&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;View&amp;#x5C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.setPresenter(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x4EFB;&amp;#x52A1;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5904;&amp;#x7406;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; requestCode, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; resultCode)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If a task was successfully added, show snackbar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (AddEditTaskActivity.REQUEST_ADD_TASK == requestCode &amp;amp;&amp;amp; Activity.RESULT_OK == resultCode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x663E;&amp;#x793A;SnakeBar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.showSuccessfullySavedMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; forceUpdate)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Simplification for sample: a network reload will be forced on first load.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(forceUpdate || mFirstLoad, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstLoad = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; forceUpdate   Pass in true to refresh the data in the {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksDataSource}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; showLoadingUI Pass in true to display a loading icon in the UI&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loadTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; forceUpdate, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; showLoadingUI)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (showLoadingUI) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.setLoadingIndicator(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (forceUpdate) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksRepository.refreshTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The network request might be handled in a different thread so make sure Espresso knows&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// that the app is busy until the response is handled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EspressoIdlingResource.increment(); &lt;span class=&quot;comment&quot;&gt;// App is busy until further notice&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.getTasks(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TasksDataSource.LoadTasksCallback() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onTasksLoaded&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;Task&amp;gt; tasks)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x9700;&amp;#x8981;&amp;#x663E;&amp;#x793A;&amp;#x7684;Task&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                List&amp;lt;Task&amp;gt; tasksToShow = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;Task&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// This callback may be called twice, once for the cache and once for loading&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// the data from the server API, so we check before decrementing, otherwise&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// it throws &amp;quot;Counter has been corrupted!&amp;quot; exception.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!EspressoIdlingResource.getIdlingResource().isIdleNow()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    EspressoIdlingResource.decrement(); &lt;span class=&quot;comment&quot;&gt;// Set app as idle.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// We filter the tasks based on the requestType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (Task task : tasks) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;mCurrentFiltering &amp;#x663E;&amp;#x793A;&amp;#x90A3;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ALL_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            tasksToShow.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task.isActive()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                tasksToShow.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (task.isCompleted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                tasksToShow.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            tasksToShow.add(task);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// The view may not be able to handle UI updates anymore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mTasksView.isActive()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (showLoadingUI) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTasksView.setLoadingIndicator(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                processTasks(tasksToShow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDataNotAvailable&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// The view may not be able to handle UI updates anymore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mTasksView.isActive()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showLoadingTasksError();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(List&amp;lt;Task&amp;gt; tasks)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tasks.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Show a message indicating there are no tasks for that filter type.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x7C7B;&amp;#x578B;&amp;#x663E;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x663E;&amp;#x793A;&amp;#x7684;&amp;#x7A7A;&amp;#x52A0;&amp;#x8F7D;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processEmptyTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Show the list of tasks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x663E;&amp;#x793A;&amp;#x4EFB;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTasksView.showTasks(tasks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Set the filter label&amp;apos;s text.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            showFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;showFilterLabel&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showActiveFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showCompletedFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showAllFilterLabel();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processEmptyTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mCurrentFiltering) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ACTIVE_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoActiveTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; COMPLETED_TASKS:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTasksView.showNoTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//AddEditTaskActivity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addNewTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showAddTask();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//TaskDetailActivity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;openTaskDetails&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task requestedTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(requestedTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;requestedTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskDetailsUi(requestedTask.getId());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;completeTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task completedTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(completedTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;completedTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.completeTask(completedTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskMarkedComplete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;activateTask&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@NonNull Task activeTask)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkNotNull(activeTask, &lt;span class=&quot;string&quot;&gt;&amp;quot;activeTask cannot be null!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.activateTask(activeTask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showTaskMarkedActive();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clearCompletedTasks&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksRepository.clearCompletedTasks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasksView.showCompletedTasksCleared();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loadTasks(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Sets the current task filtering type.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; requestType Can be {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#ALL_TASKS},&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *                    {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#COMPLETED_TASKS}, or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *                    {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; TasksFilterType#ACTIVE_TASKS}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TasksFilterType requestType)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentFiltering = requestType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;TasksFilterType &lt;span class=&quot;title&quot;&gt;getFiltering&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mCurrentFiltering;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5B83;&amp;#x6301;&amp;#x6709;View&amp;#x5C42;&amp;#x548C;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x63D0;&amp;#x4F9B;&amp;#x7ED9;View&amp;#x5C42;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x7EDD;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x8C03;&amp;#x7528;View&amp;#x5C42;&amp;#x4EE5;&amp;#x53CA;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF0C;&amp;#x5B83;&amp;#x53EA;&amp;#x8D1F;&amp;#x8D23;&amp;#x6574;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x3002;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x548C;Presenter&amp;#x5C42;&amp;#x7684;&amp;#x4EA4;&amp;#x4E92;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;Callback&amp;#x56DE;&amp;#x8C03;&amp;#x673A;&amp;#x5236;&amp;#xFF0C;&amp;#x56DE;&amp;#x8C03;&amp;#x63A5;&amp;#x53E3;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5C42;&amp;#x63A5;&amp;#x53E3;&amp;#x4E2D;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x65B0;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5B9A;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x4E0A;&amp;#x73ED;&amp;#x4E4B;&amp;#x524D;&amp;#x6709;&amp;#x70B9;&amp;#x4E8B;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android 开源源码" scheme="http://yoursite.com/tags/Android-%E5%BC%80%E6%BA%90%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>睡前叨叨</title>
    <link href="http://yoursite.com/2016/08/11/%E7%9D%A1%E5%89%8D%E5%8F%A8%E5%8F%A8/"/>
    <id>http://yoursite.com/2016/08/11/睡前叨叨/</id>
    <published>2016-08-10T16:59:06.000Z</published>
    <updated>2016-08-14T00:42:44.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-11&quot;&gt;&lt;a href=&quot;#&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-11&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8; 2016-08-11&quot;&gt;&lt;/a&gt;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8; 2016-08-11&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x4E52;&amp;#x4E53;&amp;#x7403;&amp;#x754C;&amp;#x7684;&amp;#x201C;&amp;#x85CF;&amp;#x7352;&amp;#x201D; &amp;#x79D1;&amp;#x795E;&amp;#xFF0C;&amp;#x5F20;&amp;#x7EE7;&amp;#x79D1;&amp;#xFF0C;&amp;#x5728;&amp;#x7761;&amp;#x68A6;&amp;#x4E2D;&amp;#x628A;&amp;#x5BF9;&amp;#x624B;&amp;#x7ED9;&amp;#x529E;&amp;#x4E86;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#xFF0C;&amp;#x611F;&amp;#x89C9;&amp;#x79D1;&amp;#x795E;&amp;#x8981;&amp;#x662F;&amp;#x60F3;&amp;#x8D62;&amp;#xFF0C;&amp;#x53EA;&amp;#x4F1A;&amp;#x8F93;&amp;#x7ED9;&amp;#x6BD4;&amp;#x4ED6;&amp;#x66F4;&amp;#x60F3;&amp;#x8D62;&amp;#x7684;&amp;#x4EBA;&amp;#x3002;&amp;#x606D;&amp;#x559C;&amp;#x79D1;&amp;#x795E;&amp;#xFF01;&amp;#xFF01;&amp;#xFF01;&amp;#xFF01;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x660E;&amp;#x5929;&amp;#x8981;&amp;#x5F00;&amp;#x59CB;&amp;#x6295;&amp;#x7B80;&amp;#x5386;&amp;#x627E;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x671F;&amp;#x95F4;&amp;#xFF0C;&amp;#x6709;&amp;#x4E2A;&amp;#x5C0F;&amp;#x5C0F;&amp;#x7684;&amp;#x76EE;&amp;#x6807;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x57F9;&amp;#x517B;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x624B;&amp;#x7ED8;&amp;#x7231;&amp;#x597D;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x9053;&amp;#x5177;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x4F1A;&amp;#x7EDF;&amp;#x4E00;&amp;#x4E0A;&amp;#x4F20;&amp;#x5206;&amp;#x4EAB;&amp;#x7ED9;&amp;#x5927;&amp;#x5BB6;&amp;#xFF0C;&amp;#x54CE;&amp;#x5440;&amp;#xFF0C;&amp;#x5C0F;&amp;#x7EC6;&amp;#x817F;&amp;#x9732;&amp;#x70B9;&amp;#x4E86;&amp;#xFF0C;&amp;#x5475;&amp;#x5475;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/11/&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6708;&amp;#x7684;&amp;#x7761;&amp;#x524D;&amp;#x65F6;&amp;#x95F4;&amp;#x5C31;&amp;#x4EA4;&amp;#x7ED9;&amp;#x5A1C;&amp;#x59D0;&amp;#x4E86;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x4E5F;&amp;#x4F1A;&amp;#x5199;&amp;#x4E00;&amp;#x4E9B;&amp;#x4E66;&amp;#x8BC4;&amp;#x4E4B;&amp;#x7C7B;&amp;#x7684;&amp;#xFF0C;&amp;#x770B;&amp;#x65F6;&amp;#x95F4;&amp;#x662F;&amp;#x5426;&amp;#x5141;&amp;#x8BB8;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/11/&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;/22.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x56E0;&amp;#x4E3A;GitHub page&amp;#x5728;&amp;#x4E0D;&amp;#x7FFB;&amp;#x5899;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x4F1A;&amp;#x65F6;&amp;#x4E0D;&amp;#x65F6;&amp;#x5F97;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E0D;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x51E0;&amp;#x5929;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x627E;&amp;#x4E00;&amp;#x4E2A;&amp;#x56FD;&amp;#x5185;&amp;#x8F83;&amp;#x597D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x7F51;&amp;#x7AD9;&amp;#xFF0C;&amp;#x628A;&amp;#x8FD9;&amp;#x4E00;&amp;#x767E;&amp;#x591A;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x642C;&amp;#x8FC7;&amp;#x53BB;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E00;&amp;#x7C98;&amp;#x8D34;&amp;#x8FC7;&amp;#x53BB;&amp;#x683C;&amp;#x5F0F;&amp;#x90FD;&amp;#x4E71;&amp;#x4E86;&amp;#xFF0C;&amp;#x4E0D;&amp;#x597D;&amp;#x770B;&amp;#xFF0C;&amp;#x518D;&amp;#x8C03;&amp;#x683C;&amp;#x5F0F;&amp;#x9EBB;&amp;#x70E6;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&amp;#x5F00;&amp;#x6E90;&amp;#x4E2D;&amp;#x56FD;&amp;#x611F;&amp;#x89C9;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x6BCF;&amp;#x5929;&amp;#x53EA;&amp;#x80FD;&amp;#x4E0A;&amp;#x4F20;10&amp;#x7BC7;&amp;#xFF0C;&amp;#x90A3;&amp;#x6211;&amp;#x8FD9;&amp;#x8FB9;&amp;#x5168;&amp;#x642C;&amp;#x8FC7;&amp;#x53BB;&amp;#x8981;&amp;#x5DEE;&amp;#x4E0D;&amp;#x591A;&amp;#x534A;&amp;#x4E2A;&amp;#x6708;&amp;#xFF0C;&amp;#x5FC3;&amp;#x7D2F;&amp;#xFF0C;&amp;#x5C31;&amp;#x4E0D;&amp;#x642C;&amp;#x4E86;&amp;#xFF0C;&amp;#x65B9;&amp;#x6B63;&amp;#x89C9;&amp;#x5F97;&amp;#x8FD9;&amp;#x91CC;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x66F4;&amp;#x597D;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x51C0;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4E3A;&amp;#x4E86;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x800C;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x3002;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x662F;&amp;#x4E3B;&amp;#x9898;&amp;#x968F;&amp;#x4FBF;&amp;#x6362;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#x3002;&amp;#x5F97;&amp;#x7761;&amp;#x4E86;&amp;#xFF0C;&amp;#x660E;&amp;#x5929;&amp;#x5F00;&amp;#x59CB;&amp;#x6295;&amp;#x7B80;&amp;#x5386;&amp;#x4E86;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x201C;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x8FD8;&amp;#x6CA1;&amp;#x6765;&amp;#xFF0C;&amp;#x5C31;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x8981;&amp;#x653E;&amp;#x5F03;&amp;#xFF0C;&amp;#x5E76;&amp;#x76F8;&amp;#x4FE1;&amp;#x8BE5;&amp;#x6765;&amp;#x7684;&amp;#x603B;&amp;#x4F1A;&amp;#x6765;&amp;#x201D;  &amp;#x2014; &amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x8C01;&amp;#x8BF4;&amp;#x7684;&amp;#xFF0C;&amp;#x6CA1;&amp;#x4EBA;&amp;#x8BA4;&amp;#x9886;&amp;#x5C31;&amp;#x5F53;&amp;#x6211;&amp;#x8BF4;&amp;#x7684;&amp;#x5427;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-14&quot;&gt;&lt;a href=&quot;#&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-14&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8; 2016-08-14&quot;&gt;&lt;/a&gt;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8; 2016-08-14&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&amp;#x535A;&amp;#x5BA2;&amp;#x8BA1;&amp;#x5212;&lt;br&gt;&amp;#x5199;&amp;#x4E00;&amp;#x4E2A;&amp;#x521A;&amp;#x5165;&amp;#x95E8;&amp;#x7684;&amp;#x81EA;&amp;#x5DF1;&amp;#x90FD;&amp;#x80FD;&amp;#x770B;&amp;#x61C2;&amp;#x7684;&amp;#x81EA;&amp;#x5B9A;&amp;#x4E49;View&amp;#x5B9E;&amp;#x4F8B;&amp;#x4E13;&amp;#x9898;&amp;#x3002;&lt;br&gt;&amp;#x63D2;&amp;#x4EF6;&amp;#x5F00;&amp;#x53D1;&amp;#xFF0C;&amp;#x70ED;&amp;#x4FEE;&amp;#x590D;&lt;br&gt;&amp;#x5206;&amp;#x6790;&amp;#x5F00;&amp;#x6E90;&amp;#x6846;&amp;#x67B6;&amp;#xFF08;&amp;#x5F85;&amp;#x5B9A;&amp;#xFF09;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-11&quot;&gt;&lt;a href=&quot;#&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;-2016-08-11&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x776
    
    </summary>
    
      <category term="叨叨系列" scheme="http://yoursite.com/categories/%E5%8F%A8%E5%8F%A8%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="叨叨系列" scheme="http://yoursite.com/tags/%E5%8F%A8%E5%8F%A8%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之Zygote &amp;&amp; SystemServer</title>
    <link href="http://yoursite.com/2016/08/03/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90Zygote/"/>
    <id>http://yoursite.com/2016/08/03/Android-源码分析Zygote/</id>
    <published>2016-08-03T13:14:51.000Z</published>
    <updated>2016-08-05T23:54:52.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Zygote&quot;&gt;&lt;a href=&quot;#Zygote&quot; class=&quot;headerlink&quot; title=&quot;Zygote&quot;&gt;&lt;/a&gt;Zygote&lt;/h4&gt;&lt;p&gt;&amp;#x6545;&amp;#x540D;&amp;#x601D;&amp;#x8BAE;&amp;#x5C31;&amp;#x662F;&amp;#x201C;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x201D;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#xFF0C;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x7684;&amp;#x7279;&amp;#x70B9;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x662F;&amp;#x65B0;&amp;#x751F;&amp;#x547D;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x643A;&amp;#x5E26;&amp;#x4E00;&amp;#x4E9B;&amp;#x7236;&amp;#x8F88;&amp;#x7684;&amp;#x9057;&amp;#x4F20;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;Zygote&amp;#x5728;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x5C31;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F1A;&amp;#x751F;&amp;#x6210;&amp;#x51FA;&amp;#x65B0;&amp;#x7684;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;Linux&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x8C03;&amp;#x7528;fork&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;fork&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x548C;&amp;#x7236;&amp;#x8F88;&amp;#x8FDB;&amp;#x7A0B;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7236;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E4B;&amp;#x95F4;&amp;#x5171;&amp;#x4EAB;&amp;#x7740;&amp;#x5185;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x53EA;&amp;#x6709;&amp;#x5728;&amp;#x8C03;&amp;#x7528;exec&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x4F1A;&amp;#x7528;&amp;#x65B0;&amp;#x7684;&amp;#x53EF;&amp;#x6267;&amp;#x884C;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x66FF;&amp;#x6362;&amp;#x5F53;&amp;#x524D;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BB5;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x6BB5;&amp;#xFF0C;&amp;#x5806;&amp;#x6808;&amp;#x7B49;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5728;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;Zygote&amp;#x5728;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;Delvik&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x5C06;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x7C7B;&amp;#x5E93;&amp;#xFF0C;&amp;#x8D44;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5171;&amp;#x4EAB;&amp;#x5E93;&amp;#x52A0;&amp;#x8F7D;&amp;#x5230;&amp;#x5185;&amp;#x5B58;&amp;#xFF0C;&amp;#x5728;&amp;#x540E;&amp;#x7EED;Zygote fork&amp;#x51FA;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E5F;&amp;#x5C31;&amp;#x6709;&amp;#x4E86;&amp;#x4E0A;&amp;#x8FF0;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x5C31;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x65B0;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E86;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x88C5;&amp;#x8F7D;APK&amp;#x4E2D;&amp;#x7684;&amp;#x5B57;&amp;#x8282;&amp;#x7801;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD0;&amp;#x884C;&amp;#x4E86;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F1A;&amp;#x5728;&amp;#x5F88;&amp;#x5927;&amp;#x7A0B;&amp;#x5EA6;&amp;#x4E0A;&amp;#x7F29;&amp;#x77ED;&amp;#x542F;&amp;#x52A8;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Zygote/11.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;SystemServer&quot;&gt;&lt;a href=&quot;#SystemServer&quot; class=&quot;headerlink&quot; title=&quot;SystemServer&quot;&gt;&lt;/a&gt;SystemServer&lt;/h4&gt;&lt;p&gt;&amp;#x4E00;&amp;#x822C;&amp;#x6211;&amp;#x5011;&amp;#x5728;&amp;#x5F00;&amp;#x53D1;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#x9700;&amp;#x8981;&amp;#x8FD0;&amp;#x884C;startService&amp;#xFF0C;&amp;#x6765;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5374;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;getSystemService()&amp;#x6765;&amp;#x83B7;&amp;#x5F97;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x5728;&amp;#x7CFB;&amp;#x7EDF;&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Zygote&amp;#x4F1A;&amp;#x6700;&amp;#x65E9;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;SystemServer&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;Dalvik&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#x4E0A;&amp;#x7684;Java&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&amp;#x4E0A;&amp;#x9762;&amp;#x8FD0;&amp;#x884C;&amp;#x7740;&amp;#x591A;&amp;#x79CD;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x8BF4;&amp;#x8FD9;&amp;#x4E9B;&amp;#x670D;&amp;#x52A1;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x542F;&amp;#x52A8;&amp;#x597D;&amp;#x4E86;&amp;#x7684;&amp;#xFF0C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x65B0;&amp;#x542F;&amp;#x52A8;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;SystemServer&amp;#x4EE5;&amp;#x53CA;MediaServer&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x540E;&amp;#x8865;&amp;#x4E0A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x54CE;&amp;#xFF0C;&amp;#x53C8;&amp;#x6B20;&amp;#x4E86;&amp;#x4E00;&amp;#x5927;&amp;#x6BB5;&amp;#x6587;&amp;#x5B57;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8FC7;&amp;#x6211;&amp;#x559C;&amp;#x6B22;&amp;#x3002;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x56FE;&amp;#x4F30;&amp;#x8BA1;&amp;#x770B;&amp;#x5F97;&amp;#x66F4;&amp;#x6E05;&amp;#x695A;&amp;#x4E9B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Zygote/221.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Zygote&quot;&gt;&lt;a href=&quot;#Zygote&quot; class=&quot;headerlink&quot; title=&quot;Zygote&quot;&gt;&lt;/a&gt;Zygote&lt;/h4&gt;&lt;p&gt;&amp;#x6545;&amp;#x540D;&amp;#x601D;&amp;#x8BAE;&amp;#x5C31;&amp;#x662F;&amp;#x201
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析Android系统启动流程</title>
    <link href="http://yoursite.com/2016/08/03/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/08/03/Android-源码分析Android系统启动流程/</id>
    <published>2016-08-03T12:44:51.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x7B49;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5206;&amp;#x6790;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;Init&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x6D41;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;init.rc&amp;#x811A;&amp;#x672C;&amp;#x7684;&amp;#x5206;&amp;#x6790;&lt;/li&gt;
&lt;li&gt;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&lt;/li&gt;
&lt;li&gt;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6743;&amp;#x9650;&amp;#x7BA1;&amp;#x7406;&amp;#xFF0C;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5BF9;action&amp;#x7684;&amp;#x5F71;&amp;#x54CD;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x7B49;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5206;&amp;#x6790;&amp;#x4E0B;&amp;#x8FD9;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于NuPlayer的RTSP流媒体协议</title>
    <link href="http://yoursite.com/2016/08/02/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8ENuPlayer%E7%9A%84RTSP%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2016/08/02/Android-进阶之源码分析基于NuPlayer的RTSP流媒体协议/</id>
    <published>2016-08-02T14:58:12.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;RTSP &amp;#x662F;Real Time Streaming Protocol&amp;#xFF08;&amp;#x5B9E;&amp;#x65F6;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;&amp;#xFF09;&amp;#x7684;&amp;#x7B80;&amp;#x79F0;&amp;#x3002;RTSP&amp;#x63D0;&amp;#x4F9B;&amp;#x4E00;&amp;#x79CD;&amp;#x53EF;&amp;#x6269;&amp;#x5C55;&amp;#x7684;&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5F97;&amp;#x80FD;&amp;#x591F;&amp;#x63D0;&amp;#x4F9B;&amp;#x53EF;&amp;#x63A7;&amp;#x5236;&amp;#x7684;&amp;#xFF0C;&amp;#x6309;&amp;#x9700;&amp;#x4F20;&amp;#x8F93;&amp;#x5B9E;&amp;#x65F6;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;RTSP&amp;#x5BF9;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x8BF8;&amp;#x5982;&amp;#x6682;&amp;#x505C;&amp;#xFF0C;&amp;#x5FEB;&amp;#x8FDB;&amp;#x7B49;&amp;#x63A7;&amp;#x5236;&amp;#xFF0C;&amp;#x800C;&amp;#x5B83;&amp;#x672C;&amp;#x8EAB;&amp;#x5E76;&amp;#x4E0D;&amp;#x4F20;&amp;#x8F93;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;RTSP&amp;#x4F5C;&amp;#x7528;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x8FDC;&amp;#x7A0B;&amp;#x63A7;&amp;#x5236;&amp;#x3002;&amp;#x4F20;&amp;#x8F93;&amp;#x6570;&amp;#x636E;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4F20;&amp;#x8F93;&amp;#x5C42;&amp;#x7684;TCP&amp;#xFF0C;UDP&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;RTSP&amp;#x4E5F;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x57FA;&amp;#x4E8E; RTP&amp;#x4F20;&amp;#x8F93;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&quot;RTSP-&amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&amp;#x5BA2;&amp;#x6237;&amp;#x673A;&amp;#x5728;&amp;#x5411;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;HTTP&amp;#x534F;&amp;#x8BAE;&amp;#x4ECE;WEB&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x6240;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description&amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5728;RTSP&amp;#x4E2D;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#xFF08;Presentation&amp;#xFF09;&amp;#x53CA;&amp;#x5176;&amp;#x6240;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x90FD;&amp;#x7531;&amp;#x4E00;&amp;#x4E2A;RTSP URL&amp;#x6807;&amp;#x8BC6;&amp;#x3002;&amp;#x6574;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#x53CA;&amp;#x5A92;&amp;#x4F53;&amp;#x7279;&amp;#x6027;&amp;#x90FD;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description&amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x8BE5;&amp;#x6587;&amp;#x4EF6;&amp;#x53EF;&amp;#x80FD;&amp;#x5305;&amp;#x62EC;&amp;#x5A92;&amp;#x4F53;&amp;#x7F16;&amp;#x7801;&amp;#x65B9;&amp;#x5F0F;&amp;#x3001;&amp;#x8BED;&amp;#x8A00;&amp;#x3001;RTSPURLs&amp;#x3001;&amp;#x76EE;&amp;#x6807;&amp;#x5730;&amp;#x5740;&amp;#x3001;&amp;#x7AEF;&amp;#x53E3;&amp;#x53CA;&amp;#x5176;&amp;#x5B83;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x7528;&amp;#x6237;&amp;#x5728;&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x67D0;&amp;#x4E2A;&amp;#x8FDE;&amp;#x7EED;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x7684;&amp;#x670D;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x9996;&amp;#x5148;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x5F97;&amp;#x8BE5;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x7684;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description &amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x5FC5;&amp;#x9700;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x5229;&amp;#x7528;&amp;#x8BE5;&amp;#x6587;&amp;#x4EF6;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x5B9A;&amp;#x4F4D;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5730;&amp;#x5740;&amp;#xFF08;&amp;#x5305;&amp;#x62EC;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5730;&amp;#x5740;&amp;#x548C;&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;&amp;#xFF09;&amp;#x53CA;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x65B9;&amp;#x5F0F;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;br&gt;&amp;#x5BA2;&amp;#x6237;&amp;#x673A;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#x5411;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x3002;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3A;&amp;#x8BE5;&amp;#x5BA2;&amp;#x6237;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x6D41;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8FD0;&amp;#x884C;&amp;#x5B9E;&amp;#x65F6;&amp;#x6D41;&amp;#x63A7;&amp;#x5236;&amp;#x534F;&amp;#x8BAE;RTSP&amp;#xFF0C;&amp;#x4EE5;&amp;#x5BF9;&amp;#x8BE5;&amp;#x6D41;&amp;#x8FDB;&amp;#x884C;&amp;#x5404;&amp;#x79CD;VCR &amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x53F7;&amp;#x7684;&amp;#x4EA4;&amp;#x6362;&amp;#xFF0C;&amp;#x5982;&amp;#x64AD;&amp;#x653E;&amp;#x3001;&amp;#x6682;&amp;#x505C;&amp;#x3001;&amp;#x5FEB;&amp;#x8FDB;&amp;#x3001;&amp;#x5FEB;&amp;#x9000;&amp;#x7B49;&amp;#x3002;&amp;#x5F53;&amp;#x670D;&amp;#x52A1;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x63D0;&amp;#x51FA;&amp;#x62C6;&amp;#x7EBF;&amp;#xFF08;TEARDOWN&amp;#xFF09;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4F7F;&amp;#x7528; RTP&amp;#x534F;&amp;#x8BAE;&amp;#x5C06;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x7ED9;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x6570;&amp;#x636E;&amp;#x62B5;&amp;#x8FBE;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5373;&amp;#x53EF;&amp;#x64AD;&amp;#x653E;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&amp;#x5728;&amp;#x6D41;&amp;#x5F0F;&amp;#x4F20;&amp;#x8F93;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;RTP/RTCP&amp;#x548C;RTSP /TCP&amp;#x4E24;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x901A;&amp;#x4FE1;&amp;#x534F;&amp;#x8BAE;&amp;#x5728;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x548C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x95F4;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8054;&amp;#x7CFB;&amp;#x3002;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP-&amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x65B9;&amp;#x6CD5;   URI  RTSP&amp;#x7248;&amp;#x672C;   &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x5934; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;   LF   &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x4F53; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;   LF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x65B9;&amp;#x6CD5;&amp;#x5305;&amp;#x62EC;OPTION&amp;#x56DE;&amp;#x5E94;&amp;#x4E2D;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x547D;&amp;#x4EE4;,URI&amp;#x662F;&amp;#x63A5;&amp;#x53D7;&amp;#x65B9;&amp;#x7684;&amp;#x5730;&amp;#x5740;,&amp;#x4F8B;&amp;#x5982;&lt;br&gt;rtsp://192.168.20.136&lt;/p&gt;
&lt;p&gt;RTSP&amp;#x7248;&amp;#x672C;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x662F; RTSP/1.0.&amp;#x6BCF;&amp;#x884C;&amp;#x540E;&amp;#x9762;&amp;#x7684;CR LF&amp;#x8868;&amp;#x793A;&amp;#x56DE;&amp;#x8F66;&amp;#x6362;&amp;#x884C;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x63A5;&amp;#x53D7;&amp;#x7AEF;&amp;#x6709;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x5934;&amp;#x9700;&amp;#x8981;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;CR LF&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x56DE;&amp;#x5E94;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RTSP&amp;#x7248;&amp;#x672C;  &amp;#x72B6;&amp;#x6001;&amp;#x7801;  &amp;#x89E3;&amp;#x91CA; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x5934; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF  &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x4F53; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;RTSP&amp;#x7248;&amp;#x672C;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x662F;RTSP/1.0,&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x503C;,200&amp;#x8868;&amp;#x793A;&amp;#x6210;&amp;#x529F;,&amp;#x89E3;&amp;#x91CA;&amp;#x662F;&amp;#x4E0E;&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x89E3;&amp;#x91CA;&amp;#x3002;    &lt;/p&gt;
&lt;h5 id=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP-&amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP-&amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP &amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;:&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP &amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;:&lt;/h5&gt;&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE5;&amp;#x4E00;&amp;#x6B21;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x64AD;&amp;#x653E;&amp;#x4E3A;&amp;#x4F8B;&amp;#x4ECB;&amp;#x7ECD;&amp;#x6574;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x8F6C;&amp;#x6362;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&amp;#x5176;&amp;#x4E2D;C&amp;#x8868;&amp;#x793A;RTSP&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;,S&amp;#x8868;&amp;#x793A;RTSP&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;OPTION     request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BE2;&amp;#x95EE;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;OPTION     response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x4FE1;&amp;#x606F;&amp;#x4E2D;&amp;#x5305;&amp;#x62EC;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;DESCRIBE    request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8981;&amp;#x6C42;&amp;#x5F97;&amp;#x5230;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;DESCRIBE    response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;SDP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;SETUP       request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4F1A;&amp;#x8BDD;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x4F20;&amp;#x8F93;&amp;#x6A21;&amp;#x5F0F;&amp;#x63D0;&amp;#x9192;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4F1A;&amp;#x8BDD; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;SETUP       response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4F1A;&amp;#x8BDD;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#xFF0C;&amp;#x548C;&amp;#x4F1A;&amp;#x8BDD;&amp;#x76F8;&amp;#x5173;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;PLAY        request         &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x64AD;&amp;#x653E; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;PLAY        response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x56DE;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;                           &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;TEARDOWN    request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x5173;&amp;#x95ED;&amp;#x4F1A;&amp;#x8BDD; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;TEARDOWN    response &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x7B2C;SETUP&amp;#x548C;PLAY&amp;#x8FD9;&amp;#x4E24;&amp;#x90E8;&amp;#x662F;&amp;#x5FC5;&amp;#x9700;&amp;#x7684;&amp;#xFF0C;&lt;br&gt;OPTION &amp;#x6B65;&amp;#x9AA4;&amp;#x53EA;&amp;#x8981;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7EA6;&amp;#x5B9A;&amp;#x597D;&amp;#xFF0C;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x7528;&amp;#xFF0C;&amp;#x5219;option&amp;#x8BF7;&amp;#x6C42;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E0D;&amp;#x8981;&amp;#x3002;&lt;br&gt;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x4EEC;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x9014;&amp;#x5F84;&amp;#x5F97;&amp;#x5230;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5219;&amp;#x6211;&amp;#x4EEC;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;RTSP&amp;#x4E2D;&amp;#x7684;DESCRIPTION&amp;#x8BF7;&amp;#x6C42;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&lt;br&gt;TEARDOWN&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x9700;&amp;#x6C42;&amp;#x7684;&amp;#x8BBE;&amp;#x8BA1;&amp;#x6765;&amp;#x51B3;&amp;#x5B9A;&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&lt;/h5&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Status-Code =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Created&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Low on Storage Space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Multiple Choices&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;301&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ;				Moved Permanently&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Moved Temporarily&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				See Other&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;304&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Modified&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;305&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Use Proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Bad Request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unauthorized&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;402&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Payment Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;403&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Forbidden&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;405&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Method Not Allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;406&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Acceptable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;407&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Proxy Authentication Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request Time-out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;410&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Gone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;411&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Length Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;412&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Precondition Failed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;413&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request Entity Too Large&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;414&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request-URI Too Large&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;415&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unsupported Media Type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;451&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Parameter Not Understood&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;452&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Conference Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;453&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Enough Bandwidth&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;454&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Session Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;455&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Method Not Valid in This State&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Header Field Not Valid for Resource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;457&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Invalid Range&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;458&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Parameter Is Read-Only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;459&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ;				Aggregate operation not allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;460&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Only aggregate operation allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;461&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unsupported transport&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;462&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Destination unreachable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Internal Server Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;501&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Implemented&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;502&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Bad Gateway&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;503&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Service Unavailable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;504&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Gateway Time-out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;505&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				RTSP Version not supported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;551&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Option not supported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;/h5&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;v=&lt;span class=&quot;variable&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;                            (&amp;#x534F;&amp;#x8BAE;&amp;#x7248;&amp;#x672C;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o=&lt;span class=&quot;variable&quot;&gt;&amp;lt;username&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;session id&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;network type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address&amp;gt;&lt;/span&gt;                              &amp;#xFF08;&amp;#x6240;&amp;#x6709;&amp;#x8005;/&amp;#x521B;&amp;#x5EFA;&amp;#x8005;&amp;#x548C;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s=&lt;span class=&quot;variable&quot;&gt;&amp;lt;session name&amp;gt;&lt;/span&gt;                       &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x540D;&amp;#x79F0;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;variable&quot;&gt;&amp;lt;session description&amp;gt;&lt;/span&gt;                &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u=&lt;span class=&quot;variable&quot;&gt;&amp;lt;URI&amp;gt;&lt;/span&gt;                                &amp;#xFF08;URI &amp;#x63CF;&amp;#x8FF0;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&lt;span class=&quot;variable&quot;&gt;&amp;lt;email address&amp;gt;&lt;/span&gt;                      &amp;#xFF08;Email &amp;#x5730;&amp;#x5740;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p=&lt;span class=&quot;variable&quot;&gt;&amp;lt;phone number&amp;gt;&lt;/span&gt;                       &amp;#xFF08;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c=&lt;span class=&quot;variable&quot;&gt;&amp;lt;network type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;connection address&amp;gt;&lt;/span&gt;   &amp;#xFF08;&amp;#x8FDE;&amp;#x63A5;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=&lt;span class=&quot;variable&quot;&gt;&amp;lt;modifier&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;bandwidth-value&amp;gt;&lt;/span&gt;         &amp;#xFF08;&amp;#x5E26;&amp;#x5BBD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t=&lt;span class=&quot;variable&quot;&gt;&amp;lt;start time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;stop time&amp;gt;&lt;/span&gt;             &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6D3B;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r=&lt;span class=&quot;variable&quot;&gt;&amp;lt;repeat interval&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;active duration&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;list of offsets from start-time&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#xFF08;0&amp;#x6216;&amp;#x591A;&amp;#x6B21;&amp;#x91CD;&amp;#x590D;&amp;#x6B21;&amp;#x6570;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;z=&lt;span class=&quot;variable&quot;&gt;&amp;lt;adjustment time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;offset&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;adjustment time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;offset&amp;gt;&lt;/span&gt;&amp;#xFF08;&amp;#x65F6;&amp;#x95F4;&amp;#x533A;&amp;#x57DF;&amp;#x8C03;&amp;#x6574;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k=&lt;span class=&quot;variable&quot;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;encryption key&amp;gt;&lt;/span&gt;             &amp;#xFF08;&amp;#x52A0;&amp;#x5BC6;&amp;#x5BC6;&amp;#x94A5;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=&lt;span class=&quot;variable&quot;&gt;&amp;lt;attribute&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;                   &amp;#xFF08;0 &amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5C5E;&amp;#x6027;&amp;#x884C;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m=&lt;span class=&quot;variable&quot;&gt;&amp;lt;media&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;transport&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;fmt list&amp;gt;&lt;/span&gt; &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x540D;&amp;#x79F0;&amp;#x548C;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x65F6;&amp;#x95F4;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF1A; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6D3B;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;0&amp;#x6216;&amp;#x591A;&amp;#x6B21;&amp;#x91CD;&amp;#x590D;&amp;#x6B21;&amp;#x6570;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5A92;&amp;#x4F53;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF1A; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x540D;&amp;#x79F0;&amp;#x548C;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x6807;&amp;#x9898;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x8FDE;&amp;#x63A5;&amp;#x4FE1;&amp;#x606F; &amp;#x2014; &amp;#x5982;&amp;#x679C;&amp;#x5305;&amp;#x542B;&amp;#x5728;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5C42;&amp;#x5219;&amp;#x8BE5;&amp;#x5B57;&amp;#x6BB5;&amp;#x53EF;&amp;#x9009;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x5E26;&amp;#x5BBD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x52A0;&amp;#x5BC6;&amp;#x5BC6;&amp;#x94A5;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;0 &amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x5A92;&amp;#x4F53;&amp;#x5C5E;&amp;#x6027;&amp;#x884C;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&amp;#x5B9E;&amp;#x65F6;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#xFF08;Real-time Transport Protocol&amp;#xFF0C;RTP&amp;#xFF09;&amp;#x662F;&amp;#x7528;&amp;#x6765;&amp;#x5728;&amp;#x5355;&amp;#x64AD;&amp;#x6216;&amp;#x8005;&amp;#x591A;&amp;#x64AD;&amp;#x7684;&amp;#x60C5;&amp;#x5883;&amp;#x4E2D;&amp;#x4F20;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;UDP&amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x6392;&amp;#x9664;&amp;#x4F7F;&amp;#x7528;TCP&amp;#x6216;&amp;#x8005;ATM&amp;#x7B49;&amp;#x5176;&amp;#x5B83;&amp;#x534F;&amp;#x8BAE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5B83;&amp;#x7684;&amp;#x8F7D;&amp;#x4F53;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;RTP &amp;#x534F;&amp;#x8BAE;&amp;#x7531;&amp;#x4E24;&amp;#x4E2A;&amp;#x5BC6;&amp;#x5207;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x7EC4;&amp;#x6210;&amp;#xFF1A;RTP&amp;#x6570;&amp;#x636E;&amp;#x534F;&amp;#x8BAE;&amp;#x548C;RTP&amp;#x63A7;&amp;#x5236;&amp;#x534F;&amp;#x8BAE;&amp;#xFF08;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#xFF09;&amp;#x3002;&lt;br&gt;RTP&amp;#x4E3A;Internet&amp;#x4E0A;&amp;#x7AEF;&amp;#x5230;&amp;#x7AEF;&amp;#x7684;&amp;#x5B9E;&amp;#x65F6;&amp;#x4F20;&amp;#x8F93;&amp;#x63D0;&amp;#x4F9B;&amp;#x65F6;&amp;#x95F4;&amp;#x4FE1;&amp;#x606F;&amp;#x548C;&amp;#x6D41;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x5E76;&amp;#x4E0D;&amp;#x4FDD;&amp;#x8BC1;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#xFF0C;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#x7531;RTCP&amp;#x6765;&amp;#x63D0;&amp;#x4F9B;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x8FDB;&amp;#x884C;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x8981;RTP&amp;#x7684;&amp;#x4F1A;&amp;#x8BDD;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x65F6;&amp;#xFF0C;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C06;&amp;#x786E;&amp;#x5B9A;&amp;#x4E00;&amp;#x5BF9;&amp;#x76EE;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#x3002;&amp;#x76EE;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#x7531;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x5730;&amp;#x5740;&amp;#x548C;&amp;#x4E00;&amp;#x5BF9;&amp;#x7AEF;&amp;#x53E3;&amp;#x7EC4;&amp;#x6210;&amp;#xFF0C;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED9;RTP&amp;#x5305;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED9;RTCP&amp;#x5305;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;RTP&amp;#x548C;RTCP&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x662F;&amp;#x5206;&amp;#x5F00;&amp;#x4F20;&amp;#x8F93;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x5F97;RTP/RTCP&amp;#x6570;&amp;#x636E;&amp;#x80FD;&amp;#x591F;&amp;#x6B63;&amp;#x786E;&amp;#x53D1;&amp;#x9001;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;RTP&amp;#x6570;&amp;#x636E;&amp;#x53D1;&amp;#x5411;&amp;#x5076;&amp;#x6570;&amp;#x7684;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x800C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x53F7;RTCP&amp;#x6570;&amp;#x636E;&amp;#x53D1;&amp;#x5411;&amp;#x76F8;&amp;#x90BB;&amp;#x7684;&amp;#x5947;&amp;#x6570;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x6784;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x3002;&lt;br&gt;&amp;#x5F53;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5C42;&amp;#x63A5;&amp;#x6536;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x4FE1;&amp;#x606F;&amp;#x7801;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C01;&amp;#x88C5;&amp;#x6210;RTP&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#xFF1B;RTCP&amp;#x4ECE;&amp;#x4E0A;&amp;#x5C42;&amp;#x63A5;&amp;#x6536;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5C01;&amp;#x88C5;&amp;#x6210;RTCP&amp;#x63A7;&amp;#x5236;&amp;#x5305;&amp;#x3002;RTP&amp;#x5C06;RTP &amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x53D1;&amp;#x5F80;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x4E2D;&amp;#x5076;&amp;#x6570;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1B;RTCP&amp;#x5C06;RTCP&amp;#x63A7;&amp;#x5236;&amp;#x5305;&amp;#x53D1;&amp;#x5F80;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x4E2D;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x7AEF;&amp;#x53E3;&amp;#x3002;&lt;br&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x4E00;&amp;#x6B21;&amp;#x4F1A;&amp;#x8BAE;&amp;#x4E2D;&amp;#x540C;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x4F1A;&amp;#x8BAE;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x5A92;&amp;#x4F53;&amp;#x5C06;&amp;#x5206;&amp;#x522B;&amp;#x5728;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x4E2D;&amp;#x4F20;&amp;#x9001;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x4F7F;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF08;IP&amp;#x5730;&amp;#x5740;&amp;#xFF0B;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF09;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x6237;&amp;#x540C;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#xFF0C;&amp;#x5219;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;RTCP&amp;#x5305;&amp;#x90FD;&amp;#x4F7F;&amp;#x7528;&amp;#x89C4;&amp;#x8303;&amp;#x5316;&amp;#x540D;&amp;#x5B57;CNAME&amp;#xFF08;Canonical Name&amp;#xFF09;&amp;#x3002;&amp;#x4E0E;&amp;#x4F1A;&amp;#x8005;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x7684;CNAME&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x76F8;&amp;#x5173;&amp;#x8054;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x7684;&amp;#x8BA1;&amp;#x65F6;&amp;#x4FE1;&amp;#x606F;(Network time protocol)&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&lt;br&gt;&amp;#x5728;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x4E2D;&amp;#x8FD8;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x90FD;&amp;#x662F;RTP&amp;#x7EA7;&amp;#x7684;&amp;#x4E2D;&amp;#x7EE7;&amp;#x7CFB;&amp;#x7EDF;&amp;#x3002;&lt;br&gt;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x60C5;&amp;#x666F;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;Internet&amp;#x4E0A;&amp;#x4E3E;&amp;#x884C;&amp;#x89C6;&amp;#x9891;&amp;#x4F1A;&amp;#x8BAE;&amp;#x65F6;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x6709;&amp;#x5C11;&amp;#x6570;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x901A;&amp;#x8FC7;&amp;#x4F4E;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x9AD8;&amp;#x901F;&amp;#x7F51;&amp;#x7EDC;&amp;#x7684;&amp;#x591A;&amp;#x6570;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x76F8;&amp;#x8FDE;&amp;#x63A5;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x4E0D;&amp;#x5F3A;&amp;#x5236;&amp;#x6240;&amp;#x6709;&amp;#x4F1A;&amp;#x8BAE;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x90FD;&amp;#x4F7F;&amp;#x7528;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x548C;&amp;#x4F4E;&amp;#x8D28;&amp;#x91CF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#xFF0C;RTP&amp;#x5141;&amp;#x8BB8;&amp;#x5728;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x533A;&amp;#x57DF;&amp;#x9644;&amp;#x8FD1;&amp;#x4F7F;&amp;#x7528;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;RTP&amp;#x7EA7;&amp;#x4E2D;&amp;#x7EE7;&amp;#x5668;&amp;#x3002;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x4FE1;&amp;#x6E90;&amp;#x63A5;&amp;#x6536;RTP&amp;#x62A5;&amp;#x6587;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5230;&amp;#x8FBE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x62A5;&amp;#x6587;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x65B0;&amp;#x540C;&amp;#x6B65;&amp;#x548C;&amp;#x91CD;&amp;#x65B0;&amp;#x7EC4;&amp;#x5408;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x91CD;&amp;#x7EC4;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6D41;&amp;#x88AB;&amp;#x6DF7;&amp;#x5408;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#x8F6C;&amp;#x5316;&amp;#x4E3A;&amp;#x5728;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0A;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x4F4E;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x5411;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x533A;&amp;#x57DF;&amp;#x8F6C;&amp;#x53D1;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x5BF9;&amp;#x591A;&amp;#x4E2A;&amp;#x8F93;&amp;#x5165;&amp;#x4FE1;&amp;#x6E90;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x4E00;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5728;&amp;#x591A;&amp;#x4E2A;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x4E4B;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9A;&amp;#x65F6;&amp;#x8C03;&amp;#x6574;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x5B83;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x5B9A;&amp;#x65F6;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x6240;&amp;#x6709;&amp;#x4ECE;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x8F93;&amp;#x51FA;&amp;#x7684;&amp;#x62A5;&amp;#x6587;&amp;#x90FD;&amp;#x628A;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x6E90;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x4FDD;&amp;#x8BC1;&amp;#x63A5;&amp;#x6536;&amp;#x8005;&amp;#x80FD;&amp;#x591F;&amp;#x6B63;&amp;#x786E;&amp;#x8BC6;&amp;#x522B;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5904;&amp;#x7406;&amp;#x524D;&amp;#x7684;&amp;#x539F;&amp;#x59CB;&amp;#x62A5;&amp;#x6587;&amp;#x53D1;&amp;#x9001;&amp;#x8005;&amp;#xFF0C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5728;RTP&amp;#x62A5;&amp;#x5934;&amp;#x4E2D;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;CSRC&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x4EE5;&amp;#x6807;&amp;#x8BC6;&amp;#x90A3;&amp;#x4E9B;&amp;#x4EA7;&amp;#x751F;&amp;#x6DF7;&amp;#x548C;&amp;#x62A5;&amp;#x6587;&amp;#x7684;&amp;#x539F;&amp;#x59CB;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x6E90;&amp;#x3002;&lt;br&gt;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x60C5;&amp;#x666F;&lt;br&gt;&amp;#x5728;Internet&amp;#x73AF;&amp;#x5883;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E9B;&amp;#x4F1A;&amp;#x8BAE;&amp;#x7684;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x53EF;&amp;#x80FD;&amp;#x88AB;&amp;#x9694;&amp;#x79BB;&amp;#x5728;&amp;#x5E94;&amp;#x7528;&amp;#x7EA7;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x7684;&amp;#x5916;&amp;#x9762;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x88AB;&amp;#x7981;&amp;#x6B62;&amp;#x76F4;&amp;#x63A5;&amp;#x4F7F;&amp;#x7528;IP&amp;#x7EC4;&amp;#x64AD;&amp;#x5730;&amp;#x5740;&amp;#x8FDB;&amp;#x884C;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x867D;&amp;#x7136;&amp;#x4ED6;&amp;#x4EEC;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x9AD8;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x8FDE;&amp;#x63A5;&amp;#x7684;&amp;#x3002;&amp;#x5728;&amp;#x8FD9;&amp;#x4E9B;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;RTP&amp;#x5141;&amp;#x8BB8;&amp;#x4F7F;&amp;#x7528;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;RTP&amp;#x7EA7;&amp;#x4E2D;&amp;#x7EE7;&amp;#x5668;&amp;#x3002;&amp;#x5728;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E24;&amp;#x7AEF;&amp;#x5206;&amp;#x522B;&amp;#x5B89;&amp;#x88C5;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E4B;&amp;#x5916;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x8FC7;&amp;#x6EE4;&amp;#x6240;&amp;#x6709;&amp;#x63A5;&amp;#x6536;&amp;#x5230;&amp;#x7684;&amp;#x7EC4;&amp;#x64AD;&amp;#x62A5;&amp;#x6587;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x4E00;&amp;#x6761;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x8FDE;&amp;#x63A5;&amp;#x4F20;&amp;#x9001;&amp;#x7ED9;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E4B;&amp;#x5185;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x5185;&amp;#x90E8;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC4;&amp;#x64AD;&amp;#x62A5;&amp;#x6587;&amp;#x518D;&amp;#x8F6C;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x5185;&amp;#x90E8;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E2D;&amp;#x7684;&amp;#x7EC4;&amp;#x64AD;&amp;#x7EC4;&amp;#x6210;&amp;#x5458;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/8.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&lt;/h5&gt;&lt;p&gt;&amp;#x5982;&amp;#x524D;&amp;#x9762;&amp;#x6240;&amp;#x8FF0;RTCP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x529F;&amp;#x80FD;&amp;#x662F;&amp;#xFF1A;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#x7684;&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x53CD;&amp;#x9988;&amp;#x3001;&amp;#x5A92;&amp;#x4F53;&amp;#x95F4;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x591A;&amp;#x64AD;&amp;#x7EC4;&amp;#x4E2D;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x6807;&amp;#x8BC6;&amp;#x3002;&amp;#x5728;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x671F;&amp;#x95F4;&amp;#xFF0C;&amp;#x5404;&amp;#x53C2;&amp;#x4E0E;&amp;#x8005;&amp;#x5468;&amp;#x671F;&amp;#x6027;&amp;#x5730;&amp;#x4F20;&amp;#x9001;RTCP&amp;#x5305;&amp;#x3002;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x542B;&amp;#x6709;&amp;#x5DF2;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x7684;&amp;#x6570;&amp;#x91CF;&amp;#x3001;&amp;#x4E22;&amp;#x5931;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x7684;&amp;#x6570;&amp;#x91CF;&amp;#x7B49;&amp;#x7EDF;&amp;#x8BA1;&amp;#x8D44;&amp;#x6599;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5404;&amp;#x53C2;&amp;#x4E0E;&amp;#x8005;&amp;#x53EF;&amp;#x4EE5;&amp;#x5229;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x52A8;&amp;#x6001;&amp;#x5730;&amp;#x6539;&amp;#x53D8;&amp;#x4F20;&amp;#x8F93;&amp;#x901F;&amp;#x7387;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x6539;&amp;#x53D8;&amp;#x6709;&amp;#x6548;&amp;#x8F7D;&amp;#x8377;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;RTP&amp;#x548C;RTCP&amp;#x914D;&amp;#x5408;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x80FD;&amp;#x4EE5;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x53CD;&amp;#x9988;&amp;#x548C;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x4F7F;&amp;#x4F20;&amp;#x8F93;&amp;#x6548;&amp;#x7387;&amp;#x6700;&amp;#x4F73;&amp;#x5316;&amp;#xFF0C;&amp;#x56E0;&amp;#x800C;&amp;#x7279;&amp;#x522B;&amp;#x9002;&amp;#x5408;&amp;#x4F20;&amp;#x9001;&amp;#x7F51;&amp;#x4E0A;&amp;#x7684;&amp;#x5B9E;&amp;#x65F6;&amp;#x6570;&amp;#x636E;&amp;#x3002;RTCP&amp;#x4E5F;&amp;#x662F;&amp;#x7528;UDP&amp;#x6765;&amp;#x4F20;&amp;#x9001;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;RTCP&amp;#x5C01;&amp;#x88C5;&amp;#x7684;&amp;#x4EC5;&amp;#x4EC5;&amp;#x662F;&amp;#x4E00;&amp;#x4E9B;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x56E0;&amp;#x800C;&amp;#x5206;&amp;#x7EC4;&amp;#x5F88;&amp;#x77ED;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x591A;&amp;#x4E2A;RTCP&amp;#x5206;&amp;#x7EC4;&amp;#x5C01;&amp;#x88C5;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;UDP&amp;#x5305;&amp;#x4E2D;&amp;#x3002;&lt;br&gt;RTCP&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x4E94;&amp;#x79CD;&amp;#x5206;&amp;#x7EC4;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/10.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;SR&amp;#x5206;&amp;#x7EC4;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/11.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP-&amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP-&amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP &amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP &amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&lt;/h5&gt;&lt;p&gt;setDataSource &amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x91CD;&amp;#x590D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x7684;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4EE5;&amp;#x53CA;&amp;#x6839;&amp;#x636E;URL&amp;#x683C;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Source&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C06;&amp;#x8981;&amp;#x63D0;&amp;#x5230;&amp;#x7684;RTSPSource&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;mSource&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x6765;&amp;#x770B;prepare&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#x518D;&amp;#x770B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7ED3;&amp;#x5408;&amp;#x56FE;&amp;#x770B;&amp;#x4F1A;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x6670;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/23.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/24.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/13.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/14.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;prepare&amp;#x9636;&amp;#x6BB5;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x662F;SDP&amp;#xFF0C;mIsSDP&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x5728;&amp;#x521D;&amp;#x59CB;&amp;#x5316;RTSPSource&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x5206;&amp;#x6790;mIsSDP = false&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MyHandler&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;connect&amp;#xFF0C;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8FDE;&amp;#x63A5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::RTSPSource::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;DISCONNECTED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)DISCONNECTED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x4E3A;CONNECTING&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mState = CONNECTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsSDP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;SDP&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;SDPLoader &amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x4E2A;&amp;#x63CF;&amp;#x8FF0;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSDPLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SDPLoader(notify, (mFlags &amp;amp; kFlagIncognito) ? SDPLoader::kFlagIncognito : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, mHTTPService);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSDPLoader-&amp;gt;load(mURL.c_str(), mExtraHeaders.isEmpty() ? &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; : &amp;amp;mExtraHeaders);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;SDP &amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;MyHandler &amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyHandler(mURL.c_str(), notify, mUIDValid, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler-&amp;gt;connect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startBufferingIfNecessary();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;connect&amp;#x65B9;&amp;#x6CD5;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x4E86;&amp;#x89E3;mConn&amp;#x4EE5;&amp;#x53CA;mRTPConn&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;mConn&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ARTSPConnection&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x76F8;&amp;#x8FDE;&amp;#xFF0C;&amp;#x53D1;&amp;#x9001;&amp;#x548C;&amp;#x63A5;&amp;#x6536;&amp;#x8BF7;&amp;#x6C42;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;mRTPConn&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ARTPConnection &amp;#x7528;&amp;#x4E8E;&amp;#x53D1;&amp;#x9001;&amp;#x548C;&amp;#x63A5;&amp;#x6536;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&amp;#x5728;connect&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;mConn&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8D77;&amp;#x8FDE;&amp;#x63A5;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//mConn(new ARTSPConnection(mUIDValid, mUID)),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    looper()-&amp;gt;registerHandler(mConn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//mRTPConn(new ARTPConnection),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ? mNetLooper : looper())-&amp;gt;registerHandler(mRTPConn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;biny&amp;apos;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn-&amp;gt;observeBinaryData(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FDE;&amp;#x63A5;&amp;#x670D;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;conn&amp;apos;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn-&amp;gt;connect(mOriginalSessionURL.c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTSPConnection::connect(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatConnect&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;url&amp;#x548C;reply&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConnect, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConnect:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConnect(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;ARTSPConnection::onConnect&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x4ECE;&amp;#x4F20;&amp;#x9012;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;URl&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;host&amp;#xFF0C;port&amp;#xFF0C;path&amp;#xFF0C;mUser&amp;#xFF0C;mPass&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;::connect &amp;#x548C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D6;&amp;#x5F97;&amp;#x8054;&amp;#x7CFB;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8C03;&amp;#x7528;postReceiveReponseEvent&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&amp;#x54CD;&amp;#x5E94;&amp;#x6682;&amp;#x5B58;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onConnect(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mConnectionID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != DISCONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserTag(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserMark(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushPendingRequests();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mState = CONNECTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x6D88;&amp;#x606F;&amp;#x4E2D;&amp;#x53D6;&amp;#x4E0B;Url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, &amp;amp;url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x6D88;&amp;#x606F;&amp;#x4E2D;&amp;#x53D6;&amp;#x4E0B;replay&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString host, path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; port;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;URl&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;host&amp;#xFF0C;port&amp;#xFF0C;path&amp;#xFF0C;mUser&amp;#xFF0C;mPass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseURL(url.c_str(), &amp;amp;host, &amp;amp;port, &amp;amp;path, &amp;amp;mUser, &amp;amp;mPass)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || (mUser.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mPass.size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6709;&amp;#x7528;&amp;#x6237;&amp;#x540D;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x5BC6;&amp;#x7801;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we have a user name but no password we have to give up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// right here, since we currently have no way of asking the user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// for this information.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Malformed rtsp url %s&amp;quot;&lt;/span&gt;, uriDebugString(url).c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUser.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;user = &amp;apos;%s&amp;apos;, pass = &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, mUser.c_str(), mPass.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; hostent *ent = gethostbyname(host.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ent == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Unknown host %s&amp;quot;&lt;/span&gt;, host.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, -ENOENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSocket = socket(AF_INET, SOCK_STREAM, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTTPBase::RegisterSocketUserTag(mSocket, mUID,(&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;)*(&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTSP&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTTPBase::RegisterSocketUserMark(mSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in remote;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(remote.sin_zero, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(remote.sin_zero));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_family = AF_INET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_addr.s_addr = *(&lt;span class=&quot;keyword&quot;&gt;in_addr_t&lt;/span&gt; *)ent-&amp;gt;h_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_port = htons(port);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FDE;&amp;#x63A5;&amp;#x5230;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; err = ::connect(mSocket, (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;remote, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(remote));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD4;&amp;#x56DE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;server-ip&amp;quot;&lt;/span&gt;, ntohl(remote.sin_addr.s_addr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (errno == EINPROGRESS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCompleteConnection, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;connection-id&amp;quot;&lt;/span&gt;, mConnectionID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, -errno);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserTag(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserMark(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x82B1;&amp;#x8FD4;&amp;#x56DE;result&amp;#x4E3A;OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&amp;#x4E3A;CONNECTED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = CONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextCSeq = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x7B49;&amp;#x5F85;&amp;#x8FD4;&amp;#x56DE;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postReceiveReponseEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2018;conn&amp;#x2019;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;postReceiveReponseEvent&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::postReceiveReponseEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mReceiveResponseEventPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatReceiveResponse, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReceiveResponseEventPending = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;receiveRTSPReponse&amp;#x83B7;&amp;#x5F97;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onReceiveResponse() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReceiveResponseEventPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; timeval tv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_sec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_usec = kSelectTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd_set rs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_ZERO(&amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_SET(mSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = select(mSocket + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;amp;rs, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &amp;amp;tv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = receiveRTSPReponse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Something horrible, irreparable has happened.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flushPendingRequests();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postReceiveReponseEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;receiveRTSPReponse&amp;#x662F;&amp;#x6709;&amp;#x53CC;&amp;#x91CD;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#xFF0C;&amp;#x65B9;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x6536;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x65B9;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x4FE1;&amp;#x53F7;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::receiveRTSPReponse() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString statusLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!receiveLine(&amp;amp;statusLine)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (statusLine == &lt;span class=&quot;string&quot;&gt;&amp;quot;$&amp;quot;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = receiveBinaryData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mObserveBinaryMessage != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; notify = mObserveBinaryMessage-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;received binary data, but no one cares.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//RTSP&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x8C61;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ARTSPResponse&amp;gt; response = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ARTSPResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;mStatusLine = statusLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;status: %s&amp;quot;&lt;/span&gt;, response-&amp;gt;mStatusLine.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space1 = response-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (space1 &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space2 = response-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;, space1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (space2 &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isRequest = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;RTSP&amp;#x7248;&amp;#x672C;&amp;#x662F;&amp;#x5426;&amp;#x6B63;&amp;#x786E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!IsRTSPVersion(AString(response-&amp;gt;mStatusLine, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, space1))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(IsRTSPVersion(AString(response-&amp;gt;mStatusLine,space2 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,response-&amp;gt;mStatusLine.size() - space2 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isRequest = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mStatusCode = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x662F;&amp;#x5426;&amp;#x6B63;&amp;#x786E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;AString &lt;span class=&quot;title&quot;&gt;statusCodeStr&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(response-&amp;gt;mStatusLine, space1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, space2 - space1 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(statusCodeStr.c_str(), &amp;amp;response-&amp;gt;mStatusCode) || response-&amp;gt;mStatusCode &amp;lt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; || response-&amp;gt;mStatusCode &amp;gt; &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString line;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; lastDictIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!receiveLine(&amp;amp;line)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (line.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;line: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, line.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (line.c_str()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos; &amp;apos;&lt;/span&gt; || line.c_str()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos;\t&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Support for folded header values.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastDictIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// First line cannot be a continuation of the previous one.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString &amp;amp;value = response-&amp;gt;mHeaders.editValueAt(lastDictIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value.append(line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; colonPos = line.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (colonPos &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Malformed header line.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;AString &lt;span class=&quot;title&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(line, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, colonPos)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key.&lt;span class=&quot;built_in&quot;&gt;tolower&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line.erase(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, colonPos + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lastDictIndex = response-&amp;gt;mHeaders.add(key, line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; response-&amp;gt;mHeaders.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mHeaders.editValueAt(i).trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; contentLength = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = response-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;content-length&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString value = response-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;contentLength)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x6536;mContent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentLength &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mContent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(contentLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (receive(response-&amp;gt;mContent-&amp;gt;data(), contentLength) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//isRequest &amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3B;&amp;#x52A8;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x8C03;&amp;#x7528;handleServerRequest&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x88AB;&amp;#x52A8;&amp;#x54CD;&amp;#x5E94;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x901A;&amp;#x77E5;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x6709;&amp;#x54CD;&amp;#x5E94;&amp;#x4E86;notifyResponseListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ? handleServerRequest(response)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : notifyResponseListener(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;isRequest &amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3B;&amp;#x52A8;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x8C03;&amp;#x7528;handleServerRequest&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x88AB;&amp;#x52A8;&amp;#x54CD;&amp;#x5E94;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x901A;&amp;#x77E5;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x6709;&amp;#x54CD;&amp;#x5E94;&amp;#x4E86;notifyResponseListener&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x5230;handleServerRequest&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x70B9;&amp;#x5931;&amp;#x671B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C1A;&amp;#x672A;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&amp;#x6240;&amp;#x4EE5;&amp;#x53EA;&amp;#x662F;&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x201C;RTSP/1.0 501 Not Implemented&amp;#x201D;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::handleServerRequest(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;request) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Implementation of server-&amp;gt;client requests is optional for all methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// but we do need to respond, even if it&amp;apos;s just to say that we don&amp;apos;t&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// support the method.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x5B9E;&amp;#x73B0;&amp;#x4EFB;&amp;#x4F55;&amp;#x7B54;&amp;#x590D;&amp;#x884C;&amp;#x4E3A;&amp;#x53EA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x53CD;&amp;#x9988;&amp;#x6211;&amp;#x4EEC;&amp;#x5C1A;&amp;#x672A;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space1 = request-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(space1, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;RTSP/1.0 501 Not Implemented\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = request-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;cseq&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString value = request-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cseq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;cseq)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;CSeq: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numBytesSent = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (numBytesSent &amp;lt; response.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            send(mSocket, response.c_str() + numBytesSent,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 response.size() - numBytesSent, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Server closed the connection.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Server unexpectedly closed the connection.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Error sending rtsp response (%s).&amp;quot;&lt;/span&gt;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            performDisconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numBytesSent += (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;)n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;notifyResponseListener&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x6839;&amp;#x636E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x627E;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x8BE5;&amp;#x5E94;&amp;#x7B54;&amp;#x7684;Message&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;response&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED9;MyHandler&amp;#xFF0C;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::notifyResponseListener(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;response) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x67E5;&amp;#x627E;&amp;#x5C1A;&amp;#x672A;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = findPendingRequest(response, &amp;amp;i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&amp;#x7ED9;&amp;#x5B83;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = mPendingRequests.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPendingRequests.removeItemsAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x8A00;&amp;#x5F52;&amp;#x6B63;&amp;#x4F20;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;MyHandler&amp;#x4E2D;&amp;#x5BF9;conn&amp;#x56DE;&amp;#x590D;&amp;#x600E;&amp;#x4E48;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;apos;conn&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x53D6;&amp;#x51FA;&amp;#x53CD;&amp;#x9988;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == &lt;span class=&quot;type&quot;&gt;OK&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x53D1;&amp;#x9001;&amp;#x8BF7;&amp;#x6C42;&amp;#x63CF;&amp;#x8FF0;&amp;#x7B26;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;AString&lt;/span&gt; request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request = &lt;span class=&quot;string&quot;&gt;&amp;quot;DESCRIBE &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(mSessionURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot; RTSP/1.0\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Accept: application/sdp\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; reply = new &lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;(&amp;apos;desc&amp;apos;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mConn-&amp;gt;sendRequest(request.c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (new &lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;(&amp;apos;disc&amp;apos;, this))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x6536;&amp;#x5230;&amp;#x7B54;&amp;#x590D;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x5224;&amp;#x65AD;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;OK&amp;#x8FD8;&amp;#x662F;&amp;#x4E0D;OK&amp;#xFF0C;&amp;#x5982;&amp;#x679C;OK&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;DESCRIBE&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;&amp;#xFF0C;onSendRequest&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;onSendRequest&amp;#x4E2D;&amp;#x4F1A;&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x52A0;&amp;#x5DE5;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6DFB;&amp;#x52A0;Cseq&amp;#x7B49;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;send&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x9001;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x5E76;&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EE5;Cseq&amp;#x4E3A;&amp;#x952E;&amp;#x7801;&amp;#xFF0C;replay&amp;#x4E3A;&amp;#x56DE;&amp;#x590D;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x5F85;&amp;#x5904;&amp;#x7406;&amp;#x8BF7;&amp;#x6C42;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onSendRequest(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FDB;&amp;#x884C;&amp;#x52A0;&amp;#x5DE5;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;request&amp;quot;&lt;/span&gt;, &amp;amp;request));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Just in case we need to re-issue the request with proper authentication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// later, stash it away.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;original-request&amp;quot;&lt;/span&gt;, request.c_str(), request.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addAuthentication(&amp;amp;request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addUserAgent(&amp;amp;request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Find the boundary between headers and the body.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = request.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; cseq = mNextCSeq++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString cseqHeader = &lt;span class=&quot;string&quot;&gt;&amp;quot;CSeq: &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cseqHeader.append(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cseqHeader.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request.insert(cseqHeader, i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;request: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, request.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numBytesSent = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (numBytesSent &amp;lt; request.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5B8C;&amp;#x5168;&amp;#x53D1;&amp;#x9001;&amp;#x7ED3;&amp;#x675F;&amp;#x90A3;&amp;#x4E48;&amp;#x7EE7;&amp;#x7EED;&amp;#x53D1;&amp;#x9001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = send(mSocket, request.c_str() + numBytesSent,request.size() - numBytesSent, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5FFD;&amp;#x7565;&amp;#x9519;&amp;#x8BEF;&amp;#x5904;&amp;#x7406;&amp;#x4EE3;&amp;#x7801;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numBytesSent += (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;)n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPendingRequests&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x56DE;&amp;#x590D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPendingRequests.add(cseq, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x56DE;&amp;#x5230;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;notifyResponseListener&amp;#x7ED3;&amp;#x5408;onSendRequest&amp;#x4EE5;&amp;#x53CA;findPendingRequest&amp;#x662F;&amp;#x5426;&amp;#x770B;&amp;#x51FA;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTSPConnection::findPendingRequest(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;response, &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; *index) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = response-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;cseq&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is an unsolicited server-&amp;gt;client message.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *index = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString value = response-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cseq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;cseq)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = mPendingRequests.indexOfKey(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ENOENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *index = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;onSendRequest &amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x653E;&amp;#x5165;mPendingRequests&amp;#x4E2D;&amp;#xFF0C;&amp;#x800C;&amp;#x6BCF;&amp;#x6B21;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7ED9;&amp;#x51FA;&amp;#x5E94;&amp;#x7B54;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;notifyResponseListener&amp;#xFF0C;notifyResponseListener&amp;#x4F1A;&amp;#x4ECE;mPendingRequests&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E94;&amp;#x7B54;&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x53D1;&amp;#x9001;&amp;#x6D88;&amp;#x606F;&amp;#x7ED9;MyHandler&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x800C;notifyResponseListener&amp;#x53C8;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x7B49;&amp;#x5F85;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x4FE1;&amp;#x53F7;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;OK&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x6536;&amp;#x5230;&amp;#x2018;desc&amp;#x2019;&amp;#x4FE1;&amp;#x53F7;&amp;#x540E;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;apos;desc&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == &lt;span class=&quot;type&quot;&gt;OK&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;RefBase&lt;/span&gt;&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;ARTSPResponse&lt;/span&gt;&amp;gt; response = static_cast&amp;lt;&lt;span class=&quot;type&quot;&gt;ARTSPResponse&lt;/span&gt; *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mStatusCode == &lt;span class=&quot;number&quot;&gt;301&lt;/span&gt; || response-&amp;gt;mStatusCode == &lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //&amp;#x91CD;&amp;#x5B9A;&amp;#x5411;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mStatusCode != &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UNKNOWN_ERROR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mContent == &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;ERROR_MALFORMED&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;ALOGE&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;The response has no content.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //&amp;#x83B7;&amp;#x5F97;&lt;span class=&quot;type&quot;&gt;ASessionDescription&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionDesc = new &lt;span class=&quot;type&quot;&gt;ASessionDescription&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionDesc-&amp;gt;setTo(response-&amp;gt;mContent-&amp;gt;data(),response-&amp;gt;mContent-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mSessionDesc-&amp;gt;isValid()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSessionDesc-&amp;gt;countTracks() &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // &lt;span class=&quot;type&quot;&gt;There&lt;/span&gt;&amp;apos;s no actual tracks &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; this session.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // &lt;span class=&quot;type&quot;&gt;The&lt;/span&gt; first &lt;span class=&quot;string&quot;&gt;&amp;quot;track&amp;quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; merely session meta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;ALOGW&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;Session doesn&amp;apos;t contain any playable &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;string&quot;&gt;&amp;quot;tracks. Aborting.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;ERROR_UNSUPPORTED&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    //&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x771F;&amp;#x6B63;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    setupTrack(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x957F;&amp;#x6211;&amp;#x4EEC;&amp;#x5FFD;&amp;#x7565;&amp;#x4E0D;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;setupTrack&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; setupTrack(size_t index) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;APacketSource&amp;gt; source = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; APacketSource(mSessionDesc, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mSessionDesc&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findAttribute(index, &lt;span class=&quot;string&quot;&gt;&amp;quot;a=control&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString trackURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(MakeURL(mBaseURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), url&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;trackURL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;push(TrackInfo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *info = &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;editItemAt(mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mURL = trackURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;APacketSource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mPacketSource = source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mFirstSeqNumInSegment = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNewSegment = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPAnch&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNTPAnchorUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNormalPlayTimeRTP = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNormalPlayTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned long PT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString formatDesc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString formatParams;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSessionDesc&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormatType(index, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;PT, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;formatDesc, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;formatParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t timescale;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ASessionDescription&lt;span class=&quot;tag&quot;&gt;::ParseFormatDesc&lt;/span&gt;(formatDesc&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;timescale, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mTimeScale = timescale;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mEOSReceived = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;track #%zu URL=%s&amp;quot;&lt;/span&gt;, mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size(), trackURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5EFA;&amp;#x7ACB;SETUP&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString request = &lt;span class=&quot;string&quot;&gt;&amp;quot;SETUP &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(trackURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot; RTSP/1.0\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTryTCPInterleaving) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t interleaveIndex = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * (mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket = interleaveIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket = interleaveIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transport: RTP/AVP/TCP;interleaved=&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(interleaveIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(interleaveIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unsigned rtpPort;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ARTPConnection&lt;span class=&quot;tag&quot;&gt;::MakePortPair&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;rtpPort);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserTag&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, mUID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            (uint32_t)*(uint32_t*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserTag&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, mUID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            (uint32_t)*(uint32_t*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserMark&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserMark&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transport: RTP/AVP/UDP;unicast;client_port=&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(rtpPort);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(rtpPort + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Session: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(mSessionID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;setu&amp;apos;&lt;/span&gt;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendRequest(request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x4E5F;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x5C06;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x6B4C;&amp;#x66F2;&amp;#x4FE1;&amp;#x606F;&amp;#x5B58;&amp;#x653E;&amp;#x5230;mTracks&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;sendRequest&amp;#x53D1;&amp;#x8D77;setu&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;sendRequest&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x4F5C;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;&amp;#x4E0B;&amp;#x2018;setu&amp;#x2019;&amp;#x8FD4;&amp;#x56DE;&amp;#x540E;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;setu&amp;apos;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;index));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;trackIndex)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track = &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;result));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(track != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ARTSPResponse&amp;gt; response =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ARTSPResponse *&amp;gt;(obj&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mStatusCode != &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ssize_t i = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;session&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F97;&amp;#x5230;SessionID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionID = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mKeepAliveTimeoutUs = kDefaultKeepAliveTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString timeoutStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;accu&amp;apos;&lt;/span&gt;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;transport&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    AString transport = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// We are going to continue even if we were&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// unable to poke a hole into the firewall...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pokeAHole(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            transport);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mRTPConn&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;addStream(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mSessionDesc, index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        notify, track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSetupTracksSuccessful = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;SessionID&amp;#x5E76;&amp;#x8C03;&amp;#x7528;mRTPConn-&amp;gt;addStream&amp;#x5B8C;ARTPConnection&amp;#x4E2D;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D41;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;addStream&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTPConnection::addStream(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rtpSocket, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rtcpSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ASessionDescription&amp;gt; &amp;amp;sessionDesc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;notify,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; injected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAddStream, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-socket&amp;quot;&lt;/span&gt;, rtpSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtcp-socket&amp;quot;&lt;/span&gt;, rtcpSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;session-desc&amp;quot;&lt;/span&gt;, sessionDesc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;notify&amp;quot;&lt;/span&gt;, notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;injected&amp;quot;&lt;/span&gt;, injected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatAddStream:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAddStream(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPConnection::onAddStream(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;Stream&amp;#x4FE1;&amp;#x606F;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mStreams&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreams.push_back(StreamInfo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StreamInfo *info = &amp;amp;*--mStreams.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;rtp-socket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-socket&amp;quot;&lt;/span&gt;, &amp;amp;s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mRTPSocket = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;rtcp-socket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtcp-socket&amp;quot;&lt;/span&gt;, &amp;amp;s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mRTCPSocket = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; injected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;injected&amp;quot;&lt;/span&gt;, &amp;amp;injected));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mIsInjected = injected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;session-desc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;session-desc&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mSessionDesc = &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;ASessionDescription *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;info-&amp;gt;mIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;notify&amp;quot;&lt;/span&gt;, &amp;amp;info-&amp;gt;mNotifyMsg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mNumRTCPPacketsReceived = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mNumRTPPacketsReceived = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(&amp;amp;info-&amp;gt;mRemoteRTCPAddr, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info-&amp;gt;mRemoteRTCPAddr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x8F6E;&amp;#x8BE2;&amp;#x67E5;&amp;#x8BE2;&amp;#x4E8B;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!injected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postPollEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x91CD;&amp;#x70B9;&amp;#x5173;&amp;#x6CE8;&amp;#x7684;&amp;#x662F;postPollEvent&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPConnection::postPollEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPollEventPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatPollStreams, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPollEventPending = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatPollStreams:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onPollStreams();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTPConnection::onPollStreams() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPollEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStreams.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct timeval tv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_sec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_usec = kSelectTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd_set rs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_ZERO(&amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         it != mStreams.end(); ++it) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((*it).mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FD_SET(it-&amp;gt;mRTPSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FD_SET(it-&amp;gt;mRTCPSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;mRTPSocket &amp;gt; maxSocket) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxSocket = it-&amp;gt;mRTPSocket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;mRTCPSocket &amp;gt; maxSocket) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxSocket = it-&amp;gt;mRTCPSocket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxSocket == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = select(maxSocket + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;amp;rs, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &amp;amp;tv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x63A5;&amp;#x6536;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != mStreams.end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((*it).mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x53D7;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (FD_ISSET(it-&amp;gt;mRTPSocket, &amp;amp;rs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;status_t ARTPConnection::receive(StreamInfo *s, bool receiveRTP)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = receive(&amp;amp;*it, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x53D7;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK &amp;amp;&amp;amp; FD_ISSET(it-&amp;gt;mRTCPSocket, &amp;amp;rs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;status_t ARTPConnection::receive(StreamInfo *s, bool receiveRTP)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = receive(&amp;amp;*it, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int64_t nowUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLastReceiverReportTimeUs &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;|| mLastReceiverReportTimeUs + &lt;span class=&quot;number&quot;&gt;5000000&lt;/span&gt;ll &amp;lt;= nowUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(kMaxUDPSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != mStreams.end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StreamInfo *s = &amp;amp;*it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s-&amp;gt;mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s-&amp;gt;mNumRTCPPacketsReceived == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// We have never received any RTCP packets on this stream,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t even know where to send a report.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; s-&amp;gt;mSources.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;ARTPSource&amp;gt; source = s-&amp;gt;mSources.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x586B;&amp;#x5145;buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;addReceiverReport(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kRegularlyRequestFIR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source-&amp;gt;addFIR(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Sending RR...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ssize_t n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x904E;RTCPSocket&amp;#x767C;&amp;#x9001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    n = sendto(s-&amp;gt;mRTCPSocket, buffer-&amp;gt;data(), buffer-&amp;gt;size(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; struct sockaddr *)&amp;amp;s-&amp;gt;mRemoteRTCPAddr, sizeof(s-&amp;gt;mRemoteRTCPAddr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (n &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK_EQ(n, (ssize_t)buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLastReceiverReportTimeUs = nowUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStreams.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postPollEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x518D;onPollStreams&amp;#x4E2D;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x76D1;&amp;#x542C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;receive&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B9A;&amp;#x671F;&amp;#x53D1;&amp;#x9001;RTCP&amp;#x6D88;&amp;#x606F;&amp;#x7ED9;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTPConnection::receive(StreamInfo *s, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; receiveRTP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;receiving %s&amp;quot;&lt;/span&gt;, receiveRTP ? &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;RTCP&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(!s-&amp;gt;mIsInjected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;65536&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;socklen_t&lt;/span&gt; remoteAddrLen =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (!receiveRTP &amp;amp;&amp;amp; s-&amp;gt;mNumRTCPPacketsReceived == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ? &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(s-&amp;gt;mRemoteRTCPAddr) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; nbytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x63A5;&amp;#x6536;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nbytes = recvfrom(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            receiveRTP ? s-&amp;gt;mRTPSocket : s-&amp;gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;data(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;capacity(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            remoteAddrLen &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? (&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;s-&amp;gt;mRemoteRTCPAddr : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            remoteAddrLen &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &amp;amp;remoteAddrLen : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (nbytes &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nbytes &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ECONNRESET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, nbytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGI(&amp;quot;received %d bytes.&amp;quot;, buffer-&amp;gt;size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x6790;RTP &amp;#x6216;&amp;#x8005; parseRTCP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (receiveRTP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = parseRTP(s, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = parseRTCP(s, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;receive&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;recvfrom&amp;#x3002;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E2D;&amp;#x8BFB;&amp;#x53D6;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;parseRTP&amp;#x6216;&amp;#x8005;parseRTCP&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTPConnection::parseRTP(StreamInfo *s, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *data = buffer-&amp;gt;data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) != &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Unsupported version.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x20&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Padding present.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; paddingLength = data[size - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paddingLength + &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &amp;gt; size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If we removed this much padding we&amp;apos;d end up with something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// that&amp;apos;s too short to be a valid RTP header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size -= paddingLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numCSRCs = data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; payloadOffset = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * numCSRCs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Not enough data to fit the basic header and all the CSRC entries.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x10&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Header eXtension present.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Not enough data to fit the basic header, all CSRC entries&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and the first 4 bytes of the extension header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *extensionData = &amp;amp;data[payloadOffset];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; extensionLength =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * (extensionData[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; | extensionData[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; + extensionLength) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        payloadOffset += &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; + extensionLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; srcId = u32at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ARTPSource&amp;gt; source = findSource(s, srcId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; rtpTime = u32at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; meta = buffer-&amp;gt;meta();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;ssrc&amp;quot;&lt;/span&gt;, srcId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, rtpTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;PT&amp;quot;&lt;/span&gt;, data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;M&amp;quot;&lt;/span&gt;, data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setInt32Data(u16at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setRange(payloadOffset, size - payloadOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x5341;&amp;#x5206;&amp;#x91CD;&amp;#x8981;void ARTPSource::processRTPPacket(const sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source-&amp;gt;processRTPPacket(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;parsRTP&amp;#x4E2D;&amp;#x6839;&amp;#x636E;RTP&amp;#x683C;&amp;#x5F0F;&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8C03;&amp;#x7528;ARTPSource::processRTPPacket&amp;#x8FDB;&amp;#x884C;&amp;#x540E;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPSource::processRTPPacket(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (queuePacket(buffer) &amp;amp;&amp;amp; mAssembler != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAssembler-&amp;gt;onPacketReceived(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;processRTPPacket&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;Assembler&amp;#x6765;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x7EC4;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;assembleMore&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPAssembler::onPacketReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTPSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssemblyStatus status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//assembleMore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = assembleMore(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == WRONG_SEQUENCE_NUMBER) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFirstFailureTimeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ALooper::GetNowUs() - mFirstFailureTimeUs &amp;gt; &lt;span class=&quot;number&quot;&gt;10000l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFirstFailureTimeUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// LOG(VERBOSE) &amp;lt;&amp;lt; &amp;quot;waited too long for packet.&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    packetLost();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFirstFailureTimeUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFirstFailureTimeUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == NOT_ENOUGH_DATA) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARTPAssembler::AssemblyStatus AMPEG4AudioAssembler::assembleMore(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTPSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;addPacket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssemblyStatus status = addPacket(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == MALFORMED_PACKET) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAccessUnitDamaged = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5BF9;&amp;#x65E0;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;submitAccessUnit&amp;#x63D0;&amp;#x4EA4;AU&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARTPAssembler&lt;span class=&quot;tag&quot;&gt;::AssemblyStatus&lt;/span&gt; AMPEG4AudioAssembler&lt;span class=&quot;tag&quot;&gt;::addPacket&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const sp&amp;lt;ARTPSource&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;sp&amp;lt;ABuffer&amp;gt; &amp;gt; *&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt; = source&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NOT_ENOUGH_DATA;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNextExpectedSeqNoValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;sp&amp;lt;ABuffer&amp;gt; &amp;gt;&lt;span class=&quot;tag&quot;&gt;::iterator&lt;/span&gt; it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((uint32_t)(*it)&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data() &amp;gt;= mNextExpectedSeqNo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;erase(it);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NOT_ENOUGH_DATA;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer = *&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mNextExpectedSeqNoValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextExpectedSeqNoValid = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextExpectedSeqNo = (uint32_t)buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((uint32_t)buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data() != mNextExpectedSeqNo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#if&lt;/span&gt; VERBOSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;LOG&lt;/span&gt;(VERBOSE) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Not the sequence number I expected&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; WRONG_SEQUENCE_NUMBER;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;meta()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x63D0;&amp;#x4EA4;AccessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rtpTime != mAccessUnitRTPTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        submitAccessUnit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAccessUnitRTPTime = rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x7F13;&amp;#x5B58;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPackets&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;push_back(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;erase(&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mNextExpectedSeqNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;submitAccessUnit&amp;#x4E2D;&amp;#x56DE;&amp;#x8C03;&amp;#x2018;accu&amp;#x2019;&amp;#xFF0C;&amp;#x4EA4;&amp;#x7ED9;MyHandler&amp;#x5904;&amp;#x7406;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; AMPEG4AudioAssembler&lt;span class=&quot;tag&quot;&gt;::submitAccessUnit&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;empty());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#if&lt;/span&gt; VERBOSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;LOG&lt;/span&gt;(VERBOSE) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Access unit complete (&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot; packets)&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit = MakeCompoundFromPackets(mPackets);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    accessUnit = removeLATMFraming(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CopyTimes(accessUnit, *mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAccessUnitDamaged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessUnit&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;meta()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAccessUnitDamaged = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x56DE;&amp;#x8C03;&amp;#x2018;accu&amp;#x2019;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = mNotifyMsg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;access-unit&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;accu&amp;apos;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t timeUpdate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-update&amp;quot;&lt;/span&gt;, &amp;amp;timeUpdate) &amp;amp;&amp;amp; timeUpdate) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint64_t ntpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;ntp-time&amp;quot;&lt;/span&gt;, (int64_t *)&amp;amp;ntpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onTimeUpdate(trackIndex, rtpTime, ntpTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;first-rtcp&amp;quot;&lt;/span&gt;, &amp;amp;first)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mReceivedFirstRTCPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;first-rtp&amp;quot;&lt;/span&gt;, &amp;amp;first)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mReceivedFirstRTPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mNumAccessUnitsReceived;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postAccessUnitTimeoutCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (trackIndex &amp;gt;= mTracks.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;late packets ignored.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t eos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;eos&amp;quot;&lt;/span&gt;, &amp;amp;eos)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;received BYE on track index %zu&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAllTracksHaveTime &amp;amp;&amp;amp; dataReceivedOnAllChannels()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;No time established =&amp;gt; fake existing data&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            track-&amp;gt;mEOSReceived = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTryFakeRTCP = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mReceivedFirstRTCPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fakeTimestamps();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postQueueEOS(trackIndex, ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x51FA;accessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;access-unit&amp;quot;&lt;/span&gt;, &amp;amp;accessUnit));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t seqNum = (uint32_t)accessUnit-&amp;gt;int32Data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;we&amp;apos;re seeking, dropping stale packet.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seqNum &amp;lt; track-&amp;gt;mFirstSeqNumInSegment) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;dropping stale access-unit (%d &amp;lt; %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             seqNum, track-&amp;gt;mFirstSeqNumInSegment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track-&amp;gt;mNewSegment) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mNewSegment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;onAccessUnitComplete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAccessUnitComplete(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x2018;accu&amp;#x2019;&amp;#x53D6;&amp;#x51FA;AU&amp;#x6570;&amp;#x636E;&amp;#x540E;&amp;#x8C03;&amp;#x7528;onAccessUnitComplete&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void onAccessUnitComplete(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t trackIndex, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;accessUnit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onAccessUnitComplete track %d&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!mPlayResponseParsed){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;play response is not parsed, storing accessunit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.push_back(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleFirstAccessUnit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAllTracksHaveTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;storing accessUnit, no time established yet&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.push_back(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!track-&amp;gt;mPackets.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; accessUnit = *track-&amp;gt;mPackets.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.erase(track-&amp;gt;mPackets.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addMediaTimestamp(trackIndex, track, accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//postQueueAccessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postQueueAccessUnit(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addMediaTimestamp(trackIndex, track, accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postQueueAccessUnit(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track-&amp;gt;mEOSReceived) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postQueueEOS(trackIndex, ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mEOSReceived = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void postQueueAccessUnit(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t trackIndex, const sp&amp;lt;&lt;span class=&quot;type&quot;&gt;ABuffer&lt;/span&gt;&amp;gt; &amp;amp;accessUnit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mNotify-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;trackIndex&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;accessUnit&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;RTSPSource&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;AnotherPacketSource  queueAccessUnit(accessUnit)&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MyHandler::kWhatAccessUnit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;trackIndex&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_LT(trackIndex, mTracks.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_EQ(trackIndex, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;accessUnit&amp;quot;&lt;/span&gt;, &amp;amp;accessUnit));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t damaged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &amp;amp;damaged)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; damaged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;dropping damaged access unit.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offset + &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt; &amp;lt;= accessUnit-&amp;gt;size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mTSParser-&amp;gt;feedTSPacket(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    accessUnit-&amp;gt;data() + offset, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offset += &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset &amp;lt; accessUnit-&amp;gt;size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source = getSource(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;signalEOS(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            source = getSource(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;signalEOS(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *info = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AnotherPacketSource&amp;gt; source = info-&amp;gt;mSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!info-&amp;gt;mNPTMappingValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This is a live stream, we didn&amp;apos;t receive any normal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// playtime mapping. We won&amp;apos;t map to npt time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            source-&amp;gt;queueAccessUnit(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t nptUs =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ((&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)rtpTime - (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)info-&amp;gt;mRTPTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                / info-&amp;gt;mTimeScale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;ll&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + info-&amp;gt;mNormalPlaytimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessUnit-&amp;gt;meta()-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, nptUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source-&amp;gt;queueAccessUnit(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;queueAccessUnit(accessUnit);&amp;#x5C06;AU&amp;#x6570;&amp;#x636E;&amp;#x5B58;&amp;#x653E;&amp;#x5230;AnotherPacketSource &amp;#x7684;mBuffers&amp;#x4E2D;&amp;#x4F9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x89E3;&amp;#x7801;&amp;#x64AD;&amp;#x653E;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;AnotherPacketSource&lt;/span&gt;::queueAccessUnit(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t damaged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &amp;amp;damaged) &amp;amp;&amp;amp; damaged)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // &lt;span class=&quot;title&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VERBOSE)&lt;/span&gt; &amp;lt;&amp;lt; &amp;quot;&lt;span class=&quot;title&quot;&gt;discarding&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;damaged&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AU&lt;/span&gt;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;Mutex&lt;/span&gt;::&lt;span class=&quot;title&quot;&gt;Autolock&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mBuffers&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(buffer)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mCondition&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;int32_t&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;discontinuity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;discontinuity))&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;ALOGV&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueing a discontinuity with queueAccessUnit&amp;quot;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLastQueuedTimeUs&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;ll&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mEOSResult&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;OK&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLatestEnqueuedMeta&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mDiscontinuitySegments&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DiscontinuitySegment())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;int64_t&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;lastQueuedTimeUs))&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mLastQueuedTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;ALOGV&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueAccessUnit timeUs=%&amp;quot;&lt;/span&gt; PRIi64 &lt;span class=&quot;string&quot;&gt;&amp;quot; us (%.2f secs)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLastQueuedTimeUs, mLastQueuedTimeUs / &lt;span class=&quot;number&quot;&gt;1E&lt;/span&gt;6)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;title&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(!mDiscontinuitySegments.empty())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;DiscontinuitySegment&lt;/span&gt; &amp;amp;&lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt; = *&lt;span class=&quot;params&quot;&gt;(--mDiscontinuitySegments.end())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(lastQueuedTimeUs &amp;gt; tailSeg.mMaxEnqueTimeUs)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;mMaxEnqueTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(tailSeg.mMaxDequeTimeUs == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;mMaxDequeTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(mLatestEnqueuedMeta == NULL)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLatestEnqueuedMeta&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;buffer&lt;/span&gt;-&amp;gt;&lt;/span&gt;meta&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t latestTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t frameDeltaUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(mLatestEnqueuedMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;latestTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastQueuedTimeUs &amp;gt; latestTimeUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta = buffer-&amp;gt;meta&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameDeltaUs = lastQueuedTimeUs - latestTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, frameDeltaUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mLatestEnqueuedMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, &amp;amp;frameDeltaUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;pi&quot;&gt;// For B frames&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameDeltaUs = latestTimeUs - lastQueuedTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta-&amp;gt;setInt64(&amp;quot;durationUs&amp;quot;, frameDeltaUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x548C;&amp;#x4ECB;&amp;#x7ECD;HLS&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x662F;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#xFF0C;&amp;#x65B9;&amp;#x4FBF;&amp;#x67E5;&amp;#x770B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7C98;&amp;#x8D34;&amp;#x4E86;&amp;#x8FC7;&amp;#x6765;&amp;#xFF0C;&amp;#x5927;&amp;#x4F53;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C31;&amp;#x662F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5F00;&amp;#x59CB;&amp;#x4ECE;&amp;#x8F93;&amp;#x5165;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x5F80;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x6DFB;&amp;#x52A0;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;NuPlayer&lt;/span&gt;::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;kWhatStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPausedByClient = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;(int64_t startPositionUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mSourceStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSourceStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOffloadAudio = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioEOS = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEOS = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t flags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; audioMeta = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormatMeta(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    audio_stream_type_t streamType = AUDIO_STREAM_MUSIC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        streamType = mAudioSink&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getAudioStreamType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; videoFormat = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormat(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatRendererNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mRendererGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mRendererGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRenderer = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; Renderer(mAudioSink, notify, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;NuPlayerRenderer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, ANDROID_PRIORITY_AUDIO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mRenderer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setPlaybackSettings(mPlaybackSettings);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    float rate = getFrameRate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rate &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRenderer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setVideoFrameRate(rate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoDecoder != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVideoDecoder&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setRenderer(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioDecoder != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioDecoder&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setRenderer(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postScanSources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::postScanSources&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mScanSourcesPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatScanSources, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mScanSourcesGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatScanSources:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; mHadAnySourcesBefore =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) || (mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialize video before audio because successful initialization of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// video may change deep buffer mode of audio.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSurface != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &amp;amp;mVideoDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to re-open audio sink if there&amp;apos;s an existing decoder.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &amp;amp;mAudioDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t NuPlayer::instantiateDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, sp&amp;lt;DecoderBase&amp;gt; *decoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x683C;&amp;#x5F0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format = mSource-&amp;gt;getFormat(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* realtime */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAudioNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mAudioDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mAudioDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        determineAudioModeChange();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatVideoNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mVideoDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mVideoDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer, mSurface, mCCDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;configure(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B83;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::configure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::init&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::Decoder&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onConfigure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec = MediaCodec&lt;span class=&quot;tag&quot;&gt;::CreateByType&lt;/span&gt;(mCodecLooper, mime&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* encoder */&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* err */&lt;/span&gt;, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;configure(format, mSurface, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* crypto */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* flags */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5BBD;&amp;#x9AD8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mIsAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;width)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaCodec&amp;gt; MediaCodec::CreateByType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ALooper&amp;gt; &amp;amp;looper, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; *err, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodec(looper, pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = codec-&amp;gt;init(mime, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* nameIsType */&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret == OK ? codec : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// NULL deallocates codec.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BF4;&amp;#x660E;mCodec&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ACodec&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::init(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;name, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; nameIsType, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mResourceManagerService-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType || !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;omx.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x540D;&amp;#x79F0;&amp;#x521B;&amp;#x5EFA;Codec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ACodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!nameIsType&amp;amp;&amp;amp; !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;android.filter.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInit, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;nameIsType&amp;quot;&lt;/span&gt;, nameIsType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;kWhatInit:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;....................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateAllocateComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateAllocateComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatAllocateComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatAllocateComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAllocateComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::UninitializedState::onAllocateComponent(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;OMXCodec::CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t quirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, &amp;amp;componentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t index = matchingCodecs.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::CodecNameAndQuirks *entry = &amp;amp;matchingCodecs.editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry-&amp;gt;mName = String8(componentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!OMXCodec::findCodecQuirks(componentName.c_str(), &amp;amp;entry-&amp;gt;mQuirks)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mime.c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                encoder, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// matchComponentName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;// flags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;CodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = NAME_NOT_FOUND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t matchIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; matchIndex &amp;lt; matchingCodecs.size();++matchIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentName = matchingCodecs.itemAt(matchIndex).mName.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quirks = matchingCodecs.itemAt(matchIndex).mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pid_t tid = gettid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; prevPriority = androidGetThreadPriority(tid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = omx-&amp;gt;allocateNode(componentName.c_str(), observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, prevPriority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatOMXMessageList, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer-&amp;gt;setNotificationMessage(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mComponentName = componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mRenderTracker.setComponentName(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mFlags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mQuirks = quirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mOMX = omx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mNode = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentAllocated);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;changeState(mCodec-&amp;gt;mLoadedState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::configure(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;Surface&amp;gt; &amp;amp;surface,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ICrypto&amp;gt; &amp;amp;crypto,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;mVideoWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;mVideoHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;mRotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, surface);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save msg for reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfigureMsg = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConfigure:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, &amp;amp;format));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push) &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagPushBlankBuffersOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = handleSetSurface(&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PostReplyWithError(replyID, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleSetSurface(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *crypto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;flags));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CONFIGURE_FLAG_ENCODE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsEncoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateConfigureComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateConfigureComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatConfigureComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatConfigureComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConfigureComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::LoadedState::onConfigureComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onConfigureComponent&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mCodec-&amp;gt;mNode != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mCodec-&amp;gt;configureCodec(mime.c_str(), msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentConfigured);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mInputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mOutputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatComponentConfigured:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == UNINITIALIZED || mState == INITIALIZED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// In case a kWhatError message came in and replied with error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we log a warning and ignore.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;configure interrupted by error, current state %d&amp;quot;&lt;/span&gt;, mState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// reset input surface flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHaveInputSurface = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, &amp;amp;mInputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, &amp;amp;mOutputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t usingSwRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &amp;amp;usingSwRenderer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagUsesSoftwareRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage)-&amp;gt;postReply(mReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6700;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x95F4;&amp;#x597D;&amp;#x597D;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7814;&amp;#x7A76;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5148;&amp;#x9488;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t ACodec::configureCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; inputFormat = new AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; outputFormat = mNotify-&amp;gt;dup(); &lt;span class=&quot;comment&quot;&gt;// will use this for kWhatOutputFormatChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsEncoder = encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOutputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = setComponentRole(encoder &lt;span class=&quot;comment&quot;&gt;/* isEncoder */&lt;/span&gt;, mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t bitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// FLAC encoder doesn&amp;apos;t need a bitrate, other encoders do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bitrate&amp;quot;&lt;/span&gt;, &amp;amp;bitRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t storeMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE, &amp;amp;mInputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (input) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For this specific case we could be using camera source even if storeMetaDataInBuffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// returns Gralloc source. Pretend that we are; this will force us to use nBufferSize.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInputMetadataType == kMetadataBufferTypeGrallocSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputMetadataType = kMetadataBufferTypeCameraSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t usageBits;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX-&amp;gt;getParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode, (OMX_INDEXTYPE)OMX_IndexParamConsumerUsageBits,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;usageBits, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(usageBits)) == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inputFormat-&amp;gt;setInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-read-often&amp;quot;&lt;/span&gt;, !!(usageBits &amp;amp; GRALLOC_USAGE_SW_READ_OFTEN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t prependSPSPPS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepend-sps-pps-to-idr-frames&amp;quot;&lt;/span&gt;, &amp;amp;prependSPSPPS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; prependSPSPPS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_INDEXTYPE index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;getExtensionIndex(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.android.index.prependSPSPPSToIDRFrames&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PrependSPSPPSToIDRFramesParams params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params.bEnable = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, index, &amp;amp;params, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(params));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Encoder could not be configured to emit SPS/PPS before &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;IDR frames. (err %d)&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Only enable metadata mode on encoder output if encoder can prepend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// sps/pps to idr frames, since in metadata mode the bitstream is in an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// opaque handle, to which we don&amp;apos;t have access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t video = !strncasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsVideo = video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_BOOL enable = (OMX_BOOL) (prependSPSPPS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers-output&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexOutput, enable, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (output) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;repeat-previous-frame-after&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mRepeatFrameDelayUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRepeatFrameDelayUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-pts-gap-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxPtsGapUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxPtsGapUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-fps-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxFps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxFps = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-lapse&amp;quot;&lt;/span&gt;, &amp;amp;mTimePerCaptureUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTimePerCaptureUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;create-input-buffers-suspended&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (int32_t*)&amp;amp;mCreateInputBuffersSuspended)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCreateInputBuffersSuspended = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; we only use native window for video decoders&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveNativeWindow = msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, &amp;amp;obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; obj != NULL &amp;amp;&amp;amp; video &amp;amp;&amp;amp; !encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLegacyAdaptiveExperiment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video &amp;amp;&amp;amp; !encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t usageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;, &amp;amp;usageProtected) &amp;amp;&amp;amp; usageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected output buffers must be sent to an ANativeWindow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagIsGrallocUsageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ANativeWindow&amp;gt; nativeWindow =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ANativeWindow *&amp;gt;(static_cast&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// START of temporary support for automatic FRC - THIS WILL BE REMOVED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, &amp;amp;autoFrc)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; enabled = autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            OMX_CONFIG_BOOLEANTYPE config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            config.bEnabled = (OMX_BOOL)enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t temp = mOMX-&amp;gt;setConfig(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, (OMX_INDEXTYPE)OMX_IndexConfigAutoFramerateConversion,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(config));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (temp == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (enabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;codec does not support requested auto-frc (err %d)&amp;quot;&lt;/span&gt;, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// END of temporary support for automatic FRC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t tunneled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;, &amp;amp;tunneled) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tunneled != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring TUNNELED video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t audioHwSync = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio-hw-sync&amp;quot;&lt;/span&gt;, &amp;amp;audioHwSync)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;No Audio HW Sync provided for video tunnel&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = configureTunneledVideoPlayback(audioHwSync, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;configureTunneledVideoPlayback(%d,%p) failed!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        audioHwSync, nativeWindow.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, kPortIndexOutput, OMX_TRUE, maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring CPU controlled video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Explicity reset the sideband handle of the window for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// non-tunneled video in case the window was previously used&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// for a tunneled video playback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = native_window_set_sideband_stream(nativeWindow.get(), NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;set_sideband_stream(NULL) failed! (err %d).&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Always try to enable dynamic output buffers on native surface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, kPortIndexOutput, OMX_TRUE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// if adaptive playback has been requested, try JB fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; THIS FALLBACK MECHANISM WILL BE REMOVED DUE TO ITS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// LARGE MEMORY REQUIREMENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we will not do adaptive playback on software accessed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// surfaces as they never had to respond to changes in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// crop window, and we don&amp;apos;t trust that they will be able to.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; usageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canDoAdaptivePlayback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nativeWindow-&amp;gt;query(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nativeWindow.get(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        NATIVE_WINDOW_CONSUMER_USAGE_BITS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;usageBits) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (usageBits &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                (GRALLOC_USAGE_SW_READ_MASK |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 GRALLOC_USAGE_SW_WRITE_MASK)) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canDoAdaptivePlayback &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback(%dx%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mNode, kPortIndexOutput, OMX_TRUE, maxWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW_IF(err != OK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers succeeded&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(storingMetadataInDecodedBuffers());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLegacyAdaptiveExperiment = ADebug::isExperimentEnabled(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&amp;quot;legacy-adaptive&amp;quot;&lt;/span&gt;, !msg-&amp;gt;contains(&lt;span class=&quot;string&quot;&gt;&amp;quot;no-experiments&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;rotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// determine need for software renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow &amp;amp;&amp;amp; mComponentName.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoEncoder(mime, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoDecoder(mime, msg, haveNativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNativeWindow = static_cast&amp;lt;Surface *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// initialize native window now to get actual output format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; this is needed for some encoders even though they don&amp;apos;t use native window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = initNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fallback for devices that do not handle flex-YUV for native buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t requestedColorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;requestedColorFormat) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    requestedColorFormat == OMX_COLOR_FormatYUV420Flexible) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                status_t err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t colorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_U32 flexibleEquivalent = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!outputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;colorFormat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;ouptut port did not have a color format (wrong domain?)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Requested output format %#x and got %#x.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), requestedColorFormat, colorFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isFlexibleColorFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mOMX, mNode, colorFormat, haveNativeWindow, &amp;amp;flexibleEquivalent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || flexibleEquivalent != (OMX_U32)requestedColorFormat) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// device did not handle flex-YUV request for native window, fall back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// to SW renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Falling back to software renderer&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindow.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindowUsageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (storingMetadataInDecodedBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mNode, kPortIndexOutput, OMX_FALSE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mOutputMetadataType = kMetadataBufferTypeInvalid; &lt;span class=&quot;comment&quot;&gt;// just in case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; implement adaptive-playback support for bytebuffer mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// This is done by SW codecs, but most HW codecs don&amp;apos;t support it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;enableGraphicBuffers(mNode, kPortIndexOutput, OMX_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsGrallocUsageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// fallback is not supported for protected playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = setupVideoDecoder(mime, msg, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Since we did not always check for these, leave them optional&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and have the decoder figure it all out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder ? kPortIndexInput : kPortIndexOutput,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t isADTS, aacProfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sbrMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxOutputChannelCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t pcmLimiterEnable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drcParams_t drc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;is-adts&amp;quot;&lt;/span&gt;, &amp;amp;isADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isADTS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-profile&amp;quot;&lt;/span&gt;, &amp;amp;aacProfile)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aacProfile = OMX_AUDIO_AACObjectNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-sbr-mode&amp;quot;&lt;/span&gt;, &amp;amp;sbrMode)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sbrMode = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-max-output-channel_count&amp;quot;&lt;/span&gt;, &amp;amp;maxOutputChannelCount)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxOutputChannelCount = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-pcm-limiter-enable&amp;quot;&lt;/span&gt;, &amp;amp;pcmLimiterEnable)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pcmLimiterEnable = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-encoded-target-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.encodedTargetLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.encodedTargetLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-cut-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcCut)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcCut = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-boost-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcBoost)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcBoost = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-heavy-compression&amp;quot;&lt;/span&gt;, &amp;amp;drc.heavyCompression)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.heavyCompression = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-target-ref-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.targetRefLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.targetRefLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAACCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, bitRate, aacProfile,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    isADTS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sbrMode, maxOutputChannelCount, drc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pcmLimiterEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_ALAW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_MLAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// These are PCM-like formats with a fixed sample rate but&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a variable number of channels.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sampleRate = &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupG711Codec(encoder, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sampleRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, compressionLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;missing channel count or sample rate for FLAC encoder&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;complexity&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    !msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;flac-compression-level&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default FLAC compression level&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 0&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 8&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupFlacCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(kPortIndexInput, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_EAC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupEAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-delay&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderDelay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderDelay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-padding&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderPadding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderPadding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-mask&amp;quot;&lt;/span&gt;, &amp;amp;mChannelMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t maxInputSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-input-size&amp;quot;&lt;/span&gt;, &amp;amp;maxInputSize)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, (size_t)maxInputSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.Nvidia.aac.decoder&amp;quot;&lt;/span&gt;, mComponentName.c_str())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;label&quot;&gt;XXX&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &amp;amp;priority)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setPriority(priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t rateInt = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; rateFloat = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateFloat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateInt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rateFloat = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)rateInt;  &lt;span class=&quot;comment&quot;&gt;// 16MHz (FLINTMAX) is OK for upper bound.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rateFloat &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setOperatingRate(rateFloat, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBaseOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = getPortFormat(kPortIndexInput, inputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputFormat = inputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x4E86;&amp;#x8FD9;&amp;#x91CC;&amp;#x6574;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x548C;&amp;#x914D;&amp;#x7F6E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;start&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;MediaResource&amp;gt; resources;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type = (mFlags &amp;amp; kFlagIsSecure) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            kResourceSecureCodec : kResourceNonSecureCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *subtype = mIsVideo ? kResourceVideoCodec : kResourceAudioCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(type), String8(subtype), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t know the buffer size at this point, but it&amp;apos;s fine to use 1 because&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the reclaimResource call doesn&amp;apos;t consider the requester&amp;apos;s buffer size for now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(kResourceGraphicMemory), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Recover codec from previous error before retry start.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to reset codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = PostAndAwaitResponse(mConfigureMsg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to configure codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isResourceError(err)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(STARTED)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mHavePendingInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onInputBufferAvailable()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHavePendingInputBuffers = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec-&amp;gt;signalResume()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //..................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, OK)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else if (mState != CONFIGURED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, INVALID_OPERATION)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(STARTING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateStart()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8ABF;&amp;#x7528;initiateStart&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::initiateStart() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::LoadedState&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;signalErr&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;(OMX_ErrorUndefined, makeNoSideEffectStatus(err));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;changeState(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mLoadedToIdleState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::signalResume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatResume, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatResume:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::ExecutingState::resume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    submitOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Post all available input buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mBuffers[kPortIndexInput].size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] we don&amp;apos;t have any input buffers to resume&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mCodec-&amp;gt;mBuffers[kPortIndexInput].size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo *info = &amp;amp;mCodec-&amp;gt;mBuffers[kPortIndexInput].editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info-&amp;gt;mStatus == BufferInfo::OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postFillThisBuffer(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mActive = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::BaseState::postFillThisBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mPortEOS[kPortIndexInput]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)BufferInfo::OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatFillThisBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mData-&amp;gt;meta()-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, info-&amp;gt;mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInputBufferFilled, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = BufferInfo::OWNED_BY_UPSTREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatFillThisBuffer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsAsync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mHaveInputSurface) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mHavePendingInputBuffers = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onInputBufferAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagDequeueInputPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(handleDequeueInputBuffer(mDequeueInputReplyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mDequeueInputTimeoutGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagDequeueInputPending;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeueInputReplyID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postActivityNotificationIfPossible();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;MediaCodec&lt;/span&gt;::onInputBufferAvailable&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((index = dequeuePortBuffer(kPortIndexInput)) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mCallback-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackID&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;CB_INPUT_AVAILABLE&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;mCallback&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::Decoder::onConfigure(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCodecNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;setCallback(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::setCallback(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatSetCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PostAndAwaitResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, &amp;amp;response)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatSetCallback:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&amp;quot;callback&amp;quot;, &amp;amp;callback))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mCallback != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response = new AMessage&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;postReply(replyID)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x77E5;&amp;#x9053;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;i&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;kWhatCodecNotify &amp;#x4E0B;&amp;#x7684; CB_INPUT_AVAILABLE&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaCodec::CB_INPUT_AVAILABLE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleAnInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool NuPlayer::Decoder::handleAnInputBuffer(size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;getInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleError(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mInputBuffers.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = mInputBuffers.size(); i &amp;lt;= &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.editItemAt(i) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.editItemAt(i) = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//CHECK_LT(bufferIx, mInputBuffers.size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;] != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;]-&amp;gt;release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mCSDsToSubmit.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = mCSDsToSubmit.itemAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] resubmitting CSD&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCSDsToSubmit.removeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(onInputBufferFetched(msg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!mPendingInputMessages.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = *mPendingInputMessages.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPendingInputMessages.erase(mPendingInputMessages.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDequeuedInputBuffers.push_back(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onRequestInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::DecoderBase::onRequestInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRequestInputBuffersPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doRequestBuffers() return true if we should request more data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (doRequestBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRequestInputBuffersPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatRequestInputBuffers, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NuPlayer::Decoder::doRequestBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mRenderer is only NULL if we have a legacy widevine source that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// is not yet ready. In this case we must not fetch input.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending() || mRenderer == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (err == OK &amp;amp;&amp;amp; !mDequeuedInputBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t bufferIx = *mDequeuedInputBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, bufferIx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = fetchInputData(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK &amp;amp;&amp;amp; err != ERROR_END_OF_STREAM) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if EOS, need to queue EOS buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeuedInputBuffers.erase(mDequeuedInputBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPendingInputMessages.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingInputMessages.push_back(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err == -EWOULDBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mSource-&amp;gt;feedMoreTSData() == OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayer::Decoder::fetchInputData(sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; dropAccessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;dequeueAccessUnit(mIsAudio, &amp;amp;accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EWOULDBLOCK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == INFO_DISCONTINUITY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;type));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; formatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (type &amp;amp; ATSParser::DISCONTINUITY_AUDIO_FORMAT))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (!mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            (type &amp;amp; ATSParser::DISCONTINUITY_VIDEO_FORMAT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeChange = (type &amp;amp; ATSParser::DISCONTINUITY_TIME) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s discontinuity (format=%d, time=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, formatChange, timeChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; seamlessFormatChange = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AMessage&amp;gt; newFormat = mSource-&amp;gt;getFormat(mIsAudio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    seamlessFormatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        supportsSeamlessFormatChange(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// treat seamless format change separately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    formatChange = !seamlessFormatChange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// For format or time change, return EOS to queue EOS input,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// then wait for EOS on output.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange &lt;span class=&quot;comment&quot;&gt;/* not seamless */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFormatChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTimeChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seamlessFormatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// reuse existing decoder and don&amp;apos;t flush&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// This stream is unaffected by the discontinuity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EWOULDBLOCK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reply should only be returned without a buffer set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// when there is an error (including EOS)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(err != OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsAudio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mIsSecure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mRenderer-&amp;gt;getVideoLateByUs() &amp;gt; &lt;span class=&quot;number&quot;&gt;100000l&lt;/span&gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mIsVideoAVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !IsAVCReferenceFrame(accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumInputFramesDropped;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (dropAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGV(&amp;quot;returned a valid buffer of %s data&amp;quot;, mIsAudio ? &amp;quot;mIsAudio&amp;quot; : &amp;quot;video&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; mediaTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;mediaTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] feeding input buffer at media time %.3f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mediaTimeUs / &lt;span class=&quot;number&quot;&gt;1E6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCCDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCCDecoder-&amp;gt;decode(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于NuPlayer的HLS流媒体协议</title>
    <link href="http://yoursite.com/2016/08/02/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8ENuPlayer%E7%9A%84HLS%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2016/08/02/Android-进阶之源码分析基于NuPlayer的HLS流媒体协议/</id>
    <published>2016-08-02T14:58:01.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;HLS-&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#HLS-&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;HLS &amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;HLS &amp;#x6982;&amp;#x8FF0;&lt;/h4&gt;&lt;p&gt;HTTP Live Streaming&amp;#xFF08;HLS&amp;#xFF09;&amp;#x662F;&amp;#x82F9;&amp;#x679C;&amp;#x516C;&amp;#x53F8;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x57FA;&amp;#x4E8E;HTTP&amp;#x7684;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x76F4;&amp;#x64AD;&amp;#x548C;&amp;#x70B9;&amp;#x64AD;&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x5E94;&amp;#x7528;&amp;#x5728;iOS&amp;#x7CFB;&amp;#x7EDF;&amp;#x3002;&amp;#x76F8;&amp;#x5BF9;&amp;#x4E8E;&amp;#x666E;&amp;#x901A;&amp;#x7684;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;RTMP&amp;#x534F;&amp;#x8BAE;&amp;#x3001;RTSP&amp;#x534F;&amp;#x8BAE;&amp;#x3001;MMS&amp;#x534F;&amp;#x8BAE;&amp;#x7B49;&amp;#xFF0C;HLS&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x4F18;&amp;#x70B9;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x81EA;&amp;#x52A8;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E0D;&amp;#x540C;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x8F83;&amp;#x597D;&amp;#xFF0C;&amp;#x5219;&amp;#x4F1A;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x9AD8;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x82E5;&amp;#x53D1;&amp;#x73B0;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x4E0D;&amp;#x4F73;&amp;#xFF0C;&amp;#x5219;&amp;#x4F1A;&amp;#x9010;&amp;#x6E10;&amp;#x8FC7;&amp;#x6E21;&amp;#x5230;&amp;#x4F4E;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0B;&amp;#x9762;&amp;#x5C06;&amp;#x4F1A;&amp;#x7ED3;&amp;#x5408;&amp;#x4EE3;&amp;#x7801;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8BF4;&amp;#x660E;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;a href=&quot;#HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot; class=&quot;headerlink&quot; title=&quot;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;/a&gt;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&lt;/h4&gt;&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;HLS&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6574;&amp;#x4F53;&amp;#x7ED3;&amp;#x6784;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x5C06;&amp;#x8981;&amp;#x76F4;&amp;#x64AD;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x9001;&amp;#x5230;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5206;&amp;#x522B;&amp;#x5BF9;&amp;#x89C6;&amp;#x9891;&amp;#x548C;&amp;#x97F3;&amp;#x9891;&amp;#x8FDB;&amp;#x884C;&amp;#x7F16;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8F93;&amp;#x51FA;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;MPEG-2&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x6D41;&amp;#x4E2D;&amp;#xFF0C;&amp;#x518D;&amp;#x7531;&amp;#x5206;&amp;#x6BB5;&amp;#x5668;&amp;#x5C06;MPEG-2&amp;#x4F20;&amp;#x8F93;&amp;#x6D41;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6BB5;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7B49;&amp;#x95F4;&amp;#x9694;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x7247;&amp;#x6BB5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5A92;&amp;#x4F53;&amp;#x7247;&amp;#x6BB5;&amp;#x4E00;&amp;#x822C;&amp;#x5F88;&amp;#x5C0F;&amp;#x5E76;&amp;#x4E14;&amp;#x4FDD;&amp;#x5B58;&amp;#x6210;&amp;#x540E;&amp;#x7F00;&amp;#x4E3A;.ts&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x751F;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6307;&amp;#x5411;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5F88;&amp;#x7ECF;&amp;#x5E38;&amp;#x542C;&amp;#x5230;&amp;#x7684;.M3U8&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5B8C;&amp;#x6210;&amp;#x5206;&amp;#x6BB5;&amp;#x4E4B;&amp;#x540E;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x4EE5;&amp;#x53CA;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0A;&amp;#x4F20;&amp;#x5230;Web&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#x3002;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BFB;&amp;#x53D6;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5217;&amp;#x51FA;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x4E0B;&amp;#x8F7D;&amp;#x540E;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ts&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x538B;&amp;#x83B7;&amp;#x5F97;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x5E76;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x5728;&amp;#x76F4;&amp;#x64AD;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5730;&amp;#x5C06;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x76F4;&amp;#x64AD;&amp;#x6570;&amp;#x636E;&amp;#x751F;&amp;#x6210;&amp;#x65B0;&amp;#x7684;&amp;#x5C0F;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0A;&amp;#x4F20;&amp;#x6240;&amp;#x4EE5;&amp;#x53EA;&amp;#x8981;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x4E0D;&amp;#x65AD;&amp;#x5730;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5E76;&amp;#x64AD;&amp;#x653E;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0A;&amp;#x770B;&amp;#x5C31;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x76F4;&amp;#x64AD;&amp;#x3002;&amp;#x800C;&amp;#x4E14;&amp;#x7531;&amp;#x4E8E;&amp;#x5206;&amp;#x6BB5;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5F88;&amp;#x77ED;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x5B9E;&amp;#x9645;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x60C5;&amp;#x51B5;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E0D;&amp;#x540C;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x76F4;&amp;#x64AD;&amp;#x6E90;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5B9E;&amp;#x73B0;&amp;#x591A;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x9002;&amp;#x914D;&amp;#x7684;&amp;#x76EE;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;M3U8-&amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#M3U8-&amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;M3U8 &amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;M3U8 &amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;/h4&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/jwzhangjie/article/details/9744027&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/jwzhangjie/article/details/9744027&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-STREAM-INF:PROGRAM-ID=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,BANDWIDTH=&lt;span class=&quot;number&quot;&gt;899152&lt;/span&gt;,RESOLUTION=&lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;x270,CODECS=&lt;span class=&quot;string&quot;&gt;&amp;quot;avc1.4d4015,mp4a.40.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//hls.ftdp.com/video1_widld/m3u8/01.m3u8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x8FF0;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5206;&amp;#x6BB5;&amp;#x7D22;&amp;#x5F15;&amp;#x5217;&amp;#x8868;&amp;#xFF08;index&amp;#x6587;&amp;#x4EF6;&amp;#xFF09;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTM3U&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-VERSION:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-TARGETDURATION:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-MEDIA-SEQUENCE:&lt;span class=&quot;number&quot;&gt;6532&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-KEY:METHOD=AES-&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,URI=&lt;span class=&quot;string&quot;&gt;&amp;quot;18319965201.key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20125484&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6533.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-KEY:METHOD=AES-&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,URI=&lt;span class=&quot;string&quot;&gt;&amp;quot;14319965205.key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20125484&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6534.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20140804&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6593.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x7247;&amp;#x7684;Key&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0B;&amp;#x8F7D;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x7247;&lt;/li&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x51B3;&amp;#x5B9A;&amp;#x662F;&amp;#x5426;&amp;#x5207;&amp;#x6362;&amp;#x89C6;&amp;#x9891;&amp;#x8D44;&amp;#x6E90;&lt;/li&gt;
&lt;li&gt;&amp;#x5C06;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#x5206;&amp;#x7247;&amp;#x8D44;&amp;#x6E90;&amp;#x89E3;&amp;#x5BC6;&amp;#x540E;&amp;#x9001;&amp;#x5230;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801; &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5173;&amp;#x4E8E;NuPlayerDrvier&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x4EE5;&amp;#x53CA;SetDataSource&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x548C;Stagefight Player&amp;#x5927;&amp;#x4F53;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x533A;&amp;#x522B;&amp;#x5728;&amp;#x4E8E;setDataSource&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x662F;&amp;#x6839;&amp;#x636E;url&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E09;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;DataSource&amp;#xFF1A;HttpLiveSource&amp;#xFF0C;RTSPSource&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;GenericSource&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x505A;&amp;#x5927;&amp;#x7BC7;&amp;#x5E45;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0A;&amp;#x56FE;&amp;#x5427;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x4ECE;prepare&amp;#x7ED3;&amp;#x5408;HLS&amp;#x539F;&amp;#x7406;&amp;#x5F00;&amp;#x59CB;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayerDriver::prepare() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepare(%p)&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; prepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayerDriver::prepare_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; STATE_UNPREPARED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = STATE_PREPARING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Make sure we&amp;apos;re not posting any notifications, success or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// failure information is only communicated through our result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// code.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIsAsyncPrepare = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState == STATE_PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCondition.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (mState == STATE_PREPARED) ? OK : UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; STATE_STOPPED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x7ECF;&amp;#x8FC7;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;mState&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;STATE_UNPREPARED&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5728;NuPlayerDriver::prepare_l()&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;mPlayer-&amp;gt;prepareAsync()&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;Nuplayer&amp;#x7684;prepareAsync&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatPrepare&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatPrepare, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;NuPlayer::prepareAsync&amp;#x4E2D;&amp;#x53EA;&amp;#x662F;&amp;#x53D1;&amp;#x9001;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;kWhatPrepare&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Handler&amp;#x67E5;&amp;#x770B;&amp;#x5904;&amp;#x7406;&amp;#x6D41;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//ignore other fuck source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatPrepare:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;Source&amp;#x7684;prepareAsync &amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x770B;&amp;#x4E0B;HttpliveSource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//ignore other fuck source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;Source&amp;#x7684;prepareAsync&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;mSource&amp;#x662F;&amp;#x5728;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x53EA;&amp;#x5206;&amp;#x6790;HLS&amp;#x7684;&amp;#x60C5;&amp;#x5F62;&amp;#x6240;&amp;#x4EE5;&amp;#x9700;&amp;#x8981;&amp;#x67E5;&amp;#x770B;HttpliveSource&amp;#x7684;prepareAsync&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::HTTPLiveSource&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::prepareAsync&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;Looper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLiveLooper == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;http live&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;kWhatSessionNotify&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;LiveSession&amp;#x7528;&amp;#x4E8E;&amp;#x901A;&amp;#x77E5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatSessionNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;LiveSession&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveSession = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; LiveSession(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (mFlags &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt; kFlagIncognito) ? LiveSession&lt;span class=&quot;tag&quot;&gt;::kFlagIncognito&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHTTPService);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(mLiveSession);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;LiveSession&amp;#x8FDB;&amp;#x884C;&amp;#x5F02;&amp;#x6B65;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveSession&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;connectAsync(mURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), mExtraHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;isEmpty() ? &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; : &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mExtraHeaders);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void LiveSession::connectAsync(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;kWhatConnect&amp;#x5E76;&amp;#x4F20;&amp;#x5165;url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConnect, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (headers != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt;(*headers));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConnect:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;onConnect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onConnect(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; LiveSession&lt;span class=&quot;tag&quot;&gt;::onConnect&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4F20;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mMasterURL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    KeyedVect&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;&amp;lt;String8, String8&amp;gt; *headers = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; **)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;headers)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mExtraHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mExtraHeaders = *headers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delete headers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        headers = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;mFetcherLooper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFetcherLooper == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;Fetcher&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addFetcher(mMasterURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str())&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;fetchPlaylistAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x4FE1;&amp;#x606F;&amp;#x4E86;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;PlaylistFetcher&amp;gt; LiveSession::addFetcher(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *uri) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; index = mFetcherInfos.indexOfKey(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatFetcherNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;switchGeneration&amp;quot;&lt;/span&gt;, mSwitchGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FetcherInfo info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;PlaylistFetcher&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mFetcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PlaylistFetcher(notify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, uri, mCurBandwidthIndex, mSubtitleGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mDurationUs = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mToBeRemoved = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mToBeResumed = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherLooper-&amp;gt;registerHandler(info.mFetcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherInfos.add(uri, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;info.mFetcher&amp;#x662F;&amp;#x4E0A;&amp;#x9762;new &amp;#x51FA;&amp;#x6765;&amp;#x7684;PlaylistFetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; info.mFetcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;PlaylistFetcher&amp;#x8C03;&amp;#x7528;fetchPlaylistAsync&amp;#x6765;&amp;#x83B7;&amp;#x53D6;playlists&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void PlaylistFetcher::fetchPlaylistAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatFetchPlaylist, this))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void PlaylistFetcher::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatFetchPlaylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; unchanged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;M3U8Parser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;M3UParser&amp;gt; playlist = mHTTPDownloader-&amp;gt;fetchPlaylist(mURI.c_str(), &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* curPlaylistHash */&lt;/span&gt;, &amp;amp;unchanged);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatPlaylistFetched);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;playlist&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;playlist&amp;quot;&lt;/span&gt;, playlist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;fetchFile&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;fetchFile&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;m3u8 playlist&amp;#x5185;&amp;#x5BB9;&amp;#x5B58;&amp;#x653E;&amp;#x5230;buffer&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x88C5;&amp;#x6210;M3UParser&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;M3UParser&amp;gt; HTTPDownloader::fetchPlaylist(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *curPlaylistHash, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; *unchanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *unchanged = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 actualUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;fetchFile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; err = fetchFile(url, &amp;amp;buffer, &amp;amp;actualUrl);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x65AD;&amp;#x5F00;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHTTPDataSource-&amp;gt;disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x88C5;&amp;#x6210;M3UParser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;M3UParser&amp;gt; playlist = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; M3UParser(actualUrl.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), buffer-&amp;gt;data(), buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; playlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; HTTPDownloader::fetchFile(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, sp&amp;lt;ABuffer&amp;gt; *out, String8 *actualUrl) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; err = fetchBlock(url, out, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, actualUrl, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* reconnect */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// close off the connection after use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHTTPDataSource-&amp;gt;disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x770B;&amp;#x4E0B;M3UParser&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;M3UParser::M3UParser(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *baseURI, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *data, size_t size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInitCheck(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mBaseURI(baseURI),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsExtM3U(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsVariantPlaylist(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsComplete(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsEvent(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstSeqNumber(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLastSeqNumber(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetDurationUs(-1ll),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDiscontinuitySeq(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDiscontinuityCount(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSelectedIndex(-1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInitCheck = parse(data, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;parse&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t M3UParser::parse(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *_data, size_t &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t lineNo = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *data = (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *)_data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint64_t segmentRangeOffset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offset &amp;lt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t offsetLF = offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offsetLF &amp;lt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; &amp;amp;&amp;amp; data[offsetLF] != &lt;span class=&quot;string&quot;&gt;&amp;apos;\n&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++offsetLF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offsetLF &amp;gt; offset &amp;amp;&amp;amp; data[offsetLF - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos;\r&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.setTo(&amp;amp;data[offset], offsetLF - offset - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.setTo(&amp;amp;data[offset], offsetLF - offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offset = offsetLF + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lineNo == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&amp;quot;#EXTM3U&amp;quot;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIsExtM3U = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsExtM3U) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-TARGETDURATION&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaData(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;mMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;target-duration&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-MEDIA-SEQUENCE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaData(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;mMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;media-sequence&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-KEY&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseCipherInfo(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta, mBaseURI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-ENDLIST&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsComplete = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-PLAYLIST-TYPE:EVENT&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsEvent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXTINF&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaDataDuration(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-DISCONTINUITY&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++mDiscontinuityCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-STREAM-INF&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsVariantPlaylist = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseStreamInf(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-BYTERANGE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uint64_t length, offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseByteRange(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, segmentRangeOffset, &amp;amp;length, &amp;amp;offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemMeta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-offset&amp;quot;&lt;/span&gt;, offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-length&amp;quot;&lt;/span&gt;, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    segmentRangeOffset = offset + length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-MEDIA&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMedia(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-DISCONTINUITY-SEQUENCE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                size_t seq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseDiscontinuitySequence(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;seq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mDiscontinuitySeq = seq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int64_t durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, &amp;amp;durationUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity-sequence&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mDiscontinuitySeq + mDiscontinuityCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mItems.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Item *item = &amp;amp;mItems.editItemAt(mItems.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(MakeURL(mBaseURI.c_str(), &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.c_str(), &amp;amp;item-&amp;gt;mURI));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item-&amp;gt;mMeta = itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            itemMeta.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        offset = offsetLF + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++lineNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t targetDurationSecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta == NULL || !mMeta-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;target-duration&amp;quot;&lt;/span&gt;, &amp;amp;targetDurationSecs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Media playlist missing #EXT-X-TARGETDURATION&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTargetDurationUs = targetDurationSecs * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstSeqNumber = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;media-sequence&amp;quot;&lt;/span&gt;, &amp;amp;mFirstSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastSeqNumber = mFirstSeqNumber + mItems.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x73B0;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4E86;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;M3UParser&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatPlaylistFetched&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5728;&amp;#x54EA;&amp;#x91CC;&amp;#x88AB;&amp;#x5904;&amp;#x7406;&amp;#x5462;&amp;#xFF1F;&amp;#x5F53;&amp;#x7136;&amp;#x662F;LiveSession&amp;#x554A;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;PlaylistFetcher:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatPlaylistFetched:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onMasterPlaylistFetched(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x540E;&amp;#x8981;&amp;#x5E72;&amp;#x5565;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onMasterPlaylistFetched(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &amp;amp;uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; index = mFetcherInfos.indexOfKey(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// no longer useful, remove&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherLooper-&amp;gt;unregisterHandler(mFetcherInfos[index].mFetcher-&amp;gt;id());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherInfos.removeItemsAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x8D70;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;playlist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;playlist&amp;quot;&lt;/span&gt;, (sp&amp;lt;RefBase&amp;gt; *)&amp;amp;mPlaylist));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We trust the content provider to make a reasonable choice of preferred&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initial bandwidth by listing it first in the variant playlist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// At startup we really don&amp;apos;t have a good estimate on the available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// network bandwidth since we haven&amp;apos;t tranferred any data yet. Once&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we have we can make a better informed choice.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; initialBandwidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; initialBandwidthIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;playlist&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6548;&amp;#xFF0C;&amp;#x65E0;&amp;#x6548;&amp;#x5C31;&amp;#x6CA1;&amp;#x5565;&amp;#x7528;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5047;&amp;#x8BBE;&amp;#x6709;&amp;#x6548;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;isVariantPlaylist()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;BandwidthItem&amp;gt; itemsWithVideo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPlaylist-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BandwidthItem item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.mPlaylistIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.mLastFailureUs = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlaylist-&amp;gt;itemAt(i, &amp;amp;uri, &amp;amp;meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;item.mBandwidth));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x5927;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;width)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxWidth = max(maxWidth, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxHeight = max(maxHeight, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mBandwidthItems.push(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;hasType(i, &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemsWithVideo.push(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x79FB;&amp;#x9664;&amp;#x53EA;&amp;#x6709;&amp;#x58F0;&amp;#x97F3;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!itemsWithVideo.empty()&amp;amp;&amp;amp; itemsWithVideo.size() &amp;lt; mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mBandwidthItems.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; itemsWithVideo.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBandwidthItems.push(itemsWithVideo[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_GT(mBandwidthItems.size(), &lt;span class=&quot;number&quot;&gt;0u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        initialBandwidth = mBandwidthItems[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].mBandwidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6309;&amp;#x7167;&amp;#x5E26;&amp;#x5BBD;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBandwidthItems.sort(SortByBandwidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mBandwidthItems.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthItems.itemAt(i).mBandwidth == initialBandwidth) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                initialBandwidthIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMaxWidth = maxWidth &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? maxWidth : mMaxWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMaxHeight = maxHeight &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? maxHeight : mMaxHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaylist-&amp;gt;pickRandomMediaItems();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    changeConfiguration(&lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l &lt;span class=&quot;comment&quot;&gt;/* timeUs */&lt;/span&gt;, initialBandwidthIndex, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* pickTrack */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::changeConfiguration(&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; timeUs, &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bandwidthIndex, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; pickTrack) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x6D88;&amp;#x5E26;&amp;#x5BBD;&amp;#x5207;&amp;#x6362;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cancelBandwidthSwitch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReconfigurationInProgress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7531;mOrigBandwidthIndex&amp;#x5207;&amp;#x6362;&amp;#x5230;mCurBandwidthIndex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bandwidthIndex &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x5F53;&amp;#x524D;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOrigBandwidthIndex = mCurBandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurBandwidthIndex = bandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOrigBandwidthIndex != mCurBandwidthIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x5207;&amp;#x6362;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;#### Starting Bandwidth Switch: %zd =&amp;gt; %zd&amp;quot;&lt;/span&gt;,mOrigBandwidthIndex, mCurBandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_LT(mCurBandwidthIndex, mBandwidthItems.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x7684;BandwidthItem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; BandwidthItem &amp;amp;item = mBandwidthItems.itemAt(mCurBandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; streamMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// streams that should be fetched by the new fetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; resumeMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// streams that should be fetched by the original fetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString URIs[kMaxStreams];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;getTypeURI(item.mPlaylistIndex, mStreams[i].mType, &amp;amp;URIs[i])) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            streamMask |= indexToType(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x505C;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x6682;&amp;#x505C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x8981;&amp;#x590D;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x7684;&amp;#x6240;&amp;#x4EE5;&amp;#x8DF3;&amp;#x8FC7;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mFetcherInfos.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// skip onChangeConfiguration2 (decoder destruction) if not seeking.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatChangeConfiguration3, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatChangeConfiguration2, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;streamMask&amp;quot;&lt;/span&gt;, streamMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;resumeMask&amp;quot;&lt;/span&gt;, resumeMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;pickTrack&amp;quot;&lt;/span&gt;, pickTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, timeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((streamMask | resumeMask) &amp;amp; indexToType(i)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setString(mStreams[i].uriKey().c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Every time a fetcher acknowledges the stopAsync or pauseAsync request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we&amp;apos;ll decrement mContinuationCounter, once it reaches zero, i.e. all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// fetchers have completed their asynchronous operation, we&amp;apos;ll post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mContinuation, which then is handled below in onChangeConfiguration2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//&amp;#x6BCF;&amp;#x6B21;fetcher &amp;#x8C03;&amp;#x7528;&amp;#x4E86;stopAsync&amp;#x548C;pauseAsync mContinuationCounter &amp;#x6570;&amp;#x503C;&amp;#x90FD;&amp;#x4F1A;&amp;#x51CF;&amp;#x53BB;1,&amp;#x4E00;&amp;#x65E6;&amp;#x51CF;&amp;#x5230;0 &amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;onChangeConfiguration2&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mContinuationCounter = mFetcherInfos.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mContinuation = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mContinuationCounter == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void LiveSession::onChangeConfiguration2(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int64_t timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;timeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastSeekTimeUs = timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastDequeuedTimeUs = timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPacketSources.size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; packetSource = mPacketSources.editValueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;MetaData&amp;gt; format = packetSource-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packetSource-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packetSource-&amp;gt;setFormat(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStreams[i].reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDiscontinuityOffsetTimesUs.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDiscontinuityAbsStartTimesUs.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekReplyID != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(mSeekReply != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply-&amp;gt;postReply(mSeekReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReplyID.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        restartPollBuffering();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t streamMask, resumeMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;streamMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;streamMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;resumeMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;resumeMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    streamMask |= resumeMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString URIs[kMaxStreams];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamMask &amp;amp; indexToType(i)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;uriKey = mStreams[i].uriKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findString(uriKey.c_str(), &amp;amp;URIs[i]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s = &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uriKey.c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t changedMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams &amp;amp;&amp;amp; i != kSubtitleIndex; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// stream URI could change even if onChangeConfiguration2 is only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// used for seek. Seek could happen during a bw switch, in this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// case bw switch will be cancelled, but the seekTo position will&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fetch from the new URI.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStreamMask &amp;amp; streamMask &amp;amp; indexToType(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mStreams[i].mUri.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !(URIs[i] == mStreams[i].mUri)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;stream %zu changed: oldURI %s, newURI %s&amp;quot;&lt;/span&gt;, i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStreams[i].mUri.c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source = mPacketSources.valueFor(indexToType(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;getLatestDequeuedMeta() != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;queueDiscontinuity(ATSParser::DISCONTINUITY_FORMATCHANGE, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Determine which decoders to shutdown on the player side,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a decoder has to be shutdown if its streamtype was active&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// before but now longer isn&amp;apos;t.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStreamMask &amp;amp; ~streamMask &amp;amp; indexToType(i))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            changedMask |= indexToType(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;kWhatStreamsChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatStreamsChanged);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;changedMask&amp;quot;&lt;/span&gt;, changedMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;kWhatChangeConfiguration3&amp;#x4F5C;&amp;#x4E3A;&amp;#x56DE;&amp;#x590D;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setWhat(kWhatChangeConfiguration3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LiveSession::kWhatStreamsChanged:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t changedMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;changedMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;changedMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x4EC0;&amp;#x4E48;&amp;#x6D41;&amp;#x6539;&amp;#x53D8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio = changedMask &amp;amp; LiveSession::STREAMTYPE_AUDIO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; video = changedMask &amp;amp; LiveSession::STREAMTYPE_VIDEO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = dupNotify();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatQueueDecoderShutdown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;, audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Source:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:kWhatQueueDecoderShutdown&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t audio, video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;, &amp;amp;audio));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, &amp;amp;video));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;constant&quot;&gt;AMessage&amp;gt;&lt;/span&gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    queueDecoderShutdown(audio, video, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::queueDecoderShutdown(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; video, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueDecoderShutdown audio=%d, video=%d&amp;quot;&lt;/span&gt;, audio, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FlushDecoderAction(audio ? FLUSH_CMD_SHUTDOWN : FLUSH_CMD_NONE,video ? FLUSH_CMD_SHUTDOWN : FLUSH_CMD_NONE));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAction(&amp;amp;NuPlayer::performScanSources));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PostMessageAction(reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    processDeferredActions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;performDecoderFlush&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct NuPlayer&lt;span class=&quot;value&quot;&gt;::FlushDecoderAction : public Action {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;FlushDecoderAction&lt;/span&gt;(FlushCommand audio, FlushCommand video)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : &lt;span class=&quot;function&quot;&gt;mAudio&lt;/span&gt;(audio),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;function&quot;&gt;mVideo&lt;/span&gt;(video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual void &lt;span class=&quot;function&quot;&gt;execute&lt;/span&gt;(NuPlayer *player) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player-&amp;gt;&lt;span class=&quot;function&quot;&gt;performDecoderFlush&lt;/span&gt;(mAudio, mVideo);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private&lt;span class=&quot;value&quot;&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FlushCommand mAudio;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FlushCommand mVideo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;DISALLOW_EVIL_CONSTRUCTORS&lt;/span&gt;(FlushDecoderAction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::performDecoderFlush(FlushCommand audio, FlushCommand video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;performDecoderFlush audio=%d, video=%d&amp;quot;&lt;/span&gt;, audio, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((audio == FLUSH_CMD_NONE || mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&amp;amp;&amp;amp; (video == FLUSH_CMD_NONE || mVideoDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio != FLUSH_CMD_NONE &amp;amp;&amp;amp; mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;, (audio == FLUSH_CMD_SHUTDOWN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video != FLUSH_CMD_NONE &amp;amp;&amp;amp; mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;, (video == FLUSH_CMD_SHUTDOWN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::flushDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; needShutdown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] flushDecoder needShutdown=%d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          audio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, needShutdown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DecoderBase&amp;gt; &amp;amp;decoder = getDecoder(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DecoderBase&amp;gt; &amp;amp;decoder = getDecoder(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (decoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;flushDecoder %s without decoder present&amp;quot;&lt;/span&gt;,audio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::postScanSources&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mScanSourcesPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatScanSources, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mScanSourcesGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatScanSources:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; mHadAnySourcesBefore =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) || (mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialize video before audio because successful initialization of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// video may change deep buffer mode of audio.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSurface != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &amp;amp;mVideoDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to re-open audio sink if there&amp;apos;s an existing decoder.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &amp;amp;mAudioDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t NuPlayer::instantiateDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, sp&amp;lt;DecoderBase&amp;gt; *decoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x683C;&amp;#x5F0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format = mSource-&amp;gt;getFormat(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* realtime */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAudioNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mAudioDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mAudioDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        determineAudioModeChange();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatVideoNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mVideoDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mVideoDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer, mSurface, mCCDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;configure(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B83;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::configure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::init&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::Decoder&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onConfigure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec = MediaCodec&lt;span class=&quot;tag&quot;&gt;::CreateByType&lt;/span&gt;(mCodecLooper, mime&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* encoder */&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* err */&lt;/span&gt;, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;configure(format, mSurface, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* crypto */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* flags */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5BBD;&amp;#x9AD8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mIsAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;width)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaCodec&amp;gt; MediaCodec::CreateByType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ALooper&amp;gt; &amp;amp;looper, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; *err, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodec(looper, pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = codec-&amp;gt;init(mime, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* nameIsType */&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret == OK ? codec : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// NULL deallocates codec.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BF4;&amp;#x660E;mCodec&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ACodec&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::init(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;name, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; nameIsType, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mResourceManagerService-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType || !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;omx.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x540D;&amp;#x79F0;&amp;#x521B;&amp;#x5EFA;Codec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ACodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!nameIsType&amp;amp;&amp;amp; !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;android.filter.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInit, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;nameIsType&amp;quot;&lt;/span&gt;, nameIsType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;kWhatInit:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;....................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateAllocateComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateAllocateComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatAllocateComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatAllocateComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAllocateComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::UninitializedState::onAllocateComponent(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;OMXCodec::CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t quirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, &amp;amp;componentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t index = matchingCodecs.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::CodecNameAndQuirks *entry = &amp;amp;matchingCodecs.editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry-&amp;gt;mName = String8(componentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!OMXCodec::findCodecQuirks(componentName.c_str(), &amp;amp;entry-&amp;gt;mQuirks)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mime.c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                encoder, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// matchComponentName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;// flags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;CodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = NAME_NOT_FOUND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t matchIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; matchIndex &amp;lt; matchingCodecs.size();++matchIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentName = matchingCodecs.itemAt(matchIndex).mName.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quirks = matchingCodecs.itemAt(matchIndex).mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pid_t tid = gettid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; prevPriority = androidGetThreadPriority(tid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = omx-&amp;gt;allocateNode(componentName.c_str(), observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, prevPriority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatOMXMessageList, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer-&amp;gt;setNotificationMessage(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mComponentName = componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mRenderTracker.setComponentName(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mFlags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mQuirks = quirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mOMX = omx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mNode = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentAllocated);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;changeState(mCodec-&amp;gt;mLoadedState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::configure(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;Surface&amp;gt; &amp;amp;surface,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ICrypto&amp;gt; &amp;amp;crypto,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;mVideoWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;mVideoHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;mRotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, surface);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save msg for reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfigureMsg = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConfigure:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, &amp;amp;format));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push) &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagPushBlankBuffersOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = handleSetSurface(&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PostReplyWithError(replyID, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleSetSurface(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *crypto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;flags));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CONFIGURE_FLAG_ENCODE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsEncoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateConfigureComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateConfigureComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatConfigureComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatConfigureComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConfigureComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::LoadedState::onConfigureComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onConfigureComponent&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mCodec-&amp;gt;mNode != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mCodec-&amp;gt;configureCodec(mime.c_str(), msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentConfigured);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mInputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mOutputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatComponentConfigured:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == UNINITIALIZED || mState == INITIALIZED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// In case a kWhatError message came in and replied with error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we log a warning and ignore.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;configure interrupted by error, current state %d&amp;quot;&lt;/span&gt;, mState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// reset input surface flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHaveInputSurface = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, &amp;amp;mInputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, &amp;amp;mOutputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t usingSwRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &amp;amp;usingSwRenderer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagUsesSoftwareRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage)-&amp;gt;postReply(mReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6700;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x95F4;&amp;#x597D;&amp;#x597D;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7814;&amp;#x7A76;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5148;&amp;#x9488;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t ACodec::configureCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; inputFormat = new AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; outputFormat = mNotify-&amp;gt;dup(); &lt;span class=&quot;comment&quot;&gt;// will use this for kWhatOutputFormatChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsEncoder = encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOutputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = setComponentRole(encoder &lt;span class=&quot;comment&quot;&gt;/* isEncoder */&lt;/span&gt;, mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t bitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// FLAC encoder doesn&amp;apos;t need a bitrate, other encoders do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bitrate&amp;quot;&lt;/span&gt;, &amp;amp;bitRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t storeMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE, &amp;amp;mInputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (input) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For this specific case we could be using camera source even if storeMetaDataInBuffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// returns Gralloc source. Pretend that we are; this will force us to use nBufferSize.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInputMetadataType == kMetadataBufferTypeGrallocSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputMetadataType = kMetadataBufferTypeCameraSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t usageBits;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX-&amp;gt;getParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode, (OMX_INDEXTYPE)OMX_IndexParamConsumerUsageBits,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;usageBits, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(usageBits)) == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inputFormat-&amp;gt;setInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-read-often&amp;quot;&lt;/span&gt;, !!(usageBits &amp;amp; GRALLOC_USAGE_SW_READ_OFTEN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t prependSPSPPS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepend-sps-pps-to-idr-frames&amp;quot;&lt;/span&gt;, &amp;amp;prependSPSPPS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; prependSPSPPS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_INDEXTYPE index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;getExtensionIndex(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.android.index.prependSPSPPSToIDRFrames&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PrependSPSPPSToIDRFramesParams params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params.bEnable = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, index, &amp;amp;params, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(params));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Encoder could not be configured to emit SPS/PPS before &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;IDR frames. (err %d)&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Only enable metadata mode on encoder output if encoder can prepend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// sps/pps to idr frames, since in metadata mode the bitstream is in an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// opaque handle, to which we don&amp;apos;t have access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t video = !strncasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsVideo = video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_BOOL enable = (OMX_BOOL) (prependSPSPPS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers-output&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexOutput, enable, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (output) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;repeat-previous-frame-after&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mRepeatFrameDelayUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRepeatFrameDelayUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-pts-gap-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxPtsGapUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxPtsGapUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-fps-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxFps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxFps = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-lapse&amp;quot;&lt;/span&gt;, &amp;amp;mTimePerCaptureUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTimePerCaptureUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;create-input-buffers-suspended&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (int32_t*)&amp;amp;mCreateInputBuffersSuspended)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCreateInputBuffersSuspended = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; we only use native window for video decoders&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveNativeWindow = msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, &amp;amp;obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; obj != NULL &amp;amp;&amp;amp; video &amp;amp;&amp;amp; !encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLegacyAdaptiveExperiment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video &amp;amp;&amp;amp; !encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t usageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;, &amp;amp;usageProtected) &amp;amp;&amp;amp; usageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected output buffers must be sent to an ANativeWindow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagIsGrallocUsageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ANativeWindow&amp;gt; nativeWindow =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ANativeWindow *&amp;gt;(static_cast&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// START of temporary support for automatic FRC - THIS WILL BE REMOVED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, &amp;amp;autoFrc)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; enabled = autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            OMX_CONFIG_BOOLEANTYPE config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            config.bEnabled = (OMX_BOOL)enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t temp = mOMX-&amp;gt;setConfig(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, (OMX_INDEXTYPE)OMX_IndexConfigAutoFramerateConversion,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(config));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (temp == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (enabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;codec does not support requested auto-frc (err %d)&amp;quot;&lt;/span&gt;, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// END of temporary support for automatic FRC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t tunneled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;, &amp;amp;tunneled) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tunneled != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring TUNNELED video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t audioHwSync = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio-hw-sync&amp;quot;&lt;/span&gt;, &amp;amp;audioHwSync)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;No Audio HW Sync provided for video tunnel&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = configureTunneledVideoPlayback(audioHwSync, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;configureTunneledVideoPlayback(%d,%p) failed!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        audioHwSync, nativeWindow.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, kPortIndexOutput, OMX_TRUE, maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring CPU controlled video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Explicity reset the sideband handle of the window for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// non-tunneled video in case the window was previously used&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// for a tunneled video playback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = native_window_set_sideband_stream(nativeWindow.get(), NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;set_sideband_stream(NULL) failed! (err %d).&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Always try to enable dynamic output buffers on native surface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, kPortIndexOutput, OMX_TRUE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// if adaptive playback has been requested, try JB fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; THIS FALLBACK MECHANISM WILL BE REMOVED DUE TO ITS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// LARGE MEMORY REQUIREMENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we will not do adaptive playback on software accessed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// surfaces as they never had to respond to changes in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// crop window, and we don&amp;apos;t trust that they will be able to.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; usageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canDoAdaptivePlayback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nativeWindow-&amp;gt;query(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nativeWindow.get(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        NATIVE_WINDOW_CONSUMER_USAGE_BITS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;usageBits) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (usageBits &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                (GRALLOC_USAGE_SW_READ_MASK |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 GRALLOC_USAGE_SW_WRITE_MASK)) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canDoAdaptivePlayback &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback(%dx%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mNode, kPortIndexOutput, OMX_TRUE, maxWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW_IF(err != OK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers succeeded&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(storingMetadataInDecodedBuffers());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLegacyAdaptiveExperiment = ADebug::isExperimentEnabled(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&amp;quot;legacy-adaptive&amp;quot;&lt;/span&gt;, !msg-&amp;gt;contains(&lt;span class=&quot;string&quot;&gt;&amp;quot;no-experiments&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;rotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// determine need for software renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow &amp;amp;&amp;amp; mComponentName.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoEncoder(mime, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoDecoder(mime, msg, haveNativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNativeWindow = static_cast&amp;lt;Surface *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// initialize native window now to get actual output format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; this is needed for some encoders even though they don&amp;apos;t use native window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = initNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fallback for devices that do not handle flex-YUV for native buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t requestedColorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;requestedColorFormat) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    requestedColorFormat == OMX_COLOR_FormatYUV420Flexible) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                status_t err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t colorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_U32 flexibleEquivalent = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!outputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;colorFormat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;ouptut port did not have a color format (wrong domain?)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Requested output format %#x and got %#x.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), requestedColorFormat, colorFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isFlexibleColorFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mOMX, mNode, colorFormat, haveNativeWindow, &amp;amp;flexibleEquivalent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || flexibleEquivalent != (OMX_U32)requestedColorFormat) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// device did not handle flex-YUV request for native window, fall back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// to SW renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Falling back to software renderer&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindow.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindowUsageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (storingMetadataInDecodedBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mNode, kPortIndexOutput, OMX_FALSE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mOutputMetadataType = kMetadataBufferTypeInvalid; &lt;span class=&quot;comment&quot;&gt;// just in case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; implement adaptive-playback support for bytebuffer mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// This is done by SW codecs, but most HW codecs don&amp;apos;t support it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;enableGraphicBuffers(mNode, kPortIndexOutput, OMX_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsGrallocUsageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// fallback is not supported for protected playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = setupVideoDecoder(mime, msg, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Since we did not always check for these, leave them optional&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and have the decoder figure it all out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder ? kPortIndexInput : kPortIndexOutput,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t isADTS, aacProfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sbrMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxOutputChannelCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t pcmLimiterEnable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drcParams_t drc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;is-adts&amp;quot;&lt;/span&gt;, &amp;amp;isADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isADTS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-profile&amp;quot;&lt;/span&gt;, &amp;amp;aacProfile)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aacProfile = OMX_AUDIO_AACObjectNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-sbr-mode&amp;quot;&lt;/span&gt;, &amp;amp;sbrMode)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sbrMode = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-max-output-channel_count&amp;quot;&lt;/span&gt;, &amp;amp;maxOutputChannelCount)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxOutputChannelCount = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-pcm-limiter-enable&amp;quot;&lt;/span&gt;, &amp;amp;pcmLimiterEnable)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pcmLimiterEnable = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-encoded-target-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.encodedTargetLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.encodedTargetLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-cut-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcCut)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcCut = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-boost-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcBoost)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcBoost = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-heavy-compression&amp;quot;&lt;/span&gt;, &amp;amp;drc.heavyCompression)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.heavyCompression = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-target-ref-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.targetRefLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.targetRefLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAACCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, bitRate, aacProfile,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    isADTS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sbrMode, maxOutputChannelCount, drc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pcmLimiterEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_ALAW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_MLAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// These are PCM-like formats with a fixed sample rate but&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a variable number of channels.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sampleRate = &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupG711Codec(encoder, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sampleRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, compressionLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;missing channel count or sample rate for FLAC encoder&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;complexity&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    !msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;flac-compression-level&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default FLAC compression level&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 0&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 8&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupFlacCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(kPortIndexInput, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_EAC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupEAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-delay&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderDelay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderDelay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-padding&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderPadding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderPadding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-mask&amp;quot;&lt;/span&gt;, &amp;amp;mChannelMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t maxInputSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-input-size&amp;quot;&lt;/span&gt;, &amp;amp;maxInputSize)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, (size_t)maxInputSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.Nvidia.aac.decoder&amp;quot;&lt;/span&gt;, mComponentName.c_str())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;label&quot;&gt;XXX&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &amp;amp;priority)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setPriority(priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t rateInt = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; rateFloat = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateFloat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateInt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rateFloat = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)rateInt;  &lt;span class=&quot;comment&quot;&gt;// 16MHz (FLINTMAX) is OK for upper bound.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rateFloat &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setOperatingRate(rateFloat, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBaseOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = getPortFormat(kPortIndexInput, inputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputFormat = inputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x4E86;&amp;#x8FD9;&amp;#x91CC;&amp;#x6574;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x548C;&amp;#x914D;&amp;#x7F6E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;start&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;MediaResource&amp;gt; resources;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type = (mFlags &amp;amp; kFlagIsSecure) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            kResourceSecureCodec : kResourceNonSecureCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *subtype = mIsVideo ? kResourceVideoCodec : kResourceAudioCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(type), String8(subtype), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t know the buffer size at this point, but it&amp;apos;s fine to use 1 because&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the reclaimResource call doesn&amp;apos;t consider the requester&amp;apos;s buffer size for now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(kResourceGraphicMemory), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Recover codec from previous error before retry start.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to reset codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = PostAndAwaitResponse(mConfigureMsg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to configure codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isResourceError(err)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(STARTED)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mHavePendingInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onInputBufferAvailable()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHavePendingInputBuffers = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec-&amp;gt;signalResume()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //..................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, OK)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else if (mState != CONFIGURED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, INVALID_OPERATION)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(STARTING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateStart()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8ABF;&amp;#x7528;initiateStart&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::initiateStart() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::LoadedState&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;signalErr&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;(OMX_ErrorUndefined, makeNoSideEffectStatus(err));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;changeState(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mLoadedToIdleState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::signalResume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatResume, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatResume:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::ExecutingState::resume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    submitOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Post all available input buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mBuffers[kPortIndexInput].size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] we don&amp;apos;t have any input buffers to resume&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mCodec-&amp;gt;mBuffers[kPortIndexInput].size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo *info = &amp;amp;mCodec-&amp;gt;mBuffers[kPortIndexInput].editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info-&amp;gt;mStatus == BufferInfo::OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postFillThisBuffer(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mActive = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::BaseState::postFillThisBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mPortEOS[kPortIndexInput]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)BufferInfo::OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatFillThisBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mData-&amp;gt;meta()-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, info-&amp;gt;mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInputBufferFilled, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = BufferInfo::OWNED_BY_UPSTREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatFillThisBuffer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsAsync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mHaveInputSurface) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mHavePendingInputBuffers = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onInputBufferAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagDequeueInputPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(handleDequeueInputBuffer(mDequeueInputReplyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mDequeueInputTimeoutGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagDequeueInputPending;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeueInputReplyID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postActivityNotificationIfPossible();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;MediaCodec&lt;/span&gt;::onInputBufferAvailable&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((index = dequeuePortBuffer(kPortIndexInput)) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mCallback-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackID&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;CB_INPUT_AVAILABLE&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;mCallback&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::Decoder::onConfigure(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCodecNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;setCallback(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::setCallback(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatSetCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PostAndAwaitResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, &amp;amp;response)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatSetCallback:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&amp;quot;callback&amp;quot;, &amp;amp;callback))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mCallback != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response = new AMessage&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;postReply(replyID)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x77E5;&amp;#x9053;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;i&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;kWhatCodecNotify &amp;#x4E0B;&amp;#x7684; CB_INPUT_AVAILABLE&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaCodec::CB_INPUT_AVAILABLE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleAnInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool NuPlayer::Decoder::handleAnInputBuffer(size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;getInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleError(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mInputBuffers.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = mInputBuffers.size(); i &amp;lt;= &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.editItemAt(i) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.editItemAt(i) = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//CHECK_LT(bufferIx, mInputBuffers.size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;] != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;]-&amp;gt;release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mCSDsToSubmit.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = mCSDsToSubmit.itemAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] resubmitting CSD&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCSDsToSubmit.removeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(onInputBufferFetched(msg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!mPendingInputMessages.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = *mPendingInputMessages.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPendingInputMessages.erase(mPendingInputMessages.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDequeuedInputBuffers.push_back(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onRequestInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::DecoderBase::onRequestInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRequestInputBuffersPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doRequestBuffers() return true if we should request more data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (doRequestBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRequestInputBuffersPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatRequestInputBuffers, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NuPlayer::Decoder::doRequestBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mRenderer is only NULL if we have a legacy widevine source that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// is not yet ready. In this case we must not fetch input.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending() || mRenderer == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (err == OK &amp;amp;&amp;amp; !mDequeuedInputBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t bufferIx = *mDequeuedInputBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, bufferIx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = fetchInputData(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK &amp;amp;&amp;amp; err != ERROR_END_OF_STREAM) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if EOS, need to queue EOS buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeuedInputBuffers.erase(mDequeuedInputBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPendingInputMessages.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingInputMessages.push_back(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err == -EWOULDBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mSource-&amp;gt;feedMoreTSData() == OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayer::Decoder::fetchInputData(sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; dropAccessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;dequeueAccessUnit(mIsAudio, &amp;amp;accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EWOULDBLOCK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == INFO_DISCONTINUITY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;type));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; formatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (type &amp;amp; ATSParser::DISCONTINUITY_AUDIO_FORMAT))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (!mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            (type &amp;amp; ATSParser::DISCONTINUITY_VIDEO_FORMAT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeChange = (type &amp;amp; ATSParser::DISCONTINUITY_TIME) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s discontinuity (format=%d, time=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, formatChange, timeChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; seamlessFormatChange = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AMessage&amp;gt; newFormat = mSource-&amp;gt;getFormat(mIsAudio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    seamlessFormatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        supportsSeamlessFormatChange(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// treat seamless format change separately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    formatChange = !seamlessFormatChange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// For format or time change, return EOS to queue EOS input,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// then wait for EOS on output.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange &lt;span class=&quot;comment&quot;&gt;/* not seamless */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFormatChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTimeChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seamlessFormatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// reuse existing decoder and don&amp;apos;t flush&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// This stream is unaffected by the discontinuity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EWOULDBLOCK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reply should only be returned without a buffer set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// when there is an error (including EOS)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(err != OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsAudio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mIsSecure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mRenderer-&amp;gt;getVideoLateByUs() &amp;gt; &lt;span class=&quot;number&quot;&gt;100000l&lt;/span&gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mIsVideoAVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !IsAVCReferenceFrame(accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumInputFramesDropped;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (dropAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGV(&amp;quot;returned a valid buffer of %s data&amp;quot;, mIsAudio ? &amp;quot;mIsAudio&amp;quot; : &amp;quot;video&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; mediaTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;mediaTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] feeding input buffer at media time %.3f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mediaTimeUs / &lt;span class=&quot;number&quot;&gt;1E6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCCDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCCDecoder-&amp;gt;decode(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x7740;&amp;#x770B;&amp;#x4E0B;&amp;#x5982;&amp;#x4F55;&amp;#x83B7;&amp;#x53D6;&amp;#x7D22;&amp;#x5F15;&amp;#x5217;&amp;#x8868;,&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;onChangeConfiguration3&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x957F;&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x6709;&amp;#x5174;&amp;#x8DA3;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E3B;&amp;#x8981;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x70B9;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5224;&amp;#x65AD;audio&amp;#x53CA;Video&amp;#x662F;&amp;#x5426;&amp;#x53D1;&amp;#x9001;&amp;#x53D8;&amp;#x5316;&lt;/li&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x5F53;&amp;#x524D;&amp;#x7684;mFetcherInfos&amp;#x66F4;&amp;#x65B0;resumeMask&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x6709;&amp;#x65B0;&amp;#x7684;Fetcher&amp;#x90A3;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x65B0;&amp;#x5EFA;FetcherInfo&lt;/li&gt;
&lt;li&gt;&amp;#x542F;&amp;#x52A8;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Fetcher&lt;/li&gt;
&lt;li&gt;&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D;&amp;#x5E26;&amp;#x5BBD;&amp;#x6839;&amp;#x636E;&amp;#x5E26;&amp;#x5BBD;&amp;#x5207;&amp;#x6362;&amp;#x8D44;&amp;#x6E90;&lt;br&gt;&amp;#x4F46;&amp;#x662F;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5728;&amp;#x4E8E;fetcher-&amp;gt;startAsync,&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onChangeConfiguration3(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetcher-&amp;gt;startAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kAudioIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kVideoIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kSubtitleIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getMetadataSource(sources, mNewStreamMask, switching),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.mTimeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? mLastSeekTimeUs : startTime.mTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.getSegmentTimeUs(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.mSeq,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            seekMode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::startAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;audioSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;videoSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;subtitleSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;metadataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; startTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; segmentStartTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; startDiscontinuitySeq,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LiveSession::SeekMode seekMode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = onStart(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; notify = mNotify-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatStarted);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; PlaylistFetcher::onStart(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_AUDIO) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;audioSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_AUDIO,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_VIDEO) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;videoSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_VIDEO,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_SUBTITLES) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;subtitleSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_SUBTITLES,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// metadataSource is not part of streamTypeMask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((streamTypeMask &amp;amp; (LiveSession::STREAMTYPE_AUDIO | LiveSession::STREAMTYPE_VIDEO))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;metadataSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_METADATA,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//...............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::postMonitorQueue(&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; minDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; maxDelayUs = delayUsToRefreshPlaylist();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxDelayUs &amp;lt; minDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maxDelayUs = minDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; maxDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Need to refresh playlist in %lld&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)maxDelayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delayUs = maxDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatMonitorQueue, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mMonitorQueueGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatMonitorQueue:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatDownloadNext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, &amp;amp;generation));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (generation != mMonitorQueueGeneration) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Stale event&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;what() == kWhatMonitorQueue) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onDownloadNext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::onMonitorQueue() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.......................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (finalResult == OK &amp;amp;&amp;amp; bufferedDurationUs &amp;lt; kMinBufferedDurationUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;monitoring, buffered=%lld &amp;lt; %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)bufferedDurationUs, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)kMinBufferedDurationUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// delay the next download slightly; hopefully this gives other concurrent fetchers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a better chance to run.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// onDownloadNext();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatDownloadNext, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mMonitorQueueGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We&amp;apos;d like to maintain buffering above durationToBufferUs, so try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// again when buffer just about to go below durationToBufferUs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (or after targetDurationUs / 2, whichever is smaller).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = bufferedDurationUs - kMinBufferedDurationUs + &lt;span class=&quot;number&quot;&gt;1000000l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; targetDurationUs / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delayUs = targetDurationUs / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;pausing for %lld, buffered=%lld &amp;gt; %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)delayUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)bufferedDurationUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)kMinBufferedDurationUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postMonitorQueue(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;initDownloadState &amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x83B7;&amp;#x53D6;TS&amp;#x5305;&amp;#x4E4B;&amp;#x524D;&amp;#x83B7;&amp;#x53D6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Uri&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; PlaylistFetcher::initDownloadState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString &amp;amp;uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; &amp;amp;itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; &amp;amp;firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; &amp;amp;lastSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = refreshPlaylist();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; discontinuity = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlaylist-&amp;gt;getSeqNumberRange(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;firstSeqNumberInPlaylist, &amp;amp;lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDiscontinuitySeq &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDiscontinuitySeq = mPlaylist-&amp;gt;getDiscontinuitySeq();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSegmentFirstPTS = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mSeqNumber &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_GE(mStartTimeUs, &lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSegmentStartTimeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPlaylist-&amp;gt;isComplete() &amp;amp;&amp;amp; !mPlaylist-&amp;gt;isEvent()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If this is a live session, start 3 segments from the end on connect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = lastSeqNumberInPlaylist - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// When seeking mSegmentStartTimeUs is unavailable (&amp;lt; 0), we&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// use mStartTimeUs (client supplied timestamp) to determine both start segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// and relative position inside a segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStartTimeUs -= getSegmentStartTimeUs(mSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsRelative = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Initial sequence number for time %lld is %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mStartTimeUs, mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// When adapting or track switching, mSegmentStartTimeUs (relative&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// to media time 0) is used to determine the start segment; mStartTimeUs (absolute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// timestamps coming from the media container) is used to determine the position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// inside a segments.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStreamTypeMask != LiveSession::STREAMTYPE_SUBTITLES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; mSeekMode != LiveSession::kSeekModeNextSample) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// avoid double fetch/decode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Use (mSegmentStartTimeUs + 1/2 * targetDurationUs) to search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// for the starting segment in new variant.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If the two variants&amp;apos; segments are aligned, this gives the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// next segment. If they&amp;apos;re not aligned, this gives the segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// that overlaps no more than 1/2 * targetDurationUs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mSegmentStartTimeUs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        + mPlaylist-&amp;gt;getTargetDuration() / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mSegmentStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; minSeq = getSeqNumberForDiscontinuity(mDiscontinuitySeq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; minSeq) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = minSeq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;gt; lastSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = lastSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Initial sequence number is %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// if mPlaylist is NULL then err must be non-OK; but the other way around might not be true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || mSeqNumber &amp;gt; lastSeqNumberInPlaylist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err != OK || !mPlaylist-&amp;gt;isComplete()) &amp;amp;&amp;amp; mNumRetries &amp;lt; kMaxNumRetries) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumRetries;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;gt; lastSeqNumberInPlaylist || err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// make sure we reach this retry logic on refresh failures&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// by adding an err != OK clause to all enclosing if&amp;apos;s.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// refresh in increasing fraction (1/2, 1/3, ...) of the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// playlist&amp;apos;s target duration or 3 seconds, whichever is less&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = kMaxMonitorDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delayUs = mPlaylist-&amp;gt;size() * mPlaylist-&amp;gt;getTargetDuration()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            / (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + mNumRetries);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; kMaxMonitorDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delayUs = kMaxMonitorDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;sequence number high: %d from (%d .. %d), &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&amp;quot;monitor in %lld (retry=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        lastSeqNumberInPlaylist, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)delayUs, mNumRetries);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                postMonitorQueue(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we&amp;apos;ve missed the boat, let&amp;apos;s start 3 segments prior to the latest sequence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// number available and signal a discontinuity.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;We&amp;apos;ve missed the boat, restarting playback.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;  mStartup=%d, was  looking for %d in %d-%d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStartup, mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStopParams != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we should have kept on fetching until we hit the boundaries in mStopParams,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// but since the segments we are supposed to fetch have already rolled off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// the playlist, i.e. we have already missed the boat, we inevitably have to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// skip.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeqNumber = lastSeqNumberInPlaylist - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Cannot find sequence number %d in playlist &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;string&quot;&gt;&amp;quot;(contains %d - %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      firstSeqNumberInPlaylist + (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)mPlaylist-&amp;gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTSParser-&amp;gt;signalEOS(ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Use an empty buffer; we don&amp;apos;t have any new data, just want to extract&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// potential new access units after flush.  Reset mSeqNumber to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// lastSeqNumberInPlaylist such that we set the correct access unit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// properties in extractAndQueueAccessUnitsFromTs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber = lastSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    extractAndQueueAccessUnitsFromTs(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// It&amp;apos;s possible that we were never able to download the playlist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// In this case we should notify error, instead of EOS, as EOS during&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// prepare means we succeeded in downloading everything.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to download playlist!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(ERROR_IO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumRetries = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mPlaylist-&amp;gt;itemAt(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber - firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;itemMeta));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(itemMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity-sequence&amp;quot;&lt;/span&gt;, &amp;amp;mDiscontinuitySeq));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;val) &amp;amp;&amp;amp; val != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLastDiscontinuitySeq &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mDiscontinuitySeq != mLastDiscontinuitySeq) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Seek jumped to a new discontinuity sequence. We need to signal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a format change to decoder. Decoder needs to shutdown and be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// created again if seamless format change is unsupported.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;saw discontinuity: mStartup %d, mLastDiscontinuitySeq %d, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;mDiscontinuitySeq %d, mStartTimeUs %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStartup, mLastDiscontinuitySeq, mDiscontinuitySeq, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLastDiscontinuitySeq = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// decrypt a junk buffer to prefetch key; since a session uses only one http connection,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// this avoids interleaved connections to the key and segment file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; junk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        junk-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = decryptBuffer(mSeqNumber - firstSeqNumberInPlaylist, junk,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* first */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_NOT_CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStartup &amp;amp;&amp;amp; !mTimeChangeSignaled) || discontinuity) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We need to signal a time discontinuity to ATSParser on the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// first segment after start, or on a discontinuity segment.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Setting mNextPTSTimeUs informs extractAndQueueAccessUnitsXX()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to send the time discontinuity.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;isComplete() || mPlaylist-&amp;gt;isEvent()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this was a live event this made no sense since&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t have access to all the segment before the current&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// one.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNextPTSTimeUs = getSegmentStartTimeUs(mSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Setting mTimeChangeSignaled to true, so that if start time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// searching goes into 2nd segment (without a discontinuity),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t reset time again. It causes corruption when pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// data in ATSParser is cleared.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTimeChangeSignaled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (discontinuity) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueing discontinuity (explicit=%d)&amp;quot;&lt;/span&gt;, discontinuity);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Signal a format discontinuity to ATSParser to clear partial data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// from previous streams. Not doing this causes bitstream corruption.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTSParser-&amp;gt;signalDiscontinuity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ATSParser::DISCONTINUITY_FORMATCHANGE, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* extra */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        queueDiscontinuity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ATSParser::DISCONTINUITY_FORMAT_ONLY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* extra */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStartup &amp;amp;&amp;amp; mStartTimeUsRelative &amp;amp;&amp;amp; mFirstPTSValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This means we guessed mStartTimeUs to be in the previous&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// segment (likely very close to the end), but either video or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// audio has not found start by the end of that segment.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this new segment is not a discontinuity, keep searching.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this new segment even got a discontinuity marker, just&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// set mStartTimeUs=0, and take all samples from now on.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFirstPTSValid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIDRFound = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mVideoBuffer-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;fetching segment %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeqNumber, firstSeqNumberInPlaylist, lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::onDownloadNext() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; tsBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; firstSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; lastSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; connectHTTP = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDownloadState-&amp;gt;hasSavedState()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDownloadState-&amp;gt;restoreState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connectHTTP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;resuming: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!initDownloadState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastSeqNumberInPlaylist)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;fetching: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; range_offset, range_length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-offset&amp;quot;&lt;/span&gt;, &amp;amp;range_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-length&amp;quot;&lt;/span&gt;, &amp;amp;range_length)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        range_offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        range_length = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// block-wise download&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; shouldPause = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bytesRead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; startUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x8F7D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bytesRead = mHTTPDownloader-&amp;gt;fetchBlock(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri.c_str(), &amp;amp;buffer, range_offset, range_length, kDownloadBlockSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* actualURL */&lt;/span&gt;, connectHTTP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = ALooper::GetNowUs() - startUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead == ERROR_NOT_CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = bytesRead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;failed to fetch .ts segment at url &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// add sample for bandwidth estimation, excluding samples from subtitles (as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// its too small), or during startup/resumeUntil (when we could have more than&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// one connection open which affects bandwidth)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStartup &amp;amp;&amp;amp; mStopParams == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; bytesRead &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; (mStreamTypeMask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp; (LiveSession::STREAMTYPE_AUDIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        | LiveSession::STREAMTYPE_VIDEO))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSession-&amp;gt;addBandwidthMeasurement(bytesRead, delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; &lt;span class=&quot;number&quot;&gt;2000000l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bytesRead %zd took %.2f seconds - abnormal bandwidth dip&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        bytesRead, (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)delayUs / &lt;span class=&quot;number&quot;&gt;1.0e6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connectHTTP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(buffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size = buffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set decryption range.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer-&amp;gt;setRange(size - bytesRead, bytesRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;key&amp;#x89E3;&amp;#x5BC6;buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = decryptBuffer(mSeqNumber - firstSeqNumberInPlaylist, buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                buffer-&amp;gt;offset() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* first */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Unset decryption range.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;decryptBuffer failed w/ error %d&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; startUp = mStartup; &lt;span class=&quot;comment&quot;&gt;// save current start up state&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferStartsWithTsSyncByte(buffer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Incremental extraction is only supported for MPEG2 transport streams.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(buffer-&amp;gt;data(), buffer-&amp;gt;capacity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer-&amp;gt;capacity() != buffer-&amp;gt;capacity()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; tsOff = tsBuffer-&amp;gt;offset(), tsSize = tsBuffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(buffer-&amp;gt;data(), buffer-&amp;gt;capacity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer-&amp;gt;setRange(tsOff, tsSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tsBuffer-&amp;gt;setRange(tsBuffer-&amp;gt;offset(), tsBuffer-&amp;gt;size() + bytesRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x89E3;&amp;#x5BC6;&amp;#x540E;&amp;#x7684;buffer&amp;#x9012;&amp;#x7ED9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = extractAndQueueAccessUnitsFromTs(tsBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EAGAIN) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// starting sequence number too low/high&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTSParser.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPacketSources.size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AnotherPacketSource&amp;gt; packetSource = mPacketSources.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                packetSource-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_OUT_OF_RANGE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reached stopping point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we&amp;apos;re switching, post start notification&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// this should only be posted when the last chunk is full processed by TSParser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekMode != LiveSession::kSeekModeExactPosition &amp;amp;&amp;amp; startUp != mStartup) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(mStartTimeUsNotify != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsNotify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsNotify.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldPause || shouldPauseDownload()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// save state and return if this is not the last chunk,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// leaving the fetcher in paused state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDownloadState-&amp;gt;saveState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tsBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (bytesRead != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferStartsWithTsSyncByte(buffer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we don&amp;apos;t see a stream in the program table after fetching a full ts segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// mark it as nonexistent.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ATSParser::SourceType srcTypes[] =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                { ATSParser::VIDEO, ATSParser::AUDIO };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LiveSession::StreamType streamTypes[] =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                { LiveSession::STREAMTYPE_VIDEO, LiveSession::STREAMTYPE_AUDIO };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumTypes = NELEM(srcTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumTypes; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ATSParser::SourceType srcType = srcTypes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LiveSession::StreamType streamType = streamTypes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTSParser-&amp;gt;getSource(srcType).get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mTSParser-&amp;gt;hasSource(srcType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;MPEG2 Transport stream does not contain %s data.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      srcType == ATSParser::VIDEO ? &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStreamTypeMask &amp;amp;= ~streamType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPacketSources.removeItem(streamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkDecryptPadding(buffer) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Incorrect padding bytes after decryption.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyError(ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString method;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(buffer-&amp;gt;meta()-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;cipher-method&amp;quot;&lt;/span&gt;, &amp;amp;method));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((tsBuffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; method == &lt;span class=&quot;string&quot;&gt;&amp;quot;NONE&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || tsBuffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;MPEG2 transport stream is not an even multiple of 188 &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;bytes in length.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// bulk extract non-ts files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; startUp = mStartup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = extractAndQueueAccessUnits(buffer, itemMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EAGAIN) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// starting sequence number too low/high&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_OUT_OF_RANGE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reached stopping point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mSeqNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// if adapting, pause after found the next starting point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekMode != LiveSession::kSeekModeExactPosition &amp;amp;&amp;amp; startUp != mStartup) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(mStartTimeUsNotify != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStartTimeUsNotify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStartTimeUsNotify.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!shouldPause) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x5207;&amp;#x6362;&amp;#x5E26;&amp;#x5BBD;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; LiveSession::switchBandwidthIfNeeded(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bufferHigh, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bufferLow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// no need to check bandwidth if we only have 1 bandwidth settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; bandwidthBps, shortTermBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isStable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;estimateBandwidth&amp;#x9884;&amp;#x6D4B;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthEstimator-&amp;gt;estimateBandwidth(&amp;amp;bandwidthBps, &amp;amp;isStable, &amp;amp;shortTermBps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth estimated at %.2f kbps, &amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;stable %d, shortTermBps %.2f kbps&amp;quot;&lt;/span&gt;,bandwidthBps / &lt;span class=&quot;number&quot;&gt;1024.0f&lt;/span&gt;, isStable, shortTermBps / &lt;span class=&quot;number&quot;&gt;1024.0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastBandwidthBps = bandwidthBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastBandwidthStable = isStable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;no bandwidth estimate.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; curBandwidth = mBandwidthItems.itemAt(mCurBandwidthIndex).mBandwidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// canSwithDown and canSwitchUp can&amp;apos;t both be true.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we only want to switch up when measured bw is 120% higher than current variant,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// and we only want to switch down when measured bw is below current variant.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canSwitchDown = bufferLow &amp;amp;&amp;amp; (bandwidthBps &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)curBandwidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canSwitchUp = bufferHigh &amp;amp;&amp;amp; (bandwidthBps &amp;gt; (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)curBandwidth * &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canSwitchDown || canSwitchUp) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// bandwidth estimating has some delay, if we have to downswitch when&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it hasn&amp;apos;t stabilized, use the short term to guess real bandwidth,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// since it may be dropping too fast.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (note this doesn&amp;apos;t apply to upswitch, always use longer average there)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isStable &amp;amp;&amp;amp; canSwitchDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shortTermBps &amp;lt; bandwidthBps) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bandwidthBps = shortTermBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;&amp;#x5E26;&amp;#x5BBD;&amp;#x6570;&amp;#x503C;index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bandwidthIndex = getBandwidthIndex(bandwidthBps);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it&amp;apos;s possible that we&amp;apos;re checking for canSwitchUp case, but the returned&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// bandwidthIndex is &amp;lt; mCurBandwidthIndex, as getBandwidthIndex() only uses 70%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// of measured bw. In that case we don&amp;apos;t want to do anything, since we have&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// both enough buffer and enough bw.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((canSwitchUp &amp;amp;&amp;amp; bandwidthIndex &amp;gt; mCurBandwidthIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         || (canSwitchDown &amp;amp;&amp;amp; bandwidthIndex &amp;lt; mCurBandwidthIndex)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if not yet prepared, just restart again with new bw index.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// this is faster and playback experience is cleaner.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FEE;&amp;#x6539;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x91CD;&amp;#x542F;&amp;#x5404;&amp;#x79CD;&amp;#x8D44;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            changeConfiguration(mInPreparationPhase ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l, bandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;size_t LiveSession::getBandwidthIndex(int32_t bandwidthBps) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthItems.size() &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// shouldn&amp;apos;t be here if we only have 1 bandwidth, check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// logic to get rid of redundant bandwidth polling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;getBandwidthIndex() called for single bandwidth playlist!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#if 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.bw-index&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = strtol(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (size_t)&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.max-bw&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; maxBw = strtoul(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxBw &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; bandwidthBps &amp;gt; maxBw) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth capped to %ld bps&amp;quot;&lt;/span&gt;, maxBw);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    bandwidthBps = maxBw;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Pick the highest bandwidth stream that&amp;apos;s not currently blacklisted&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// below or equal to estimated bandwidth.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t lowestBandwidth = getLowestValidBandwidthIndex();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt; lowestBandwidth) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// be conservative (70%) to avoid overestimating and immediately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// switching down again.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            size_t adjustedBandwidthBps = bandwidthBps * &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            const BandwidthItem &amp;amp;item = mBandwidthItems[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item.mBandwidth &amp;lt;= adjustedBandwidthBps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; isBandwidthValid(item)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            --&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Change bandwidth at random()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = uniformRand() * mBandwidthItems.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// There&amp;apos;s a 50% chance to stay on the current bandwidth and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// a 50% chance to switch to the next higher bandwidth (wrapping around&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// to lowest)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const size_t kMinIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ssize_t mCurBandwidthIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurBandwidthIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = kMinIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (uniformRand() &amp;lt; &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = (size_t)mCurBandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mCurBandwidthIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; == mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = kMinIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurBandwidthIndex = &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Pick the highest bandwidth stream below or equal to 1.2 Mbit/sec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mBandwidthItems.itemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;).mBandwidth &amp;gt; &lt;span class=&quot;number&quot;&gt;1200000&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.bw-index&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = strtoul(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// Highest bandwidth stream&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;HLS-&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#HLS-&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;HLS &amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;HLS &amp;#x6982;&amp;#x8FF0;&lt;/h4&gt;&lt;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[4]</title>
    <link href="http://yoursite.com/2016/08/01/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-3/"/>
    <id>http://yoursite.com/2016/08/01/Android-源码分析基于Stagefright的MediaPlayer播放框架-3/</id>
    <published>2016-08-01T03:20:27.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x4EE5;&amp;#x514D;&amp;#x4E00;&amp;#x5927;&amp;#x5806;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F15;&amp;#x6765;&amp;#x5927;&amp;#x5BB6;&amp;#x7684;&amp;#x4E0D;&amp;#x9002;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/01/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-3/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x5728;prepare&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;start&amp;#x65B9;&amp;#x6CD5;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x4E86;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x7B80;&amp;#x5355;&amp;#x8D77;&amp;#x89C1;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;start&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x5173;&amp;#x7CFB;&amp;#x4E0D;&amp;#x505A;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x4EC5;&amp;#x4EC5;&amp;#x5217;&amp;#x51FA;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; throws IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isRestricted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _setVolume(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stayAwake(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;start(), &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;status_t MediaPlayer::&lt;/span&gt;start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t ret = NO_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    Mutex::&lt;/span&gt;Autolock _l(mLock)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = getThreadId()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentState &amp;amp; MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STARTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = NO_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (mPlayer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; ( mCurrentState &amp;amp; ( MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PREPARED |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PLAYBACK_COMPLETE | MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PAUSED ) ) ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setLooping(mLoop)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setVolume(mLeftVolume, mRightVolume)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setAuxEffectSendLevel(mSendLevel)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentState = MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STARTED&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = mPlayer-&amp;gt;start()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != NO_ERROR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCurrentState = MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STATE_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentState == MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PLAYBACK_COMPLETE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;playback completed immediately following start()&amp;quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;start called in state %d&amp;quot;&lt;/span&gt;, mCurrentState)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = INVALID_OPERATION&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;play();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;play&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ATRACE_CALL&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;value&quot;&gt;::Autolock &lt;span class=&quot;function&quot;&gt;autoLock&lt;/span&gt;(mLock);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;modifyFlags&lt;/span&gt;(CACHE_UNDERRUN, &lt;span class=&quot;attribute&quot;&gt;CLEAR&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;function&quot;&gt;play_l&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Start&amp;#x7684;&amp;#x771F;&amp;#x6B63;&amp;#x5DE5;&amp;#x4F5C;&amp;#x662F;&amp;#x4ECE;AwesomePlayer::play_l&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;AwesomePlayer::play_l&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;createAudioPlayer_l&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;startAudioPlayer_l&amp;#x5F00;&amp;#x59CB;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x5C06;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::play_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(SEEK_PREVIEW, CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaRenderingStartGeneration = ++mStartGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mFlags &amp;amp; PREPARED)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = prepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PLAYING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(FIRST_FRAME, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioPlayer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            createAudioPlayer_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(!(mFlags &amp;amp; AUDIO_RUNNING));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// We don&amp;apos;t want to post an error notification at this point,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// the error returned from MediaPlayer::start() will suffice.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = startAudioPlayer_l(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sendErrorNotification */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; AT_EOS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Legacy behaviour, if a stream finishes playing and then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// is started again, we play from the start...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        seekTo_l(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;createAudioPlayer_l&amp;#x65B9;&amp;#x6CD5;&amp;#x76F8;&amp;#x5BF9;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x5B83;&amp;#x901A;&amp;#x8FC7;AudioPlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;AudioPlayer&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;mAudioSource&amp;#x8D4B;&amp;#x7ED9;&amp;#x5B83;&amp;#xFF0C;mAudioPlayer&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x4E3A;mAudioSource&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;OMXCodec&amp;#x3002;&amp;#x5728;&amp;#x6784;&amp;#x9020;AudioPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#x65F6;&amp;#x4F1A;&amp;#x5B58;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x6210;&amp;#x5458;mSource&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;mAudioSink&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5927;&amp;#x5BB6;&amp;#x8FD8;&amp;#x6709;&amp;#x5370;&amp;#x8C61;&amp;#x5427;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x4E4B;&amp;#x524D;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x5728;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;AudioOutPut&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x8BF4;&amp;#x8FD9;&amp;#x91CC;&amp;#x505A;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x5C06;&amp;#x8F93;&amp;#x5165;mAudioSource&amp;#x8D4B;&amp;#x7ED9;AudioPlayer&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x5C06;mAudioSink&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E0E;&amp;#x786C;&amp;#x4EF6;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x8D4B;&amp;#x7ED9;AudioPlayer&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void AwesomePlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;createAudioPlayer_l&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioPlayer = new &lt;span class=&quot;function&quot;&gt;AudioPlayer&lt;/span&gt;(mAudioSink, flags, this);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioPlayer-&amp;gt;&lt;span class=&quot;function&quot;&gt;setSource&lt;/span&gt;(mAudioSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If there was a seek request before we ever started,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// honor the request now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Make sure to do this before starting the audio player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// to avoid a race condition.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x4E4B;&amp;#x524D;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;seek&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x90A3;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x542F;&amp;#x52A8;audio player&amp;#x4E4B;&amp;#x524D;&amp;#x8FDB;&amp;#x884C;seek&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;seekAudioIfNecessary_l&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioPlayer::AudioPlayer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerBase::AudioSink&amp;gt; &amp;amp;audioSink,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AwesomePlayer *observer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInputBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSampleRate(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLatencyUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFrameSize(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesPlayed(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesPlayedSysTimeUs(ALooper::GetNowUs()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPositionTimeMediaUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPositionTimeRealUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSeeking(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mReachedEOS(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFinalStatus(OK),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSeekTimeUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsFirstBuffer(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstBufferResult(OK),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioSink(audioSink),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mObserver(observer),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPinnedTimeUs(-1ll),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPlaying(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStartPosUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mCreateFlags(flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AudioPlayer::setSource(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSource = source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;audio Player&amp;#x521B;&amp;#x5EFA;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;startAudioPlayer_l&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::startAudioPlayer_l(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; sendErrorNotification) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mFlags &amp;amp; AUDIOPLAYER_STARTED)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; wasSeeking = mAudioPlayer-&amp;gt;isSeeking();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We&amp;apos;ve already started the MediaSource in order to enable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the prefetcher to read its data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mAudioPlayer-&amp;gt;start(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sourceAlreadyStarted */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(AUDIOPLAYER_STARTED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasSeeking) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(!mAudioPlayer-&amp;gt;isSeeking());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We will have finished the seek while starting the audio player.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postAudioSeekComplete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyIfMediaStarted_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;AudioPlayer::start&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;mSource-&amp;gt;read(&amp;amp;mFirstBuffer, &amp;amp;options); &amp;#x8BFB;&amp;#x53D6;&amp;#x7B2C;&amp;#x4E00;&amp;#x6BB5;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x89E3;&amp;#x7801;&amp;#x7B2C;&amp;#x4E00;&amp;#x5E27;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x542F;&amp;#x52A8;&amp;#x4E86;&amp;#x89E3;&amp;#x7801;&amp;#x5FAA;&amp;#x73AF;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;mAudioSink-&amp;gt;open&amp;#xFF0C; mAudioSink-&amp;gt;start();&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioPlayer::start(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; sourceAlreadyStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstBufferResult = mSource-&amp;gt;read(&amp;amp;mFirstBuffer, &amp;amp;options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFirstBufferResult == INFO_FORMAT_CHANGED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstBufferResult = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsFirstBuffer = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsFirstBuffer = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; audioFormat = AUDIO_FORMAT_PCM_16_BIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink.get() != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mAudioSink-&amp;gt;open(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSampleRate, numChannels, channelMask, audioFormat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                DEFAULT_AUDIOSINK_BUFFERCOUNT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;AudioPlayer::AudioSinkCallback,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt;)flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                useOffload() ? &amp;amp;offloadInfo : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatencyUs = (&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt;)mAudioSink-&amp;gt;latency() * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFrameSize = mAudioSink-&amp;gt;frameSize();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mAudioSink-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// do not alter behavior for non offloaded tracks: ignore start status.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!useOffload()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;AudioSinkCallback&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; AudioPlayer::AudioSinkCallback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink * &lt;span class=&quot;comment&quot;&gt;/* audioSink */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buffer, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink::&lt;span class=&quot;keyword&quot;&gt;cb_event_t&lt;/span&gt; event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioPlayer *me = (AudioPlayer *)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_FILL_BUFFER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; me-&amp;gt;fillBuffer(buffer, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_STREAM_END:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: stream end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mReachedEOS = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;notifyAudioEOS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_TEAR_DOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: Tear down event&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mObserver-&amp;gt;postAudioTearDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec::read(MediaBuffer **buffer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ReadOptions *options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInitialBufferSubmit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mInitialBufferSubmit = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//===========================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drainInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == EXECUTING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Otherwise mState == RECONFIGURING and this code will trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// after the output port is reenabled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//===========================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fillOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7B49;&amp;#x5F85;&amp;#x7F13;&amp;#x5B58;&amp;#x88AB;&amp;#x586B;&amp;#x6EE1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState != ERROR &amp;amp;&amp;amp; !mNoMoreOutputData &amp;amp;&amp;amp; mFilledBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err = waitForBufferFilled_l()) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x7F13;&amp;#x5B58;&amp;#x8FD8;&amp;#x662F;&amp;#x7A7A;&amp;#x7684;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x89E3;&amp;#x7801;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFilledBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mSignalledEOS ? mFinalStatus : ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index = *mFilledBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFilledBuffers.erase(mFilledBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BufferInfo *info = &amp;amp;mPortBuffers[kPortIndexOutput].editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = OWNED_BY_CLIENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mMediaBuffer-&amp;gt;add_ref();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSkipCutBuffer != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSkipCutBuffer-&amp;gt;submit(info-&amp;gt;mMediaBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *buffer = info-&amp;gt;mMediaBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;void&lt;/span&gt; OMXCodec::drainInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mState == EXECUTING &lt;span class=&quot;title&quot;&gt;||&lt;/span&gt; mState == RECONFIGURING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kUseSecureInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BufferInfo&amp;gt; &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffers &lt;/span&gt;= &amp;amp;mPortBuffers[kPortIndexInput]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; buffers-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (!drainAnyInputBuffer()&lt;span class=&quot;title&quot;&gt;||&lt;/span&gt; (mFlags &amp;amp; kOnlySubmitOneInputBufferAtOneTime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;preprocessor&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BufferInfo&amp;gt; &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffers &lt;/span&gt;= &amp;amp;mPortBuffers[kPortIndexInput]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; buffers-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;BufferInfo &lt;/span&gt;*&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt; = &amp;amp;&lt;span class=&quot;keyword&quot;&gt;buffers-&amp;gt;editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt;-&amp;gt;mStatus != OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                continue&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (!drainInputBuffer(&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kOnlySubmitOneInputBufferAtOneTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; OMXCodec::drainAnyInputBuffer() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; drainInputBuffer((BufferInfo *)&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; OMXCodec::drainInputBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaBuffer *srcBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekTimeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLeftOverBuffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mSource-&amp;gt;read(&amp;amp;srcBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MP3Source::read(MediaBuffer **out, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ReadOptions *options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaBuffer *buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mGroup-&amp;gt;acquire_buffer(&amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num_samples;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sample_rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = mDataSource-&amp;gt;readAt(mCurrentPos, buffer-&amp;gt;data(), &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; header = U32_AT((&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *)buffer-&amp;gt;data());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((header &amp;amp; kMask) == (mFixedHeader &amp;amp; kMask)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; GetMPEGAudioFrameSize(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                header, &amp;amp;frame_size, &amp;amp;sample_rate, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;bitrate, &amp;amp;num_samples)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// re-calculate mCurrentTimeUs because we might have called Resync()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seekCBR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCurrentTimeUs = (mCurrentPos - mFirstFramePos) * &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt; / bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBasisTimeUs = mCurrentTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(frame_size &amp;lt;= buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x9700;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = mDataSource-&amp;gt;readAt(mCurrentPos, buffer-&amp;gt;data(), frame_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;set_range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, frame_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;meta_data()-&amp;gt;setInt64(kKeyTime, mCurrentTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;meta_data()-&amp;gt;setInt32(kKeyIsSyncFrame, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPos += frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSamplesRead += num_samples;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentTimeUs = mBasisTimeUs + ((mSamplesRead * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;) / sample_rate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *out = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x4EA4;&amp;#x7ED9;mAudioSink-&amp;gt;open&amp;#xFF0C; mAudioSink-&amp;gt;start()&amp;#x4E86;&amp;#xFF0C;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;mAudioSink&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaPlayerService::Client::setDataSource_pre&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService::Client::setDataSource_pre(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!p-&amp;gt;hardwareOutput()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioOutput = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioOutput(mAudioSessionId, IPCThreadState::self()-&amp;gt;getCallingUid(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPid, mAudioAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;MediaPlayerInterface*&amp;gt;(p.get())-&amp;gt;setAudioSink(mAudioOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;mAudioSink&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x6790;open&amp;#x65B9;&amp;#x6CD5;&amp;#x4E86;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;mAudioSink-&amp;gt;open &amp;#x4E2D;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E2D;&amp;#x6709;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6307;&amp;#x9488; AudioPlayer::AudioSinkCallback &amp;#xFF0C;&amp;#x5176;&amp;#x4E3B;&amp;#x8981;&amp;#x4F5C;&amp;#x7528;&amp;#x5C31;&amp;#x662F;audioout&amp;#x64AD;&amp;#x653E;pcm&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5B9A;&amp;#x671F;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728; mCallback&amp;#x4E2D;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x6709;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x5728;&amp;#x6784;&amp;#x9020;AudioTrack&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F20;&amp;#x5165;&amp;#x4E86;CallbackWrapper&amp;#x4F5C;&amp;#x4E3A;audiotrack&amp;#x7684;callback&amp;#x5F53;audiotrack&amp;#x9700;&amp;#x8981;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayerService::AudioOutput::open(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; channelCount, &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bufferCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AudioCallback cb, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; suggestedFrameCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AudioTrack&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CallbackData *newcbd = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728; mCallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = cb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallbackCookie = cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We don&amp;apos;t attempt to create a new track if we are recycling an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// offloaded track. But, if we are recycling a non-offloaded or we&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// are switching where one is offloaded and one isn&amp;apos;t then we create&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the new track in advance so that we can read additional stream info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(reuse &amp;amp;&amp;amp; bothOffloaded)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;creating new AudioTrack&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCallback != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newcbd = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CallbackData(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//new &amp;#x4E00;&amp;#x4E2A;AudioTrack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            t = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioTrack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStreamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//audiotrack&amp;#x9700;&amp;#x8981;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    CallbackWrapper,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    newcbd,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// notification frames&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    AudioTrack::TRANSFER_CALLBACK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mUid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mPid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    doNotReconnect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallbackData = newcbd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06; new&amp;#x51FA;&amp;#x6765;&amp;#x7684;AudioTrack&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;mTrack&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTrack = t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6709;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5230;AudioOut&amp;#x64AD;&amp;#x653E;pcm&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5B9A;&amp;#x671F;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x6B64;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;,&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x5982;&amp;#x679C;&amp;#x8DDF;&amp;#x8E2A;mCallback&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x76F4;&amp;#x63A5;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x76F8;&amp;#x5173;&amp;#x8C03;&amp;#x7528;&amp;#x5728;AudioOutput::CallbackWrapper&amp;#x4E2D;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&lt;br&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x4ECE;CallbackWrapper&amp;#x7684;&amp;#x6CE8;&amp;#x518C;&amp;#x4EE5;&amp;#x53CA;&amp;#x5982;&amp;#x4F55;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x8FDB;&amp;#x884C;&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x8FDB;&amp;#x884C;&amp;#x64CD;&amp;#x4F5C;&amp;#x8FDB;&amp;#x884C;&amp;#x8F83;&amp;#x4E3A;&amp;#x7EC6;&amp;#x81F4;&amp;#x7684;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioTrack&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;set&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;CallbackWrapper&amp;#x662F;&amp;#x5B83;&amp;#x7684;&amp;#x7B2C;7&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioTrack::AudioTrack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_stream_type_t&lt;/span&gt; streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;callback_t&lt;/span&gt; cbf,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transfer_type transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; uid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_attributes_t&lt;/span&gt;* pAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mStatus(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsTimed(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPreviousPriority(ANDROID_PRIORITY_NORMAL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPreviousSchedulingGroup(SP_DEFAULT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPausedPosition(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSelectedDeviceId(AUDIO_PORT_HANDLE_NONE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;(streamType, sampleRate, format, channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameCount, flags, cbf, user, notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*sharedBuffer*/&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*threadCanCallJava*/&lt;/span&gt;, sessionId, transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offloadInfo, uid, pid, pAttributes, doNotReconnect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;set&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;CallbackWrapper&amp;#x6700;&amp;#x7EC8;&amp;#x88AB;&amp;#x8D4B;&amp;#x7ED9;mCbf&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x5728;&amp;#x5176;&amp;#x4E2D;&amp;#x5F00;&amp;#x542F;&amp;#x4E86;AudioTrackThread&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;createTrack_l&amp;#x521B;&amp;#x5EFA;IAudioTrack&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_stream_type_t&lt;/span&gt; streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;callback_t&lt;/span&gt; cbf,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMemory&amp;gt;&amp;amp; sharedBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; threadCanCallJava,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transfer_type transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; uid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_attributes_t&lt;/span&gt;* pAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (transferType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TRANSFER_DEFAULT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TRANSFER_CALLBACK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cbf == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; || sharedBuffer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCbf = cbf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cbf != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTrackThread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioTrackThread(*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, threadCanCallJava);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTrackThread-&amp;gt;run(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioTrack&amp;quot;&lt;/span&gt;, ANDROID_PRIORITY_AUDIO, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*stack*/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// thread begins in paused state, and will not reference us until start()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// create the IAudioTrack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = createTrack_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AudioTrack::AudioTrackThread::AudioTrackThread(AudioTrack&amp;amp; receiver, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bCanCallJava)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : Thread(bCanCallJava), mReceiver(receiver), mPaused(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;), mPausedInt(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;), mPausedNs(&lt;span class=&quot;number&quot;&gt;0L&lt;/span&gt;L),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIgnoreNextPausedInt(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; AudioTrack::AudioTrackThread::threadLoop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;nsecs_t&lt;/span&gt; ns = mReceiver.processAudioBuffer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (ns) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_INACTIVE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pauseInternal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_NEVER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_WHENEVER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Event driven: call wake() when callback notifications conditions change.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ns = INT64_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LOG_ALWAYS_FATAL_IF(ns &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;processAudioBuffer() returned %&amp;quot;&lt;/span&gt; PRId64, ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pauseInternal(ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;processAudioBuffer&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5341;&amp;#x5206;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x4EC5;&amp;#x4EC5;&amp;#x5173;&amp;#x6CE8;&amp;#x4E0E;mCbf&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x5982;&amp;#x7EA2;&amp;#x8272;&amp;#x6807;&amp;#x6CE8;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BB5;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;nsecs_t&lt;/span&gt; AudioTrack::processAudioBuffer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (waitStreamEnd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;FIXME:&lt;/span&gt;  Instead of blocking in proxy-&amp;gt;waitStreamEndDone(), Callback thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// should wait on proxy futex and handle CBLK_STREAM_END_DONE within this function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (and make sure we don&amp;apos;t callback for more data while we&amp;apos;re stopping).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This helps with position, marker notifications, and track invalidation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; timespec timeout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout.tv_sec = WAIT_STREAM_END_TIMEOUT_SEC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout.tv_nsec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = proxy-&amp;gt;waitStreamEndDone(&amp;amp;timeout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (status) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NO_ERROR:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DEAD_OBJECT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TIMED_OUT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCbf(EVENT_STREAM_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;AutoMutex &lt;span class=&quot;title&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// The previously assigned value of waitStreamEnd is no longer valid,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// since the mutex has been unlocked and either the callback handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// or another thread could have re-started the AudioTrack during that time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                waitStreamEnd = mState == STATE_STOPPING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (waitStreamEnd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mState = STATE_STOPPED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mReleased = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newUnderrun) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_UNDERRUN, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (loopCountNotifications &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_LOOP_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --loopCountNotifications;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CBLK_BUFFER_END) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_BUFFER_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (markerReached) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_MARKER, mUserData, &amp;amp;markerPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (newPosCount &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; temp = newPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_NEW_POS, mUserData, &amp;amp;temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newPosition += updatePeriod;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newPosCount--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mObservedSequence != sequence) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mObservedSequence = sequence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_NEW_IAUDIOTRACK, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// for offloaded tracks, just wait for the upper layers to recreate the track&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isOffloadedOrDirect()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NS_INACTIVE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; reqSize = audioBuffer.size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCbf(EVENT_MORE_DATA, mUserData, &amp;amp;audioBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; writtenSize = audioBuffer.size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// A lot has transpired since ns was calculated, so run again immediately and re-calculate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5728;new AudioTrack&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x542F;&amp;#x52A8;AudioTrackThread&amp;#xFF0C;&amp;#x5728;AudioTrackThread&amp;#x4E2D;&amp;#x7684;threadLoop&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;mCbf(EVENT_MORE_DATA, mUserData, &amp;amp;audioBuffer);&amp;#x7B49;&amp;#x56DE;&amp;#x8C03;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x8C03;&amp;#x7528;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;data-&amp;gt;getOutput();&amp;#x83B7;&amp;#x5F97;AudioOutput&amp;#xFF0C;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;*me-&amp;gt;mCallback&amp;#x6765;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x4E2D;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::AudioOutput&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::CallbackWrapper&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int event, &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; *cookie, &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//ALOGV(&amp;quot;callbackwrapper&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CallbackData *&lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt; = (CallbackData*)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// lock to ensure we aren&amp;apos;t caught in the middle of a track switch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;lock();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioOutput *me = &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getOutput();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioTrack&lt;span class=&quot;tag&quot;&gt;::Buffer&lt;/span&gt; *buffer = (AudioTrack&lt;span class=&quot;tag&quot;&gt;::Buffer&lt;/span&gt; *)info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_MORE_DATA&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t actualSize = (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me, buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;raw, buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;size, me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CB_EVENT_FILL_BUFFER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Log when no data is returned from the callback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (1) We may have no data (especially with network streaming sources).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (2) We may have reached the EOS and the audio track is not stopped yet.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Note that AwesomePlayer/AudioPlayer will only return zero size when it reaches the EOS.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// NuPlayerRenderer will return zero when it doesn&amp;apos;t have data (it doesn&amp;apos;t block to fill).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is a benign busy-wait, with the next data request generated 10 ms or more later;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// nevertheless for power reasons, we don&amp;apos;t want to see too many of these.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mBytesWritten += actualSize;  &lt;span class=&quot;comment&quot;&gt;// benign race with reader.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;size = actualSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_STREAM_END&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// currently only occurs for offloaded callbacks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackwrapper: deliver EVENT_STREAM_END&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(me, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* buffer */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* size */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie, CB_EVENT_STREAM_END);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_NEW_IAUDIOTRACK&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackwrapper: deliver EVENT_TEAR_DOWN&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(me,  &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* buffer */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* size */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie, CB_EVENT_TEAR_DOWN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_UNDERRUN&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This occurs when there is no data available, typically&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// when there is a failure to supply data to the AudioTrack.  It can also&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// occur in non-offloaded mode when the audio device comes out of standby.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If an AudioTrack underruns it outputs silence. Since this happens suddenly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it may sound like an audible pop or glitch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The underrun event is sent once per track underrun; the condition is reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// when more data is sent to the AudioTrack.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;received unknown event type: %d inside CallbackWrapper !&amp;quot;&lt;/span&gt;, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;unlock();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;AudioPlayer::AudioSinkCallback&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5047;&amp;#x8BBE;&amp;#x5F53;&amp;#x524D;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x4E3A;CB_EVENT_FILL_BUFFER&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;AudioPlayer::fillBuffer&amp;#x6765;&amp;#x586B;&amp;#x5145;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&amp;#x5728;AudioPlayer::fillBuffer&amp;#x4E2D;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;err = mSource-&amp;gt;read(&amp;amp;mInputBuffer, &amp;amp;options);&amp;#x5373;&amp;#x8C03;&amp;#x7528;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;mediabuffer&amp;#x6765;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4E0D;&amp;#x5217;&amp;#x51FA;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; AudioPlayer::AudioSinkCallback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink * &lt;span class=&quot;comment&quot;&gt;/* audioSink */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buffer, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink::&lt;span class=&quot;keyword&quot;&gt;cb_event_t&lt;/span&gt; event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioPlayer *me = (AudioPlayer *)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_FILL_BUFFER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; me-&amp;gt;fillBuffer(buffer, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_STREAM_END:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: stream end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mReachedEOS = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;notifyAudioEOS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_TEAR_DOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: Tear down event&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mObserver-&amp;gt;postAudioTearDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5B8C;open&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;start&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x53EA;&amp;#x6389;&amp;#x8C03;&amp;#x7528;mTrack-&amp;gt;start.&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::AudioOutput&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::start&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTrack != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setVolume(mLeftVolume, mRightVolume);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setAuxEffectSendLevel(mSendLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioTrack::start&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x5185;&amp;#x90E8;&amp;#x8C03;&amp;#x7528;&amp;#x4E86; mAudioTrack-&amp;gt;start();&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    State previousState = mState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previousState == STATE_PAUSED_STOPPING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = STATE_STOPPING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = STATE_ACTIVE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) updateAndGetPosition_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AudioTrackThread&amp;gt; t = mAudioTrackThread;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previousState == STATE_STOPPING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mProxy-&amp;gt;interrupt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            t-&amp;gt;resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPreviousPriority = getpriority(PRIO_PROCESS, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get_sched_policy(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;amp;mPreviousSchedulingGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, ANDROID_PRIORITY_AUDIO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = NO_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(flags &amp;amp; CBLK_INVALID)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = mAudioTrack-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == DEAD_OBJECT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flags |= CBLK_INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8DDF;&amp;#x8E2A;&amp;#x6E90;&amp;#x7801;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mAudioTrack&amp;#x662F;&amp;#x5728;createTrack_l()&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x5BF9;&amp;#x5E94;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;,&amp;#x5B83;&amp;#x662F;&amp;#x8C03;&amp;#x7528;audioFlinger-&amp;gt;createTrack&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6D41;&amp;#x7A0B;Audiotrack&amp;#x542F;&amp;#x52A8;&amp;#x540E;&amp;#x5C31;&amp;#x4F1A;&amp;#x5468;&amp;#x671F;&amp;#x6027;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4ECE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// must be called with mLock held&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::createTrack_l()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IAudioTrack&amp;gt; track = audioFlinger-&amp;gt;createTrack(streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mSampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mFormat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mChannelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;temp,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;trackFlags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mSharedBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      output,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      tid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;mSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mClientUid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = track;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x65E0;&amp;#x56FE;&amp;#x65E0;&amp;#x771F;&amp;#x76F8;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF01;&amp;#x518D;&amp;#x770B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x5E94;&amp;#x8BE5;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x4E86;&amp;#x5427;&amp;#xFF0C;&amp;#x8981;&amp;#x662F;&amp;#x8FD8;&amp;#x6709;&amp;#x7591;&amp;#x95EE;&amp;#x53EF;&amp;#x4EE5;&amp;#x7ED9;&amp;#x6211;&amp;#x53D1;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/01/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-3/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x4EE5;&amp;#x514D;&amp;#x4E00;&amp;#x5927;&amp;#x5806;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F15;&amp;#x6765;&amp;#x5927;&amp;#x5BB6;&amp;#x7684;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[3]</title>
    <link href="http://yoursite.com/2016/07/31/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-2/"/>
    <id>http://yoursite.com/2016/07/31/Android-源码分析基于Stagefright的MediaPlayer播放框架-2/</id>
    <published>2016-07-31T13:54:41.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;/h5&gt;&lt;h6 id=&quot;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot;&gt;&lt;a href=&quot;#Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot; class=&quot;headerlink&quot; title=&quot;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot;&gt;&lt;/a&gt;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/h6&gt;&lt;p&gt;&amp;#x901A;&amp;#x8FC7;setDataSource&amp;#x8BBE;&amp;#x7F6E;&amp;#x64AD;&amp;#x653E;&amp;#x8D44;&amp;#x6E90;&amp;#x540E;&amp;#x3002;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;Prepare&amp;#x65B9;&amp;#x6CD5;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x4E86;&amp;#x3002;Prepare&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x662F;&amp;#x6700;&amp;#x4E3A;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4F53;&amp;#x4E0A;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x6210;&amp;#x4E24;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x8BBE;&amp;#x7F6E;&amp;#xFF0C;Prepare&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x6D41;&amp;#x7A0B;&amp;#x548C;setDataSource&amp;#x4E00;&amp;#x6837;&amp;#x90FD;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;Java&amp;#x5C42;&amp;#x5230;jni&amp;#x5C42;&amp;#x518D;&amp;#x5230;native&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5C31;&amp;#x4E0D;&amp;#x505A;&amp;#x8FC7;&amp;#x591A;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scanInternalSubtitleTracks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalStateException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mp == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jniThrowException(env, &lt;span class=&quot;string&quot;&gt;&amp;quot;java/lang/IllegalStateException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Handle the case where the display surface was set before the mp was&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialized. We try again to make it stick.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IGraphicBufferProducer&amp;gt; st = getVideoSurfaceTexture(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mp-&amp;gt;setVideoSurfaceTexture(st);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;prepare(), &lt;span class=&quot;string&quot;&gt;&amp;quot;java/io/IOException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Prepare failed.&amp;quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayer::prepare()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock _l(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = getThreadId();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareSync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EALREADY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareSync = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = prepareAsync_l()&amp;#xFF1B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareSync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSignal.wait(mLock);  &lt;span class=&quot;comment&quot;&gt;// wait for prepare done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPrepareSync = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPrepareStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#xFF1A;&lt;br&gt;MediaPlayer &amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;mPlayer-&amp;gt;prepareAsync()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;mPlayer&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x662F;Stagefright Player&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x5F80;&amp;#x4E0B;&amp;#x770B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaPlayer&lt;span class=&quot;tag&quot;&gt;::prepareAsync_l&lt;/span&gt;(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (mPlayer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ( mCurrentState &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt; (MEDIA_PLAYER_INITIALIZED | MEDIA_PLAYER_STOPPED) ) ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioAttributesParcel != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setParameter(KEY_PARAMETER_AUDIO_ATTRIBUTES, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *mAudioAttributesParcel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setAudioStreamType(mStreamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentState = MEDIA_PLAYER_PREPARING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;StagefrightPlayer&amp;#x4E2D;&amp;#x53EA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x5730;&amp;#x8C03;&amp;#x7528;AwesomePlayer&amp;#x7684;prepareAsync&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ATRACE_CALL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;  &lt;span class=&quot;comment&quot;&gt;// async prepare already pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsAsyncPrepare = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; prepareAsync_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;AwesomePlayer&amp;#x7C7B;&amp;#x7684;prepareAsync_l&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;AwesomeEvent&amp;#xFF0C;&amp;#x542F;&amp;#x52A8;Queue&amp;#xFF0C;&amp;#x5C06;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;mAsyncPrepareEvent post&amp;#x5230;Queue&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::prepareAsync_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;  &lt;span class=&quot;comment&quot;&gt;// async prepare already pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mQueueStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mQueue.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mQueueStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAsyncPrepareEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onPrepareAsyncEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mQueue.postEvent(mAsyncPrepareEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x7EE7;&amp;#x7EED;&amp;#x4ECB;&amp;#x7ECD;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;TimedEventQueue&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#x3002;&amp;#x4ECE;&amp;#x540D;&amp;#x79F0;&amp;#x4E0A;&amp;#x770B;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x961F;&amp;#x5217;&amp;#x3002;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x5B83;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x53EA;&amp;#x662F;&amp;#x7ED9;&amp;#x5B83;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A;DeathRecipient.&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TimedEventQueue::TimedEventQueue()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mNextEventID(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mRunning(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStopped(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDeathRecipient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PMDeathRecipient(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mWakeLockCount(0) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;start&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;ThreadWrapper&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void TimedEventQueu&lt;span class=&quot;number&quot;&gt;e::&lt;/span&gt;start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mRunning) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStopped = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_t attr&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_init(&amp;amp;attr)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_setdetachstate(&amp;amp;attr, PTHREAD_CREATE_JOINABLE)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_create(&amp;amp;mThread, &amp;amp;attr, ThreadWrapper, this)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_destroy(&amp;amp;attr)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRunning = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *TimedEventQueue::ThreadWrapper(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *me) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidSetThreadPriority(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;TimedEventQueue *&amp;gt;(me)-&amp;gt;threadEntry();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;ThreadWrapper&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5FAA;&amp;#x73AF;&amp;#x67E5;&amp;#x770B;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;Event&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x8FBE;&amp;#x5230;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x4E3A;&amp;#x7A7A;&amp;#x5219;&amp;#x5C06;&amp;#x4F1A;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FBE;&amp;#x5230;&amp;#x8D85;&amp;#x65F6;&amp;#x65F6;&amp;#x95F4;10&amp;#x79D2;&amp;#x5219;&amp;#x4F1A;&amp;#x9000;&amp;#x51FA;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x8D85;&amp;#x65F6;&amp;#x65F6;&amp;#x95F4;&amp;#x4E4B;&amp;#x524D;&amp;#x8FBE;&amp;#x5230;&amp;#x5B83;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x5219;&amp;#x8C03;&amp;#x7528;&amp;#x8BE5;Event&amp;#x7684;fire&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TimedEventQueue::threadEntry() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prctl(PR_SET_NAME, (&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&amp;quot;TimedEventQueue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; now_us = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;Event&amp;gt; event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; wakeLocked = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStopped) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mQueue.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mQueueNotEmptyCondition.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event_id eventID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQueue.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// The only event in the queue could have been cancelled&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// while we were waiting for its scheduled time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                List&amp;lt;QueueItem&amp;gt;::iterator it = mQueue.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                eventID = (*it).event-&amp;gt;eventID();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                now_us = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; when_us = (*it).realtime_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delay_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (when_us &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || when_us == INT64_MAX) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = when_us - now_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delay_us &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; kMaxTimeoutUs = &lt;span class=&quot;number&quot;&gt;10000000l&lt;/span&gt;l;  &lt;span class=&quot;comment&quot;&gt;// 10 secs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeoutCapped = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = kMaxTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    timeoutCapped = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mQueueHeadChangedCondition.waitRelative(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mLock, delay_us * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timeoutCapped &amp;amp;&amp;amp; err == -ETIMEDOUT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// We finally hit the time this event is supposed to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// trigger.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    now_us = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// The event w/ this id may have been cancelled while we&amp;apos;re&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// waiting for its trigger-time, in that case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// removeEventFromQueue_l will return NULL.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Otherwise, the QueueItem will be removed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// from the queue and the referenced event returned.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event = removeEventFromQueue_l(eventID, &amp;amp;wakeLocked);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Fire event with the lock NOT held.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event-&amp;gt;fire(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, now_us);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wakeLocked) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                releaseWakeLock_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;fire &amp;#x65B9;&amp;#x6CD5;&amp;#x91CC;&amp;#x9762;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;AwesomeEvent&amp;#x4E2D;mPlayer&amp;#x7684;mMethod&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;mMethod&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;new AwesomeEvent&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x9012;&amp;#x8FDB;&amp;#x53BB;&amp;#x7684;onPrepareAsyncEvent&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; : public &lt;span class=&quot;type&quot;&gt;TimedEventQueue&lt;/span&gt;::&lt;span class=&quot;type&quot;&gt;Event&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt; *player,&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt;::*&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;)())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mPlayer(player),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMethod(&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual ~&lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;() {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; fire(&lt;span class=&quot;type&quot;&gt;TimedEventQueue&lt;/span&gt; * /* queue */, int64_t /* now_us */) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mPlayer-&amp;gt;*mMethod)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt; *mPlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt;::*mMethod)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;operator=(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;AwesomePlayer &amp;#x4E0B;&amp;#x7684;onPrepareAsyncEvent&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;onPrepareAsyncEvent&lt;br&gt;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;beginPrepareAsync_l&amp;#x3002;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;initAudioDecoder()&amp;#x5BF9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::onPrepareAsyncEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beginPrepareAsync_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::beginPrepareAsync_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARE_CANCELLED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepare was cancelled before doing anything&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        abortPrepare(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUri.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = finishSetDataSource_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoTrack != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = initVideoDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTrack != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = initAudioDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARING_CONNECTED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isStreamingHTTP()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postBufferingEvent_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        finishAsyncPrepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x662F;&amp;#x600E;&amp;#x6837;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;OMXCodec::Create&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ATRACE_CALL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; meta = mAudioTrack-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    audio_stream_type_t streamType = AUDIO_STREAM_MUSIC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        streamType = mAudioSink-&amp;gt;getAudioStreamType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOffloadAudio = canOffloadStream(meta, (mVideoSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     isStreamingHTTP(), streamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mOmxSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTrack-&amp;gt;getFormat()-&amp;gt;findInt64(kKeyDuration, &amp;amp;durationUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mutex::Autolock autoLock(mMiscStateLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDurationUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || durationUs &amp;gt; mDurationUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDurationUs = durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status_t err = mAudioSource-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_QCELP)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For legacy reasons we&amp;apos;re simply going to ignore the absence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// of an audio decoder for QCELP instead of aborting playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// altogether.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::Autolock autoLock(mStatsLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TrackStat *stat = &amp;amp;mStats.mTracks.editItemAt(mStats.mAudioTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAudioSource-&amp;gt;getFormat()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                -&amp;gt;findCString(kKeyDecoderComponent, &amp;amp;component)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            component = &lt;span class=&quot;string&quot;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stat-&amp;gt;mDecoderName = component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; ? OK : UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;&amp;#x8FD9;&amp;#x4E2A;mimeType&amp;#x67E5;&amp;#x627E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;OMXCodecObserver&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x8D4B;&amp;#x7ED9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7531;allocateNode&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MetaData&amp;gt; &amp;amp;meta, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;MimeType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x627E;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3B;&amp;#x8981;&amp;#x4ECE;/etc/media_codecs.xml  /etc/media_codecs_performence.xml &amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x5339;&amp;#x914D;&amp;#x5BF9;&amp;#x5E94;mimetype&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    findMatchingCodecs(mime, createEncoder, matchComponentName, flags, &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x627E;&amp;#x5230;&amp;#x4E4B;&amp;#x540E;&amp;#x5C06;&amp;#x653E;&amp;#x5728;matchingCodecs&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x7684;&amp;#x5B58;&amp;#x653E;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E3A;MediaCodecInfo&amp;#x7684;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;OMXCodecObserver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;OMXCodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; matchingCodecs.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentNameBase = matchingCodecs[i].mName.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks = matchingCodecs[i].mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName = componentNameBase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x83B7;&amp;#x53D6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = omx-&amp;gt;allocateNode(componentName, observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;OMXCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    omx, node, quirks, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer-&amp;gt;setCodec(codec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = codec-&amp;gt;configureCodec(meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; codec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5339;&amp;#x914D;&amp;#x662F;&amp;#x8C03;&amp;#x7528;findMatchingCodecs&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x4E4B;&amp;#x524D;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x6240;&amp;#x62E5;&amp;#x6709;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x89E3;&amp;#x6790;/etc/media_codecs.xml&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;findCodecByType&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;matchingCodecs&amp;#x4E2D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;CodecNameAndQuirks&amp;gt; *matchingCodecs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    matchingCodecs-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x6240;&amp;#x62E5;&amp;#x6709;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaCodecList&amp;gt; &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt; = MediaCodecList::getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;findCodecByType&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x7684;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t matchIndex =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt;-&amp;gt;findCodecByType(mime, createEncoder, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matchIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index = matchIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaCodecInfo&amp;gt; info = &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt;-&amp;gt;getCodecInfo(matchIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName = info-&amp;gt;getCodecName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matchComponentName &amp;amp;&amp;amp; strcmp(componentName, matchComponentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When requesting software-only codecs, only push software codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When requesting hardware-only codecs, only push hardware codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When there is request neither for software-only nor for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// hardware-only codecs, push all codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (((flags &amp;amp; kSoftwareCodecsOnly) &amp;amp;&amp;amp;   IsSoftwareCodec(componentName)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ((flags &amp;amp; kHardwareCodecsOnly) &amp;amp;&amp;amp;  !IsSoftwareCodec(componentName)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (!(flags &amp;amp; (kSoftwareCodecsOnly | kHardwareCodecsOnly)))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;matchingCodecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ssize_t index = matchingCodecs-&amp;gt;add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CodecNameAndQuirks *entry = &amp;amp;matchingCodecs-&amp;gt;editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mName = String8(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = getComponentQuirks(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;matching &amp;apos;%s&amp;apos; quirks 0x%08x&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  entry-&amp;gt;mName.string(), entry-&amp;gt;mQuirks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; kPreferSoftwareCodecs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matchingCodecs-&amp;gt;sort(CompareSoftwareCodecsFirst);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaCodecList&lt;span class=&quot;tag&quot;&gt;::getInstance&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;tag&quot;&gt;::Autolock&lt;/span&gt; _l(sRemoteInitMutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sRemoteList == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IBinder&amp;gt; binder =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            defaultServiceManager()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IMediaPlayerService&amp;gt; service =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get() != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sRemoteList = service&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getCodecList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sRemoteList == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if failed to get remote list, create local list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sRemoteList = getLocalInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sRemoteList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaPlayerService::getCodecList() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MediaCodecList::getLocalInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaCodecList::getLocalInstance() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sInitMutex)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sCodecList == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaCodecList *codecList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (codecList-&amp;gt;initCheck() == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sCodecList = codecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; codecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sCodecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaCodecList::MediaCodecList()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInitCheck(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mUpdate(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mGlobalSettings(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(&lt;span class=&quot;string&quot;&gt;&amp;quot;/etc/media_codecs.xml&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(&lt;span class=&quot;string&quot;&gt;&amp;quot;/etc/media_codecs_performance.xml&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(kProfilingResults, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/* ignore_errors */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; MediaCodecList::findCodecByType(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; startIndex) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *advancedFeatures[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;feature-secure-playback&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numCodecs = mCodecInfos.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x904D;&amp;#x5386;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9879;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (; startIndex &amp;lt; numCodecs; ++startIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; MediaCodecInfo &amp;amp;info = *mCodecInfos.itemAt(startIndex).get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x5219;&amp;#x63A5;&amp;#x7740;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x884C;&amp;#x5224;&amp;#x65AD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info.isEncoder() != encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x80FD;&amp;#x591F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x7684;MimeType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MediaCodecInfo::Capabilities&amp;gt; capabilities = info.getCapabilitiesFor(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (capabilities == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;details = capabilities-&amp;gt;getDetails();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; required;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isAdvanced = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; ix = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; ix &amp;lt; ARRAY_SIZE(advancedFeatures); ix++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (details-&amp;gt;findInt32(advancedFeatures[ix], &amp;amp;required) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    required != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isAdvanced = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isAdvanced) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; startIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ENOENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/22.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EA;&amp;#x662F;&amp;#x8FC7;&amp;#x6EE4;&amp;#x51FA;&amp;#x80FD;&amp;#x591F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x3002;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x7247;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5206;&amp;#x914D;&amp;#x8282;&amp;#x70B9;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t err = omx-&amp;gt;allocateNode(componentName, observer, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;OMXCodec&amp;gt;&lt;/span&gt; codec = new OMXCodec(omx, &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, quirks&lt;/span&gt;, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5C06;&amp;#x5B9E;&amp;#x4F8B;&amp;#x8D4B;&amp;#x7ED9;observer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;observer-&amp;gt;setCodec(codec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5E76;&amp;#x7528;&lt;span class=&quot;keyword&quot;&gt;meta&lt;/span&gt;&amp;#x6765;&amp;#x914D;&amp;#x7F6E;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;err = codec-&amp;gt;configureCodec(&lt;span class=&quot;keyword&quot;&gt;meta&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;allocateNode&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;OMXNodeInstance&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&lt;br&gt;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateNode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *name, const sp&lt;span class=&quot;tag&quot;&gt;&amp;lt;IOMXObserver&amp;gt;&lt;/span&gt; &amp;amp;observer, node_id *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;/span&gt;::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= 0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMXNodeInstance *instance = new OMXNodeInstance(this, observer, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_COMPONENTTYPE *handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = mMaster-&amp;gt;makeComponentInstance(name, &amp;amp;OMXNodeInstance::kCallbacks,instance, &amp;amp;handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= makeNodeID&lt;/span&gt;(instance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDispatchers.add(*&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, new&lt;/span&gt; CallbackDispatcher(instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance-&amp;gt;setHandle(*&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, handle&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveNodes.add(IInterface::asBinder(observer), instance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IInterface::asBinder(observer)-&amp;gt;linkToDeath(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;OMXNodeInstance&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXNodeInstance::OMXNodeInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX *owner, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMXObserver&amp;gt; &amp;amp;observer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOwner(owner),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNodeID(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandle(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mObserver(observer),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDying(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mBufferIDCount(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mName = ADebug::GetDebugName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEBUG = ADebug::GetDebugLevelFromProperty(name, &lt;span class=&quot;string&quot;&gt;&amp;quot;debug.stagefright.omx-debug&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;debug level for %s is %d&amp;quot;&lt;/span&gt;, name, DEBUG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEBUG_BUMP = DEBUG;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumPortBuffers[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumPortBuffers[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDebugLevelBumpPendingBuffers[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDebugLevelBumpPendingBuffers[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetadataType[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetadataType[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;makeComponentInstance&amp;#x65B9;&amp;#x6CD5;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.indexOfKey(String8(name))&amp;#x627E;&amp;#x5230;&amp;#x6307;&amp;#x5B9A;&amp;#x540D;&amp;#x5B57;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;,&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.valueAt(index);&amp;#x8FD4;&amp;#x56DE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;mPluginByComponentName&amp;#x662F;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;AwesomePlayer&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&amp;#x91CC;&amp;#x9762;&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x662F;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&lt;br&gt;ssize_t index = mPluginByComponentName.indexOfKey(String8(name));&lt;br&gt;OMXPluginBase *plugin = mPluginByComponentName.valueAt(index);&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;plugin&amp;#x7684;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByInstance&amp;#x4E2D;&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE OMXMaster::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*component = NULL;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.indexOfKey(String8(name))&amp;#x627E;&amp;#x5230;&amp;#x6307;&amp;#x5B9A;&amp;#x540D;&amp;#x5B57;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;,&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.valueAt(index);&amp;#x8FD4;&amp;#x56DE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x4E2A;mPluginByComponentName&amp;#x662F;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;AwesomePlayer&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&amp;#x91CC;&amp;#x9762;&amp;#x5B58;&amp;#x653E;&amp;#x7684;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t index = mPluginByComponentName.indexOfKey(String8(name));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OMXPluginBase *&lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt; = mPluginByComponentName.valueAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;plugin&amp;#x7684;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//mPluginByInstance&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;-&amp;gt;makeComponentInstance(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; != OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPluginByInstance.add(*component, &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E3A;&amp;#x4F8B;&amp;#x5B50;&amp;#x6765;&amp;#x5206;&amp;#x6790;makeComponentInstance&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&amp;#x9996;&amp;#x5148;SoftOMXPlugin::makeComponentInstance&amp;#x4F1A;&amp;#x4ECE;kComponents&amp;#x6570;&amp;#x7EC4;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;kComponents&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x4F53;&amp;#x6570;&amp;#x7EC4;&amp;#xFF0C;&amp;#x5B58;&amp;#x653E;&amp;#x7740;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x540D;&amp;#xFF0C;&amp;#x52A8;&amp;#x6001;&amp;#x94FE;&amp;#x63A5;&amp;#x5E93;&amp;#x540E;&amp;#x7F00;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x662F;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x8FD8;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;&amp;#x52A8;&amp;#x6001;&amp;#x94FE;&amp;#x63A5;&amp;#x5E93;&amp;#x7684;&amp;#x540E;&amp;#x7F00;&amp;#x6784;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#xFF0C;&amp;#x63A5;&amp;#x7740;&amp;#x6253;&amp;#x5F00;&amp;#x8BE5;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SoftOMXPlugin::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumComponents; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &amp;#x5728;kComponents&amp;#x6570;&amp;#x7EC4;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;strcmp&lt;/span&gt;(name, kComponents[i].mName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6784;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;MP3&amp;#x4E3A;&amp;#x4F8B;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#x4E3A;&amp;#xFF1A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// libstagefright_soft_mp3dec.so&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString libName = &lt;span class=&quot;string&quot;&gt;&amp;quot;libstagefright_soft_&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libName.append(kComponents[i].mLibNameSuffix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libName.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;.so&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6253;&amp;#x5F00;&amp;#x8BE5;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *libHandle = dlopen(libName.c_str(), RTLD_NOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; SoftOMXComponent *(*CreateSoftOMXComponentFunc)(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_PTR, OMX_COMPONENTTYPE **);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CreateSoftOMXComponentFunc createSoftOMXComponent =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (CreateSoftOMXComponentFunc)dlsym(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    libHandle,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;_Z22createSoftOMXComponentPKcPK16OMX_CALLBACKTYPE&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;PvPP17OMX_COMPONENTTYPE&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;SoftOMXComponent&amp;gt; codec =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (*createSoftOMXComponent)(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_ERRORTYPE err = codec-&amp;gt;initCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        codec-&amp;gt;incStrong(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        codec-&amp;gt;setLibHandle(libHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorNone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorInvalidComponentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static const struct {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mLibNameSuffix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} kComponents[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.aac.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;aacdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.aac.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;aacenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrnb.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrnb.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrnbenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrwb.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrwb.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrwbenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h264.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;avcdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h264.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;avcenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.hevc.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;hevcdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.hevc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.g711.alaw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;g711dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711alaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.g711.mlaw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;g711dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711mlaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg2.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg2dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h263.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h263.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4enc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg4.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg4.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4enc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mp3.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mp3dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vorbis.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vorbisdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.vorbis&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.opus.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;opusdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.opus&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp8.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp9.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp9&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp8.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.raw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;rawdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.raw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.flac.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;flacenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.flac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.gsm.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;gsmdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.gsm&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;MP3&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x5728;&amp;#x5B83;&amp;#x5185;&amp;#x90E8;&amp;#x901A;&amp;#x8FC7; android::SoftMP3&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;MP3&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android::&lt;span class=&quot;function&quot;&gt;SoftOMXComponent *&lt;span class=&quot;title&quot;&gt;createSoftOMXComponent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData, OMX_COMPONENTTYPE **component)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; android::SoftMP3(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F30;&amp;#x8BA1;&amp;#x5927;&amp;#x5BB6;&amp;#x4F1A;&amp;#x6709;&amp;#x70B9;&amp;#x6655;&amp;#x4E86;&amp;#x5427;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x70B9;&amp;#x6655;&amp;#x6211;&amp;#x8FD9;&amp;#x91CC;&amp;#x518D;&amp;#x4E0A;&amp;#x4E2A;&amp;#x56FE;&amp;#x505A;&amp;#x4E2A;&amp;#x5C0F;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/23.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x662F;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x62FF;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;mimetype&amp;#x6211;&amp;#x4EEC;&amp;#x53BB;&amp;#x5339;&amp;#x914D;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x548C;&amp;#x4EC0;&amp;#x4E48;&amp;#x5339;&amp;#x914D;&amp;#xFF1F;&amp;#x5C31;&amp;#x662F;&amp;#x4ECE;/etc/media_codecs.xml./etc/media_codec_performance.xml&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;xml&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E2D;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E86;&amp;#x5E73;&amp;#x53F0;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4FE1;&amp;#x606F;&amp;#x5C01;&amp;#x88C5;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;MediaCodecInfo&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&amp;#x5339;&amp;#x914D;&amp;#x540E;&amp;#x7684;&amp;#x6240;&amp;#x6709;MediaCodecInfo&amp;#x5B58;&amp;#x653E;&amp;#x5728;matchingCodecs&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x62FF;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;ComponentName&amp;#x5230;mPluginByComponentName&amp;#x4E2D;&amp;#x67E5;&amp;#x627E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;plugin&amp;#x3002;&amp;#x6BD4;&amp;#x5982;MP3&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x627E;&amp;#x5230;SoftOMXPlugin&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4ECE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5E93;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x5E93;&amp;#x5185;&amp;#x90E8;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;SoftMp3&amp;#x8FD9;&amp;#x4E2A;component&amp;#xFF0C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x540E;&amp;#x52A0;&amp;#x5165;&amp;#x5230;mPluginByInstance&lt;/p&gt;
&lt;p&gt;&amp;#x5728;MP3&amp;#x8F6F;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x6B65;&amp;#x9AA4;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SimpleSoftOMXComponent&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&lt;/li&gt;
&lt;li&gt;initPorts();&lt;/li&gt;
&lt;li&gt;initDecoder();&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SoftMP3::SoftMP3(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SimpleSoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; tPVMP3DecoderExternal),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDecoderBuf(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAnchorTimeUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesOutput(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumChannels(2),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSamplingRate(44100),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSignalledError(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSawInputEos(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSignalledOutputEos(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOutputPortSettingsChange(NONE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initPorts();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x5728;SimpleSoftOMXComponent&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;SoftOMXComponent&amp;#xFF0C;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;mHandler&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;mLooper&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;mHandler&amp;#x6CE8;&amp;#x518C;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;mLooper&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x542F;&amp;#x52A8;mLooper&amp;#x3002;&lt;br&gt;&amp;#x5728;mHandler&amp;#x4E2D;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;kWhatEmptyThisBuffer&amp;#xFF0C;kWhatFillThisBuffer&amp;#xFF0C;kWhatSendCommand&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5F53;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E8B;&amp;#x4EF6;&amp;#x89E6;&amp;#x53D1;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x53D1;&amp;#x9001;&amp;#x5230;SimpleSoftOMXComponent::onMessageReceived&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleSoftOMXComponent::SimpleSoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLooper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ALooper),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandler(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AHandlerReflector&amp;lt;SimpleSoftOMXComponent&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mState(OMX_StateLoaded),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetState(OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;setName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;start(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// runOnCallingThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// canCallJava&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;SoftOMXComponent::SoftOMXComponent&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;OMX_COMPONENTTYPE&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x4F53;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5728;&lt;br&gt;frameworks/native/include/media/openmax/OMX_Component.h&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5BF9;&amp;#x5176;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SoftOMXComponent::SoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mName(name),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mCallbacks(callbacks),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mComponent(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMX_COMPONENTTYPE),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLibHandle(&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nSize = sizeof(*mComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nVersionMajor = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nVersionMinor = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nRevision = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nStep = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;pComponentPrivate = this;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;pApplicationPrivate = appData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetComponentVersion = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SendCommand = SendCommandWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetParameter = GetParameterWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetParameter = SetParameterWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetConfig = GetConfigWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetConfig = SetConfigWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetExtensionIndex = GetExtensionIndexWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetState = GetStateWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentTunnelRequest = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;UseBuffer = UseBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;AllocateBuffer = AllocateBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;FreeBuffer = FreeBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;EmptyThisBuffer = EmptyThisBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;FillThisBuffer = FillThisBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetCallbacks = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentDeInit = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;UseEGLImage = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentRoleEnum = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *component = mComponent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;callback&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OMX_CALLBACKTYPE OMXNodeInstance::kCallbacks = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;OnEvent, &amp;amp;OnEmptyBufferDone, &amp;amp;OnFillBufferDone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;initPorts&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3A;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;index&amp;#x4E3A;0&amp;#xFF0C;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;index&amp;#x4E3A;1.&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;SoftMP3&lt;/span&gt;::initPorts() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;OMX_PARAM_PORTDEFINITIONTYPE&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;InitOMXParams&lt;/span&gt;(&amp;amp;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nPortIndex&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDir&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_DirInput&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt; =&lt;/span&gt; kNumBuffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountActual&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferSize&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bEnabled&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_TRUE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bPopulated&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDomain&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_PortDomainAudio&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bBuffersContiguous&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferAlignment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;cMIMEType&lt;/span&gt; =&lt;/span&gt; const_cast&amp;lt;char *&amp;gt;(&lt;span class=&quot;type&quot;&gt;MEDIA_MIMETYPE_AUDIO_MPEG&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;pNativeRender&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bFlagErrorConcealment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eEncoding&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_AUDIO_CodingMP3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addPort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nPortIndex&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDir&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_DirOutput&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt; =&lt;/span&gt; kNumBuffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountActual&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferSize&lt;/span&gt; =&lt;/span&gt; kOutputBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bEnabled&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_TRUE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bPopulated&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDomain&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_PortDomainAudio&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bBuffersContiguous&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferAlignment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;cMIMEType&lt;/span&gt; =&lt;/span&gt; const_cast&amp;lt;char *&amp;gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio/raw&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;pNativeRender&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bFlagErrorConcealment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eEncoding&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_AUDIO_CodingPCM&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addPort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;initDecoder&amp;#x6765;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SoftMP&lt;span class=&quot;number&quot;&gt;3::&lt;/span&gt;initDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfig-&amp;gt;equalizerType = flat&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfig-&amp;gt;crcEnabled = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t memRequirements = pvmp3_decoderMemRequirements()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderBuf = malloc(memRequirements)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pvmp3_InitDecoder(mConfig, mDecoderBuf)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsFirst = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x56DE;&amp;#x5934;&amp;#x603B;&amp;#x7ED3;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E4B;&amp;#x524D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x5982;&amp;#x4F55;&amp;#x4ECE;&amp;#x4F20;&amp;#x5165;&amp;#x7684;mimetype&amp;#x5230;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;component&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;component&amp;#x4E2A;&amp;#x4EBA;&amp;#x8BA4;&amp;#x4E3A;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x7EC4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5B83;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x6240;&amp;#x4F5C;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x548C;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#x3002;&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;OMX_CALLBACKTYPE&amp;#xFF0C;OMX_COMPONENTTYPE&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x4EE5;&amp;#x53CA;mHandler&amp;#x3002;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x4E2A;&amp;#x56FE;&amp;#x5427;&amp;#xFF0C;&amp;#x65E0;&amp;#x56FE;&amp;#x65E0;&amp;#x771F;&amp;#x76F8;&amp;#xFF01;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/24.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x56DE;&amp;#x8FC7;&amp;#x5934;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;allocateNode&amp;#xFF0C;&amp;#x5728;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521B;&amp;#x5EFA;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x8C03;&amp;#x7528;makeNodeID&amp;#x4E3A;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;node&amp;#x521B;&amp;#x5EFA;ID&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mNodeIDToInstance&amp;#x4E2D;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;id&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX::node_id OMX::makeNodeID(OMXNodeInstance *instance) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // mLock is already held.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= (node_id&lt;/span&gt;)++mNodeCounter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNodeIDToInstance.add(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, instance&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;OMXCodec&amp;#xFF0C;&amp;#x5728;OMXCodec&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;setComponentRole&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;isEncoder&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Role Name&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXCodec::OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOMX(omx),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexInput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexOutput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setComponentRole();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXCodec::setComponentRole(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; MimeToRole {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *decoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *encoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; MimeToRole kMimeToRole[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_I,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp1&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_II,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AMR_NB,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrnb&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AMR_WB,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrwb&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AAC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.aac&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_VORBIS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.vorbis&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.vorbis&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_OPUS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.opus&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.opus&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_G711_MLAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711mlaw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.g711mlaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_G711_ALAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711alaw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.g711alaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_AVC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.avc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_HEVC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.hevc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.hevc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_MPEG4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg4&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_H263,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.h263&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_VP8,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp8&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_VP9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp9&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp9&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_RAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.raw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.raw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_FLAC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.flac&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.flac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MSGSM,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.gsm&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.gsm&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_MPEG2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AC3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.ac3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.ac3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumMimeToRole =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMimeToRole) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMimeToRole[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumMimeToRole; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, kMimeToRole[i].mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == kNumMimeToRole) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *role =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isEncoder ? kMimeToRole[i].encoderRole&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  : kMimeToRole[i].decoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (role != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PARAM_COMPONENTROLETYPE roleParams;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        InitOMXParams(&amp;amp;roleParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;strncpy&lt;/span&gt;((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *)roleParams.cRole,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                role, OMX_MAX_STRINGNAME_SIZE - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        roleParams.cRole[OMX_MAX_STRINGNAME_SIZE - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = omx-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                node, OMX_IndexParamStandardComponentRole,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;roleParams, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(roleParams));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to set standard component role &amp;apos;%s&amp;apos;.&amp;quot;&lt;/span&gt;, role);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x770B;&amp;#x5B8C;&amp;#x4E86;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;initAudioDecoder&amp;#x4E2D;&amp;#x7684;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t err = mAudioSource-&amp;gt;start()&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x660E;&amp;#x786E;mAudioSource&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mOmxSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t err = mAudioSource-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mAudioSource&amp;#x6307;&amp;#x7684;&amp;#x662F;mOmxSource&amp;#xFF0C;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;OMXCodec&amp;#x3002;&amp;#x800C;OMXCodec::Create&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;OMXCodec&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;OMXCodec&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;.&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec&lt;span class=&quot;tag&quot;&gt;::start&lt;/span&gt;(MetaData *meta) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;tag&quot;&gt;::Autolock&lt;/span&gt; autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; &lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; MetaData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Decoder case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get())) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;mSource&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;init()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x8BE5;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x90E8;&amp;#x5206;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#x3002;&amp;#x540C;&amp;#x6837;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x5206;&amp;#x6790;&amp;#x5177;&amp;#x4F53;&amp;#x6D41;&amp;#x7A0B;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x660E;&amp;#x786E;mSource&amp;#x5230;&amp;#x5E95;&amp;#x6307;&amp;#x7684;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4ECE;&amp;#x5B83;&amp;#x7684;&amp;#x6839;&amp;#x6E90;&amp;#x627E;&amp;#x8D77;.&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXCodec::OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOMX(omx),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSource(source),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexInput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexOutput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setComponentRole();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MetaData&amp;gt; &amp;amp;meta, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;OMXCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    omx, node, quirks, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::setAudioSource(sp&amp;lt;MediaSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;MediaExtractor&amp;#x5BF9;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x505A;A/V&amp;#x7684;&amp;#x5206;&amp;#x79BB;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource_l(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaExtractor&amp;gt; &amp;amp;extractor) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveVideo &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           setVideoSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setAudioSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x6839;&amp;#x6E90;&amp;#x6765;&amp;#x81EA;extractor-&amp;gt;getTrack&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6B4C;&amp;#x66F2;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x4E3A;MP3&amp;#x683C;&amp;#x5F0F;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;extractor&amp;#x5C31;&amp;#x662F;MP3Extractor,&amp;#x5219;mAudioTrack&amp;#x5C31;&amp;#x662F;MP3Extractor::getTrack&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;MP3Source&amp;#xFF0C;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x8FD9;&amp;#x70B9;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x7EE7;&amp;#x7EED;&amp;#x5BF9;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; MP3Extractor::getTrack(&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; index) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInitCheck != OK || index != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MP3Source(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta, mDataSource, mFirstFramePos, mFixedHeader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeeker);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;MP3Source::start&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;MediaBuffer&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;MediaBufferGroup&amp;#x7684;add_buffer&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;MediaBufferGroup&amp;#x4E2D;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5C06;&amp;#x4E00;&amp;#x4E9B;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x6807;&amp;#x5FD7;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4E3A;&amp;#x521D;&amp;#x59CB;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MP3Sour&lt;span class=&quot;number&quot;&gt;ce::&lt;/span&gt;start(MetaData *) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(!mStarted)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGroup = new MediaBufferGroup&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGroup-&amp;gt;add_buffer(new MediaBuffer(kMaxFrameSize))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPos = mFirstFramePos&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentTimeUs = 0&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBasisTimeUs = mCurrentTimeUs&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSamplesRead = 0&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStarted = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return OK&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;init&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec::init() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mLock is held.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mQuirks &amp;amp; kRequiresLoadedToIdleAfterAllocation)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = mOMX-&amp;gt;sendCommand(mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(LOADED_TO_IDLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = allocateBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQuirks &amp;amp; kRequiresLoadedToIdleAfterAllocation) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = mOMX-&amp;gt;sendCommand(mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(LOADED_TO_IDLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState != EXECUTING &amp;amp;&amp;amp; mState != &lt;span class=&quot;keyword&quot;&gt;ERROR&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAsyncCompletion.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mState == &lt;span class=&quot;keyword&quot;&gt;ERROR&lt;/span&gt; ? UNKNOWN_ERROR : OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;init&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;allocateBuffers&amp;#x6765;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;mOMX-&amp;gt;sendCommand&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x5E95;&amp;#x5C42;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;allocateBuffers&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; OMXCodec::allocateBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = allocateBuffersOnPort(kPortIndexInput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; allocateBuffersOnPort(kPortIndexOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;allocateBuffersOnPort&amp;#x4E2D;&amp;#x5206;&amp;#x522B;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x6307;&amp;#x5B9A;&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x7EDF;&amp;#x4E00;&amp;#x7BA1;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; OMXCodec::allocateBuffersOnPort(OMX_U32 portIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNativeWindow != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; portIndex == kPortIndexOutput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; allocateOutputBuffersFromNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mFlags &amp;amp; kStoreMetaDataInVideoBuffers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; portIndex == kPortIndexInput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_PARAM_PORTDEFINITIONTYPE def;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x83B7;&amp;#x53D6;&amp;#x53C2;&amp;#x6570;def&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x521D;&amp;#x59CB;&amp;#x4E0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    InitOMXParams(&amp;amp;def);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def.nPortIndex = portIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6307;&amp;#x5B9A;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;def&amp;#x53C2;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mOMX-&amp;gt;getParameter(mNode, OMX_IndexParamPortDefinition, &amp;amp;def, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(def));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CODEC_LOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;allocating %u buffers of size %u on %s port&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            def.nBufferCountActual, def.nBufferSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            portIndex == kPortIndexInput ? &lt;span class=&quot;string&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x4E3A;&amp;#x6307;&amp;#x5B9A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A;def.nBufferSize &amp;#x4E2A;&amp;#x6570;&amp;#x4E3A;def.nBufferCountActual&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x5206;&amp;#x914D;&amp;#x53C2;&amp;#x6570;&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x68C0;&amp;#x67E5;def.nBufferSize &amp;#xFF0C;def.nBufferCountActual &amp;#x662F;&amp;#x5426;&amp;#x5408;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (def.nBufferSize != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; def.nBufferCountActual &amp;gt; SIZE_MAX / def.nBufferSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x5206;&amp;#x914D;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A;totalSize&amp;#x7684;&amp;#x603B;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; totalSize = def.nBufferCountActual * def.nBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDealer[portIndex] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MemoryDealer(totalSize, &lt;span class=&quot;string&quot;&gt;&amp;quot;OMXCodec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (OMX_U32 i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; def.nBufferCountActual; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x603B;&amp;#x7F13;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E2D;&amp;#x5212;&amp;#x5206;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A; def.nBufferSize&amp;#x7684;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IMemory&amp;gt; mem = mDealer[portIndex]-&amp;gt;allocate(def.nBufferSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mSize = def.nBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IOMX::buffer_id buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; ((mQuirks &amp;amp; kRequiresAllocateBufferOnInputPorts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (mFlags &amp;amp; kUseSecureInputBuffers))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMXLivesLocally) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x524D;&amp;#x5C06;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x6E05;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mem.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E3A;&amp;#x8BE5;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, def.nBufferSize, &amp;amp;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;info.mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBufferWithBackup(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexOutput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; (mQuirks &amp;amp; kRequiresAllocateBufferOnOutputPorts)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMXLivesLocally) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x524D;&amp;#x5C06;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x6E05;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mem.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E3A;&amp;#x8BE5;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, def.nBufferSize, &amp;amp;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;info.mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBufferWithBackup(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;useBuffer(mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mem != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            info.mData = mem-&amp;gt;pointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mBuffer = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mStatus = OWNED_BY_US;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mMem = mem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mMediaBuffer = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5206;&amp;#x914D;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x4FE1;&amp;#x606F;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x7AEF;&amp;#x53E3;&amp;#x7F13;&amp;#x5B58;&amp;#x8868;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x4E00;&amp;#x7BA1;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPortBuffers[portIndex].push(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CODEC_LOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;allocated buffer %u on %s port&amp;quot;&lt;/span&gt;, buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             portIndex == kPortIndexInput ? &lt;span class=&quot;string&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexOutput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = mSource-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; delay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyEncoderDelay, &amp;amp;delay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; padding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyEncoderPadding, &amp;amp;padding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            padding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; numchannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delay + padding) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(kKeyChannelCount, &amp;amp;numchannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameSize = &lt;span class=&quot;function&quot;&gt;numchannels * &lt;span class=&quot;title&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int16_t)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSkipCutBuffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; prevbuffersize = mSkipCutBuffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prevbuffersize != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;Replacing SkipCutBuffer holding %zu bytes&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        prevbuffersize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSkipCutBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SkipCutBuffer(delay * frameSize, padding * frameSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexInput &amp;amp;&amp;amp; (mFlags &amp;amp; kUseSecureInputBuffers)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;MediaBuffer *&amp;gt; buffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; def.nBufferCountActual; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; BufferInfo &amp;amp;info = mPortBuffers[kPortIndexInput].itemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaBuffer *mbuf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaBuffer(info.mData, info.mSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffers.push(mbuf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;setBuffers(buffers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, OMX_U32&lt;/span&gt; port_index, size_t size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer_id *buffer, void **buffer_data) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return findInstance(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;)-&amp;gt;allocateBuffer&lt;/span&gt;(port_index, size, buffer, buffer_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;status_t&lt;/span&gt; OMXNodeInstance::allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_U32 portIndex, size_t size, OMX::&lt;span class=&quot;keyword&quot;&gt;buffer_id &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        void **&lt;span class=&quot;keyword&quot;&gt;buffer_data) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    Mutex:&lt;/span&gt;:Autolock autoLock(mLock)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BufferMeta &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer_meta &lt;/span&gt;= new &lt;span class=&quot;keyword&quot;&gt;BufferMeta(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    OMX_BUFFERHEADERTYPE *header&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = OMX_AllocateBuffer(mHandle, &amp;amp;header, portIndex, &lt;span class=&quot;keyword&quot;&gt;buffer_meta, &lt;/span&gt;size)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (err != OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CLOG_ERROR(allocateBuffer, err, &lt;span class=&quot;keyword&quot;&gt;BUFFER_FMT(portIndex, &lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;%zu@&amp;quot;&lt;/span&gt;, size))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delete &lt;span class=&quot;keyword&quot;&gt;buffer_meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;keyword&quot;&gt;buffer_meta &lt;/span&gt;= NULL&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *&lt;span class=&quot;keyword&quot;&gt;buffer &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return StatusFromOMXError(err)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(header-&amp;gt;pAppPrivate, &lt;span class=&quot;keyword&quot;&gt;buffer_meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    *&lt;span class=&quot;keyword&quot;&gt;buffer &lt;/span&gt;= makeBufferID(header)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;buffer_data &lt;/span&gt;= header-&amp;gt;pBuffer&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;addActiveBuffer(portIndex, &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;literal&quot;&gt;sp&lt;/span&gt;&amp;lt;GraphicBufferSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;bufferSource(getGraphicBufferSource());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;bufferSource &lt;/span&gt;!= NULL &amp;amp;&amp;amp; portIndex == kPortIndexInput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bufferSource-&amp;gt;addCodecBuffer(header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_BUFFER(allocateBuffer, NEW_BUFFER_FMT(*&lt;span class=&quot;keyword&quot;&gt;buffer, &lt;/span&gt;portIndex, &lt;span class=&quot;string&quot;&gt;&amp;quot;%zu@%p&amp;quot;&lt;/span&gt;, size, *&lt;span class=&quot;keyword&quot;&gt;buffer_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    return OK&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x5230;&amp;#x8FC7;&amp;#x6211;&amp;#x4EEC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Component&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;initPort&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7AEF;&amp;#x53E3;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x90A3;&amp;#x65F6;&amp;#x5019;&amp;#x8FD8;&amp;#x6CA1;&amp;#x4E3A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5185;&amp;#x5B58;&amp;#xFF0C;&amp;#x4EC5;&amp;#x4EC5;&amp;#x53EA;&amp;#x662F;&amp;#x53C2;&amp;#x6570;&amp;#x8BBE;&amp;#x7F6E;&amp;#x800C;&amp;#x5DF2;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;init&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5185;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x7A7A;&amp;#x95F4;&amp;#x5206;&amp;#x914D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5148;&amp;#x4ECE;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#x5212;&amp;#x5206;&amp;#x51FA;&amp;#x4E00;&amp;#x6574;&amp;#x5757;&amp;#x6240;&amp;#x9700;&amp;#x7684;&amp;#x603B;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7EC6;&amp;#x5206;&amp;#x540E;&amp;#x8C03;&amp;#x7528;addActiveBuffer&amp;#x5C06;&amp;#x5176;&amp;#x5206;&amp;#x914D;&amp;#x7ED9;&amp;#x67D0;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1A;&lt;br&gt;&amp;#x8001;&amp;#x529E;&amp;#x6CD5;&amp;#x4E0A;&amp;#x56FE;&amp;#x6765;&amp;#x8BF4;&amp;#x660E;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x914D;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/25.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;sendCommand&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::sendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, OMX_COMMANDTYPE&lt;/span&gt; cmd, OMX_S32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return findInstance(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;)-&amp;gt;sendCommand&lt;/span&gt;(cmd, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXNodeInstance *OMX::findInstance(node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;/span&gt;::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t index = mNodeIDToInstance.indexOfKey(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return&lt;/span&gt; index &lt;span class=&quot;tag&quot;&gt;&amp;lt; 0 ? NULL : mNodeIDToInstance.valueAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXNodeInstance::sendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_S32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;GraphicBufferSource&amp;gt;&amp;amp; bufferSource(getGraphicBufferSource());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; cmd == OMX_CommandStateSet) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (param == OMX_StateIdle) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x4ECE;Executing&amp;#x5230;Idle&amp;#xFF0C;ACodec&amp;#x7B49;&amp;#x5F85;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x518D;&amp;#x5411;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bufferSource-&amp;gt;omxIdle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (param == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Initiating transition from Idle/Executing -&amp;gt; Loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Buffers are about to be freed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bufferSource-&amp;gt;omxLoaded();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setGraphicBufferSource(&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *paramString =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cmd == OMX_CommandStateSet ? asString((OMX_STATETYPE)param) : portString(param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_STATE(sendCommand, &lt;span class=&quot;string&quot;&gt;&amp;quot;%s(%d), %s(%d)&amp;quot;&lt;/span&gt;, asString(cmd), cmd, paramString, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = OMX_SendCommand(mHandle, cmd, param, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_IF_ERROR(sendCommand, err, &lt;span class=&quot;string&quot;&gt;&amp;quot;%s(%d), %s(%d)&amp;quot;&lt;/span&gt;, asString(cmd), cmd, paramString, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; StatusFromOMXError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;OMXNodeInstance::sendCommand&amp;#x4E3B;&amp;#x8981;&amp;#x6709;&amp;#x4E24;&amp;#x9879;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x8C03;&amp;#x7528; bufferSource-&amp;gt;omxIdle();&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x4ECE;Executing&amp;#x5230;Idle&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x539F;&amp;#x5148;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0D;&amp;#x518D;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x5230;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8C03;&amp;#x7528;OMX_SendCommand&amp;#x7EE7;&amp;#x7EED;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;hardware/qcom/media/mm-core/inc/OMX_Core.h&amp;#x4E2D;&amp;#x627E;&amp;#x5230;OMX_SendCommand&amp;#x5B8F;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x5B83;&amp;#x8C03;&amp;#x7528;hComponent&amp;#x4E2D;&amp;#x7684;SendCommand&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;&amp;#x5904;&amp;#x7406;&amp;#x6D41;&amp;#x7A0B;&amp;#x8F6C;&amp;#x7ED9;&amp;#x5B83;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define OMX_SendCommand(                                    \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         hComponent,                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Cmd,                                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         nParam,                                            &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         pCmdData)                                          &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;((OMX_COMPONENTTYPE*)hComponent)&lt;/span&gt;-&amp;gt;&lt;/span&gt;SendCommand(         &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         hComponent,                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Cmd,                                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         nParam,                                            &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         pCmdData)                          &lt;span class=&quot;comment&quot;&gt;/* Macro End */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OMX_SendCommand(mHandle, cmd, param, NULL)&amp;#x8FDB;&amp;#x884C;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x4E4B;&amp;#x540E;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x5C06;cmd&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x4EE4;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;mHandle&amp;#xFF0C;&amp;#x8BA9;&amp;#x5B83;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x5FC5;&amp;#x987B;&amp;#x660E;&amp;#x786E;&amp;#x5230;&amp;#x5E95;mHandle&amp;#x6307;&amp;#x7684;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;OMXNodeInstance&amp;#x4E2D;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;mHandle&amp;#x662F;&amp;#x901A;&amp;#x8FC7;setHandle&amp;#x8FDB;&amp;#x884C;&amp;#x8D4B;&amp;#x503C;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; OMXNodeInstance&lt;span class=&quot;tag&quot;&gt;::setHandle&lt;/span&gt;(OMX&lt;span class=&quot;tag&quot;&gt;::node_id&lt;/span&gt; node_id, OMX_HANDLETYPE &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNodeID = node_id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_LIFE(allocateNode, &lt;span class=&quot;string&quot;&gt;&amp;quot;handle=%p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mHandle == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHandle = &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x800C;OMXNodeInstance::setHandle&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;OMX::allocateNode&amp;#x4E2D;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x800C;&amp;#x8FD9;&amp;#x4E2A;handle&amp;#x662F;&amp;#x901A;&amp;#x8FC7;mMaster-&amp;gt;makeComponentInstance&amp;#x4E2D;&amp;#x4F20;&amp;#x9012;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateNode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMXObserver&amp;gt; &amp;amp;observer, node_id *node) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = mMaster-&amp;gt;makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name, &amp;amp;OMXNodeInstance::kCallbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            instance, &amp;amp;handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance-&amp;gt;setHandle(*node, handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE OMXMaster::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;-&amp;gt;makeComponentInstance(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPluginByInstance.add(*component, &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SoftOMXPlugin::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_&lt;span class=&quot;built_in&quot;&gt;CALLBACKTYPE&lt;/span&gt; *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_CO&lt;span class=&quot;built_in&quot;&gt;MPONENTTYPE&lt;/span&gt; **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;SoftOMXComponent&amp;gt; codec =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (*createSoftOMXComponent)(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorInvalidComponentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android::&lt;span class=&quot;function&quot;&gt;SoftOMXComponent *&lt;span class=&quot;title&quot;&gt;createSoftOMXComponent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData, OMX_COMPONENTTYPE **component)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; android::SoftMP3(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Soft&lt;span class=&quot;built_in&quot;&gt;MP3&lt;/span&gt;::Soft&lt;span class=&quot;built_in&quot;&gt;MP3&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_&lt;span class=&quot;built_in&quot;&gt;CALLBACKTYPE&lt;/span&gt; *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_CO&lt;span class=&quot;built_in&quot;&gt;MPONENTTYPE&lt;/span&gt; **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SimpleSoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOutputPortSettingsChange(NONE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initPorts();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleSoftOMXComponent::SimpleSoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLooper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ALooper),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandler(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AHandlerReflector&amp;lt;SimpleSoftOMXComponent&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mState(OMX_StateLoaded),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetState(OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;setName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;start(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// runOnCallingThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// canCallJava&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mHandler&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5728;SimpleSoftOMXComponent&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x88AB;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&lt;br&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;SimpleSoftOMXComponent&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5B83;&amp;#x7684;SendCommand&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SimpleSoftOMXComponent&lt;span class=&quot;tag&quot;&gt;::sendCommand&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_U32 param, OMX_PTR &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt; == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatSendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;, mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;, cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorNone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; SimpleSoftOMXComponent::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; msgType = msg-&amp;gt;what();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;msgType = %d&amp;quot;&lt;/span&gt;, msgType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (msgType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatSendCommand:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; cmd, param;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;, &amp;amp;cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;, &amp;amp;param));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onSendCommand((OMX_COMMANDTYPE)cmd, (OMX_U32)param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;SimpleSoftOMXComponent:&lt;/span&gt;:onSendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_U32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (cmd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandStateSet:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onChangeState((OMX_STATETYPE)param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandPortEnable:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandPortDisable:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onPortEnable(param, cmd == OMX_CommandPortEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandFlush:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onPortFlush(param, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sendFlushComplete */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;        default:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TRESPASS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SimpleSoftOMXComponent::&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;ChangeState(OMX_STATETYPE &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // We shouldn&amp;apos;t be &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; transition already.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((int)mState, (int)mTargetState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch (mState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateLoaded:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((int)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;, (int)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateIdle:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; == OMX_StateLoaded || &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; == OMX_StateExecuting);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateExecuting:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((int)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;, (int)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &lt;span class=&quot;variable&quot;&gt;&amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortFlush(i, false /* sendFlushComplete */);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = OMX_StateIdle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify(OMX_EventCmdComplete, OMX_CommandStateSet, state, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TRESPASS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTargetState = state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    checkTransitions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SimpleSoftOMXComponent::checkTransitions() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != mTargetState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; transitionComplete = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)mTargetState, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; PortInfo &amp;amp;port = mPorts.itemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port.mDef.bEnabled == OMX_FALSE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port.mDef.bPopulated == OMX_FALSE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    transitionComplete = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTargetState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transitionComplete) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = mTargetState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onReset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify(OMX_EventCmdComplete, OMX_CommandStateSet, mState, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PortInfo *port = &amp;amp;mPorts.editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mTransition == PortInfo::DISABLING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Port %zu now disabled.&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mTransition = PortInfo::NONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notify(OMX_EventCmdComplete, OMX_CommandPortDisable, i, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortEnableCompleted(i, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* enabled */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mTransition == PortInfo::ENABLING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mDef.bPopulated == OMX_TRUE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Port %zu now enabled.&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mTransition = PortInfo::NONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mDef.bEnabled = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notify(OMX_EventCmdComplete, OMX_CommandPortEnable, i, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortEnableCompleted(i, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* enabled */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7ECF;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;&amp;#x5C42;&amp;#x5C42;&amp;#x8DDF;&amp;#x8E2A;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;OMX_SendCommand(mHandle, cmd, param, NULL)&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x5C06;idle&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x5E95;&amp;#x5C42;&amp;#x5E76;&amp;#x7981;&amp;#x6B62;&amp;#x5F80;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x8F93;&amp;#x5165;&amp;#x89E3;&amp;#x7801;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x81F3;&amp;#x6B64;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4E2A;&amp;#x5927;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6;&amp;#x6765;&amp;#x770B;&amp;#x5728;Prepare&amp;#x9636;&amp;#x6BB5;&amp;#x4E3B;&amp;#x8981;&amp;#x505A;&amp;#x7684;&amp;#x662F;&amp;#x6839;&amp;#x636E;&amp;#x5F85;&amp;#x64AD;&amp;#x653E;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x521B;&amp;#x5EFA;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5C06;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;idle&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;br&gt;&amp;#x8001;&amp;#x6837;&amp;#x5B50;&amp;#x4E0A;&amp;#x56FE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x7ED3;&amp;#x5C3E;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/26.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#x5417;&amp;#xFF1F;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5462;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x770B;&amp;#x5230;&amp;#x7684;&amp;#x53EA;&amp;#x662F;beginAsyncPrepare_l&amp;#x6700;&amp;#x540E;&amp;#x8FD8;&amp;#x6709;finishAsyncPrepare_l&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x901A;&amp;#x77E5;&amp;#x4E0A;&amp;#x5C42;prepare&amp;#x7ED3;&amp;#x675F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::finishAsyncPrepare_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsAsyncPrepare) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyListener_l(MEDIA_SET_VIDEO_SIZE, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyVideoSize_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyListener_l(MEDIA_PREPARED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareResult = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags((PREPARING|PREPARE_CANCELLED|PREPARING_CONNECTED), CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAsyncPrepareEvent = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPreparedCondition.broadcast();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTearDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareResult == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mExtractorFlags &amp;amp; MediaExtractor::CAN_SEEK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                seekTo_l(mAudioTearDownPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTearDownWasPlaying) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                modifyFlags(CACHE_UNDERRUN, CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                play_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTearDown = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;notifyListener_l(MEDIA_PREPARED);&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::notifyListener_l(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; msg, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext2) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mListener != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;amp;&amp;amp; !mAudioTearDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MediaPlayerBase&amp;gt; listener = mListener.promote();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            listener-&amp;gt;sendEvent(msg, ext1, ext2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5927;&amp;#x5BB6;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x5F20;&amp;#x56FE;&amp;#x5427;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x8FD9;&amp;#x5F20;&amp;#x56FE;&amp;#x4E0A;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x660E;&amp;#x663E;&amp;#x770B;&amp;#x51FA;&amp;#x6574;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x675F;&amp;#x70B9;&amp;#x4E3A;EventHandler&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/27.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x4E0A;&amp;#x5C42;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6CE8;&amp;#x518C;mOnPreparedListener&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x5219;&amp;#x8C03;&amp;#x7528;onPrepared&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;&amp;#x540E;&amp;#x7EED;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4EA4;&amp;#x7ED9;&amp;#x5F00;&amp;#x53D1;&amp;#x8005;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;MEDIA_PREPARED:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scanInternalSubtitleTracks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// send error message instead of crashing;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// send error message instead of inlining a call to onError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to avoid code duplication.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Message msg2 = obtainMessage(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                MEDIA_ERROR, MEDIA_ERROR_UNKNOWN, MEDIA_ERROR_UNSUPPORTED, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sendMessage(msg2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOnPreparedListener != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOnPreparedListener.onPrepared(mMediaPlayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[2]</title>
    <link href="http://yoursite.com/2016/07/31/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-1/"/>
    <id>http://yoursite.com/2016/07/31/Android-源码分析之基于Stagefright的MediaPlayer播放框架-1/</id>
    <published>2016-07-31T09:59:18.000Z</published>
    <updated>2016-08-05T23:55:00.000Z</updated>
    
    <content type="html">&lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;/h5&gt;&lt;h6 id=&quot;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;a href=&quot;#setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot; class=&quot;headerlink&quot; title=&quot;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;/a&gt;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/h6&gt;&lt;p&gt;setDataSource&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;Url&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;Content Provider&amp;#x4F5C;&amp;#x4E3A;&amp;#x83B7;&amp;#x53D6;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x5C06;&amp;#x6D41;&amp;#x7A0B;&amp;#x7B80;&amp;#x5355;&amp;#x5316;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Uri&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8FDB;&amp;#x884C;&amp;#x4F20;&amp;#x9012;&amp;#x3002;&amp;#x5206;&amp;#x6790;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, Uri uri)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, SecurityException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(context, uri, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5047;&amp;#x8BBE;&amp;#x8D70;&amp;#x7684;&amp;#x662F;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x5206;&amp;#x652F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setDataSource(Context context, &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri, &lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throws IOException, IllegalArgumentException, SecurityException,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IllegalStateException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; scheme = uri.getScheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ContentResolver.SCHEME_FILE.equals(scheme)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//1. &amp;#x5F53;uri&amp;#x4E3A;file&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setDataSource(uri.getPath());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ContentResolver.SCHEME_CONTENT.equals(scheme)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; Settings.AUTHORITY.equals(uri.getAuthority())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//2. &amp;#x5F53;uri&amp;#x4E3A;&amp;#x94C3;&amp;#x58F0;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Redirect ringtones to go directly to underlying provider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uri = RingtoneManager.getActualDefaultRingtoneUri(context,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                RingtoneManager.getDefaultType(uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (uri == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileNotFoundException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to resolve default ringtone&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetFileDescriptor fd = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//3. &amp;#x5982;&amp;#x679C;content&amp;#x4E3A;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ContentResolver resolver = context.getContentResolver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fd = resolver.openAssetFileDescriptor(uri, &lt;span class=&quot;string&quot;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd.getDeclaredLength() &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setDataSource(fd.getFileDescriptor());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setDataSource(fd.getFileDescriptor(), fd.getStartOffset(), fd.getDeclaredLength());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SecurityException | IOException ex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.w(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;Couldn&amp;apos;t open file on client side; trying server side: &amp;quot;&lt;/span&gt; + ex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fd.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5426;&amp;#x5219;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(uri.toString(), headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, SecurityException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(path, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setDataSource(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] keys, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] values)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri = &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt;.parse(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; scheme = uri.getScheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;.equals(scheme)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = uri.getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scheme != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// handle non-file sources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nativeSetDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaHTTPService.createHttpServiceBinderIfNecessary(path),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keys,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File file = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (file.exists()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FileInputStream &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FileDescriptor fd = &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;.getFD();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setDataSource(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSource failed.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// intentionally less than LONG_MAX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(fd, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0x7ffffffffffffff&lt;/span&gt;L);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _setDataSource(fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;setDataSource&amp;#x7684;&amp;#x5927;&amp;#x81F4;&amp;#x8DEF;&amp;#x5F84;&amp;#x56FE;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x770B;&amp;#x4E0D;&amp;#x6E05;&amp;#x695A;&amp;#x53EF;&amp;#x4EE5;&amp;#x70B9;&amp;#x51FB;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x518D;&amp;#x770B;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5C06;&amp;#x56FE;&amp;#x7247;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x540E;&amp;#x653E;&amp;#x5927;&amp;#x770B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5185;&amp;#x5BB9;&amp;#x592A;&amp;#x591A;&amp;#x6240;&amp;#x4EE5;&amp;#x753B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5BB9;&amp;#x7EB3;&amp;#x4E0D;&amp;#x4E0B;&amp;#x53EA;&amp;#x80FD;&amp;#x5C06;&amp;#x5176;&amp;#x7F29;&amp;#x5C0F;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x51C6;&amp;#x5907;&amp;#x8FDB;&amp;#x5165;JNI&amp;#x5C42;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;JNI&amp;#x90E8;&amp;#x5206;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;&lt;br&gt;android_media_MediaPlayer_setDataSourceFD&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;getMediaPlayer&amp;#x65B9;&amp;#x6CD5;&amp;#x83B7;&amp;#x53D6;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;fields.context&amp;#x4E0A;&amp;#x7684;native MediaPlayer&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;mp-&amp;gt;setDataSource(fd, offset, length)&amp;#x4E2D;&amp;#x7684;mp&amp;#x6307;&amp;#x7684;&amp;#x662F;native&amp;#x7684;MediaPlayer&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_setDataSourceFD&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jobject fileDescriptor, jlong offset, jlong length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd = jniGetFDFromFileDescriptor(env, fileDescriptor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSourceFD: fd %d&amp;quot;&lt;/span&gt;, fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;setDataSource(fd, offset, length),&lt;span class=&quot;string&quot;&gt;&amp;quot;java/io/IOException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSourceFD failed.&amp;quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot;&gt;&lt;a href=&quot;#&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot;&gt;&lt;/a&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&lt;/h6&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt; getMediaPlayer(JNIEnv* env, jobject thiz)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaPlayer* &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = (MediaPlayer*)env-&amp;gt;GetLongField(thiz, fields.context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt;(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;native mediaplayer&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;MediaPlayerService&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;create&amp;#x65B9;&amp;#x6CD5;&amp;#x901A;&amp;#x8FC7;MediaPlayerService::Client::Client&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;MediaPlayerService&amp;#x7684;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x8D4B;&amp;#x7ED9;player&amp;#x3002; &amp;#x56E0;&amp;#x6B64;player-&amp;gt;setDataSource(httpService, url, headers)))&amp;#x4E2D;&amp;#x7684;player&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&lt;br&gt;MediaPlayerService::Client&amp;#x3002;&lt;br&gt;@frameworks/av/media/libmedia/mediaplayer.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (url != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerService&amp;gt;&amp;amp; service(getMediaPlayerService());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;IMediaPlayer&amp;gt; player(service-&amp;gt;create(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, mAudioSessionId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((NO_ERROR != doSetRetransmitEndpoint(player)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (NO_ERROR != player-&amp;gt;setDataSource(httpService, url, headers))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                player.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = attachNewPlayer(player);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;Client&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#xFF1A;&lt;br&gt;@ frameworks/av/media/libmedia/IMediaDeathNotifier.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*static*/&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerService&amp;gt;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IMediaDeathNotifier::getMediaPlayerService()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock _l(sServiceLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sMediaPlayerService == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;ServiceManger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IServiceManager&amp;gt; sm = defaultServiceManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IBinder&amp;gt; binder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;MediaPlayerService&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            binder = sm-&amp;gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (binder != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usleep(&lt;span class=&quot;number&quot;&gt;500000&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 0.5 s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sDeathNotifier == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sDeathNotifier = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DeathNotifier();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x7ED1;&amp;#x5B9A;&amp;#x6B7B;&amp;#x4EA1;&amp;#x901A;&amp;#x77E5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binder-&amp;gt;linkToDeath(sDeathNotifier);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sMediaPlayerService = interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGE_IF(sMediaPlayerService == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;no media player service!?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sMediaPlayerService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;MediaPlayerService&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x5728;mediaserver&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F1A;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;@frameworks/av/media/libmediaplayerservice/MediaPlayerService.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaPlayer&amp;gt; MediaPlayerService::create(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerClient&amp;gt;&amp;amp; client,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; audioSessionId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid = IPCThreadState::self()-&amp;gt;getCallingPid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; connId = android_atomic_inc(&amp;amp;mNextConnId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;Client&amp;gt; c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Client(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, pid, connId, client, audioSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IPCThreadState::self()-&amp;gt;getCallingUid());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wp&amp;lt;Client&amp;gt; w = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mClients.add(w);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;new&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;Client&amp;#x5BF9;&amp;#x8C61;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mClients&amp;#x4E2D;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;Client&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6CA1;&amp;#x5565;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MediaPlayerService::Client::Client(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerService&amp;gt;&amp;amp; service, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; connId, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerClient&amp;gt;&amp;amp; client,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; audioSessionId, &lt;span class=&quot;keyword&quot;&gt;uid_t&lt;/span&gt; uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPid = pid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConnId = connId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mService = service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mClient = client;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLoop = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioSessionId = audioSessionId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mUID = uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRetransmitEndpointValid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioAttributes = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; CALLBACK_ANTAGONIZER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;create Antagonizer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAntagonizer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Antagonizer(notify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;MediaPlayerService::Client::setDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&lt;br&gt;MediaPlayerFactory::getPlayerType&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;player&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;&lt;br&gt;setDataSource_pre(playerType)&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;getPlayerType&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;player&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x518D;&amp;#x8C03;&amp;#x7528;&amp;#x6240;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;player&amp;#x7684;setDataSource&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x8FD9;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x4E00;&amp;#x6B65;&amp;#x4E00;&amp;#x6B65;&amp;#x8FDB;&amp;#x884C;&amp;#x6DF1;&amp;#x5165;&amp;#x5206;&amp;#x6790;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayerService::Client::setDataSource(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; stat sb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ret = fstat(fd, &amp;amp;sb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;fstat(%d) failed: %d, %s&amp;quot;&lt;/span&gt;, fd, ret, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x5927;&amp;#x4E8E;&amp;#x6587;&amp;#x4EF6;&amp;#x5927;&amp;#x5C0F;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5F97;&amp;#x4E0D;&amp;#x5BF9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset &amp;gt;= sb.st_size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;offset error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ::close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x52A0;&amp;#x4E0A;&amp;#x957F;&amp;#x5EA6;&amp;#x5927;&amp;#x4E8E;&amp;#x6574;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&amp;#x5219;&amp;#x8F93;&amp;#x51FA;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x6574;length&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset + length &amp;gt; sb.st_size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = sb.st_size - offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;calculated length = %lld&amp;quot;&lt;/span&gt;, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//get the file type of current play file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//there will create StagefrightPlayer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    player_type playerType = MediaPlayerFactory::getPlayerType(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,fd,offset,length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = setDataSource_pre(playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// now set data source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource_post(p, p-&amp;gt;setDataSource(fd, offset, length));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;getPlayerType&amp;#xFF0C;&amp;#x5B83;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;IMediaPlayer&amp;#x7C7B;&amp;#x578B;&amp;#x7684;client&amp;#x53C2;&amp;#x6570;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;url&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x800C;&amp;#x83B7;&amp;#x5F97;player&amp;#x7C7B;&amp;#x578B;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;GET_PLAYER_TYPE_IMPL&amp;#x5B8F;&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;player_type MediaPlayerFactory::getPlayerType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayer&amp;gt;&amp;amp; client,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* url) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GET_PLAYER_TYPE_IMPL(client, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;sFactoryMap&amp;#x662F;&amp;#x5305;&amp;#x542B;&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;Player&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#x7684;&amp;#x6570;&amp;#x7EC4;&amp;#xFF0C;&amp;#x5728;GET_PLAYER_TYPE_IMPL&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;sFactoryMap&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;IFactory&amp;#x7684;scoreFactory&amp;#x65B9;&amp;#x6CD5;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8BC4;&amp;#x4F30;&amp;#x627E;&amp;#x51FA;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;Player&amp;#x7C7B;&amp;#x578B;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define GET_PLAYER_TYPE_IMPL(a...)                      \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;Mutex&lt;/span&gt;::Autolock lock_(&amp;amp;sLock);                      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    player_type ret = STAGEFRIGHT_PLAYER;               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    float bestScore = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;;                              &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; sFactoryMap.size(); ++i) {   &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IFactory* v = sFactoryMap.valueAt(i);           &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float thisScore;                                &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(v != NULL);                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        thisScore = v-&amp;gt;scoreFactory(a, bestScore);      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (thisScore &amp;gt; bestScore) {                    &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret = sFactoryMap.keyAt(i);                 &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestScore = thisScore;                      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }                                           &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }                                                                                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; == bestScore) {                             &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = getDefaultPlayerType();                   &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }                                                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x83B7;&amp;#x5F97;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x7C7B;&amp;#x578B;&amp;#x540E;&amp;#x5728;setDataSource_pre&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;createPlayer&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;player&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService::Client::setDataSource_pre(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;player type = %d&amp;quot;&lt;/span&gt;, playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// create the right type of player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = createPlayer(playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!p-&amp;gt;hardwareOutput()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioOutput = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioOutput(mAudioSessionId, IPCThreadState::self()-&amp;gt;getCallingUid(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPid, mAudioAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;MediaPlayerInterface*&amp;gt;(p.get())-&amp;gt;setAudioSink(mAudioOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;&amp;#x2013;AudioOutput&amp;#xFF0C;&amp;#x5B83;&amp;#x8D1F;&amp;#x8D23;&amp;#x5C06;Buffer&amp;#x8F93;&amp;#x51FA;&amp;#x5230;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;start&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;MediaPlayerService::Client::createPlayer&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;MediaPlayerFactory&amp;#x8FD9;&amp;#x4E2A;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x4F20;&amp;#x8FDB;&amp;#x53BB;&amp;#x7684;playerType&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Player&amp;#xFF0C;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::Client&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::createPlayer&lt;/span&gt;(player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// determine if we have the right player type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = mPlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((p != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (p&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;playerType() != playerType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p = MediaPlayerFactory&lt;span class=&quot;tag&quot;&gt;::createPlayer&lt;/span&gt;(playerType, this, notify, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setUID(mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#x6211;&amp;#x4EEC;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x662F;STAGEFRIGHT_PLAYER&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;StagefrightPlayer.&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; sp&amp;lt;MediaPlayerBase&amp;gt; createPlayer(&lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* pid */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StagefrightPlayer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;StagefrightPlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D; new &amp;#x51FA;&amp;#x4E86;AwesomePlayer&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;StagefrightPlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;StagefrightPlayer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;function&quot;&gt;mPlayer&lt;/span&gt;(new AwesomePlayer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ALOGV&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;StagefrightPlayer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlayer-&amp;gt;&lt;span class=&quot;function&quot;&gt;setListener&lt;/span&gt;(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x5F53;&amp;#x65F6;&amp;#x662F;&amp;#x8FDE;&amp;#x540C;NuPlayer&amp;#x4E00;&amp;#x8D77;&amp;#x753B;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#x4E24;&amp;#x8005;&amp;#x8FD8;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5927;&amp;#x5BB6;&amp;#x6682;&amp;#x65F6;&amp;#x4E0D;&amp;#x60F3;&amp;#x4E86;&amp;#x89E3;Nuplayer&amp;#x53EF;&amp;#x4EE5;&amp;#x53EA;&amp;#x770B;&amp;#x4E00;&amp;#x8FB9;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;AwesomePlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;RegisterDefaultSniffers&amp;#x6CE8;&amp;#x518C;&amp;#x4E86;&amp;#x683C;&amp;#x5F0F;sniffer&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;AwesomeEvent&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;mClient.connect()&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AwesomePlayer::AwesomePlayer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mQueueStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mUIDValid(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTimeSource(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoRenderingStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoRendererIsPreview(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mMediaRenderingStartGeneration(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStartGeneration(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioPlayer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDisplayWidth(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDisplayHeight(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoScalingMode(NATIVE_WINDOW_SCALING_MODE_SCALE_TO_WINDOW),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFlags(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mExtractorFlags(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDecryptHandle(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLastVideoTimeUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTextDriver(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOffloadAudio(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioTearDown(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mClient.connect(), (status_t)OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSource::RegisterDefaultSniffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onVideoEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreamDoneEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onStreamDone);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreamDoneEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBufferingEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onBufferingUpdate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBufferingEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoLagEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onVideoLagUpdate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoLagEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCheckAudioStatusEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onCheckAudioStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioStatusEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTearDownEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;amp;AwesomePlayer::onAudioTearDownEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTearDownEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mClockEstimator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WindowedLinearFitEstimator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaybackSettings = AUDIO_PLAYBACK_RATE_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// static&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void DataSour&lt;span class=&quot;number&quot;&gt;ce::&lt;/span&gt;RegisterDefaultSniffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;number&quot;&gt;::A&lt;/span&gt;utolock autoLock(gSnifferMutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (gSniffersRegistered) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG4)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMatroska)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffOgg)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWAV)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffFLAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAMR)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2TS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMP3)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2PS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWVM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMidi)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char value[PROPERTY_VALUE_MAX]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (property_get(&amp;quot;drm.service.enabled&amp;quot;, value, NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; (!strcmp(value, &amp;quot;1&amp;quot;) || !strcasecmp(value, &amp;quot;true&amp;quot;))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RegisterSniffer_l(SniffDRM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gSniffersRegistered = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;OMXClient::connect&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5B83;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaPlayerService&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;getOMX&amp;#x83B7;&amp;#x53D6;new &amp;#x51FA;&amp;#x6765;&amp;#x7684;OMX&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x5728;OMX&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x6709;&amp;#x4E2A;mMaster&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x5B83;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;addVendorPlugin&amp;#x4EE5;&amp;#x53CA;addPlugin&amp;#x6765;&amp;#x52A0;&amp;#x8F7D;&amp;#x8F6F;&amp;#x4EF6;&amp;#x4EE5;&amp;#x53CA;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXClient&lt;span class=&quot;tag&quot;&gt;::connect&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IServiceManager&amp;gt; sm = defaultServiceManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IBinder&amp;gt; binder = sm&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IMediaPlayerService&amp;gt; service = interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOMX = service&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getOMX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;livesLocally(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* node */&lt;/span&gt;, getpid())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Using client-side OMX mux.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOMX = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; MuxOMX(mOMX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IOMX&amp;gt; MediaPlayerService::getOMX() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX.get() == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOMX = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mOMX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;OMX&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;::OMX&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;tag&quot;&gt;mMaster&lt;/span&gt;(new OMXMaster),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;mNodeCounter&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXMaster&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;OMXMaster&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;function&quot;&gt;mVendorLibHandle&lt;/span&gt;(NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addVendorPlugin&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addPlugin&lt;/span&gt;(new SoftOMXPlugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;VendorPlugin&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5B83;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;dlopen&amp;#x6253;&amp;#x5F00;libstagefrighthw.so&amp;#x52A8;&amp;#x6001;&amp;#x5E93;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x91CC;&amp;#x9762;&amp;#x7684;createOMXPlugin&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;OMXPluginBase&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;OMXMaster::addPlugin(OMXPluginBase *plugin)&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByComponentName&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void OMXMaster&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;addVendorPlugin&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addPlugin&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;libstagefrighthw.so&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXMaster::addPlugin(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *libname) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVendorLibHandle = dlopen(libname, RTLD_NOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; OMXPluginBase *(*CreateOMXPluginFunc)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CreateOMXPluginFunc createOMXPlugin =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (CreateOMXPluginFunc)dlsym(mVendorLibHandle, &lt;span class=&quot;string&quot;&gt;&amp;quot;createOMXPlugin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!createOMXPlugin)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        createOMXPlugin = (CreateOMXPluginFunc)dlsym(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mVendorLibHandle, &lt;span class=&quot;string&quot;&gt;&amp;quot;_ZN7android15createOMXPluginEv&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (createOMXPlugin) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addPlugin((*createOMXPlugin)());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;OMXMaster::addPlugin(OMXPluginBase *plugin)&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;enumerateComponents&amp;#x65B9;&amp;#x6CD5;&amp;#x5217;&amp;#x51FA;VentorPlugin&amp;#x6216;&amp;#x8005;SoftPlugin&amp;#x4E2D;&amp;#x7684;&amp;#x6240;&amp;#x6709;Components&amp;#xFF0C;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByComponentName&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXMaster::addPlugin(OMXPluginBase *plugin) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlugins.push_back(plugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_U32 index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; name[&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((err = plugin-&amp;gt;enumerateComponents(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    name, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(name), index++)) == OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;String8 &lt;span class=&quot;title&quot;&gt;name8&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(name)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPluginByComponentName.indexOfKey(name8) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;A component of name &amp;apos;%s&amp;apos; already exists, ignoring this one.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 name8.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPluginByComponentName.add(name8, plugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/11.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;Client&amp;#x90E8;&amp;#x5206;&amp;#x6839;&amp;#x636E;Uri&amp;#x7C7B;&amp;#x578B;&amp;#x627E;&amp;#x5230;&amp;#x5339;&amp;#x914D;&amp;#x7684;player&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;player&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4EE5;MP3&amp;#x683C;&amp;#x5F0F;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x7684;&amp;#x5C06;&amp;#x662F;StagefrightPlayer&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;new&amp;#x51FA;&amp;#x4E86;&amp;#x5E26;&amp;#x6709;AwesomeEvent&amp;#x7684;AwesomePlayer&amp;#xFF0C;&amp;#x5E76;&amp;#x6CE8;&amp;#x518C;&amp;#x4E86;&amp;#x683C;&amp;#x5F0F;sniffer&amp;#x4EE5;&amp;#x53CA;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&amp;#x540D;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x3002;&lt;/p&gt;
&lt;h6 id=&quot;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;a href=&quot;#&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;/a&gt;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/h6&gt;&lt;p&gt;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x52A0;&amp;#x8F7D;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x6DFB;&amp;#x52A0;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&amp;#x518D;&amp;#x56DE;&amp;#x5230;SetDataSource&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x4E0A;&amp;#x6765;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x5B8C;StagefrightPlayer&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;SetDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;mPlayer&amp;#x7684;SetDataSource&amp;#x3002;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;StagefrightPlayer&amp;#x521B;&amp;#x5EFA;&amp;#x6D41;&amp;#x7A0B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x77E5;&amp;#x9053;mPlayer&amp;#x662F;AwesomePlayer&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;AwesomePlayer&amp;#x7C7B;&amp;#x4E2D;&amp;#x7684;setDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;setDataSource(httpService, url, headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;AwesomePlayer&amp;#x7C7B;&amp;#x4E2D;setDataSource&amp;#xFF0C;&amp;#x5B83;&amp;#x7ECF;&amp;#x8FC7;&amp;#x5C42;&amp;#x5C42;&amp;#x8C03;&amp;#x7528;&amp;#x6700;&amp;#x7EC8;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;FileSource &amp;#x5BF9;&amp;#x8C61;&amp;#x8D4B;&amp;#x7ED9;mFileSource&amp;#x3002;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;MediaExtractor::Create&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;Extractor&amp;#x4ECE;FileSource&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x51FA;&amp;#x5982;&amp;#xFF0C;&amp;#x6BD4;&amp;#x7279;&amp;#x7387;&amp;#x7B49;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setDataSource_l(httpService, uri, headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reset_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;DataSource&amp;gt; dataSource = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileSource(fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = dataSource-&amp;gt;initCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileSource = dataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mFd = fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mURI = String8();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setDataSource_l(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::setDataSource_l(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;dataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaExtractor&amp;gt; extractor = MediaExtractor::Create(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (extractor-&amp;gt;getDrmFlag()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkDrmStatus(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource_l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(extractor)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;MediaExtractor&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;&amp;#x5404;&amp;#x4E2A;sniff&amp;#x65B9;&amp;#x6CD5;&amp;#x5224;&amp;#x65AD;&amp;#x51FA;&amp;#x5F53;&amp;#x524D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;mime&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;MediaExtractor&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6211;&amp;#x4EEC;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E3A;MP3&amp;#x7C7B;&amp;#x578B;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5C06;&amp;#x662F;MP3Extractor&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaExtractor&amp;gt; MediaExtractor::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const sp&amp;lt;DataSource&amp;gt; &amp;amp;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; confidence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;-&amp;gt;sniff(&amp;amp;tmp, &amp;amp;confidence, &amp;amp;meta)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;FAILED to autodetect media content.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mime = tmp.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Autodetected media content as &amp;apos;%s&amp;apos; with confidence %.2f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             mime, confidence);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bool isDrm = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// DRM MIME type syntax is &amp;quot;drm+type+original&amp;quot; where&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// type is &amp;quot;es_based&amp;quot; or &amp;quot;container_based&amp;quot; and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// original is the content&amp;apos;s cleartext MIME type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *originalMime = strchr(mime+&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;+&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (originalMime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// second + not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+es_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// DRMExtractor sets container metadata kKeyIsDRM to 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DRMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, originalMime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+container_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mime = originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isDrm = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaExtractor *ret = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/mp4&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG4Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MP3Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMRExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FLACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WAV)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WAVExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_OGG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OggExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MATROSKA)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatroskaExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2TS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2TSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WVM)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Return now.  WVExtractor should not have the DrmFlag set in the block below.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WVMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC_ADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2PS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2PSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MIDI)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MidiExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDrm) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6709;&amp;#x4E86;MP3Extractor&amp;#x4E4B;&amp;#x540E;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;Media&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x6587;&amp;#x4EF6;&amp;#x5173;&amp;#x952E;&amp;#x4FE1;&amp;#x606F;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x662F;extractor-&amp;gt;getTrack(i)&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6B4C;&amp;#x66F2;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;setAudioSource&amp;#x4EE5;&amp;#x53CA;setVideoSource&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x540E;&amp;#x7EED;&amp;#x5C06;&amp;#x4F1A;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4F5C;&amp;#x4E3A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x3002;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource_l(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaExtractor&amp;gt; &amp;amp;extractor) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Attempt to approximate overall stream bitrate by summing all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// tracks&amp;apos; individual bitrates, if not all of them advertise bitrate,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we have to fail.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; totalBitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExtractor = extractor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = extractor-&amp;gt;getTrackMetaData(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyBitRate, &amp;amp;bitrate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            totalBitRate = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        totalBitRate += bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; fileMeta = mExtractor-&amp;gt;getMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta-&amp;gt;findInt64(kKeyDuration, &amp;amp;duration)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDurationUs = duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBitrate = totalBitRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;mBitrate = %lld bits/sec&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mBitrate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mBitrate = mBitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mTracks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mAudioTrackIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mVideoTrackIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveAudio = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveVideo = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = extractor-&amp;gt;getTrackMetaData(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *_mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;_mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String8 mime = String8(_mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveVideo &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setVideoSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveVideo = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Set the presentation/display size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; displayWidth, displayHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = meta-&amp;gt;findInt32(kKeyDisplayWidth, &amp;amp;displayWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success = meta-&amp;gt;findInt32(kKeyDisplayHeight, &amp;amp;displayHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDisplayWidth = displayWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDisplayHeight = displayHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mVideoTrackIndex = mStats.mTracks.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mTracks.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TrackStat *stat =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mStats.mTracks.editItemAt(mStats.mVideoTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stat-&amp;gt;mMIME = mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setAudioSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveAudio = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mActiveAudioTrackIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mAudioTrackIndex = mStats.mTracks.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mTracks.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TrackStat *stat =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mStats.mTracks.editItemAt(mStats.mAudioTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stat-&amp;gt;mMIME = mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), MEDIA_MIMETYPE_AUDIO_VORBIS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;MetaData&amp;gt; fileMeta = extractor-&amp;gt;getMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; loop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;&amp;amp; fileMeta-&amp;gt;findInt32(kKeyAutoLoop, &amp;amp;loop) &amp;amp;&amp;amp; loop != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    modifyFlags(AUTO_LOOPING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), MEDIA_MIMETYPE_TEXT_3GPP)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            addTextSource_l(i, extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !haveVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWVMExtractor != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mWVMExtractor-&amp;gt;getError();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExtractorFlags = extractor-&amp;gt;flags();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::setAudioSource(sp&amp;lt;MediaSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MediaPlayerService::Client::setDataSource_post(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerBase&amp;gt;&amp;amp; p,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot; setDataSource&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;  error: %d&amp;quot;&lt;/span&gt;, mStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set the re-transmission endpoint if one was chosen.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRetransmitEndpointValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStatus = p-&amp;gt;setRetransmitEndpoint(&amp;amp;mRetransmitEndpoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus != NO_ERROR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;setRetransmitEndpoint error: %d&amp;quot;&lt;/span&gt;, mStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x8D34;&amp;#x4E2A;setDataSource&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#x56FE;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
</feed>
