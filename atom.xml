<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Edgar&#39;s Blog</title>
  <subtitle>等待执剑少年修炼归来！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-11T03:25:58.898Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Edgar</name>
    <email>tbfungeek@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>睡前叨叨 2016-08-11</title>
    <link href="http://yoursite.com/2016/08/11/%E7%9D%A1%E5%89%8D%E5%8F%A8%E5%8F%A8/"/>
    <id>http://yoursite.com/2016/08/11/睡前叨叨/</id>
    <published>2016-08-10T16:59:06.000Z</published>
    <updated>2016-08-11T03:25:58.898Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x4E52;&amp;#x4E53;&amp;#x7403;&amp;#x754C;&amp;#x7684;&amp;#x201C;&amp;#x85CF;&amp;#x7352;&amp;#x201D; &amp;#x79D1;&amp;#x795E;&amp;#xFF0C;&amp;#x5F20;&amp;#x7EE7;&amp;#x79D1;&amp;#xFF0C;&amp;#x5728;&amp;#x7761;&amp;#x68A6;&amp;#x4E2D;&amp;#x628A;&amp;#x5BF9;&amp;#x624B;&amp;#x7ED9;&amp;#x529E;&amp;#x4E86;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#xFF0C;&amp;#x611F;&amp;#x89C9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x60F3;&amp;#x8D62;&amp;#x7684;&amp;#x4EBA;&amp;#xFF0C;&amp;#x53EA;&amp;#x4F1A;&amp;#x8F93;&amp;#x7ED9;&amp;#x6BD4;&amp;#x4ED6;&amp;#x66F4;&amp;#x60F3;&amp;#x8D62;&amp;#x7684;&amp;#x4EBA;&amp;#x3002;&amp;#x606D;&amp;#x559C;&amp;#x79D1;&amp;#x795E;&amp;#xFF01;&amp;#xFF01;&amp;#xFF01;&amp;#xFF01;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x660E;&amp;#x5929;&amp;#x8981;&amp;#x5F00;&amp;#x59CB;&amp;#x6295;&amp;#x7B80;&amp;#x5386;&amp;#x627E;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x671F;&amp;#x95F4;&amp;#xFF0C;&amp;#x6709;&amp;#x4E2A;&amp;#x5C0F;&amp;#x5C0F;&amp;#x7684;&amp;#x76EE;&amp;#x6807;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x57F9;&amp;#x517B;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x624B;&amp;#x7ED8;&amp;#x7231;&amp;#x597D;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x9053;&amp;#x5177;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x4F1A;&amp;#x7EDF;&amp;#x4E00;&amp;#x4E0A;&amp;#x4F20;&amp;#x5206;&amp;#x4EAB;&amp;#x7ED9;&amp;#x5927;&amp;#x5BB6;&amp;#xFF0C;&amp;#x54CE;&amp;#x5440;&amp;#xFF0C;&amp;#x5C0F;&amp;#x7EC6;&amp;#x817F;&amp;#x9732;&amp;#x70B9;&amp;#x4E86;&amp;#xFF0C;&amp;#x5475;&amp;#x5475;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/11/&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6708;&amp;#x7684;&amp;#x7761;&amp;#x524D;&amp;#x65F6;&amp;#x95F4;&amp;#x5C31;&amp;#x4EA4;&amp;#x7ED9;&amp;#x5A1C;&amp;#x59D0;&amp;#x4E86;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x4E5F;&amp;#x4F1A;&amp;#x5199;&amp;#x4E00;&amp;#x4E9B;&amp;#x4E66;&amp;#x8BC4;&amp;#x4E4B;&amp;#x7C7B;&amp;#x7684;&amp;#xFF0C;&amp;#x770B;&amp;#x65F6;&amp;#x95F4;&amp;#x662F;&amp;#x5426;&amp;#x5141;&amp;#x8BB8;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/11/&amp;#x7761;&amp;#x524D;&amp;#x53E8;&amp;#x53E8;/22.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x56E0;&amp;#x4E3A;GitHub page&amp;#x5728;&amp;#x4E0D;&amp;#x7FFB;&amp;#x5899;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x4F1A;&amp;#x65F6;&amp;#x4E0D;&amp;#x65F6;&amp;#x5F97;&amp;#x8BBF;&amp;#x95EE;&amp;#x4E0D;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x51E0;&amp;#x5929;&amp;#x4E00;&amp;#x76F4;&amp;#x5728;&amp;#x627E;&amp;#x4E00;&amp;#x4E2A;&amp;#x56FD;&amp;#x5185;&amp;#x8F83;&amp;#x597D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x7F51;&amp;#x7AD9;&amp;#xFF0C;&amp;#x628A;&amp;#x8FD9;&amp;#x4E00;&amp;#x767E;&amp;#x591A;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x642C;&amp;#x8FC7;&amp;#x53BB;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E00;&amp;#x7C98;&amp;#x8D34;&amp;#x8FC7;&amp;#x53BB;&amp;#x683C;&amp;#x5F0F;&amp;#x90FD;&amp;#x4E71;&amp;#x4E86;&amp;#xFF0C;&amp;#x4E0D;&amp;#x597D;&amp;#x770B;&amp;#xFF0C;&amp;#x518D;&amp;#x8C03;&amp;#x683C;&amp;#x5F0F;&amp;#x9EBB;&amp;#x70E6;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&amp;#x5F00;&amp;#x6E90;&amp;#x4E2D;&amp;#x56FD;&amp;#x611F;&amp;#x89C9;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#xFF0C;&amp;#x7ED3;&amp;#x679C;&amp;#x6BCF;&amp;#x5929;&amp;#x53EA;&amp;#x80FD;&amp;#x4E0A;&amp;#x4F20;10&amp;#x7BC7;&amp;#xFF0C;&amp;#x90A3;&amp;#x6211;&amp;#x8FD9;&amp;#x8FB9;&amp;#x5168;&amp;#x642C;&amp;#x8FC7;&amp;#x53BB;&amp;#x8981;&amp;#x5DEE;&amp;#x4E0D;&amp;#x591A;&amp;#x534A;&amp;#x4E2A;&amp;#x6708;&amp;#xFF0C;&amp;#x5FC3;&amp;#x7D2F;&amp;#xFF0C;&amp;#x5C31;&amp;#x4E0D;&amp;#x642C;&amp;#x4E86;&amp;#xFF0C;&amp;#x65B9;&amp;#x6B63;&amp;#x89C9;&amp;#x5F97;&amp;#x8FD9;&amp;#x91CC;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x66F4;&amp;#x597D;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x51C0;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F1A;&amp;#x4E3A;&amp;#x4E86;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x800C;&amp;#x5199;&amp;#x535A;&amp;#x5BA2;&amp;#x3002;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x662F;&amp;#x4E3B;&amp;#x9898;&amp;#x968F;&amp;#x4FBF;&amp;#x6362;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#x3002;&amp;#x5F97;&amp;#x7761;&amp;#x4E86;&amp;#xFF0C;&amp;#x660E;&amp;#x5929;&amp;#x5F00;&amp;#x59CB;&amp;#x6295;&amp;#x7B80;&amp;#x5386;&amp;#x4E86;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x201C;&amp;#x5982;&amp;#x679C;&amp;#x60F3;&amp;#x8981;&amp;#x7684;&amp;#x8FD8;&amp;#x6BCF;&amp;#x6765;&amp;#xFF0C;&amp;#x5C31;&amp;#x6C38;&amp;#x8FDC;&amp;#x4E0D;&amp;#x8981;&amp;#x653E;&amp;#x5F03;&amp;#xFF0C;&amp;#x5E76;&amp;#x76F8;&amp;#x4FE1;&amp;#x8BE5;&amp;#x6765;&amp;#x7684;&amp;#x603B;&amp;#x4F1A;&amp;#x6765;&amp;#x201D;  &amp;#x2014; &amp;#x4E0D;&amp;#x77E5;&amp;#x9053;&amp;#x8C01;&amp;#x8BF4;&amp;#x7684;&amp;#xFF0C;&amp;#x6CA1;&amp;#x4EBA;&amp;#x8BA4;&amp;#x9886;&amp;#x5C31;&amp;#x5F53;&amp;#x6211;&amp;#x8BF4;&amp;#x7684;&amp;#x5427;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x4E52;&amp;#x4E53;&amp;#x7403;&amp;#x754C;&amp;#x7684;&amp;#x201C;&amp;#x85CF;&amp;#x7352;&amp;#x201D; &amp;#x79D1;&amp;#x795E;&amp;#xFF0C;&amp;#x5F20;&amp;#x7EE7;&amp;#
    
    </summary>
    
      <category term="叨叨系列" scheme="http://yoursite.com/categories/%E5%8F%A8%E5%8F%A8%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="叨叨系列" scheme="http://yoursite.com/tags/%E5%8F%A8%E5%8F%A8%E7%B3%BB%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之Zygote &amp;&amp; SystemServer</title>
    <link href="http://yoursite.com/2016/08/03/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90Zygote/"/>
    <id>http://yoursite.com/2016/08/03/Android-源码分析Zygote/</id>
    <published>2016-08-03T13:14:51.000Z</published>
    <updated>2016-08-05T15:54:53.846Z</updated>
    
    <content type="html">&lt;h4 id=&quot;Zygote&quot;&gt;&lt;a href=&quot;#Zygote&quot; class=&quot;headerlink&quot; title=&quot;Zygote&quot;&gt;&lt;/a&gt;Zygote&lt;/h4&gt;&lt;p&gt;&amp;#x6545;&amp;#x540D;&amp;#x601D;&amp;#x8BAE;&amp;#x5C31;&amp;#x662F;&amp;#x201C;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x201D;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#xFF0C;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x7684;&amp;#x7279;&amp;#x70B9;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x662F;&amp;#x65B0;&amp;#x751F;&amp;#x547D;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x53EF;&amp;#x4EE5;&amp;#x643A;&amp;#x5E26;&amp;#x4E00;&amp;#x4E9B;&amp;#x7236;&amp;#x8F88;&amp;#x7684;&amp;#x9057;&amp;#x4F20;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;Zygote&amp;#x5728;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x5C31;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x7684;&amp;#x53D7;&amp;#x7CBE;&amp;#x5375;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x4F1A;&amp;#x751F;&amp;#x6210;&amp;#x51FA;&amp;#x65B0;&amp;#x7684;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;Linux&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x7A0B;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x8C03;&amp;#x7528;fork&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;fork&amp;#x5F97;&amp;#x5230;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x6570;&amp;#x636E;&amp;#x662F;&amp;#x548C;&amp;#x7236;&amp;#x8F88;&amp;#x8FDB;&amp;#x7A0B;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x548C;&amp;#x7236;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E4B;&amp;#x95F4;&amp;#x5171;&amp;#x4EAB;&amp;#x7740;&amp;#x5185;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x3002;&amp;#x53EA;&amp;#x6709;&amp;#x5728;&amp;#x8C03;&amp;#x7528;exec&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x4F1A;&amp;#x7528;&amp;#x65B0;&amp;#x7684;&amp;#x53EF;&amp;#x6267;&amp;#x884C;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x66FF;&amp;#x6362;&amp;#x5F53;&amp;#x524D;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BB5;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x6BB5;&amp;#xFF0C;&amp;#x5806;&amp;#x6808;&amp;#x7B49;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5728;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;Zygote&amp;#x5728;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;Delvik&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x5C06;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x7C7B;&amp;#x5E93;&amp;#xFF0C;&amp;#x8D44;&amp;#x6E90;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5171;&amp;#x4EAB;&amp;#x5E93;&amp;#x52A0;&amp;#x8F7D;&amp;#x5230;&amp;#x5185;&amp;#x5B58;&amp;#xFF0C;&amp;#x5728;&amp;#x540E;&amp;#x7EED;Zygote fork&amp;#x51FA;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x540E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B50;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E5F;&amp;#x5C31;&amp;#x6709;&amp;#x4E86;&amp;#x4E0A;&amp;#x8FF0;&amp;#x8D44;&amp;#x6E90;&amp;#xFF0C;&amp;#x5C31;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x65B0;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E86;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x88C5;&amp;#x8F7D;APK&amp;#x4E2D;&amp;#x7684;&amp;#x5B57;&amp;#x8282;&amp;#x7801;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD0;&amp;#x884C;&amp;#x4E86;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x4F1A;&amp;#x5728;&amp;#x5F88;&amp;#x5927;&amp;#x7A0B;&amp;#x5EA6;&amp;#x4E0A;&amp;#x7F29;&amp;#x77ED;&amp;#x542F;&amp;#x52A8;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Zygote/11.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;SystemServer&quot;&gt;&lt;a href=&quot;#SystemServer&quot; class=&quot;headerlink&quot; title=&quot;SystemServer&quot;&gt;&lt;/a&gt;SystemServer&lt;/h4&gt;&lt;p&gt;&amp;#x4E00;&amp;#x822C;&amp;#x6211;&amp;#x5011;&amp;#x5728;&amp;#x5F00;&amp;#x53D1;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#x9700;&amp;#x8981;&amp;#x8FD0;&amp;#x884C;startService&amp;#xFF0C;&amp;#x6765;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5374;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;getSystemService()&amp;#x6765;&amp;#x83B7;&amp;#x5F97;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x5728;&amp;#x7CFB;&amp;#x7EDF;&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Zygote&amp;#x4F1A;&amp;#x6700;&amp;#x65E9;&amp;#x751F;&amp;#x6210;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;SystemServer&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FD0;&amp;#x884C;&amp;#x5728;Dalvik&amp;#x865A;&amp;#x62DF;&amp;#x673A;&amp;#x4E0A;&amp;#x7684;Java&amp;#x8FDB;&amp;#x7A0B;&amp;#x3002;&amp;#x4E0A;&amp;#x9762;&amp;#x8FD0;&amp;#x884C;&amp;#x7740;&amp;#x591A;&amp;#x79CD;&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x8BF4;&amp;#x8FD9;&amp;#x4E9B;&amp;#x670D;&amp;#x52A1;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x542F;&amp;#x52A8;&amp;#x597D;&amp;#x4E86;&amp;#x7684;&amp;#xFF0C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x65B0;&amp;#x542F;&amp;#x52A8;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;SystemServer&amp;#x4EE5;&amp;#x53CA;MediaServer&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x540E;&amp;#x8865;&amp;#x4E0A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x54CE;&amp;#xFF0C;&amp;#x53C8;&amp;#x6B20;&amp;#x4E86;&amp;#x4E00;&amp;#x5927;&amp;#x6BB5;&amp;#x6587;&amp;#x5B57;&amp;#xFF0C;&amp;#x54C8;&amp;#x54C8;&amp;#xFF0C;&amp;#x4E0D;&amp;#x8FC7;&amp;#x6211;&amp;#x559C;&amp;#x6B22;&amp;#x3002;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x56FE;&amp;#x4F30;&amp;#x8BA1;&amp;#x770B;&amp;#x5F97;&amp;#x66F4;&amp;#x6E05;&amp;#x695A;&amp;#x4E9B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Zygote/221.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Zygote&quot;&gt;&lt;a href=&quot;#Zygote&quot; class=&quot;headerlink&quot; title=&quot;Zygote&quot;&gt;&lt;/a&gt;Zygote&lt;/h4&gt;&lt;p&gt;&amp;#x6545;&amp;#x540D;&amp;#x601D;&amp;#x8BAE;&amp;#x5C31;&amp;#x662F;&amp;#x201
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析Android系统启动流程</title>
    <link href="http://yoursite.com/2016/08/03/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90Android%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/08/03/Android-源码分析Android系统启动流程/</id>
    <published>2016-08-03T12:44:51.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x7B49;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5206;&amp;#x6790;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;Init&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x6D41;&amp;#x7A0B;&lt;/li&gt;
&lt;li&gt;init.rc&amp;#x811A;&amp;#x672C;&amp;#x7684;&amp;#x5206;&amp;#x6790;&lt;/li&gt;
&lt;li&gt;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&lt;/li&gt;
&lt;li&gt;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6743;&amp;#x9650;&amp;#x7BA1;&amp;#x7406;&amp;#xFF0C;&amp;#x5C5E;&amp;#x6027;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5BF9;action&amp;#x7684;&amp;#x5F71;&amp;#x54CD;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/03/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x542F;&amp;#x52A8;&amp;#x6D41;&amp;#x7A0B;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x7B49;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5206;&amp;#x6790;&amp;#x4E0B;&amp;#x8FD9;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于NuPlayer的RTSP流媒体协议</title>
    <link href="http://yoursite.com/2016/08/02/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8ENuPlayer%E7%9A%84RTSP%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2016/08/02/Android-进阶之源码分析基于NuPlayer的RTSP流媒体协议/</id>
    <published>2016-08-02T14:58:12.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;h5 id=&quot;RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;RTSP &amp;#x662F;Real Time Streaming Protocol&amp;#xFF08;&amp;#x5B9E;&amp;#x65F6;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;&amp;#xFF09;&amp;#x7684;&amp;#x7B80;&amp;#x79F0;&amp;#x3002;RTSP&amp;#x63D0;&amp;#x4F9B;&amp;#x4E00;&amp;#x79CD;&amp;#x53EF;&amp;#x6269;&amp;#x5C55;&amp;#x7684;&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;&amp;#x4F7F;&amp;#x5F97;&amp;#x80FD;&amp;#x591F;&amp;#x63D0;&amp;#x4F9B;&amp;#x53EF;&amp;#x63A7;&amp;#x5236;&amp;#x7684;&amp;#xFF0C;&amp;#x6309;&amp;#x9700;&amp;#x4F20;&amp;#x8F93;&amp;#x5B9E;&amp;#x65F6;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;RTSP&amp;#x5BF9;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x8BF8;&amp;#x5982;&amp;#x6682;&amp;#x505C;&amp;#xFF0C;&amp;#x5FEB;&amp;#x8FDB;&amp;#x7B49;&amp;#x63A7;&amp;#x5236;&amp;#xFF0C;&amp;#x800C;&amp;#x5B83;&amp;#x672C;&amp;#x8EAB;&amp;#x5E76;&amp;#x4E0D;&amp;#x4F20;&amp;#x8F93;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;RTSP&amp;#x4F5C;&amp;#x7528;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x8FDC;&amp;#x7A0B;&amp;#x63A7;&amp;#x5236;&amp;#x3002;&amp;#x4F20;&amp;#x8F93;&amp;#x6570;&amp;#x636E;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4F20;&amp;#x8F93;&amp;#x5C42;&amp;#x7684;TCP&amp;#xFF0C;UDP&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;RTSP&amp;#x4E5F;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x57FA;&amp;#x4E8E; RTP&amp;#x4F20;&amp;#x8F93;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&quot;RTSP-&amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x6A21;&amp;#x578B;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&amp;#x5BA2;&amp;#x6237;&amp;#x673A;&amp;#x5728;&amp;#x5411;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;HTTP&amp;#x534F;&amp;#x8BAE;&amp;#x4ECE;WEB&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x6240;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description&amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5728;RTSP&amp;#x4E2D;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#xFF08;Presentation&amp;#xFF09;&amp;#x53CA;&amp;#x5176;&amp;#x6240;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x90FD;&amp;#x7531;&amp;#x4E00;&amp;#x4E2A;RTSP URL&amp;#x6807;&amp;#x8BC6;&amp;#x3002;&amp;#x6574;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#x53CA;&amp;#x5A92;&amp;#x4F53;&amp;#x7279;&amp;#x6027;&amp;#x90FD;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description&amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x8BE5;&amp;#x6587;&amp;#x4EF6;&amp;#x53EF;&amp;#x80FD;&amp;#x5305;&amp;#x62EC;&amp;#x5A92;&amp;#x4F53;&amp;#x7F16;&amp;#x7801;&amp;#x65B9;&amp;#x5F0F;&amp;#x3001;&amp;#x8BED;&amp;#x8A00;&amp;#x3001;RTSPURLs&amp;#x3001;&amp;#x76EE;&amp;#x6807;&amp;#x5730;&amp;#x5740;&amp;#x3001;&amp;#x7AEF;&amp;#x53E3;&amp;#x53CA;&amp;#x5176;&amp;#x5B83;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x7528;&amp;#x6237;&amp;#x5728;&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x67D0;&amp;#x4E2A;&amp;#x8FDE;&amp;#x7EED;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x7684;&amp;#x670D;&amp;#x52A1;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x9996;&amp;#x5148;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x5F97;&amp;#x8BE5;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x7684;&amp;#x6F14;&amp;#x793A;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF08;Presentation description &amp;#xFF09;&amp;#x6587;&amp;#x4EF6;&amp;#x4EE5;&amp;#x5F97;&amp;#x5230;&amp;#x5FC5;&amp;#x9700;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x5229;&amp;#x7528;&amp;#x8BE5;&amp;#x6587;&amp;#x4EF6;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x5B9A;&amp;#x4F4D;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5730;&amp;#x5740;&amp;#xFF08;&amp;#x5305;&amp;#x62EC;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5730;&amp;#x5740;&amp;#x548C;&amp;#x7AEF;&amp;#x53E3;&amp;#x53F7;&amp;#xFF09;&amp;#x53CA;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x65B9;&amp;#x5F0F;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;br&gt;&amp;#x5BA2;&amp;#x6237;&amp;#x673A;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#x5411;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8BF7;&amp;#x6C42;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x3002;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3A;&amp;#x8BE5;&amp;#x5BA2;&amp;#x6237;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x670D;&amp;#x52A1;&amp;#x6D41;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8FD0;&amp;#x884C;&amp;#x5B9E;&amp;#x65F6;&amp;#x6D41;&amp;#x63A7;&amp;#x5236;&amp;#x534F;&amp;#x8BAE;RTSP&amp;#xFF0C;&amp;#x4EE5;&amp;#x5BF9;&amp;#x8BE5;&amp;#x6D41;&amp;#x8FDB;&amp;#x884C;&amp;#x5404;&amp;#x79CD;VCR &amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x53F7;&amp;#x7684;&amp;#x4EA4;&amp;#x6362;&amp;#xFF0C;&amp;#x5982;&amp;#x64AD;&amp;#x653E;&amp;#x3001;&amp;#x6682;&amp;#x505C;&amp;#x3001;&amp;#x5FEB;&amp;#x8FDB;&amp;#x3001;&amp;#x5FEB;&amp;#x9000;&amp;#x7B49;&amp;#x3002;&amp;#x5F53;&amp;#x670D;&amp;#x52A1;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x63D0;&amp;#x51FA;&amp;#x62C6;&amp;#x7EBF;&amp;#xFF08;TEARDOWN&amp;#xFF09;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4F7F;&amp;#x7528; RTP&amp;#x534F;&amp;#x8BAE;&amp;#x5C06;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x7ED9;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x6570;&amp;#x636E;&amp;#x62B5;&amp;#x8FBE;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5373;&amp;#x53EF;&amp;#x64AD;&amp;#x653E;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&amp;#x5728;&amp;#x6D41;&amp;#x5F0F;&amp;#x4F20;&amp;#x8F93;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;RTP/RTCP&amp;#x548C;RTSP /TCP&amp;#x4E24;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x901A;&amp;#x4FE1;&amp;#x534F;&amp;#x8BAE;&amp;#x5728;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x548C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x95F4;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8054;&amp;#x7CFB;&amp;#x3002;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP-&amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP &amp;#x534F;&amp;#x8BAE;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x65B9;&amp;#x6CD5;   URI  RTSP&amp;#x7248;&amp;#x672C;   &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x5934; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;   LF   &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x4F53; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;   LF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x65B9;&amp;#x6CD5;&amp;#x5305;&amp;#x62EC;OPTION&amp;#x56DE;&amp;#x5E94;&amp;#x4E2D;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x547D;&amp;#x4EE4;,URI&amp;#x662F;&amp;#x63A5;&amp;#x53D7;&amp;#x65B9;&amp;#x7684;&amp;#x5730;&amp;#x5740;,&amp;#x4F8B;&amp;#x5982;&lt;br&gt;rtsp://192.168.20.136&lt;/p&gt;
&lt;p&gt;RTSP&amp;#x7248;&amp;#x672C;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x662F; RTSP/1.0.&amp;#x6BCF;&amp;#x884C;&amp;#x540E;&amp;#x9762;&amp;#x7684;CR LF&amp;#x8868;&amp;#x793A;&amp;#x56DE;&amp;#x8F66;&amp;#x6362;&amp;#x884C;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x63A5;&amp;#x53D7;&amp;#x7AEF;&amp;#x6709;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x5934;&amp;#x9700;&amp;#x8981;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;CR LF&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x56DE;&amp;#x5E94;&amp;#x6D88;&amp;#x606F;&amp;#x683C;&amp;#x5F0F;:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RTSP&amp;#x7248;&amp;#x672C;  &amp;#x72B6;&amp;#x6001;&amp;#x7801;  &amp;#x89E3;&amp;#x91CA; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x5934; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF  &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6D88;&amp;#x606F;&amp;#x4F53; &lt;span class=&quot;constant&quot;&gt;CR&lt;/span&gt;  LF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;RTSP&amp;#x7248;&amp;#x672C;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x662F;RTSP/1.0,&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x503C;,200&amp;#x8868;&amp;#x793A;&amp;#x6210;&amp;#x529F;,&amp;#x89E3;&amp;#x91CA;&amp;#x662F;&amp;#x4E0E;&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x672C;&amp;#x89E3;&amp;#x91CA;&amp;#x3002;    &lt;/p&gt;
&lt;h5 id=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP-&amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP-&amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP &amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;:&quot;&gt;&lt;/a&gt;&amp;#x7B80;&amp;#x5355;&amp;#x7684;RTSP &amp;#x4EA4;&amp;#x4E92;&amp;#x8FC7;&amp;#x7A0B;:&lt;/h5&gt;&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x4EE5;&amp;#x4E00;&amp;#x6B21;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x64AD;&amp;#x653E;&amp;#x4E3A;&amp;#x4F8B;&amp;#x4ECB;&amp;#x7ECD;&amp;#x6574;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x8F6C;&amp;#x6362;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&amp;#x5176;&amp;#x4E2D;C&amp;#x8868;&amp;#x793A;RTSP&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;,S&amp;#x8868;&amp;#x793A;RTSP&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;OPTION     request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BE2;&amp;#x95EE;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;OPTION     response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x4FE1;&amp;#x606F;&amp;#x4E2D;&amp;#x5305;&amp;#x62EC;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x7528;&amp;#x65B9;&amp;#x6CD5; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;DESCRIBE    request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8981;&amp;#x6C42;&amp;#x5F97;&amp;#x5230;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;DESCRIBE    response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;SDP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;SETUP       request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4F1A;&amp;#x8BDD;&amp;#x7684;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x4F20;&amp;#x8F93;&amp;#x6A21;&amp;#x5F0F;&amp;#x63D0;&amp;#x9192;&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4F1A;&amp;#x8BDD; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;SETUP       response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4F1A;&amp;#x8BDD;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#xFF0C;&amp;#x548C;&amp;#x4F1A;&amp;#x8BDD;&amp;#x76F8;&amp;#x5173;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;PLAY        request         &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x64AD;&amp;#x653E; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;PLAY        response       &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x56DE;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x4FE1;&amp;#x606F; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;                           &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C-&amp;gt;&lt;span class=&quot;string&quot;&gt;S:&lt;/span&gt;TEARDOWN    request        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BF7;&amp;#x6C42;&amp;#x5173;&amp;#x95ED;&amp;#x4F1A;&amp;#x8BDD; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;S-&amp;gt;&lt;span class=&quot;string&quot;&gt;C:&lt;/span&gt;TEARDOWN    response &lt;span class=&quot;comment&quot;&gt;//&amp;#x670D;&amp;#x52A1;&amp;#x7AEF;&amp;#x56DE;&amp;#x5E94;&amp;#x8BE5;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x4E2D;&amp;#x7B2C;SETUP&amp;#x548C;PLAY&amp;#x8FD9;&amp;#x4E24;&amp;#x90E8;&amp;#x662F;&amp;#x5FC5;&amp;#x9700;&amp;#x7684;&amp;#xFF0C;&lt;br&gt;OPTION &amp;#x6B65;&amp;#x9AA4;&amp;#x53EA;&amp;#x8981;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7EA6;&amp;#x5B9A;&amp;#x597D;&amp;#xFF0C;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x7528;&amp;#xFF0C;&amp;#x5219;option&amp;#x8BF7;&amp;#x6C42;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E0D;&amp;#x8981;&amp;#x3002;&lt;br&gt;&amp;#x5982;&amp;#x679C;&amp;#x6211;&amp;#x4EEC;&amp;#x6709;&amp;#x5176;&amp;#x4ED6;&amp;#x9014;&amp;#x5F84;&amp;#x5F97;&amp;#x5230;&amp;#x5A92;&amp;#x4F53;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x63CF;&amp;#x8FF0;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5219;&amp;#x6211;&amp;#x4EEC;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;RTSP&amp;#x4E2D;&amp;#x7684;DESCRIPTION&amp;#x8BF7;&amp;#x6C42;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&lt;br&gt;TEARDOWN&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x7CFB;&amp;#x7EDF;&amp;#x9700;&amp;#x6C42;&amp;#x7684;&amp;#x8BBE;&amp;#x8BA1;&amp;#x6765;&amp;#x51B3;&amp;#x5B9A;&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x547D;&amp;#x4EE4;&amp;#x8868;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTSP&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#xFF1A;&lt;/h5&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Status-Code =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;201&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Created&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Low on Storage Space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Multiple Choices&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;301&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ;				Moved Permanently&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Moved Temporarily&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;303&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				See Other&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;304&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Modified&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;305&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Use Proxy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Bad Request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unauthorized&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;402&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Payment Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;403&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Forbidden&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;405&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Method Not Allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;406&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Acceptable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;407&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Proxy Authentication Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;408&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request Time-out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;410&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Gone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;411&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Length Required&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;412&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Precondition Failed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;413&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request Entity Too Large&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;414&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Request-URI Too Large&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;415&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unsupported Media Type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;451&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Parameter Not Understood&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;452&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Conference Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;453&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Enough Bandwidth&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;454&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Session Not Found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;455&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Method Not Valid in This State&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;456&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Header Field Not Valid for Resource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;457&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Invalid Range&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;458&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Parameter Is Read-Only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;459&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ;				Aggregate operation not allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;460&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Only aggregate operation allowed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;461&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Unsupported transport&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;462&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Destination unreachable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Internal Server Error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;501&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Not Implemented&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;502&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Bad Gateway&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;503&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Service Unavailable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;504&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Gateway Time-out&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;505&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				RTSP Version not supported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;| &amp;quot;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;551&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot; ; 				Option not supported&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;SDP&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;/h5&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;v=&lt;span class=&quot;variable&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;                            (&amp;#x534F;&amp;#x8BAE;&amp;#x7248;&amp;#x672C;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;o=&lt;span class=&quot;variable&quot;&gt;&amp;lt;username&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;session id&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;network type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address&amp;gt;&lt;/span&gt;                              &amp;#xFF08;&amp;#x6240;&amp;#x6709;&amp;#x8005;/&amp;#x521B;&amp;#x5EFA;&amp;#x8005;&amp;#x548C;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s=&lt;span class=&quot;variable&quot;&gt;&amp;lt;session name&amp;gt;&lt;/span&gt;                       &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x540D;&amp;#x79F0;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i=&lt;span class=&quot;variable&quot;&gt;&amp;lt;session description&amp;gt;&lt;/span&gt;                &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;u=&lt;span class=&quot;variable&quot;&gt;&amp;lt;URI&amp;gt;&lt;/span&gt;                                &amp;#xFF08;URI &amp;#x63CF;&amp;#x8FF0;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&lt;span class=&quot;variable&quot;&gt;&amp;lt;email address&amp;gt;&lt;/span&gt;                      &amp;#xFF08;Email &amp;#x5730;&amp;#x5740;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p=&lt;span class=&quot;variable&quot;&gt;&amp;lt;phone number&amp;gt;&lt;/span&gt;                       &amp;#xFF08;&amp;#x7535;&amp;#x8BDD;&amp;#x53F7;&amp;#x7801;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c=&lt;span class=&quot;variable&quot;&gt;&amp;lt;network type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;address type&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;connection address&amp;gt;&lt;/span&gt;   &amp;#xFF08;&amp;#x8FDE;&amp;#x63A5;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=&lt;span class=&quot;variable&quot;&gt;&amp;lt;modifier&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;bandwidth-value&amp;gt;&lt;/span&gt;         &amp;#xFF08;&amp;#x5E26;&amp;#x5BBD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t=&lt;span class=&quot;variable&quot;&gt;&amp;lt;start time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;stop time&amp;gt;&lt;/span&gt;             &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6D3B;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r=&lt;span class=&quot;variable&quot;&gt;&amp;lt;repeat interval&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;active duration&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;list of offsets from start-time&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        &amp;#xFF08;0&amp;#x6216;&amp;#x591A;&amp;#x6B21;&amp;#x91CD;&amp;#x590D;&amp;#x6B21;&amp;#x6570;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;z=&lt;span class=&quot;variable&quot;&gt;&amp;lt;adjustment time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;offset&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;adjustment time&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;offset&amp;gt;&lt;/span&gt;&amp;#xFF08;&amp;#x65F6;&amp;#x95F4;&amp;#x533A;&amp;#x57DF;&amp;#x8C03;&amp;#x6574;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k=&lt;span class=&quot;variable&quot;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;encryption key&amp;gt;&lt;/span&gt;             &amp;#xFF08;&amp;#x52A0;&amp;#x5BC6;&amp;#x5BC6;&amp;#x94A5;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=&lt;span class=&quot;variable&quot;&gt;&amp;lt;attribute&amp;gt;&lt;/span&gt;:&lt;span class=&quot;variable&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;                   &amp;#xFF08;0 &amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5C5E;&amp;#x6027;&amp;#x884C;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m=&lt;span class=&quot;variable&quot;&gt;&amp;lt;media&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;port&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;transport&amp;gt;&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;&amp;lt;fmt list&amp;gt;&lt;/span&gt; &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x540D;&amp;#x79F0;&amp;#x548C;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x65F6;&amp;#x95F4;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF1A; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t = &amp;#xFF08;&amp;#x4F1A;&amp;#x8BDD;&amp;#x6D3B;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;r = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;0&amp;#x6216;&amp;#x591A;&amp;#x6B21;&amp;#x91CD;&amp;#x590D;&amp;#x6B21;&amp;#x6570;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x5A92;&amp;#x4F53;&amp;#x63CF;&amp;#x8FF0;&amp;#xFF1A; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;m = &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x540D;&amp;#x79F0;&amp;#x548C;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;i = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x5A92;&amp;#x4F53;&amp;#x6807;&amp;#x9898;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x8FDE;&amp;#x63A5;&amp;#x4FE1;&amp;#x606F; &amp;#x2014; &amp;#x5982;&amp;#x679C;&amp;#x5305;&amp;#x542B;&amp;#x5728;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5C42;&amp;#x5219;&amp;#x8BE5;&amp;#x5B57;&amp;#x6BB5;&amp;#x53EF;&amp;#x9009;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x5E26;&amp;#x5BBD;&amp;#x4FE1;&amp;#x606F;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;k = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;&amp;#x52A0;&amp;#x5BC6;&amp;#x5BC6;&amp;#x94A5;&amp;#xFF09; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a = &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &amp;#xFF08;0 &amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x5A92;&amp;#x4F53;&amp;#x5C5E;&amp;#x6027;&amp;#x884C;&amp;#xFF09;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;RTP&amp;#x534F;&amp;#x8BAE;&amp;#xFF1A;&lt;/h5&gt;&lt;p&gt;&amp;#x5B9E;&amp;#x65F6;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#xFF08;Real-time Transport Protocol&amp;#xFF0C;RTP&amp;#xFF09;&amp;#x662F;&amp;#x7528;&amp;#x6765;&amp;#x5728;&amp;#x5355;&amp;#x64AD;&amp;#x6216;&amp;#x8005;&amp;#x591A;&amp;#x64AD;&amp;#x7684;&amp;#x60C5;&amp;#x5883;&amp;#x4E2D;&amp;#x4F20;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#x3002;&amp;#x901A;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;UDP&amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#xFF0C;&amp;#x4E5F;&amp;#x4E0D;&amp;#x6392;&amp;#x9664;&amp;#x4F7F;&amp;#x7528;TCP&amp;#x6216;&amp;#x8005;ATM&amp;#x7B49;&amp;#x5176;&amp;#x5B83;&amp;#x534F;&amp;#x8BAE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5B83;&amp;#x7684;&amp;#x8F7D;&amp;#x4F53;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;RTP &amp;#x534F;&amp;#x8BAE;&amp;#x7531;&amp;#x4E24;&amp;#x4E2A;&amp;#x5BC6;&amp;#x5207;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x7EC4;&amp;#x6210;&amp;#xFF1A;RTP&amp;#x6570;&amp;#x636E;&amp;#x534F;&amp;#x8BAE;&amp;#x548C;RTP&amp;#x63A7;&amp;#x5236;&amp;#x534F;&amp;#x8BAE;&amp;#xFF08;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#xFF09;&amp;#x3002;&lt;br&gt;RTP&amp;#x4E3A;Internet&amp;#x4E0A;&amp;#x7AEF;&amp;#x5230;&amp;#x7AEF;&amp;#x7684;&amp;#x5B9E;&amp;#x65F6;&amp;#x4F20;&amp;#x8F93;&amp;#x63D0;&amp;#x4F9B;&amp;#x65F6;&amp;#x95F4;&amp;#x4FE1;&amp;#x606F;&amp;#x548C;&amp;#x6D41;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x4F46;&amp;#x5B83;&amp;#x5E76;&amp;#x4E0D;&amp;#x4FDD;&amp;#x8BC1;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#xFF0C;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#x7531;RTCP&amp;#x6765;&amp;#x63D0;&amp;#x4F9B;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x8FDB;&amp;#x884C;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x8F93;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x8981;RTP&amp;#x7684;&amp;#x4F1A;&amp;#x8BDD;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4E00;&amp;#x4E2A;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x65F6;&amp;#xFF0C;&amp;#x5E94;&amp;#x7528;&amp;#x7A0B;&amp;#x5E8F;&amp;#x5C06;&amp;#x786E;&amp;#x5B9A;&amp;#x4E00;&amp;#x5BF9;&amp;#x76EE;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#x3002;&amp;#x76EE;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#x7531;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x5730;&amp;#x5740;&amp;#x548C;&amp;#x4E00;&amp;#x5BF9;&amp;#x7AEF;&amp;#x53E3;&amp;#x7EC4;&amp;#x6210;&amp;#xFF0C;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1A;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED9;RTP&amp;#x5305;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED9;RTCP&amp;#x5305;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;RTP&amp;#x548C;RTCP&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x662F;&amp;#x5206;&amp;#x5F00;&amp;#x4F20;&amp;#x8F93;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x5F97;RTP/RTCP&amp;#x6570;&amp;#x636E;&amp;#x80FD;&amp;#x591F;&amp;#x6B63;&amp;#x786E;&amp;#x53D1;&amp;#x9001;&amp;#x3002;&amp;#x5176;&amp;#x4E2D;RTP&amp;#x6570;&amp;#x636E;&amp;#x53D1;&amp;#x5411;&amp;#x5076;&amp;#x6570;&amp;#x7684;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x800C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x53F7;RTCP&amp;#x6570;&amp;#x636E;&amp;#x53D1;&amp;#x5411;&amp;#x76F8;&amp;#x90BB;&amp;#x7684;&amp;#x5947;&amp;#x6570;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x6784;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x3002;&lt;br&gt;&amp;#x5F53;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x4ECE;&amp;#x4E0A;&amp;#x5C42;&amp;#x63A5;&amp;#x6536;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x4FE1;&amp;#x606F;&amp;#x7801;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C01;&amp;#x88C5;&amp;#x6210;RTP&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#xFF1B;RTCP&amp;#x4ECE;&amp;#x4E0A;&amp;#x5C42;&amp;#x63A5;&amp;#x6536;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5C01;&amp;#x88C5;&amp;#x6210;RTCP&amp;#x63A7;&amp;#x5236;&amp;#x5305;&amp;#x3002;RTP&amp;#x5C06;RTP &amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x53D1;&amp;#x5F80;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x4E2D;&amp;#x5076;&amp;#x6570;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1B;RTCP&amp;#x5C06;RTCP&amp;#x63A7;&amp;#x5236;&amp;#x5305;&amp;#x53D1;&amp;#x5F80;UDP&amp;#x7AEF;&amp;#x53E3;&amp;#x5BF9;&amp;#x4E2D;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x7AEF;&amp;#x53E3;&amp;#x3002;&lt;br&gt;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x4E00;&amp;#x6B21;&amp;#x4F1A;&amp;#x8BAE;&amp;#x4E2D;&amp;#x540C;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x4F1A;&amp;#x8BAE;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E24;&amp;#x79CD;&amp;#x5A92;&amp;#x4F53;&amp;#x5C06;&amp;#x5206;&amp;#x522B;&amp;#x5728;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x4E2D;&amp;#x4F20;&amp;#x9001;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x4F7F;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x5730;&amp;#x5740;&amp;#xFF08;IP&amp;#x5730;&amp;#x5740;&amp;#xFF0B;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF09;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x6237;&amp;#x540C;&amp;#x65F6;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#xFF0C;&amp;#x5219;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8BDD;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;RTCP&amp;#x5305;&amp;#x90FD;&amp;#x4F7F;&amp;#x7528;&amp;#x89C4;&amp;#x8303;&amp;#x5316;&amp;#x540D;&amp;#x5B57;CNAME&amp;#xFF08;Canonical Name&amp;#xFF09;&amp;#x3002;&amp;#x4E0E;&amp;#x4F1A;&amp;#x8005;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x7684;CNAME&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x76F8;&amp;#x5173;&amp;#x8054;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x7684;&amp;#x8BA1;&amp;#x65F6;&amp;#x4FE1;&amp;#x606F;(Network time protocol)&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&lt;br&gt;&amp;#x5728;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x4E2D;&amp;#x8FD8;&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x3002;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x548C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x90FD;&amp;#x662F;RTP&amp;#x7EA7;&amp;#x7684;&amp;#x4E2D;&amp;#x7EE7;&amp;#x7CFB;&amp;#x7EDF;&amp;#x3002;&lt;br&gt;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x60C5;&amp;#x666F;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;Internet&amp;#x4E0A;&amp;#x4E3E;&amp;#x884C;&amp;#x89C6;&amp;#x9891;&amp;#x4F1A;&amp;#x8BAE;&amp;#x65F6;&amp;#xFF0C;&amp;#x53EF;&amp;#x80FD;&amp;#x6709;&amp;#x5C11;&amp;#x6570;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x901A;&amp;#x8FC7;&amp;#x4F4E;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x4E0E;&amp;#x4F7F;&amp;#x7528;&amp;#x9AD8;&amp;#x901F;&amp;#x7F51;&amp;#x7EDC;&amp;#x7684;&amp;#x591A;&amp;#x6570;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x76F8;&amp;#x8FDE;&amp;#x63A5;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x4E0D;&amp;#x5F3A;&amp;#x5236;&amp;#x6240;&amp;#x6709;&amp;#x4F1A;&amp;#x8BAE;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x90FD;&amp;#x4F7F;&amp;#x7528;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x548C;&amp;#x4F4E;&amp;#x8D28;&amp;#x91CF;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#xFF0C;RTP&amp;#x5141;&amp;#x8BB8;&amp;#x5728;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x533A;&amp;#x57DF;&amp;#x9644;&amp;#x8FD1;&amp;#x4F7F;&amp;#x7528;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;RTP&amp;#x7EA7;&amp;#x4E2D;&amp;#x7EE7;&amp;#x5668;&amp;#x3002;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4ECE;&amp;#x4E00;&amp;#x4E2A;&amp;#x6216;&amp;#x591A;&amp;#x4E2A;&amp;#x4FE1;&amp;#x6E90;&amp;#x63A5;&amp;#x6536;RTP&amp;#x62A5;&amp;#x6587;&amp;#xFF0C;&amp;#x5BF9;&amp;#x5230;&amp;#x8FBE;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x62A5;&amp;#x6587;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x65B0;&amp;#x540C;&amp;#x6B65;&amp;#x548C;&amp;#x91CD;&amp;#x65B0;&amp;#x7EC4;&amp;#x5408;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x91CD;&amp;#x7EC4;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6D41;&amp;#x88AB;&amp;#x6DF7;&amp;#x5408;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x7F16;&amp;#x7801;&amp;#x8F6C;&amp;#x5316;&amp;#x4E3A;&amp;#x5728;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0A;&amp;#x53EF;&amp;#x7528;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x4F4E;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x5411;&amp;#x4F4E;&amp;#x5E26;&amp;#x5BBD;&amp;#x533A;&amp;#x57DF;&amp;#x8F6C;&amp;#x53D1;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x5BF9;&amp;#x591A;&amp;#x4E2A;&amp;#x8F93;&amp;#x5165;&amp;#x4FE1;&amp;#x6E90;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x4E00;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5728;&amp;#x591A;&amp;#x4E2A;&amp;#x5A92;&amp;#x4F53;&amp;#x6D41;&amp;#x4E4B;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9A;&amp;#x65F6;&amp;#x8C03;&amp;#x6574;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x5B83;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x5B9A;&amp;#x65F6;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x6240;&amp;#x6709;&amp;#x4ECE;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x8F93;&amp;#x51FA;&amp;#x7684;&amp;#x62A5;&amp;#x6587;&amp;#x90FD;&amp;#x628A;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x6E90;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x4FDD;&amp;#x8BC1;&amp;#x63A5;&amp;#x6536;&amp;#x8005;&amp;#x80FD;&amp;#x591F;&amp;#x6B63;&amp;#x786E;&amp;#x8BC6;&amp;#x522B;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5904;&amp;#x7406;&amp;#x524D;&amp;#x7684;&amp;#x539F;&amp;#x59CB;&amp;#x62A5;&amp;#x6587;&amp;#x53D1;&amp;#x9001;&amp;#x8005;&amp;#xFF0C;&amp;#x6DF7;&amp;#x5408;&amp;#x5668;&amp;#x5728;RTP&amp;#x62A5;&amp;#x5934;&amp;#x4E2D;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;CSRC&amp;#x6807;&amp;#x8BC6;&amp;#x7B26;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x4EE5;&amp;#x6807;&amp;#x8BC6;&amp;#x90A3;&amp;#x4E9B;&amp;#x4EA7;&amp;#x751F;&amp;#x6DF7;&amp;#x548C;&amp;#x62A5;&amp;#x6587;&amp;#x7684;&amp;#x539F;&amp;#x59CB;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x6E90;&amp;#x3002;&lt;br&gt;&amp;#x7FFB;&amp;#x8BD1;&amp;#x5668;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x60C5;&amp;#x666F;&lt;br&gt;&amp;#x5728;Internet&amp;#x73AF;&amp;#x5883;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E9B;&amp;#x4F1A;&amp;#x8BAE;&amp;#x7684;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x53EF;&amp;#x80FD;&amp;#x88AB;&amp;#x9694;&amp;#x79BB;&amp;#x5728;&amp;#x5E94;&amp;#x7528;&amp;#x7EA7;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x7684;&amp;#x5916;&amp;#x9762;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x52A0;&amp;#x8005;&amp;#x88AB;&amp;#x7981;&amp;#x6B62;&amp;#x76F4;&amp;#x63A5;&amp;#x4F7F;&amp;#x7528;IP&amp;#x7EC4;&amp;#x64AD;&amp;#x5730;&amp;#x5740;&amp;#x8FDB;&amp;#x884C;&amp;#x8BBF;&amp;#x95EE;&amp;#xFF0C;&amp;#x867D;&amp;#x7136;&amp;#x4ED6;&amp;#x4EEC;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x9AD8;&amp;#x901F;&amp;#x94FE;&amp;#x8DEF;&amp;#x8FDE;&amp;#x63A5;&amp;#x7684;&amp;#x3002;&amp;#x5728;&amp;#x8FD9;&amp;#x4E9B;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;RTP&amp;#x5141;&amp;#x8BB8;&amp;#x4F7F;&amp;#x7528;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x4F5C;&amp;#x4E3A;RTP&amp;#x7EA7;&amp;#x4E2D;&amp;#x7EE7;&amp;#x5668;&amp;#x3002;&amp;#x5728;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E24;&amp;#x7AEF;&amp;#x5206;&amp;#x522B;&amp;#x5B89;&amp;#x88C5;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E4B;&amp;#x5916;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x8FC7;&amp;#x6EE4;&amp;#x6240;&amp;#x6709;&amp;#x63A5;&amp;#x6536;&amp;#x5230;&amp;#x7684;&amp;#x7EC4;&amp;#x64AD;&amp;#x62A5;&amp;#x6587;&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x4E00;&amp;#x6761;&amp;#x5B89;&amp;#x5168;&amp;#x7684;&amp;#x8FDE;&amp;#x63A5;&amp;#x4F20;&amp;#x9001;&amp;#x7ED9;&amp;#x9632;&amp;#x706B;&amp;#x5899;&amp;#x4E4B;&amp;#x5185;&amp;#x7684;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#xFF0C;&amp;#x5185;&amp;#x90E8;&amp;#x8F6C;&amp;#x6362;&amp;#x5668;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7EC4;&amp;#x64AD;&amp;#x62A5;&amp;#x6587;&amp;#x518D;&amp;#x8F6C;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;&amp;#x5185;&amp;#x90E8;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E2D;&amp;#x7684;&amp;#x7EC4;&amp;#x64AD;&amp;#x7EC4;&amp;#x6210;&amp;#x5458;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;RTP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/8.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;RTCP&amp;#x534F;&amp;#x8BAE;&amp;#x62A5;&amp;#x5934;&amp;#x683C;&amp;#x5F0F;&lt;/h5&gt;&lt;p&gt;&amp;#x5982;&amp;#x524D;&amp;#x9762;&amp;#x6240;&amp;#x8FF0;RTCP&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x529F;&amp;#x80FD;&amp;#x662F;&amp;#xFF1A;&amp;#x670D;&amp;#x52A1;&amp;#x8D28;&amp;#x91CF;&amp;#x7684;&amp;#x76D1;&amp;#x89C6;&amp;#x4E0E;&amp;#x53CD;&amp;#x9988;&amp;#x3001;&amp;#x5A92;&amp;#x4F53;&amp;#x95F4;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x591A;&amp;#x64AD;&amp;#x7EC4;&amp;#x4E2D;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x6807;&amp;#x8BC6;&amp;#x3002;&amp;#x5728;RTP&amp;#x4F1A;&amp;#x8BDD;&amp;#x671F;&amp;#x95F4;&amp;#xFF0C;&amp;#x5404;&amp;#x53C2;&amp;#x4E0E;&amp;#x8005;&amp;#x5468;&amp;#x671F;&amp;#x6027;&amp;#x5730;&amp;#x4F20;&amp;#x9001;RTCP&amp;#x5305;&amp;#x3002;RTCP&amp;#x5305;&amp;#x4E2D;&amp;#x542B;&amp;#x6709;&amp;#x5DF2;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x7684;&amp;#x6570;&amp;#x91CF;&amp;#x3001;&amp;#x4E22;&amp;#x5931;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x7684;&amp;#x6570;&amp;#x91CF;&amp;#x7B49;&amp;#x7EDF;&amp;#x8BA1;&amp;#x8D44;&amp;#x6599;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#xFF0C;&amp;#x5404;&amp;#x53C2;&amp;#x4E0E;&amp;#x8005;&amp;#x53EF;&amp;#x4EE5;&amp;#x5229;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x52A8;&amp;#x6001;&amp;#x5730;&amp;#x6539;&amp;#x53D8;&amp;#x4F20;&amp;#x8F93;&amp;#x901F;&amp;#x7387;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x6539;&amp;#x53D8;&amp;#x6709;&amp;#x6548;&amp;#x8F7D;&amp;#x8377;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;RTP&amp;#x548C;RTCP&amp;#x914D;&amp;#x5408;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x80FD;&amp;#x4EE5;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x53CD;&amp;#x9988;&amp;#x548C;&amp;#x6700;&amp;#x5C0F;&amp;#x7684;&amp;#x5F00;&amp;#x9500;&amp;#x4F7F;&amp;#x4F20;&amp;#x8F93;&amp;#x6548;&amp;#x7387;&amp;#x6700;&amp;#x4F73;&amp;#x5316;&amp;#xFF0C;&amp;#x56E0;&amp;#x800C;&amp;#x7279;&amp;#x522B;&amp;#x9002;&amp;#x5408;&amp;#x4F20;&amp;#x9001;&amp;#x7F51;&amp;#x4E0A;&amp;#x7684;&amp;#x5B9E;&amp;#x65F6;&amp;#x6570;&amp;#x636E;&amp;#x3002;RTCP&amp;#x4E5F;&amp;#x662F;&amp;#x7528;UDP&amp;#x6765;&amp;#x4F20;&amp;#x9001;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;RTCP&amp;#x5C01;&amp;#x88C5;&amp;#x7684;&amp;#x4EC5;&amp;#x4EC5;&amp;#x662F;&amp;#x4E00;&amp;#x4E9B;&amp;#x63A7;&amp;#x5236;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x56E0;&amp;#x800C;&amp;#x5206;&amp;#x7EC4;&amp;#x5F88;&amp;#x77ED;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x591A;&amp;#x4E2A;RTCP&amp;#x5206;&amp;#x7EC4;&amp;#x5C01;&amp;#x88C5;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;UDP&amp;#x5305;&amp;#x4E2D;&amp;#x3002;&lt;br&gt;RTCP&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x4E94;&amp;#x79CD;&amp;#x5206;&amp;#x7EC4;&amp;#x7C7B;&amp;#x578B;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/10.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;SR&amp;#x5206;&amp;#x7EC4;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/11.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP-&amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP-&amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP &amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x57FA;&amp;#x4E8E;NuPLayer&amp;#x7684;RTSP &amp;#x4EE3;&amp;#x7801;&amp;#x6D41;&amp;#x7A0B;&lt;/h5&gt;&lt;p&gt;setDataSource &amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x91CD;&amp;#x590D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x7684;&amp;#x5EFA;&amp;#x7ACB;&amp;#x4EE5;&amp;#x53CA;&amp;#x6839;&amp;#x636E;URL&amp;#x683C;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Source&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C06;&amp;#x8981;&amp;#x63D0;&amp;#x5230;&amp;#x7684;RTSPSource&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;mSource&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x6765;&amp;#x770B;prepare&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#x518D;&amp;#x770B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7ED3;&amp;#x5408;&amp;#x56FE;&amp;#x770B;&amp;#x4F1A;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x6670;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/23.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/24.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/13.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;RTSP&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/14.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;prepare&amp;#x9636;&amp;#x6BB5;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x662F;SDP&amp;#xFF0C;mIsSDP&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x5728;&amp;#x521D;&amp;#x59CB;&amp;#x5316;RTSPSource&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x5206;&amp;#x6790;mIsSDP = false&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x3002;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MyHandler&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;connect&amp;#xFF0C;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x5EFA;&amp;#x7ACB;&amp;#x8FDE;&amp;#x63A5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::RTSPSource::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x662F;&amp;#x5426;&amp;#x4E3A;DISCONNECTED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)DISCONNECTED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x4E3A;CONNECTING&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mState = CONNECTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsSDP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;SDP&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;SDPLoader &amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x4E2A;&amp;#x63CF;&amp;#x8FF0;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSDPLoader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SDPLoader(notify, (mFlags &amp;amp; kFlagIncognito) ? SDPLoader::kFlagIncognito : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, mHTTPService);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSDPLoader-&amp;gt;load(mURL.c_str(), mExtraHeaders.isEmpty() ? &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; : &amp;amp;mExtraHeaders);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;SDP &amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;MyHandler &amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyHandler(mURL.c_str(), notify, mUIDValid, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandler-&amp;gt;connect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    startBufferingIfNecessary();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;connect&amp;#x65B9;&amp;#x6CD5;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x4E86;&amp;#x89E3;mConn&amp;#x4EE5;&amp;#x53CA;mRTPConn&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;mConn&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ARTSPConnection&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x4E0E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x76F8;&amp;#x8FDE;&amp;#xFF0C;&amp;#x53D1;&amp;#x9001;&amp;#x548C;&amp;#x63A5;&amp;#x6536;&amp;#x8BF7;&amp;#x6C42;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;mRTPConn&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ARTPConnection &amp;#x7528;&amp;#x4E8E;&amp;#x53D1;&amp;#x9001;&amp;#x548C;&amp;#x63A5;&amp;#x6536;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&amp;#x5728;connect&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;mConn&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8D77;&amp;#x8FDE;&amp;#x63A5;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//mConn(new ARTSPConnection(mUIDValid, mUID)),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    looper()-&amp;gt;registerHandler(mConn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//mRTPConn(new ARTPConnection),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; ? mNetLooper : looper())-&amp;gt;registerHandler(mRTPConn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;biny&amp;apos;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn-&amp;gt;observeBinaryData(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FDE;&amp;#x63A5;&amp;#x670D;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;conn&amp;apos;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn-&amp;gt;connect(mOriginalSessionURL.c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTSPConnection::connect(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatConnect&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;url&amp;#x548C;reply&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConnect, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConnect:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConnect(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;ARTSPConnection::onConnect&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x4ECE;&amp;#x4F20;&amp;#x9012;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;URl&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;host&amp;#xFF0C;port&amp;#xFF0C;path&amp;#xFF0C;mUser&amp;#xFF0C;mPass&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;::connect &amp;#x548C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D6;&amp;#x5F97;&amp;#x8054;&amp;#x7CFB;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8C03;&amp;#x7528;postReceiveReponseEvent&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&amp;#x54CD;&amp;#x5E94;&amp;#x6682;&amp;#x5B58;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onConnect(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mConnectionID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != DISCONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserTag(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserMark(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushPendingRequests();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mState = CONNECTING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x6D88;&amp;#x606F;&amp;#x4E2D;&amp;#x53D6;&amp;#x4E0B;Url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, &amp;amp;url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x6D88;&amp;#x606F;&amp;#x4E2D;&amp;#x53D6;&amp;#x4E0B;replay&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString host, path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; port;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;URl&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;host&amp;#xFF0C;port&amp;#xFF0C;path&amp;#xFF0C;mUser&amp;#xFF0C;mPass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseURL(url.c_str(), &amp;amp;host, &amp;amp;port, &amp;amp;path, &amp;amp;mUser, &amp;amp;mPass)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || (mUser.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mPass.size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6709;&amp;#x7528;&amp;#x6237;&amp;#x540D;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x5BC6;&amp;#x7801;&amp;#xFF0C;&amp;#x8FD4;&amp;#x56DE;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we have a user name but no password we have to give up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// right here, since we currently have no way of asking the user&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// for this information.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Malformed rtsp url %s&amp;quot;&lt;/span&gt;, uriDebugString(url).c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUser.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;user = &amp;apos;%s&amp;apos;, pass = &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, mUser.c_str(), mPass.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; hostent *ent = gethostbyname(host.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ent == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Unknown host %s&amp;quot;&lt;/span&gt;, host.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, -ENOENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSocket = socket(AF_INET, SOCK_STREAM, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTTPBase::RegisterSocketUserTag(mSocket, mUID,(&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;)*(&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTSP&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        HTTPBase::RegisterSocketUserMark(mSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr_in remote;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(remote.sin_zero, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(remote.sin_zero));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_family = AF_INET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_addr.s_addr = *(&lt;span class=&quot;keyword&quot;&gt;in_addr_t&lt;/span&gt; *)ent-&amp;gt;h_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote.sin_port = htons(port);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FDE;&amp;#x63A5;&amp;#x5230;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; err = ::connect(mSocket, (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;remote, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(remote));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD4;&amp;#x56DE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;ip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;server-ip&amp;quot;&lt;/span&gt;, ntohl(remote.sin_addr.s_addr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (errno == EINPROGRESS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCompleteConnection, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;connection-id&amp;quot;&lt;/span&gt;, mConnectionID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, -errno);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = DISCONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserTag(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase::UnRegisterSocketUserMark(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(mSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x82B1;&amp;#x8FD4;&amp;#x56DE;result&amp;#x4E3A;OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&amp;#x4E3A;CONNECTED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = CONNECTED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextCSeq = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x7B49;&amp;#x5F85;&amp;#x8FD4;&amp;#x56DE;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postReceiveReponseEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2018;conn&amp;#x2019;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;postReceiveReponseEvent&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::postReceiveReponseEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mReceiveResponseEventPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatReceiveResponse, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReceiveResponseEventPending = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;receiveRTSPReponse&amp;#x83B7;&amp;#x5F97;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onReceiveResponse() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReceiveResponseEventPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; timeval tv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_sec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_usec = kSelectTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd_set rs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_ZERO(&amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_SET(mSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = select(mSocket + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;amp;rs, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &amp;amp;tv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = receiveRTSPReponse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MakeSocketBlocking(mSocket, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Something horrible, irreparable has happened.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flushPendingRequests();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postReceiveReponseEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;receiveRTSPReponse&amp;#x662F;&amp;#x6709;&amp;#x53CC;&amp;#x91CD;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#xFF0C;&amp;#x65B9;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x63A5;&amp;#x6536;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x65B9;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x4FE1;&amp;#x53F7;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::receiveRTSPReponse() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString statusLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!receiveLine(&amp;amp;statusLine)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (statusLine == &lt;span class=&quot;string&quot;&gt;&amp;quot;$&amp;quot;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = receiveBinaryData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mObserveBinaryMessage != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; notify = mObserveBinaryMessage-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;received binary data, but no one cares.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//RTSP&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x8C61;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ARTSPResponse&amp;gt; response = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ARTSPResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;mStatusLine = statusLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;status: %s&amp;quot;&lt;/span&gt;, response-&amp;gt;mStatusLine.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space1 = response-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (space1 &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space2 = response-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;, space1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (space2 &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isRequest = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;RTSP&amp;#x7248;&amp;#x672C;&amp;#x662F;&amp;#x5426;&amp;#x6B63;&amp;#x786E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!IsRTSPVersion(AString(response-&amp;gt;mStatusLine, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, space1))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(IsRTSPVersion(AString(response-&amp;gt;mStatusLine,space2 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,response-&amp;gt;mStatusLine.size() - space2 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isRequest = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mStatusCode = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x72B6;&amp;#x6001;&amp;#x7801;&amp;#x662F;&amp;#x5426;&amp;#x6B63;&amp;#x786E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;AString &lt;span class=&quot;title&quot;&gt;statusCodeStr&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(response-&amp;gt;mStatusLine, space1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, space2 - space1 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(statusCodeStr.c_str(), &amp;amp;response-&amp;gt;mStatusCode) || response-&amp;gt;mStatusCode &amp;lt; &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; || response-&amp;gt;mStatusCode &amp;gt; &lt;span class=&quot;number&quot;&gt;999&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString line;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; lastDictIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!receiveLine(&amp;amp;line)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (line.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;line: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, line.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (line.c_str()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos; &amp;apos;&lt;/span&gt; || line.c_str()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos;\t&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Support for folded header values.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastDictIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// First line cannot be a continuation of the previous one.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString &amp;amp;value = response-&amp;gt;mHeaders.editValueAt(lastDictIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            value.append(line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; colonPos = line.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (colonPos &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Malformed header line.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;AString &lt;span class=&quot;title&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(line, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, colonPos)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        key.&lt;span class=&quot;built_in&quot;&gt;tolower&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        line.erase(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, colonPos + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lastDictIndex = response-&amp;gt;mHeaders.add(key, line);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; response-&amp;gt;mHeaders.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mHeaders.editValueAt(i).trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; contentLength = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = response-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;content-length&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString value = response-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;contentLength)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x6536;mContent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (contentLength &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response-&amp;gt;mContent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(contentLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (receive(response-&amp;gt;mContent-&amp;gt;data(), contentLength) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//isRequest &amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3B;&amp;#x52A8;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x8C03;&amp;#x7528;handleServerRequest&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x88AB;&amp;#x52A8;&amp;#x54CD;&amp;#x5E94;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x901A;&amp;#x77E5;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x6709;&amp;#x54CD;&amp;#x5E94;&amp;#x4E86;notifyResponseListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; isRequest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ? handleServerRequest(response)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : notifyResponseListener(response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;isRequest &amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E3B;&amp;#x52A8;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x8C03;&amp;#x7528;handleServerRequest&amp;#xFF0C;&amp;#x5426;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x662F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x88AB;&amp;#x52A8;&amp;#x54CD;&amp;#x5E94;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x901A;&amp;#x77E5;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x6709;&amp;#x54CD;&amp;#x5E94;&amp;#x4E86;notifyResponseListener&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x770B;&amp;#x5230;handleServerRequest&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x6709;&amp;#x70B9;&amp;#x5931;&amp;#x671B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C1A;&amp;#x672A;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&amp;#x6240;&amp;#x4EE5;&amp;#x53EA;&amp;#x662F;&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x8FD4;&amp;#x56DE;&amp;#x4E00;&amp;#x4E2A;&amp;#x201C;RTSP/1.0 501 Not Implemented&amp;#x201D;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::handleServerRequest(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;request) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Implementation of server-&amp;gt;client requests is optional for all methods&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// but we do need to respond, even if it&amp;apos;s just to say that we don&amp;apos;t&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// support the method.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x5B9E;&amp;#x73B0;&amp;#x4EFB;&amp;#x4F55;&amp;#x7B54;&amp;#x590D;&amp;#x884C;&amp;#x4E3A;&amp;#x53EA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x53CD;&amp;#x9988;&amp;#x6211;&amp;#x4EEC;&amp;#x5C1A;&amp;#x672A;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x529F;&amp;#x80FD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; space1 = request-&amp;gt;mStatusLine.find(&lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(space1, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;RTSP/1.0 501 Not Implemented\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = request-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;cseq&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString value = request-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cseq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;cseq)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;CSeq: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numBytesSent = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (numBytesSent &amp;lt; response.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            send(mSocket, response.c_str() + numBytesSent,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 response.size() - numBytesSent, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Server closed the connection.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Server unexpectedly closed the connection.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Error sending rtsp response (%s).&amp;quot;&lt;/span&gt;, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            performDisconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numBytesSent += (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;)n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;notifyResponseListener&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6BD4;&amp;#x8F83;&amp;#x6E05;&amp;#x6670;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x6839;&amp;#x636E;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x627E;&amp;#x51FA;&amp;#x54CD;&amp;#x5E94;&amp;#x8BE5;&amp;#x5E94;&amp;#x7B54;&amp;#x7684;Message&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;response&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED9;MyHandler&amp;#xFF0C;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ARTSPConnection::notifyResponseListener(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;response) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x67E5;&amp;#x627E;&amp;#x5C1A;&amp;#x672A;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = findPendingRequest(response, &amp;amp;i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x56DE;&amp;#x590D;&amp;#x7ED9;&amp;#x5B83;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = mPendingRequests.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPendingRequests.removeItemsAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x8A00;&amp;#x5F52;&amp;#x6B63;&amp;#x4F20;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;MyHandler&amp;#x4E2D;&amp;#x5BF9;conn&amp;#x56DE;&amp;#x590D;&amp;#x600E;&amp;#x4E48;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;apos;conn&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x53D6;&amp;#x51FA;&amp;#x53CD;&amp;#x9988;&amp;#x7ED3;&amp;#x679C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == &lt;span class=&quot;type&quot;&gt;OK&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x53D1;&amp;#x9001;&amp;#x8BF7;&amp;#x6C42;&amp;#x63CF;&amp;#x8FF0;&amp;#x7B26;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;AString&lt;/span&gt; request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request = &lt;span class=&quot;string&quot;&gt;&amp;quot;DESCRIBE &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(mSessionURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot; RTSP/1.0\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Accept: application/sdp\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; reply = new &lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;(&amp;apos;desc&amp;apos;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mConn-&amp;gt;sendRequest(request.c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (new &lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;(&amp;apos;disc&amp;apos;, this))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x6536;&amp;#x5230;&amp;#x7B54;&amp;#x590D;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x5224;&amp;#x65AD;&amp;#x7ED3;&amp;#x679C;&amp;#x662F;OK&amp;#x8FD8;&amp;#x662F;&amp;#x4E0D;OK&amp;#xFF0C;&amp;#x5982;&amp;#x679C;OK&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;DESCRIBE&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;&amp;#xFF0C;onSendRequest&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;onSendRequest&amp;#x4E2D;&amp;#x4F1A;&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x52A0;&amp;#x5DE5;&amp;#x5904;&amp;#x7406;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6DFB;&amp;#x52A0;Cseq&amp;#x7B49;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;send&amp;#x5411;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x9001;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x5E76;&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x4EE5;Cseq&amp;#x4E3A;&amp;#x952E;&amp;#x7801;&amp;#xFF0C;replay&amp;#x4E3A;&amp;#x56DE;&amp;#x590D;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x5F85;&amp;#x5904;&amp;#x7406;&amp;#x8BF7;&amp;#x6C42;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTSPConnection::onSendRequest(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FDB;&amp;#x884C;&amp;#x52A0;&amp;#x5DE5;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString request;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;request&amp;quot;&lt;/span&gt;, &amp;amp;request));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Just in case we need to re-issue the request with proper authentication&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// later, stash it away.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;original-request&amp;quot;&lt;/span&gt;, request.c_str(), request.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addAuthentication(&amp;amp;request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addUserAgent(&amp;amp;request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Find the boundary between headers and the body.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = request.find(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; cseq = mNextCSeq++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString cseqHeader = &lt;span class=&quot;string&quot;&gt;&amp;quot;CSeq: &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cseqHeader.append(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cseqHeader.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request.insert(cseqHeader, i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;request: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, request.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numBytesSent = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (numBytesSent &amp;lt; request.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x8BF7;&amp;#x6C42;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5B8C;&amp;#x5168;&amp;#x53D1;&amp;#x9001;&amp;#x7ED3;&amp;#x675F;&amp;#x90A3;&amp;#x4E48;&amp;#x7EE7;&amp;#x7EED;&amp;#x53D1;&amp;#x9001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = send(mSocket, request.c_str() + numBytesSent,request.size() - numBytesSent, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5FFD;&amp;#x7565;&amp;#x9519;&amp;#x8BEF;&amp;#x5904;&amp;#x7406;&amp;#x4EE3;&amp;#x7801;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        numBytesSent += (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt;)n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPendingRequests&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x56DE;&amp;#x590D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPendingRequests.add(cseq, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x56DE;&amp;#x5230;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;notifyResponseListener&amp;#x7ED3;&amp;#x5408;onSendRequest&amp;#x4EE5;&amp;#x53CA;findPendingRequest&amp;#x662F;&amp;#x5426;&amp;#x770B;&amp;#x51FA;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTSPConnection::findPendingRequest(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTSPResponse&amp;gt; &amp;amp;response, &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; *index) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; i = response-&amp;gt;mHeaders.indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;cseq&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is an unsolicited server-&amp;gt;client message.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *index = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString value = response-&amp;gt;mHeaders.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; cseq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSingleUnsignedLong(value.c_str(), &amp;amp;cseq)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i = mPendingRequests.indexOfKey(cseq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ENOENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *index = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;onSendRequest &amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5C06;&amp;#x8BF7;&amp;#x6C42;&amp;#x653E;&amp;#x5165;mPendingRequests&amp;#x4E2D;&amp;#xFF0C;&amp;#x800C;&amp;#x6BCF;&amp;#x6B21;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7ED9;&amp;#x51FA;&amp;#x5E94;&amp;#x7B54;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;notifyResponseListener&amp;#xFF0C;notifyResponseListener&amp;#x4F1A;&amp;#x4ECE;mPendingRequests&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E94;&amp;#x7B54;&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x53D1;&amp;#x9001;&amp;#x6D88;&amp;#x606F;&amp;#x7ED9;MyHandler&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x800C;notifyResponseListener&amp;#x53C8;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x7B49;&amp;#x5F85;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x5E94;&amp;#x7B54;&amp;#x4FE1;&amp;#x53F7;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;OK&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x6536;&amp;#x5230;&amp;#x2018;desc&amp;#x2019;&amp;#x4FE1;&amp;#x53F7;&amp;#x540E;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &amp;apos;desc&amp;apos;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; == &lt;span class=&quot;type&quot;&gt;OK&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;RefBase&lt;/span&gt;&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;CHECK&lt;/span&gt;(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;ARTSPResponse&lt;/span&gt;&amp;gt; response = static_cast&amp;lt;&lt;span class=&quot;type&quot;&gt;ARTSPResponse&lt;/span&gt; *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mStatusCode == &lt;span class=&quot;number&quot;&gt;301&lt;/span&gt; || response-&amp;gt;mStatusCode == &lt;span class=&quot;number&quot;&gt;302&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //&amp;#x91CD;&amp;#x5B9A;&amp;#x5411;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mStatusCode != &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UNKNOWN_ERROR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response-&amp;gt;mContent == &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;ERROR_MALFORMED&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;ALOGE&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;The response has no content.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //&amp;#x83B7;&amp;#x5F97;&lt;span class=&quot;type&quot;&gt;ASessionDescription&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionDesc = new &lt;span class=&quot;type&quot;&gt;ASessionDescription&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionDesc-&amp;gt;setTo(response-&amp;gt;mContent-&amp;gt;data(),response-&amp;gt;mContent-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mSessionDesc-&amp;gt;isValid()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSessionDesc-&amp;gt;countTracks() &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // &lt;span class=&quot;type&quot;&gt;There&lt;/span&gt;&amp;apos;s no actual tracks &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; this session.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // &lt;span class=&quot;type&quot;&gt;The&lt;/span&gt; first &lt;span class=&quot;string&quot;&gt;&amp;quot;track&amp;quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; merely session meta&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    // data.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;ALOGW&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;Session doesn&amp;apos;t contain any playable &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &lt;span class=&quot;string&quot;&gt;&amp;quot;tracks. Aborting.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;ERROR_UNSUPPORTED&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    //&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x771F;&amp;#x6B63;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    setupTrack(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x957F;&amp;#x6211;&amp;#x4EEC;&amp;#x5FFD;&amp;#x7565;&amp;#x4E0D;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;setupTrack&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; setupTrack(size_t index) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;APacketSource&amp;gt; source = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; APacketSource(mSessionDesc, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString url;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mSessionDesc&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findAttribute(index, &lt;span class=&quot;string&quot;&gt;&amp;quot;a=control&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;url));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString trackURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(MakeURL(mBaseURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), url&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;trackURL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;push(TrackInfo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *info = &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;editItemAt(mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mURL = trackURL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;APacketSource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mPacketSource = source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mFirstSeqNumInSegment = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNewSegment = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPAnch&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNTPAnchorUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNormalPlayTimeRTP = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNormalPlayTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned long PT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString formatDesc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString formatParams;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSessionDesc&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormatType(index, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;PT, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;formatDesc, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;formatParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t timescale;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ASessionDescription&lt;span class=&quot;tag&quot;&gt;::ParseFormatDesc&lt;/span&gt;(formatDesc&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;timescale, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mTimeScale = timescale;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mEOSReceived = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;track #%zu URL=%s&amp;quot;&lt;/span&gt;, mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size(), trackURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5EFA;&amp;#x7ACB;SETUP&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString request = &lt;span class=&quot;string&quot;&gt;&amp;quot;SETUP &amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(trackURL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot; RTSP/1.0\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTryTCPInterleaving) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t interleaveIndex = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * (mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket = interleaveIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket = interleaveIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transport: RTP/AVP/TCP;interleaved=&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(interleaveIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(interleaveIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        unsigned rtpPort;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ARTPConnection&lt;span class=&quot;tag&quot;&gt;::MakePortPair&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;rtpPort);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUIDValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserTag&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, mUID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            (uint32_t)*(uint32_t*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserTag&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, mUID,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            (uint32_t)*(uint32_t*) &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP_&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserMark&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            HTTPBase&lt;span class=&quot;tag&quot;&gt;::RegisterSocketUserMark&lt;/span&gt;(info&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket, mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Transport: RTP/AVP/UDP;unicast;client_port=&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(rtpPort);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(rtpPort + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;Session: &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(mSessionID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;append(&lt;span class=&quot;string&quot;&gt;&amp;quot;\r\n&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;setu&amp;apos;&lt;/span&gt;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConn&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendRequest(request&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x4E5F;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x5C06;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x6B4C;&amp;#x66F2;&amp;#x4FE1;&amp;#x606F;&amp;#x5B58;&amp;#x653E;&amp;#x5230;mTracks&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;sendRequest&amp;#x53D1;&amp;#x8D77;setu&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;sendRequest&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x4F5C;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x770B;&amp;#x4E0B;&amp;#x2018;setu&amp;#x2019;&amp;#x8FD4;&amp;#x56DE;&amp;#x540E;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;setu&amp;apos;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;index));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;trackIndex)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track = &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mTracks&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;result));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(track != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ARTSPResponse&amp;gt; response =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ARTSPResponse *&amp;gt;(obj&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mStatusCode != &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ssize_t i = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;session&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F97;&amp;#x5230;SessionID&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSessionID = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mKeepAliveTimeoutUs = kDefaultKeepAliveTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString timeoutStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(&lt;span class=&quot;string&quot;&gt;&amp;apos;accu&amp;apos;&lt;/span&gt;, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;indexOfKey(&lt;span class=&quot;string&quot;&gt;&amp;quot;transport&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_GE(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    AString transport = response&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// We are going to continue even if we were&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// unable to poke a hole into the firewall...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pokeAHole(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            transport);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mRTPConn&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;addStream(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTPSocket, track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mSessionDesc, index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        notify, track&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mUsingInterleavedTCP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSetupTracksSuccessful = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;SessionID&amp;#x5E76;&amp;#x8C03;&amp;#x7528;mRTPConn-&amp;gt;addStream&amp;#x5B8C;ARTPConnection&amp;#x4E2D;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D41;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;addStream&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTPConnection::addStream(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rtpSocket, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; rtcpSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ASessionDescription&amp;gt; &amp;amp;sessionDesc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t index,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;notify,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; injected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAddStream, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-socket&amp;quot;&lt;/span&gt;, rtpSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtcp-socket&amp;quot;&lt;/span&gt;, rtcpSocket);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;session-desc&amp;quot;&lt;/span&gt;, sessionDesc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;notify&amp;quot;&lt;/span&gt;, notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;injected&amp;quot;&lt;/span&gt;, injected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatAddStream:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAddStream(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPConnection::onAddStream(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;Stream&amp;#x4FE1;&amp;#x606F;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mStreams&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreams.push_back(StreamInfo());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StreamInfo *info = &amp;amp;*--mStreams.end();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;rtp-socket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-socket&amp;quot;&lt;/span&gt;, &amp;amp;s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mRTPSocket = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;rtcp-socket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtcp-socket&amp;quot;&lt;/span&gt;, &amp;amp;s));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mRTCPSocket = s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; injected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;injected&amp;quot;&lt;/span&gt;, &amp;amp;injected));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mIsInjected = injected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;session-desc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;session-desc&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mSessionDesc = &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;ASessionDescription *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;info-&amp;gt;mIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;notify&amp;quot;&lt;/span&gt;, &amp;amp;info-&amp;gt;mNotifyMsg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mNumRTCPPacketsReceived = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mNumRTPPacketsReceived = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;memset&lt;/span&gt;(&amp;amp;info-&amp;gt;mRemoteRTCPAddr, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(info-&amp;gt;mRemoteRTCPAddr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x8F6E;&amp;#x8BE2;&amp;#x67E5;&amp;#x8BE2;&amp;#x4E8B;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!injected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postPollEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x91CD;&amp;#x70B9;&amp;#x5173;&amp;#x6CE8;&amp;#x7684;&amp;#x662F;postPollEvent&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPConnection::postPollEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPollEventPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatPollStreams, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPollEventPending = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatPollStreams:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onPollStreams();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ARTPConnection::onPollStreams() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPollEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStreams.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct timeval tv;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_sec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tv.tv_usec = kSelectTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd_set rs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FD_ZERO(&amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; maxSocket = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         it != mStreams.end(); ++it) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((*it).mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FD_SET(it-&amp;gt;mRTPSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FD_SET(it-&amp;gt;mRTCPSocket, &amp;amp;rs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;mRTPSocket &amp;gt; maxSocket) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxSocket = it-&amp;gt;mRTPSocket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;mRTCPSocket &amp;gt; maxSocket) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            maxSocket = it-&amp;gt;mRTCPSocket;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxSocket == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x9009;&amp;#x62E9;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = select(maxSocket + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;amp;rs, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &amp;amp;tv);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x63A5;&amp;#x6536;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != mStreams.end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((*it).mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x53D7;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (FD_ISSET(it-&amp;gt;mRTPSocket, &amp;amp;rs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;status_t ARTPConnection::receive(StreamInfo *s, bool receiveRTP)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = receive(&amp;amp;*it, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x63A5;&amp;#x53D7;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK &amp;amp;&amp;amp; FD_ISSET(it-&amp;gt;mRTCPSocket, &amp;amp;rs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;status_t ARTPConnection::receive(StreamInfo *s, bool receiveRTP)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = receive(&amp;amp;*it, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int64_t nowUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLastReceiverReportTimeUs &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;|| mLastReceiverReportTimeUs + &lt;span class=&quot;number&quot;&gt;5000000&lt;/span&gt;ll &amp;lt;= nowUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(kMaxUDPSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;List&lt;/span&gt;&amp;lt;StreamInfo&amp;gt;::iterator it = mStreams.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != mStreams.end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StreamInfo *s = &amp;amp;*it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s-&amp;gt;mIsInjected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s-&amp;gt;mNumRTCPPacketsReceived == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// We have never received any RTCP packets on this stream,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t even know where to send a report.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; s-&amp;gt;mSources.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;ARTPSource&amp;gt; source = s-&amp;gt;mSources.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x586B;&amp;#x5145;buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;addReceiverReport(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kRegularlyRequestFIR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source-&amp;gt;addFIR(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Sending RR...&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ssize_t n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x904E;RTCPSocket&amp;#x767C;&amp;#x9001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    n = sendto(s-&amp;gt;mRTCPSocket, buffer-&amp;gt;data(), buffer-&amp;gt;size(), &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; struct sockaddr *)&amp;amp;s-&amp;gt;mRemoteRTCPAddr, sizeof(s-&amp;gt;mRemoteRTCPAddr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (n &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK_EQ(n, (ssize_t)buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLastReceiverReportTimeUs = nowUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStreams.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postPollEvent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x518D;onPollStreams&amp;#x4E2D;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x76D1;&amp;#x542C;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x53D1;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;receive&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x5E76;&amp;#x5B9A;&amp;#x671F;&amp;#x53D1;&amp;#x9001;RTCP&amp;#x6D88;&amp;#x606F;&amp;#x7ED9;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTPConnection::receive(StreamInfo *s, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; receiveRTP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;receiving %s&amp;quot;&lt;/span&gt;, receiveRTP ? &lt;span class=&quot;string&quot;&gt;&amp;quot;RTP&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;RTCP&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(!s-&amp;gt;mIsInjected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;65536&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;socklen_t&lt;/span&gt; remoteAddrLen =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (!receiveRTP &amp;amp;&amp;amp; s-&amp;gt;mNumRTCPPacketsReceived == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ? &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(s-&amp;gt;mRemoteRTCPAddr) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; nbytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x63A5;&amp;#x6536;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nbytes = recvfrom(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            receiveRTP ? s-&amp;gt;mRTPSocket : s-&amp;gt;mRTCPSocket,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;data(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffer-&amp;gt;capacity(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            remoteAddrLen &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? (&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; sockaddr *)&amp;amp;s-&amp;gt;mRemoteRTCPAddr : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            remoteAddrLen &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &amp;amp;remoteAddrLen : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (nbytes &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; errno == EINTR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nbytes &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ECONNRESET;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, nbytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGI(&amp;quot;received %d bytes.&amp;quot;, buffer-&amp;gt;size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x6790;RTP &amp;#x6216;&amp;#x8005; parseRTCP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (receiveRTP) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = parseRTP(s, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = parseRTCP(s, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;receive&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;recvfrom&amp;#x3002;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E2D;&amp;#x8BFB;&amp;#x53D6;&amp;#x5230;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;parseRTP&amp;#x6216;&amp;#x8005;parseRTCP&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ARTPConnection::parseRTP(StreamInfo *s, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *data = buffer-&amp;gt;data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) != &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Unsupported version.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x20&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Padding present.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; paddingLength = data[size - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paddingLength + &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; &amp;gt; size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If we removed this much padding we&amp;apos;d end up with something&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// that&amp;apos;s too short to be a valid RTP header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size -= paddingLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; numCSRCs = data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; payloadOffset = &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * numCSRCs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Not enough data to fit the basic header and all the CSRC entries.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x10&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Header eXtension present.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Not enough data to fit the basic header, all CSRC entries&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and the first 4 bytes of the extension header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *extensionData = &amp;amp;data[payloadOffset];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; extensionLength =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * (extensionData[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; | extensionData[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;lt; payloadOffset + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; + extensionLength) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        payloadOffset += &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; + extensionLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; srcId = u32at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ARTPSource&amp;gt; source = findSource(s, srcId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; rtpTime = u32at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; meta = buffer-&amp;gt;meta();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;ssrc&amp;quot;&lt;/span&gt;, srcId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, rtpTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;PT&amp;quot;&lt;/span&gt;, data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;M&amp;quot;&lt;/span&gt;, data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setInt32Data(u16at(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;setRange(payloadOffset, size - payloadOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x5341;&amp;#x5206;&amp;#x91CD;&amp;#x8981;void ARTPSource::processRTPPacket(const sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    source-&amp;gt;processRTPPacket(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;parsRTP&amp;#x4E2D;&amp;#x6839;&amp;#x636E;RTP&amp;#x683C;&amp;#x5F0F;&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&amp;#x4E2D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x8C03;&amp;#x7528;ARTPSource::processRTPPacket&amp;#x8FDB;&amp;#x884C;&amp;#x540E;&amp;#x7EED;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPSource::processRTPPacket(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (queuePacket(buffer) &amp;amp;&amp;amp; mAssembler != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAssembler-&amp;gt;onPacketReceived(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;processRTPPacket&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;Assembler&amp;#x6765;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x7EC4;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;assembleMore&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ARTPAssembler::onPacketReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTPSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssemblyStatus status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//assembleMore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = assembleMore(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == WRONG_SEQUENCE_NUMBER) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFirstFailureTimeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ALooper::GetNowUs() - mFirstFailureTimeUs &amp;gt; &lt;span class=&quot;number&quot;&gt;10000l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFirstFailureTimeUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// LOG(VERBOSE) &amp;lt;&amp;lt; &amp;quot;waited too long for packet.&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    packetLost();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFirstFailureTimeUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFirstFailureTimeUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == NOT_ENOUGH_DATA) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARTPAssembler::AssemblyStatus AMPEG4AudioAssembler::assembleMore(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ARTPSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;addPacket&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssemblyStatus status = addPacket(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == MALFORMED_PACKET) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAccessUnitDamaged = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5BF9;&amp;#x65E0;&amp;#x5E8F;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;submitAccessUnit&amp;#x63D0;&amp;#x4EA4;AU&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ARTPAssembler&lt;span class=&quot;tag&quot;&gt;::AssemblyStatus&lt;/span&gt; AMPEG4AudioAssembler&lt;span class=&quot;tag&quot;&gt;::addPacket&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const sp&amp;lt;ARTPSource&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;sp&amp;lt;ABuffer&amp;gt; &amp;gt; *&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt; = source&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NOT_ENOUGH_DATA;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNextExpectedSeqNoValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;List&lt;/span&gt;&amp;lt;sp&amp;lt;ABuffer&amp;gt; &amp;gt;&lt;span class=&quot;tag&quot;&gt;::iterator&lt;/span&gt; it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (it != &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;end()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((uint32_t)(*it)&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data() &amp;gt;= mNextExpectedSeqNo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            it = &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;erase(it);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NOT_ENOUGH_DATA;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer = *&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mNextExpectedSeqNoValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextExpectedSeqNoValid = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNextExpectedSeqNo = (uint32_t)buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((uint32_t)buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;int32Data() != mNextExpectedSeqNo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#if&lt;/span&gt; VERBOSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;LOG&lt;/span&gt;(VERBOSE) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Not the sequence number I expected&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; WRONG_SEQUENCE_NUMBER;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;meta()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x63D0;&amp;#x4EA4;AccessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rtpTime != mAccessUnitRTPTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        submitAccessUnit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAccessUnitRTPTime = rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x7F13;&amp;#x5B58;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPackets&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;push_back(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;erase(&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mNextExpectedSeqNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;submitAccessUnit&amp;#x4E2D;&amp;#x56DE;&amp;#x8C03;&amp;#x2018;accu&amp;#x2019;&amp;#xFF0C;&amp;#x4EA4;&amp;#x7ED9;MyHandler&amp;#x5904;&amp;#x7406;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; AMPEG4AudioAssembler&lt;span class=&quot;tag&quot;&gt;::submitAccessUnit&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;empty());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#if&lt;/span&gt; VERBOSE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;LOG&lt;/span&gt;(VERBOSE) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot;Access unit complete (&amp;quot;&lt;/span&gt; &amp;lt;&amp;lt; mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;size() &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&amp;quot; packets)&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit = MakeCompoundFromPackets(mPackets);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    accessUnit = removeLATMFraming(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CopyTimes(accessUnit, *mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAccessUnitDamaged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessUnit&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;meta()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPackets&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAccessUnitDamaged = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x56DE;&amp;#x8C03;&amp;#x2018;accu&amp;#x2019;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = mNotifyMsg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;access-unit&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;apos;accu&amp;apos;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t timeUpdate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-update&amp;quot;&lt;/span&gt;, &amp;amp;timeUpdate) &amp;amp;&amp;amp; timeUpdate) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint64_t ntpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;ntp-time&amp;quot;&lt;/span&gt;, (int64_t *)&amp;amp;ntpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onTimeUpdate(trackIndex, rtpTime, ntpTime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t first;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;first-rtcp&amp;quot;&lt;/span&gt;, &amp;amp;first)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mReceivedFirstRTCPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;first-rtp&amp;quot;&lt;/span&gt;, &amp;amp;first)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mReceivedFirstRTPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mNumAccessUnitsReceived;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postAccessUnitTimeoutCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;track-index&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (trackIndex &amp;gt;= mTracks.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;late packets ignored.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t eos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;eos&amp;quot;&lt;/span&gt;, &amp;amp;eos)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;received BYE on track index %zu&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAllTracksHaveTime &amp;amp;&amp;amp; dataReceivedOnAllChannels()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;No time established =&amp;gt; fake existing data&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            track-&amp;gt;mEOSReceived = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTryFakeRTCP = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mReceivedFirstRTCPPacket = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fakeTimestamps();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postQueueEOS(trackIndex, ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x51FA;accessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;access-unit&amp;quot;&lt;/span&gt;, &amp;amp;accessUnit));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t seqNum = (uint32_t)accessUnit-&amp;gt;int32Data();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;we&amp;apos;re seeking, dropping stale packet.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seqNum &amp;lt; track-&amp;gt;mFirstSeqNumInSegment) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;dropping stale access-unit (%d &amp;lt; %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             seqNum, track-&amp;gt;mFirstSeqNumInSegment);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track-&amp;gt;mNewSegment) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mNewSegment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;onAccessUnitComplete&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAccessUnitComplete(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x2018;accu&amp;#x2019;&amp;#x53D6;&amp;#x51FA;AU&amp;#x6570;&amp;#x636E;&amp;#x540E;&amp;#x8C03;&amp;#x7528;onAccessUnitComplete&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void onAccessUnitComplete(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t trackIndex, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;accessUnit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onAccessUnitComplete track %d&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!mPlayResponseParsed){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;play response is not parsed, storing accessunit&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.push_back(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleFirstAccessUnit();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *track = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAllTracksHaveTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;storing accessUnit, no time established yet&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.push_back(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!track-&amp;gt;mPackets.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; accessUnit = *track-&amp;gt;mPackets.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mPackets.erase(track-&amp;gt;mPackets.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addMediaTimestamp(trackIndex, track, accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//postQueueAccessUnit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postQueueAccessUnit(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (addMediaTimestamp(trackIndex, track, accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postQueueAccessUnit(trackIndex, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (track-&amp;gt;mEOSReceived) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postQueueEOS(trackIndex, ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        track-&amp;gt;mEOSReceived = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void postQueueAccessUnit(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t trackIndex, const sp&amp;lt;&lt;span class=&quot;type&quot;&gt;ABuffer&lt;/span&gt;&amp;gt; &amp;amp;accessUnit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mNotify-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;trackIndex&amp;quot;&lt;/span&gt;, trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;accessUnit&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;RTSPSource&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;AnotherPacketSource  queueAccessUnit(accessUnit)&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MyHandler::kWhatAccessUnit:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t trackIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;trackIndex&amp;quot;&lt;/span&gt;, &amp;amp;trackIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_LT(trackIndex, mTracks.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_EQ(trackIndex, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;accessUnit&amp;quot;&lt;/span&gt;, &amp;amp;accessUnit));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t damaged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &amp;amp;damaged)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; damaged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;dropping damaged access unit.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offset + &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt; &amp;lt;= accessUnit-&amp;gt;size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mTSParser-&amp;gt;feedTSPacket(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    accessUnit-&amp;gt;data() + offset, &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offset += &lt;span class=&quot;number&quot;&gt;188&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset &amp;lt; accessUnit-&amp;gt;size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source = getSource(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;signalEOS(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            source = getSource(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;signalEOS(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrackInfo *info = &amp;amp;mTracks.editItemAt(trackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AnotherPacketSource&amp;gt; source = info-&amp;gt;mSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t rtpTime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rtp-time&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;rtpTime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!info-&amp;gt;mNPTMappingValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This is a live stream, we didn&amp;apos;t receive any normal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// playtime mapping. We won&amp;apos;t map to npt time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            source-&amp;gt;queueAccessUnit(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t nptUs =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ((&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)rtpTime - (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)info-&amp;gt;mRTPTime)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                / info-&amp;gt;mTimeScale&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;ll&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + info-&amp;gt;mNormalPlaytimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        accessUnit-&amp;gt;meta()-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, nptUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        source-&amp;gt;queueAccessUnit(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;queueAccessUnit(accessUnit);&amp;#x5C06;AU&amp;#x6570;&amp;#x636E;&amp;#x5B58;&amp;#x653E;&amp;#x5230;AnotherPacketSource &amp;#x7684;mBuffers&amp;#x4E2D;&amp;#x4F9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x89E3;&amp;#x7801;&amp;#x64AD;&amp;#x653E;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;AnotherPacketSource&lt;/span&gt;::queueAccessUnit(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ABuffer&amp;gt; &amp;amp;buffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t damaged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;damaged&amp;quot;&lt;/span&gt;, &amp;amp;damaged) &amp;amp;&amp;amp; damaged)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // &lt;span class=&quot;title&quot;&gt;LOG&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(VERBOSE)&lt;/span&gt; &amp;lt;&amp;lt; &amp;quot;&lt;span class=&quot;title&quot;&gt;discarding&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;damaged&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AU&lt;/span&gt;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;Mutex&lt;/span&gt;::&lt;span class=&quot;title&quot;&gt;Autolock&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mBuffers&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(buffer)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mCondition&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;signal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;int32_t&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;discontinuity&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;discontinuity))&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;ALOGV&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueing a discontinuity with queueAccessUnit&amp;quot;&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLastQueuedTimeUs&lt;/span&gt; = 0&lt;span class=&quot;title&quot;&gt;ll&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mEOSResult&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;OK&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLatestEnqueuedMeta&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mDiscontinuitySegments&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DiscontinuitySegment())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;int64_t&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(buffer-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;lastQueuedTimeUs))&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;mLastQueuedTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;ALOGV&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueAccessUnit timeUs=%&amp;quot;&lt;/span&gt; PRIi64 &lt;span class=&quot;string&quot;&gt;&amp;quot; us (%.2f secs)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLastQueuedTimeUs, mLastQueuedTimeUs / &lt;span class=&quot;number&quot;&gt;1E&lt;/span&gt;6)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;title&quot;&gt;CHECK&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(!mDiscontinuitySegments.empty())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;DiscontinuitySegment&lt;/span&gt; &amp;amp;&lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt; = *&lt;span class=&quot;params&quot;&gt;(--mDiscontinuitySegments.end())&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(lastQueuedTimeUs &amp;gt; tailSeg.mMaxEnqueTimeUs)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;mMaxEnqueTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(tailSeg.mMaxDequeTimeUs == -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;tailSeg&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;mMaxDequeTimeUs&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;lastQueuedTimeUs&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(mLatestEnqueuedMeta == NULL)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;title&quot;&gt;mLatestEnqueuedMeta&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;buffer&lt;/span&gt;-&amp;gt;&lt;/span&gt;meta&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t latestTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t frameDeltaUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(mLatestEnqueuedMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;latestTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastQueuedTimeUs &amp;gt; latestTimeUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta = buffer-&amp;gt;meta&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;-&amp;gt;&lt;/span&gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameDeltaUs = lastQueuedTimeUs - latestTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, frameDeltaUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mLatestEnqueuedMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, &amp;amp;frameDeltaUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;pi&quot;&gt;// For B frames&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameDeltaUs = latestTimeUs - lastQueuedTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatestEnqueuedMeta-&amp;gt;setInt64(&amp;quot;durationUs&amp;quot;, frameDeltaUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x548C;&amp;#x4ECB;&amp;#x7ECD;HLS&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x662F;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#xFF0C;&amp;#x65B9;&amp;#x4FBF;&amp;#x67E5;&amp;#x770B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x7C98;&amp;#x8D34;&amp;#x4E86;&amp;#x8FC7;&amp;#x6765;&amp;#xFF0C;&amp;#x5927;&amp;#x4F53;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5C31;&amp;#x662F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5F00;&amp;#x59CB;&amp;#x4ECE;&amp;#x8F93;&amp;#x5165;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x5F80;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x6DFB;&amp;#x52A0;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;NuPlayer&lt;/span&gt;::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;kWhatStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPausedByClient = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;(int64_t startPositionUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mSourceStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSourceStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOffloadAudio = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioEOS = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEOS = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t flags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; audioMeta = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormatMeta(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    audio_stream_type_t streamType = AUDIO_STREAM_MUSIC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        streamType = mAudioSink&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getAudioStreamType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; videoFormat = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getFormat(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatRendererNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mRendererGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mRendererGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRenderer = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; Renderer(mAudioSink, notify, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;NuPlayerRenderer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, ANDROID_PRIORITY_AUDIO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRendererLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mRenderer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setPlaybackSettings(mPlaybackSettings);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    float rate = getFrameRate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rate &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRenderer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setVideoFrameRate(rate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoDecoder != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVideoDecoder&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setRenderer(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioDecoder != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioDecoder&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setRenderer(mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postScanSources();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::postScanSources&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mScanSourcesPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatScanSources, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mScanSourcesGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatScanSources:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; mHadAnySourcesBefore =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) || (mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialize video before audio because successful initialization of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// video may change deep buffer mode of audio.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSurface != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &amp;amp;mVideoDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to re-open audio sink if there&amp;apos;s an existing decoder.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &amp;amp;mAudioDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t NuPlayer::instantiateDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, sp&amp;lt;DecoderBase&amp;gt; *decoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x683C;&amp;#x5F0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format = mSource-&amp;gt;getFormat(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* realtime */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAudioNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mAudioDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mAudioDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        determineAudioModeChange();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatVideoNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mVideoDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mVideoDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer, mSurface, mCCDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;configure(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B83;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::configure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::init&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::Decoder&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onConfigure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec = MediaCodec&lt;span class=&quot;tag&quot;&gt;::CreateByType&lt;/span&gt;(mCodecLooper, mime&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* encoder */&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* err */&lt;/span&gt;, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;configure(format, mSurface, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* crypto */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* flags */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5BBD;&amp;#x9AD8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mIsAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;width)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaCodec&amp;gt; MediaCodec::CreateByType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ALooper&amp;gt; &amp;amp;looper, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; *err, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodec(looper, pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = codec-&amp;gt;init(mime, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* nameIsType */&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret == OK ? codec : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// NULL deallocates codec.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BF4;&amp;#x660E;mCodec&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ACodec&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::init(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;name, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; nameIsType, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mResourceManagerService-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType || !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;omx.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x540D;&amp;#x79F0;&amp;#x521B;&amp;#x5EFA;Codec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ACodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!nameIsType&amp;amp;&amp;amp; !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;android.filter.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInit, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;nameIsType&amp;quot;&lt;/span&gt;, nameIsType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;kWhatInit:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;....................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateAllocateComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateAllocateComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatAllocateComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatAllocateComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAllocateComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::UninitializedState::onAllocateComponent(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;OMXCodec::CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t quirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, &amp;amp;componentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t index = matchingCodecs.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::CodecNameAndQuirks *entry = &amp;amp;matchingCodecs.editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry-&amp;gt;mName = String8(componentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!OMXCodec::findCodecQuirks(componentName.c_str(), &amp;amp;entry-&amp;gt;mQuirks)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mime.c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                encoder, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// matchComponentName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;// flags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;CodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = NAME_NOT_FOUND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t matchIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; matchIndex &amp;lt; matchingCodecs.size();++matchIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentName = matchingCodecs.itemAt(matchIndex).mName.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quirks = matchingCodecs.itemAt(matchIndex).mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pid_t tid = gettid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; prevPriority = androidGetThreadPriority(tid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = omx-&amp;gt;allocateNode(componentName.c_str(), observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, prevPriority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatOMXMessageList, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer-&amp;gt;setNotificationMessage(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mComponentName = componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mRenderTracker.setComponentName(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mFlags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mQuirks = quirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mOMX = omx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mNode = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentAllocated);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;changeState(mCodec-&amp;gt;mLoadedState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::configure(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;Surface&amp;gt; &amp;amp;surface,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ICrypto&amp;gt; &amp;amp;crypto,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;mVideoWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;mVideoHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;mRotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, surface);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save msg for reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfigureMsg = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConfigure:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, &amp;amp;format));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push) &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagPushBlankBuffersOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = handleSetSurface(&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PostReplyWithError(replyID, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleSetSurface(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *crypto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;flags));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CONFIGURE_FLAG_ENCODE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsEncoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateConfigureComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateConfigureComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatConfigureComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatConfigureComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConfigureComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::LoadedState::onConfigureComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onConfigureComponent&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mCodec-&amp;gt;mNode != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mCodec-&amp;gt;configureCodec(mime.c_str(), msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentConfigured);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mInputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mOutputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatComponentConfigured:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == UNINITIALIZED || mState == INITIALIZED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// In case a kWhatError message came in and replied with error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we log a warning and ignore.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;configure interrupted by error, current state %d&amp;quot;&lt;/span&gt;, mState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// reset input surface flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHaveInputSurface = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, &amp;amp;mInputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, &amp;amp;mOutputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t usingSwRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &amp;amp;usingSwRenderer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagUsesSoftwareRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage)-&amp;gt;postReply(mReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6700;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x95F4;&amp;#x597D;&amp;#x597D;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7814;&amp;#x7A76;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5148;&amp;#x9488;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t ACodec::configureCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; inputFormat = new AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; outputFormat = mNotify-&amp;gt;dup(); &lt;span class=&quot;comment&quot;&gt;// will use this for kWhatOutputFormatChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsEncoder = encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOutputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = setComponentRole(encoder &lt;span class=&quot;comment&quot;&gt;/* isEncoder */&lt;/span&gt;, mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t bitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// FLAC encoder doesn&amp;apos;t need a bitrate, other encoders do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bitrate&amp;quot;&lt;/span&gt;, &amp;amp;bitRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t storeMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE, &amp;amp;mInputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (input) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For this specific case we could be using camera source even if storeMetaDataInBuffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// returns Gralloc source. Pretend that we are; this will force us to use nBufferSize.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInputMetadataType == kMetadataBufferTypeGrallocSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputMetadataType = kMetadataBufferTypeCameraSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t usageBits;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX-&amp;gt;getParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode, (OMX_INDEXTYPE)OMX_IndexParamConsumerUsageBits,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;usageBits, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(usageBits)) == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inputFormat-&amp;gt;setInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-read-often&amp;quot;&lt;/span&gt;, !!(usageBits &amp;amp; GRALLOC_USAGE_SW_READ_OFTEN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t prependSPSPPS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepend-sps-pps-to-idr-frames&amp;quot;&lt;/span&gt;, &amp;amp;prependSPSPPS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; prependSPSPPS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_INDEXTYPE index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;getExtensionIndex(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.android.index.prependSPSPPSToIDRFrames&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PrependSPSPPSToIDRFramesParams params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params.bEnable = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, index, &amp;amp;params, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(params));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Encoder could not be configured to emit SPS/PPS before &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;IDR frames. (err %d)&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Only enable metadata mode on encoder output if encoder can prepend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// sps/pps to idr frames, since in metadata mode the bitstream is in an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// opaque handle, to which we don&amp;apos;t have access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t video = !strncasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsVideo = video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_BOOL enable = (OMX_BOOL) (prependSPSPPS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers-output&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexOutput, enable, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (output) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;repeat-previous-frame-after&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mRepeatFrameDelayUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRepeatFrameDelayUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-pts-gap-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxPtsGapUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxPtsGapUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-fps-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxFps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxFps = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-lapse&amp;quot;&lt;/span&gt;, &amp;amp;mTimePerCaptureUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTimePerCaptureUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;create-input-buffers-suspended&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (int32_t*)&amp;amp;mCreateInputBuffersSuspended)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCreateInputBuffersSuspended = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; we only use native window for video decoders&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveNativeWindow = msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, &amp;amp;obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; obj != NULL &amp;amp;&amp;amp; video &amp;amp;&amp;amp; !encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLegacyAdaptiveExperiment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video &amp;amp;&amp;amp; !encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t usageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;, &amp;amp;usageProtected) &amp;amp;&amp;amp; usageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected output buffers must be sent to an ANativeWindow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagIsGrallocUsageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ANativeWindow&amp;gt; nativeWindow =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ANativeWindow *&amp;gt;(static_cast&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// START of temporary support for automatic FRC - THIS WILL BE REMOVED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, &amp;amp;autoFrc)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; enabled = autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            OMX_CONFIG_BOOLEANTYPE config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            config.bEnabled = (OMX_BOOL)enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t temp = mOMX-&amp;gt;setConfig(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, (OMX_INDEXTYPE)OMX_IndexConfigAutoFramerateConversion,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(config));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (temp == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (enabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;codec does not support requested auto-frc (err %d)&amp;quot;&lt;/span&gt;, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// END of temporary support for automatic FRC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t tunneled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;, &amp;amp;tunneled) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tunneled != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring TUNNELED video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t audioHwSync = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio-hw-sync&amp;quot;&lt;/span&gt;, &amp;amp;audioHwSync)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;No Audio HW Sync provided for video tunnel&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = configureTunneledVideoPlayback(audioHwSync, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;configureTunneledVideoPlayback(%d,%p) failed!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        audioHwSync, nativeWindow.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, kPortIndexOutput, OMX_TRUE, maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring CPU controlled video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Explicity reset the sideband handle of the window for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// non-tunneled video in case the window was previously used&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// for a tunneled video playback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = native_window_set_sideband_stream(nativeWindow.get(), NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;set_sideband_stream(NULL) failed! (err %d).&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Always try to enable dynamic output buffers on native surface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, kPortIndexOutput, OMX_TRUE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// if adaptive playback has been requested, try JB fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; THIS FALLBACK MECHANISM WILL BE REMOVED DUE TO ITS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// LARGE MEMORY REQUIREMENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we will not do adaptive playback on software accessed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// surfaces as they never had to respond to changes in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// crop window, and we don&amp;apos;t trust that they will be able to.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; usageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canDoAdaptivePlayback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nativeWindow-&amp;gt;query(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nativeWindow.get(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        NATIVE_WINDOW_CONSUMER_USAGE_BITS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;usageBits) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (usageBits &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                (GRALLOC_USAGE_SW_READ_MASK |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 GRALLOC_USAGE_SW_WRITE_MASK)) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canDoAdaptivePlayback &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback(%dx%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mNode, kPortIndexOutput, OMX_TRUE, maxWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW_IF(err != OK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers succeeded&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(storingMetadataInDecodedBuffers());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLegacyAdaptiveExperiment = ADebug::isExperimentEnabled(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&amp;quot;legacy-adaptive&amp;quot;&lt;/span&gt;, !msg-&amp;gt;contains(&lt;span class=&quot;string&quot;&gt;&amp;quot;no-experiments&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;rotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// determine need for software renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow &amp;amp;&amp;amp; mComponentName.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoEncoder(mime, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoDecoder(mime, msg, haveNativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNativeWindow = static_cast&amp;lt;Surface *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// initialize native window now to get actual output format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; this is needed for some encoders even though they don&amp;apos;t use native window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = initNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fallback for devices that do not handle flex-YUV for native buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t requestedColorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;requestedColorFormat) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    requestedColorFormat == OMX_COLOR_FormatYUV420Flexible) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                status_t err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t colorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_U32 flexibleEquivalent = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!outputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;colorFormat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;ouptut port did not have a color format (wrong domain?)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Requested output format %#x and got %#x.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), requestedColorFormat, colorFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isFlexibleColorFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mOMX, mNode, colorFormat, haveNativeWindow, &amp;amp;flexibleEquivalent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || flexibleEquivalent != (OMX_U32)requestedColorFormat) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// device did not handle flex-YUV request for native window, fall back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// to SW renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Falling back to software renderer&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindow.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindowUsageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (storingMetadataInDecodedBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mNode, kPortIndexOutput, OMX_FALSE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mOutputMetadataType = kMetadataBufferTypeInvalid; &lt;span class=&quot;comment&quot;&gt;// just in case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; implement adaptive-playback support for bytebuffer mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// This is done by SW codecs, but most HW codecs don&amp;apos;t support it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;enableGraphicBuffers(mNode, kPortIndexOutput, OMX_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsGrallocUsageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// fallback is not supported for protected playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = setupVideoDecoder(mime, msg, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Since we did not always check for these, leave them optional&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and have the decoder figure it all out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder ? kPortIndexInput : kPortIndexOutput,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t isADTS, aacProfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sbrMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxOutputChannelCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t pcmLimiterEnable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drcParams_t drc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;is-adts&amp;quot;&lt;/span&gt;, &amp;amp;isADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isADTS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-profile&amp;quot;&lt;/span&gt;, &amp;amp;aacProfile)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aacProfile = OMX_AUDIO_AACObjectNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-sbr-mode&amp;quot;&lt;/span&gt;, &amp;amp;sbrMode)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sbrMode = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-max-output-channel_count&amp;quot;&lt;/span&gt;, &amp;amp;maxOutputChannelCount)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxOutputChannelCount = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-pcm-limiter-enable&amp;quot;&lt;/span&gt;, &amp;amp;pcmLimiterEnable)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pcmLimiterEnable = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-encoded-target-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.encodedTargetLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.encodedTargetLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-cut-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcCut)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcCut = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-boost-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcBoost)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcBoost = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-heavy-compression&amp;quot;&lt;/span&gt;, &amp;amp;drc.heavyCompression)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.heavyCompression = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-target-ref-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.targetRefLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.targetRefLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAACCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, bitRate, aacProfile,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    isADTS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sbrMode, maxOutputChannelCount, drc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pcmLimiterEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_ALAW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_MLAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// These are PCM-like formats with a fixed sample rate but&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a variable number of channels.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sampleRate = &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupG711Codec(encoder, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sampleRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, compressionLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;missing channel count or sample rate for FLAC encoder&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;complexity&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    !msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;flac-compression-level&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default FLAC compression level&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 0&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 8&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupFlacCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(kPortIndexInput, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_EAC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupEAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-delay&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderDelay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderDelay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-padding&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderPadding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderPadding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-mask&amp;quot;&lt;/span&gt;, &amp;amp;mChannelMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t maxInputSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-input-size&amp;quot;&lt;/span&gt;, &amp;amp;maxInputSize)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, (size_t)maxInputSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.Nvidia.aac.decoder&amp;quot;&lt;/span&gt;, mComponentName.c_str())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;label&quot;&gt;XXX&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &amp;amp;priority)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setPriority(priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t rateInt = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; rateFloat = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateFloat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateInt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rateFloat = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)rateInt;  &lt;span class=&quot;comment&quot;&gt;// 16MHz (FLINTMAX) is OK for upper bound.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rateFloat &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setOperatingRate(rateFloat, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBaseOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = getPortFormat(kPortIndexInput, inputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputFormat = inputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x4E86;&amp;#x8FD9;&amp;#x91CC;&amp;#x6574;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x548C;&amp;#x914D;&amp;#x7F6E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;start&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;MediaResource&amp;gt; resources;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type = (mFlags &amp;amp; kFlagIsSecure) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            kResourceSecureCodec : kResourceNonSecureCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *subtype = mIsVideo ? kResourceVideoCodec : kResourceAudioCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(type), String8(subtype), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t know the buffer size at this point, but it&amp;apos;s fine to use 1 because&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the reclaimResource call doesn&amp;apos;t consider the requester&amp;apos;s buffer size for now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(kResourceGraphicMemory), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Recover codec from previous error before retry start.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to reset codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = PostAndAwaitResponse(mConfigureMsg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to configure codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isResourceError(err)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(STARTED)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mHavePendingInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onInputBufferAvailable()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHavePendingInputBuffers = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec-&amp;gt;signalResume()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //..................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, OK)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else if (mState != CONFIGURED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, INVALID_OPERATION)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(STARTING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateStart()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8ABF;&amp;#x7528;initiateStart&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::initiateStart() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::LoadedState&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;signalErr&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;(OMX_ErrorUndefined, makeNoSideEffectStatus(err));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;changeState(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mLoadedToIdleState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::signalResume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatResume, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatResume:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::ExecutingState::resume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    submitOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Post all available input buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mBuffers[kPortIndexInput].size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] we don&amp;apos;t have any input buffers to resume&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mCodec-&amp;gt;mBuffers[kPortIndexInput].size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo *info = &amp;amp;mCodec-&amp;gt;mBuffers[kPortIndexInput].editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info-&amp;gt;mStatus == BufferInfo::OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postFillThisBuffer(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mActive = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::BaseState::postFillThisBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mPortEOS[kPortIndexInput]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)BufferInfo::OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatFillThisBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mData-&amp;gt;meta()-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, info-&amp;gt;mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInputBufferFilled, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = BufferInfo::OWNED_BY_UPSTREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatFillThisBuffer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsAsync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mHaveInputSurface) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mHavePendingInputBuffers = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onInputBufferAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagDequeueInputPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(handleDequeueInputBuffer(mDequeueInputReplyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mDequeueInputTimeoutGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagDequeueInputPending;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeueInputReplyID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postActivityNotificationIfPossible();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;MediaCodec&lt;/span&gt;::onInputBufferAvailable&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((index = dequeuePortBuffer(kPortIndexInput)) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mCallback-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackID&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;CB_INPUT_AVAILABLE&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;mCallback&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::Decoder::onConfigure(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCodecNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;setCallback(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::setCallback(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatSetCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PostAndAwaitResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, &amp;amp;response)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatSetCallback:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&amp;quot;callback&amp;quot;, &amp;amp;callback))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mCallback != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response = new AMessage&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;postReply(replyID)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x77E5;&amp;#x9053;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;i&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;kWhatCodecNotify &amp;#x4E0B;&amp;#x7684; CB_INPUT_AVAILABLE&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaCodec::CB_INPUT_AVAILABLE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleAnInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool NuPlayer::Decoder::handleAnInputBuffer(size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;getInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleError(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mInputBuffers.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = mInputBuffers.size(); i &amp;lt;= &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.editItemAt(i) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.editItemAt(i) = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//CHECK_LT(bufferIx, mInputBuffers.size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;] != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;]-&amp;gt;release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mCSDsToSubmit.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = mCSDsToSubmit.itemAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] resubmitting CSD&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCSDsToSubmit.removeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(onInputBufferFetched(msg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!mPendingInputMessages.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = *mPendingInputMessages.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPendingInputMessages.erase(mPendingInputMessages.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDequeuedInputBuffers.push_back(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onRequestInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::DecoderBase::onRequestInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRequestInputBuffersPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doRequestBuffers() return true if we should request more data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (doRequestBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRequestInputBuffersPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatRequestInputBuffers, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NuPlayer::Decoder::doRequestBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mRenderer is only NULL if we have a legacy widevine source that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// is not yet ready. In this case we must not fetch input.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending() || mRenderer == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (err == OK &amp;amp;&amp;amp; !mDequeuedInputBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t bufferIx = *mDequeuedInputBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, bufferIx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = fetchInputData(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK &amp;amp;&amp;amp; err != ERROR_END_OF_STREAM) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if EOS, need to queue EOS buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeuedInputBuffers.erase(mDequeuedInputBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPendingInputMessages.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingInputMessages.push_back(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err == -EWOULDBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mSource-&amp;gt;feedMoreTSData() == OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayer::Decoder::fetchInputData(sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; dropAccessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;dequeueAccessUnit(mIsAudio, &amp;amp;accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EWOULDBLOCK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == INFO_DISCONTINUITY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;type));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; formatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (type &amp;amp; ATSParser::DISCONTINUITY_AUDIO_FORMAT))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (!mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            (type &amp;amp; ATSParser::DISCONTINUITY_VIDEO_FORMAT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeChange = (type &amp;amp; ATSParser::DISCONTINUITY_TIME) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s discontinuity (format=%d, time=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, formatChange, timeChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; seamlessFormatChange = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AMessage&amp;gt; newFormat = mSource-&amp;gt;getFormat(mIsAudio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    seamlessFormatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        supportsSeamlessFormatChange(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// treat seamless format change separately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    formatChange = !seamlessFormatChange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// For format or time change, return EOS to queue EOS input,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// then wait for EOS on output.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange &lt;span class=&quot;comment&quot;&gt;/* not seamless */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFormatChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTimeChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seamlessFormatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// reuse existing decoder and don&amp;apos;t flush&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// This stream is unaffected by the discontinuity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EWOULDBLOCK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reply should only be returned without a buffer set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// when there is an error (including EOS)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(err != OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsAudio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mIsSecure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mRenderer-&amp;gt;getVideoLateByUs() &amp;gt; &lt;span class=&quot;number&quot;&gt;100000l&lt;/span&gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mIsVideoAVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !IsAVCReferenceFrame(accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumInputFramesDropped;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (dropAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGV(&amp;quot;returned a valid buffer of %s data&amp;quot;, mIsAudio ? &amp;quot;mIsAudio&amp;quot; : &amp;quot;video&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; mediaTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;mediaTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] feeding input buffer at media time %.3f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mediaTimeUs / &lt;span class=&quot;number&quot;&gt;1E6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCCDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCCDecoder-&amp;gt;decode(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#RTSP-&amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;RTSP &amp;#x6982;&amp;#x8FF0;&amp;#xFF1A;&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于NuPlayer的HLS流媒体协议</title>
    <link href="http://yoursite.com/2016/08/02/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8ENuPlayer%E7%9A%84HLS%E6%B5%81%E5%AA%92%E4%BD%93%E5%8D%8F%E8%AE%AE/"/>
    <id>http://yoursite.com/2016/08/02/Android-进阶之源码分析基于NuPlayer的HLS流媒体协议/</id>
    <published>2016-08-02T14:58:01.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;h4 id=&quot;HLS-&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#HLS-&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;HLS &amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;HLS &amp;#x6982;&amp;#x8FF0;&lt;/h4&gt;&lt;p&gt;HTTP Live Streaming&amp;#xFF08;HLS&amp;#xFF09;&amp;#x662F;&amp;#x82F9;&amp;#x679C;&amp;#x516C;&amp;#x53F8;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x57FA;&amp;#x4E8E;HTTP&amp;#x7684;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x76F4;&amp;#x64AD;&amp;#x548C;&amp;#x70B9;&amp;#x64AD;&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x5E94;&amp;#x7528;&amp;#x5728;iOS&amp;#x7CFB;&amp;#x7EDF;&amp;#x3002;&amp;#x76F8;&amp;#x5BF9;&amp;#x4E8E;&amp;#x666E;&amp;#x901A;&amp;#x7684;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;RTMP&amp;#x534F;&amp;#x8BAE;&amp;#x3001;RTSP&amp;#x534F;&amp;#x8BAE;&amp;#x3001;MMS&amp;#x534F;&amp;#x8BAE;&amp;#x7B49;&amp;#xFF0C;HLS&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x4F18;&amp;#x70B9;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x81EA;&amp;#x52A8;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E0D;&amp;#x540C;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x8F83;&amp;#x597D;&amp;#xFF0C;&amp;#x5219;&amp;#x4F1A;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x9AD8;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x82E5;&amp;#x53D1;&amp;#x73B0;&amp;#x7F51;&amp;#x7EDC;&amp;#x72B6;&amp;#x51B5;&amp;#x4E0D;&amp;#x4F73;&amp;#xFF0C;&amp;#x5219;&amp;#x4F1A;&amp;#x9010;&amp;#x6E10;&amp;#x8FC7;&amp;#x6E21;&amp;#x5230;&amp;#x4F4E;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0B;&amp;#x9762;&amp;#x5C06;&amp;#x4F1A;&amp;#x7ED3;&amp;#x5408;&amp;#x4EE3;&amp;#x7801;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8BF4;&amp;#x660E;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;a href=&quot;#HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot; class=&quot;headerlink&quot; title=&quot;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&quot;&gt;&lt;/a&gt;HLS&amp;#x6846;&amp;#x67B6;&amp;#x4ECB;&amp;#x7ECD;&lt;/h4&gt;&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;HLS&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x6574;&amp;#x4F53;&amp;#x7ED3;&amp;#x6784;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x5C06;&amp;#x8981;&amp;#x76F4;&amp;#x64AD;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x9001;&amp;#x5230;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5206;&amp;#x522B;&amp;#x5BF9;&amp;#x89C6;&amp;#x9891;&amp;#x548C;&amp;#x97F3;&amp;#x9891;&amp;#x8FDB;&amp;#x884C;&amp;#x7F16;&amp;#x7801;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8F93;&amp;#x51FA;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;MPEG-2&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x6D41;&amp;#x4E2D;&amp;#xFF0C;&amp;#x518D;&amp;#x7531;&amp;#x5206;&amp;#x6BB5;&amp;#x5668;&amp;#x5C06;MPEG-2&amp;#x4F20;&amp;#x8F93;&amp;#x6D41;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6BB5;&amp;#xFF0C;&amp;#x4EA7;&amp;#x751F;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7B49;&amp;#x95F4;&amp;#x9694;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x7247;&amp;#x6BB5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5A92;&amp;#x4F53;&amp;#x7247;&amp;#x6BB5;&amp;#x4E00;&amp;#x822C;&amp;#x5F88;&amp;#x5C0F;&amp;#x5E76;&amp;#x4E14;&amp;#x4FDD;&amp;#x5B58;&amp;#x6210;&amp;#x540E;&amp;#x7F00;&amp;#x4E3A;.ts&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x751F;&amp;#x6210;&amp;#x4E00;&amp;#x4E2A;&amp;#x6307;&amp;#x5411;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5F88;&amp;#x7ECF;&amp;#x5E38;&amp;#x542C;&amp;#x5230;&amp;#x7684;.M3U8&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5B8C;&amp;#x6210;&amp;#x5206;&amp;#x6BB5;&amp;#x4E4B;&amp;#x540E;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x4EE5;&amp;#x53CA;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0A;&amp;#x4F20;&amp;#x5230;Web&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#x3002;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8BFB;&amp;#x53D6;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7D22;&amp;#x5F15;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5217;&amp;#x51FA;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x4E0B;&amp;#x8F7D;&amp;#x540E;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ts&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x538B;&amp;#x83B7;&amp;#x5F97;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6570;&amp;#x636E;&amp;#x5E76;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#x3002;&amp;#x7531;&amp;#x4E8E;&amp;#x5728;&amp;#x76F4;&amp;#x64AD;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5730;&amp;#x5C06;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x76F4;&amp;#x64AD;&amp;#x6570;&amp;#x636E;&amp;#x751F;&amp;#x6210;&amp;#x65B0;&amp;#x7684;&amp;#x5C0F;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0A;&amp;#x4F20;&amp;#x6240;&amp;#x4EE5;&amp;#x53EA;&amp;#x8981;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x4E0D;&amp;#x65AD;&amp;#x5730;&amp;#x6309;&amp;#x987A;&amp;#x5E8F;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5E76;&amp;#x64AD;&amp;#x653E;&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0A;&amp;#x770B;&amp;#x5C31;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;&amp;#x76F4;&amp;#x64AD;&amp;#x3002;&amp;#x800C;&amp;#x4E14;&amp;#x7531;&amp;#x4E8E;&amp;#x5206;&amp;#x6BB5;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5F88;&amp;#x77ED;&amp;#xFF0C;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x5B9E;&amp;#x9645;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x60C5;&amp;#x51B5;&amp;#x5207;&amp;#x6362;&amp;#x5230;&amp;#x4E0D;&amp;#x540C;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x76F4;&amp;#x64AD;&amp;#x6E90;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5B9E;&amp;#x73B0;&amp;#x591A;&amp;#x7801;&amp;#x7387;&amp;#x7684;&amp;#x9002;&amp;#x914D;&amp;#x7684;&amp;#x76EE;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;M3U8-&amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#M3U8-&amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;M3U8 &amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;M3U8 &amp;#x6807;&amp;#x7B7E;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;/h4&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/jwzhangjie/article/details/9744027&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/jwzhangjie/article/details/9744027&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;HLS&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-STREAM-INF:PROGRAM-ID=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,BANDWIDTH=&lt;span class=&quot;number&quot;&gt;899152&lt;/span&gt;,RESOLUTION=&lt;span class=&quot;number&quot;&gt;480&lt;/span&gt;x270,CODECS=&lt;span class=&quot;string&quot;&gt;&amp;quot;avc1.4d4015,mp4a.40.5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//hls.ftdp.com/video1_widld/m3u8/01.m3u8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x8FF0;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5206;&amp;#x6BB5;&amp;#x7D22;&amp;#x5F15;&amp;#x5217;&amp;#x8868;&amp;#xFF08;index&amp;#x6587;&amp;#x4EF6;&amp;#xFF09;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTM3U&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-VERSION:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-TARGETDURATION:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-MEDIA-SEQUENCE:&lt;span class=&quot;number&quot;&gt;6532&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-KEY:METHOD=AES-&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,URI=&lt;span class=&quot;string&quot;&gt;&amp;quot;18319965201.key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20125484&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6533.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXT-X-KEY:METHOD=AES-&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;,URI=&lt;span class=&quot;string&quot;&gt;&amp;quot;14319965205.key&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20125484&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6534.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#EXTINF:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;20140804&lt;/span&gt;T125708-&lt;span class=&quot;number&quot;&gt;01&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;6593.&lt;/span&gt;ts&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x7247;&amp;#x7684;Key&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0B;&amp;#x8F7D;&amp;#x67D0;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x7247;&lt;/li&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x51B3;&amp;#x5B9A;&amp;#x662F;&amp;#x5426;&amp;#x5207;&amp;#x6362;&amp;#x89C6;&amp;#x9891;&amp;#x8D44;&amp;#x6E90;&lt;/li&gt;
&lt;li&gt;&amp;#x5C06;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#x5206;&amp;#x7247;&amp;#x8D44;&amp;#x6E90;&amp;#x89E3;&amp;#x5BC6;&amp;#x540E;&amp;#x9001;&amp;#x5230;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801; &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5173;&amp;#x4E8E;NuPlayerDrvier&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x4EE5;&amp;#x53CA;SetDataSource&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x548C;Stagefight Player&amp;#x5927;&amp;#x4F53;&amp;#x4E00;&amp;#x81F4;&amp;#xFF0C;&amp;#x533A;&amp;#x522B;&amp;#x5728;&amp;#x4E8E;setDataSource&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x662F;&amp;#x6839;&amp;#x636E;url&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E09;&amp;#x79CD;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;DataSource&amp;#xFF1A;HttpLiveSource&amp;#xFF0C;RTSPSource&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;GenericSource&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x505A;&amp;#x5927;&amp;#x7BC7;&amp;#x5E45;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0A;&amp;#x56FE;&amp;#x5427;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/08/02/Android-&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;NuPlayer&amp;#x7684;HLS&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x534F;&amp;#x8BAE;/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x76F4;&amp;#x63A5;&amp;#x4ECE;prepare&amp;#x7ED3;&amp;#x5408;HLS&amp;#x539F;&amp;#x7406;&amp;#x5F00;&amp;#x59CB;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayerDriver::prepare() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepare(%p)&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; prepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayerDriver::prepare_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; STATE_UNPREPARED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = STATE_PREPARING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Make sure we&amp;apos;re not posting any notifications, success or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// failure information is only communicated through our result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// code.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIsAsyncPrepare = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState == STATE_PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCondition.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (mState == STATE_PREPARED) ? OK : UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; STATE_STOPPED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x7ECF;&amp;#x8FC7;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x4F1A;&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x53D8;&amp;#x91CF;mState&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;STATE_UNPREPARED&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5728;NuPlayerDriver::prepare_l()&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;mPlayer-&amp;gt;prepareAsync()&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;Nuplayer&amp;#x7684;prepareAsync&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatPrepare&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatPrepare, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;NuPlayer::prepareAsync&amp;#x4E2D;&amp;#x53EA;&amp;#x662F;&amp;#x53D1;&amp;#x9001;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;kWhatPrepare&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x3002;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Handler&amp;#x67E5;&amp;#x770B;&amp;#x5904;&amp;#x7406;&amp;#x6D41;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//ignore other fuck source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatPrepare:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;Source&amp;#x7684;prepareAsync &amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x770B;&amp;#x4E0B;HttpliveSource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//ignore other fuck source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;Source&amp;#x7684;prepareAsync&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;mSource&amp;#x662F;&amp;#x5728;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x53EA;&amp;#x5206;&amp;#x6790;HLS&amp;#x7684;&amp;#x60C5;&amp;#x5F62;&amp;#x6240;&amp;#x4EE5;&amp;#x9700;&amp;#x8981;&amp;#x67E5;&amp;#x770B;HttpliveSource&amp;#x7684;prepareAsync&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::HTTPLiveSource&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::prepareAsync&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;Looper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLiveLooper == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;http live&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;kWhatSessionNotify&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;LiveSession&amp;#x7528;&amp;#x4E8E;&amp;#x901A;&amp;#x77E5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatSessionNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;LiveSession&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveSession = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; LiveSession(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (mFlags &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt; kFlagIncognito) ? LiveSession&lt;span class=&quot;tag&quot;&gt;::kFlagIncognito&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHTTPService);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(mLiveSession);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;LiveSession&amp;#x8FDB;&amp;#x884C;&amp;#x5F02;&amp;#x6B65;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveSession&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;connectAsync(mURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), mExtraHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;isEmpty() ? &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; : &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mExtraHeaders);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void LiveSession::connectAsync(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;kWhatConnect&amp;#x5E76;&amp;#x4F20;&amp;#x5165;url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConnect, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (headers != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt;(*headers));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConnect:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;onConnect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onConnect(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; LiveSession&lt;span class=&quot;tag&quot;&gt;::onConnect&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4F20;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;mMasterURL));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    KeyedVect&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;&amp;lt;String8, String8&amp;gt; *headers = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;headers&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; **)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;headers)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mExtraHeaders&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mExtraHeaders = *headers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delete headers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        headers = &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;mFetcherLooper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFetcherLooper == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; ALooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setName(&lt;span class=&quot;string&quot;&gt;&amp;quot;Fetcher&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFetcherLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addFetcher(mMasterURL&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str())&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;fetchPlaylistAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x4E0D;&amp;#x540C;&amp;#x5E26;&amp;#x5BBD;&amp;#x4E0B;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7F51;&amp;#x7EDC;&amp;#x8D44;&amp;#x6E90;URI&amp;#x53CA;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x4FE1;&amp;#x606F;&amp;#x4E86;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;PlaylistFetcher&amp;gt; LiveSession::addFetcher(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *uri) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; index = mFetcherInfos.indexOfKey(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatFetcherNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;switchGeneration&amp;quot;&lt;/span&gt;, mSwitchGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FetcherInfo info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;PlaylistFetcher&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mFetcher = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PlaylistFetcher(notify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, uri, mCurBandwidthIndex, mSubtitleGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mDurationUs = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mToBeRemoved = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info.mToBeResumed = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherLooper-&amp;gt;registerHandler(info.mFetcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherInfos.add(uri, info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;info.mFetcher&amp;#x662F;&amp;#x4E0A;&amp;#x9762;new &amp;#x51FA;&amp;#x6765;&amp;#x7684;PlaylistFetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; info.mFetcher;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;PlaylistFetcher&amp;#x8C03;&amp;#x7528;fetchPlaylistAsync&amp;#x6765;&amp;#x83B7;&amp;#x53D6;playlists&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void PlaylistFetcher::fetchPlaylistAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatFetchPlaylist, this))-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void PlaylistFetcher::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatFetchPlaylist:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; unchanged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;M3U8Parser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;M3UParser&amp;gt; playlist = mHTTPDownloader-&amp;gt;fetchPlaylist(mURI.c_str(), &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* curPlaylistHash */&lt;/span&gt;, &amp;amp;unchanged);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatPlaylistFetched);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;playlist&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;playlist&amp;quot;&lt;/span&gt;, playlist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;fetchFile&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;fetchFile&amp;#x4ECE;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7AEF;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;m3u8 playlist&amp;#x5185;&amp;#x5BB9;&amp;#x5B58;&amp;#x653E;&amp;#x5230;buffer&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x88C5;&amp;#x6210;M3UParser&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;M3UParser&amp;gt; HTTPDownloader::fetchPlaylist(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *curPlaylistHash, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; *unchanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *unchanged = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 actualUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;fetchFile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; err = fetchFile(url, &amp;amp;buffer, &amp;amp;actualUrl);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x65AD;&amp;#x5F00;&amp;#x8FDE;&amp;#x63A5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHTTPDataSource-&amp;gt;disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x88C5;&amp;#x6210;M3UParser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;M3UParser&amp;gt; playlist = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; M3UParser(actualUrl.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), buffer-&amp;gt;data(), buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; playlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; HTTPDownloader::fetchFile(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, sp&amp;lt;ABuffer&amp;gt; *out, String8 *actualUrl) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; err = fetchBlock(url, out, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, actualUrl, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* reconnect */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// close off the connection after use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHTTPDataSource-&amp;gt;disconnect();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x770B;&amp;#x4E0B;M3UParser&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;M3UParser::M3UParser(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *baseURI, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *data, size_t size)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInitCheck(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mBaseURI(baseURI),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsExtM3U(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsVariantPlaylist(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsComplete(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsEvent(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstSeqNumber(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLastSeqNumber(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetDurationUs(-1ll),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDiscontinuitySeq(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDiscontinuityCount(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSelectedIndex(-1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInitCheck = parse(data, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;parse&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t M3UParser::parse(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *_data, size_t &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t lineNo = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *data = (&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *)_data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint64_t segmentRangeOffset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offset &amp;lt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t offsetLF = offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (offsetLF &amp;lt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; &amp;amp;&amp;amp; data[offsetLF] != &lt;span class=&quot;string&quot;&gt;&amp;apos;\n&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++offsetLF;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offsetLF &amp;gt; offset &amp;amp;&amp;amp; data[offsetLF - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&amp;apos;\r&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.setTo(&amp;amp;data[offset], offsetLF - offset - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.setTo(&amp;amp;data[offset], offsetLF - offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offset = offsetLF + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lineNo == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&amp;quot;#EXTM3U&amp;quot;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIsExtM3U = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsExtM3U) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-TARGETDURATION&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaData(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;mMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;target-duration&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-MEDIA-SEQUENCE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaData(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;mMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;media-sequence&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-KEY&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseCipherInfo(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta, mBaseURI);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-ENDLIST&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsComplete = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-PLAYLIST-TYPE:EVENT&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsEvent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXTINF&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMetaDataDuration(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta, &lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-DISCONTINUITY&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ++mDiscontinuityCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-STREAM-INF&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mIsVariantPlaylist = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseStreamInf(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;itemMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-BYTERANGE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uint64_t length, offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseByteRange(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, segmentRangeOffset, &amp;amp;length, &amp;amp;offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemMeta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-offset&amp;quot;&lt;/span&gt;, offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    itemMeta-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-length&amp;quot;&lt;/span&gt;, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    segmentRangeOffset = offset + length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-MEDIA&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseMedia(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#EXT-X-DISCONTINUITY-SEQUENCE&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                size_t seq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = parseDiscontinuitySequence(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &amp;amp;seq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mDiscontinuitySeq = seq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int64_t durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta == NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;durationUs&amp;quot;&lt;/span&gt;, &amp;amp;durationUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity-sequence&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mDiscontinuitySeq + mDiscontinuityCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mItems.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Item *item = &amp;amp;mItems.editItemAt(mItems.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(MakeURL(mBaseURI.c_str(), &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.c_str(), &amp;amp;item-&amp;gt;mURI));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item-&amp;gt;mMeta = itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            itemMeta.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        offset = offsetLF + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++lineNo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsVariantPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t targetDurationSecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta == NULL || !mMeta-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;target-duration&amp;quot;&lt;/span&gt;, &amp;amp;targetDurationSecs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Media playlist missing #EXT-X-TARGETDURATION&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_MALFORMED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTargetDurationUs = targetDurationSecs * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstSeqNumber = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMeta != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;media-sequence&amp;quot;&lt;/span&gt;, &amp;amp;mFirstSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastSeqNumber = mFirstSeqNumber + mItems.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x73B0;&amp;#x5728;&amp;#x5DF2;&amp;#x7ECF;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4E86;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;M3UParser&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;kWhatPlaylistFetched&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5728;&amp;#x54EA;&amp;#x91CC;&amp;#x88AB;&amp;#x5904;&amp;#x7406;&amp;#x5462;&amp;#xFF1F;&amp;#x5F53;&amp;#x7136;&amp;#x662F;LiveSession&amp;#x554A;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;PlaylistFetcher:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatPlaylistFetched:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onMasterPlaylistFetched(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x540E;&amp;#x8981;&amp;#x5E72;&amp;#x5565;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onMasterPlaylistFetched(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;uri&amp;quot;&lt;/span&gt;, &amp;amp;uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; index = mFetcherInfos.indexOfKey(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// no longer useful, remove&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherLooper-&amp;gt;unregisterHandler(mFetcherInfos[index].mFetcher-&amp;gt;id());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFetcherInfos.removeItemsAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x8D70;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;playlist&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;playlist&amp;quot;&lt;/span&gt;, (sp&amp;lt;RefBase&amp;gt; *)&amp;amp;mPlaylist));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We trust the content provider to make a reasonable choice of preferred&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initial bandwidth by listing it first in the variant playlist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// At startup we really don&amp;apos;t have a good estimate on the available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// network bandwidth since we haven&amp;apos;t tranferred any data yet. Once&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we have we can make a better informed choice.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; initialBandwidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; initialBandwidthIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;playlist&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6548;&amp;#xFF0C;&amp;#x65E0;&amp;#x6548;&amp;#x5C31;&amp;#x6CA1;&amp;#x5565;&amp;#x7528;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5047;&amp;#x8BBE;&amp;#x6709;&amp;#x6548;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;isVariantPlaylist()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;BandwidthItem&amp;gt; itemsWithVideo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPlaylist-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BandwidthItem item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.mPlaylistIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            item.mLastFailureUs = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlaylist-&amp;gt;itemAt(i, &amp;amp;uri, &amp;amp;meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;item.mBandwidth));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x5927;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;width)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxWidth = max(maxWidth, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxHeight = max(maxHeight, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mBandwidthItems.push(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;hasType(i, &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemsWithVideo.push(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x79FB;&amp;#x9664;&amp;#x53EA;&amp;#x6709;&amp;#x58F0;&amp;#x97F3;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!itemsWithVideo.empty()&amp;amp;&amp;amp; itemsWithVideo.size() &amp;lt; mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mBandwidthItems.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; itemsWithVideo.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBandwidthItems.push(itemsWithVideo[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_GT(mBandwidthItems.size(), &lt;span class=&quot;number&quot;&gt;0u&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        initialBandwidth = mBandwidthItems[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].mBandwidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6309;&amp;#x7167;&amp;#x5E26;&amp;#x5BBD;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mBandwidthItems.sort(SortByBandwidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mBandwidthItems.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthItems.itemAt(i).mBandwidth == initialBandwidth) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                initialBandwidthIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x6700;&amp;#x5927;&amp;#x7684;&amp;#x5206;&amp;#x8FA8;&amp;#x7387;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMaxWidth = maxWidth &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? maxWidth : mMaxWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMaxHeight = maxHeight &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? maxHeight : mMaxHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaylist-&amp;gt;pickRandomMediaItems();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    changeConfiguration(&lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l &lt;span class=&quot;comment&quot;&gt;/* timeUs */&lt;/span&gt;, initialBandwidthIndex, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* pickTrack */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::changeConfiguration(&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; timeUs, &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bandwidthIndex, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; pickTrack) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D6;&amp;#x6D88;&amp;#x5E26;&amp;#x5BBD;&amp;#x5207;&amp;#x6362;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cancelBandwidthSwitch();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReconfigurationInProgress = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7531;mOrigBandwidthIndex&amp;#x5207;&amp;#x6362;&amp;#x5230;mCurBandwidthIndex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bandwidthIndex &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x5E26;&amp;#x5BBD;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x5F53;&amp;#x524D;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOrigBandwidthIndex = mCurBandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurBandwidthIndex = bandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOrigBandwidthIndex != mCurBandwidthIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x5207;&amp;#x6362;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;#### Starting Bandwidth Switch: %zd =&amp;gt; %zd&amp;quot;&lt;/span&gt;,mOrigBandwidthIndex, mCurBandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_LT(mCurBandwidthIndex, mBandwidthItems.size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x7684;BandwidthItem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; BandwidthItem &amp;amp;item = mBandwidthItems.itemAt(mCurBandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; streamMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// streams that should be fetched by the new fetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; resumeMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// streams that should be fetched by the original fetcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString URIs[kMaxStreams];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;getTypeURI(item.mPlaylistIndex, mStreams[i].mType, &amp;amp;URIs[i])) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            streamMask |= indexToType(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x505C;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#xFF0C;&amp;#x6682;&amp;#x505C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x8981;&amp;#x590D;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x7684;&amp;#x6240;&amp;#x4EE5;&amp;#x8DF3;&amp;#x8FC7;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mFetcherInfos.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// skip onChangeConfiguration2 (decoder destruction) if not seeking.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatChangeConfiguration3, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatChangeConfiguration2, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;streamMask&amp;quot;&lt;/span&gt;, streamMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;resumeMask&amp;quot;&lt;/span&gt;, resumeMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;pickTrack&amp;quot;&lt;/span&gt;, pickTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, timeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((streamMask | resumeMask) &amp;amp; indexToType(i)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg-&amp;gt;setString(mStreams[i].uriKey().c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Every time a fetcher acknowledges the stopAsync or pauseAsync request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we&amp;apos;ll decrement mContinuationCounter, once it reaches zero, i.e. all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// fetchers have completed their asynchronous operation, we&amp;apos;ll post&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mContinuation, which then is handled below in onChangeConfiguration2.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//&amp;#x6BCF;&amp;#x6B21;fetcher &amp;#x8C03;&amp;#x7528;&amp;#x4E86;stopAsync&amp;#x548C;pauseAsync mContinuationCounter &amp;#x6570;&amp;#x503C;&amp;#x90FD;&amp;#x4F1A;&amp;#x51CF;&amp;#x53BB;1,&amp;#x4E00;&amp;#x65E6;&amp;#x51CF;&amp;#x5230;0 &amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;onChangeConfiguration2&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mContinuationCounter = mFetcherInfos.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mContinuation = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mContinuationCounter == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void LiveSession::onChangeConfiguration2(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int64_t timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;timeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastSeekTimeUs = timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastDequeuedTimeUs = timeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPacketSources.size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; packetSource = mPacketSources.editValueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;MetaData&amp;gt; format = packetSource-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packetSource-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            packetSource-&amp;gt;setFormat(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStreams[i].reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDiscontinuityOffsetTimesUs.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDiscontinuityAbsStartTimesUs.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekReplyID != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(mSeekReply != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply-&amp;gt;postReply(mSeekReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReplyID.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeekReply.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        restartPollBuffering();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t streamMask, resumeMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;streamMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;streamMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;resumeMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;resumeMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    streamMask |= resumeMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString URIs[kMaxStreams];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamMask &amp;amp; indexToType(i)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;uriKey = mStreams[i].uriKey();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findString(uriKey.c_str(), &amp;amp;URIs[i]));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s = &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uriKey.c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t changedMask = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kMaxStreams &amp;amp;&amp;amp; i != kSubtitleIndex; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// stream URI could change even if onChangeConfiguration2 is only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// used for seek. Seek could happen during a bw switch, in this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// case bw switch will be cancelled, but the seekTo position will&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fetch from the new URI.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStreamMask &amp;amp; streamMask &amp;amp; indexToType(i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mStreams[i].mUri.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !(URIs[i] == mStreams[i].mUri)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;stream %zu changed: oldURI %s, newURI %s&amp;quot;&lt;/span&gt;, i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStreams[i].mUri.c_str(), URIs[i].c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source = mPacketSources.valueFor(indexToType(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;getLatestDequeuedMeta() != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                source-&amp;gt;queueDiscontinuity(ATSParser::DISCONTINUITY_FORMATCHANGE, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Determine which decoders to shutdown on the player side,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a decoder has to be shutdown if its streamtype was active&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// before but now longer isn&amp;apos;t.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStreamMask &amp;amp; ~streamMask &amp;amp; indexToType(i))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            changedMask |= indexToType(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;kWhatStreamsChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatStreamsChanged);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;changedMask&amp;quot;&lt;/span&gt;, changedMask);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;kWhatChangeConfiguration3&amp;#x4F5C;&amp;#x4E3A;&amp;#x56DE;&amp;#x590D;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setWhat(kWhatChangeConfiguration3);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LiveSession::kWhatStreamsChanged:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t changedMask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;changedMask&amp;quot;&lt;/span&gt;, (int32_t *)&amp;amp;changedMask));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x4EC0;&amp;#x4E48;&amp;#x6D41;&amp;#x6539;&amp;#x53D8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio = changedMask &amp;amp; LiveSession::STREAMTYPE_AUDIO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; video = changedMask &amp;amp; LiveSession::STREAMTYPE_VIDEO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = dupNotify();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatQueueDecoderShutdown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;, audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;constant&quot;&gt;Source:&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:kWhatQueueDecoderShutdown&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t audio, video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;, &amp;amp;audio));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, &amp;amp;video));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;constant&quot;&gt;AMessage&amp;gt;&lt;/span&gt; reply;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;constant&quot;&gt;CHECK(&lt;/span&gt;msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, &amp;amp;reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    queueDecoderShutdown(audio, video, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::queueDecoderShutdown(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; video, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueDecoderShutdown audio=%d, video=%d&amp;quot;&lt;/span&gt;, audio, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FlushDecoderAction(audio ? FLUSH_CMD_SHUTDOWN : FLUSH_CMD_NONE,video ? FLUSH_CMD_SHUTDOWN : FLUSH_CMD_NONE));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SimpleAction(&amp;amp;NuPlayer::performScanSources));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDeferredActions.push_back(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PostMessageAction(reply));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    processDeferredActions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8C03;&amp;#x7528;performDecoderFlush&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct NuPlayer&lt;span class=&quot;value&quot;&gt;::FlushDecoderAction : public Action {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;FlushDecoderAction&lt;/span&gt;(FlushCommand audio, FlushCommand video)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        : &lt;span class=&quot;function&quot;&gt;mAudio&lt;/span&gt;(audio),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;function&quot;&gt;mVideo&lt;/span&gt;(video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual void &lt;span class=&quot;function&quot;&gt;execute&lt;/span&gt;(NuPlayer *player) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player-&amp;gt;&lt;span class=&quot;function&quot;&gt;performDecoderFlush&lt;/span&gt;(mAudio, mVideo);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private&lt;span class=&quot;value&quot;&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FlushCommand mAudio;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FlushCommand mVideo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;DISALLOW_EVIL_CONSTRUCTORS&lt;/span&gt;(FlushDecoderAction);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::performDecoderFlush(FlushCommand audio, FlushCommand video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;performDecoderFlush audio=%d, video=%d&amp;quot;&lt;/span&gt;, audio, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((audio == FLUSH_CMD_NONE || mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)&amp;amp;&amp;amp; (video == FLUSH_CMD_NONE || mVideoDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio != FLUSH_CMD_NONE &amp;amp;&amp;amp; mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;, (audio == FLUSH_CMD_SHUTDOWN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video != FLUSH_CMD_NONE &amp;amp;&amp;amp; mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* audio */&lt;/span&gt;, (video == FLUSH_CMD_SHUTDOWN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::flushDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; needShutdown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] flushDecoder needShutdown=%d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          audio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, needShutdown);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DecoderBase&amp;gt; &amp;amp;decoder = getDecoder(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DecoderBase&amp;gt; &amp;amp;decoder = getDecoder(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (decoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;flushDecoder %s without decoder present&amp;quot;&lt;/span&gt;,audio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::postScanSources&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mScanSourcesPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatScanSources, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mScanSourcesGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatScanSources:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mScanSourcesPending = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; mHadAnySourcesBefore =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mAudioDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) || (mVideoDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialize video before audio because successful initialization of&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// video may change deep buffer mode of audio.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSurface != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &amp;amp;mVideoDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to re-open audio sink if there&amp;apos;s an existing decoder.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioDecoder == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        instantiateDecoder(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &amp;amp;mAudioDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t NuPlayer::instantiateDecoder(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; audio, sp&amp;lt;DecoderBase&amp;gt; *decoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x683C;&amp;#x5F0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format = mSource-&amp;gt;getFormat(audio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* realtime */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (audio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatAudioNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mAudioDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mAudioDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        determineAudioModeChange();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatVideoNotify, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mVideoDecoderGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mVideoDecoderGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *decoder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Decoder(notify, mSource, mPID, mRenderer, mSurface, mCCDecoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*decoder)-&amp;gt;configure(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B83;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::configure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::DecoderBase&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::init&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderLooper&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;registerHandler(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; NuPlayer&lt;span class=&quot;tag&quot;&gt;::Decoder&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onConfigure&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec = MediaCodec&lt;span class=&quot;tag&quot;&gt;::CreateByType&lt;/span&gt;(mCodecLooper, mime&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;c_str(), &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* encoder */&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* err */&lt;/span&gt;, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x914D;&amp;#x7F6E;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;configure(format, mSurface, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* crypto */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* flags */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5BBD;&amp;#x9AD8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mIsAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t width, height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;width)&lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; mOutputFormat&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;height)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, width);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStats&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x542F;&amp;#x52A8;MediaCodec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaCodec&amp;gt; MediaCodec::CreateByType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ALooper&amp;gt; &amp;amp;looper, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; *err, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodec(looper, pid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = codec-&amp;gt;init(mime, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* nameIsType */&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret == OK ? codec : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// NULL deallocates codec.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BF4;&amp;#x660E;mCodec&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;ACodec&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::init(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; AString &amp;amp;name, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; nameIsType, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mResourceManagerService-&amp;gt;init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType || !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;omx.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x540D;&amp;#x79F0;&amp;#x521B;&amp;#x5EFA;Codec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ACodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!nameIsType&amp;amp;&amp;amp; !strncasecmp(name.c_str(), &lt;span class=&quot;string&quot;&gt;&amp;quot;android.filter.&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInit, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;nameIsType&amp;quot;&lt;/span&gt;, nameIsType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nameIsType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, encoder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;kWhatInit:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;....................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateAllocateComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateAllocateComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatAllocateComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatAllocateComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onAllocateComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::UninitializedState::onAllocateComponent(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;OMXCodec::CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t quirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, &amp;amp;componentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t index = matchingCodecs.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::CodecNameAndQuirks *entry = &amp;amp;matchingCodecs.editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry-&amp;gt;mName = String8(componentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!OMXCodec::findCodecQuirks(componentName.c_str(), &amp;amp;entry-&amp;gt;mQuirks)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mime.c_str(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                encoder, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// matchComponentName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,     &lt;span class=&quot;comment&quot;&gt;// flags&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;CodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = NAME_NOT_FOUND;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t matchIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; matchIndex &amp;lt; matchingCodecs.size();++matchIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        componentName = matchingCodecs.itemAt(matchIndex).mName.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        quirks = matchingCodecs.itemAt(matchIndex).mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pid_t tid = gettid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; prevPriority = androidGetThreadPriority(tid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = omx-&amp;gt;allocateNode(componentName.c_str(), observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(tid, prevPriority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatOMXMessageList, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer-&amp;gt;setNotificationMessage(notify);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mComponentName = componentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mRenderTracker.setComponentName(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mFlags = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mQuirks = quirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mOMX = omx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;mNode = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentAllocated);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setString(&lt;span class=&quot;string&quot;&gt;&amp;quot;componentName&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;changeState(mCodec-&amp;gt;mLoadedState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::configure(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;Surface&amp;gt; &amp;amp;surface,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ICrypto&amp;gt; &amp;amp;crypto,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatConfigure, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, &amp;amp;mVideoWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, &amp;amp;mVideoHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!format-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;mRotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, flags);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, surface);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// save msg for reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfigureMsg = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//.....................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatConfigure:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;surface&amp;quot;&lt;/span&gt;, &amp;amp;obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;format&amp;quot;&lt;/span&gt;, &amp;amp;format));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push) &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagPushBlankBuffersOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = handleSetSurface(&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PostReplyWithError(replyID, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleSetSurface(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *crypto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;flags&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;flags));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CONFIGURE_FLAG_ENCODE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        format-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsEncoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateConfigureComponent(format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::initiateConfigureComponent&lt;/span&gt;(const sp&amp;lt;AMessage&amp;gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setWhat(kWhatConfigureComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setTarget(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatConfigureComponent:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onConfigureComponent(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ACodec::LoadedState::onConfigureComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onConfigureComponent&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mCodec-&amp;gt;mNode != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mime&amp;quot;&lt;/span&gt;, &amp;amp;mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mCodec-&amp;gt;configureCodec(mime.c_str(), msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatComponentConfigured);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mInputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mOutputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatComponentConfigured:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == UNINITIALIZED || mState == INITIALIZED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// In case a kWhatError message came in and replied with error,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we log a warning and ignore.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;configure interrupted by error, current state %d&amp;quot;&lt;/span&gt;, mState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mState, CONFIGURING);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// reset input surface flag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHaveInputSurface = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;input-format&amp;quot;&lt;/span&gt;, &amp;amp;mInputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;output-format&amp;quot;&lt;/span&gt;, &amp;amp;mOutputFormat));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t usingSwRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &amp;amp;usingSwRenderer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagUsesSoftwareRenderer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(CONFIGURED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage)-&amp;gt;postReply(mReplyID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x624D;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6700;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x95F4;&amp;#x597D;&amp;#x597D;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C55;&amp;#x5F00;&amp;#x7814;&amp;#x7A76;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5148;&amp;#x9488;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t ACodec::configureCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder&amp;quot;&lt;/span&gt;, &amp;amp;encoder)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        encoder = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; inputFormat = new AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; outputFormat = mNotify-&amp;gt;dup(); &lt;span class=&quot;comment&quot;&gt;// will use this for kWhatOutputFormatChanged&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsEncoder = encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOutputMetadataType = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = setComponentRole(encoder &lt;span class=&quot;comment&quot;&gt;/* isEncoder */&lt;/span&gt;, mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t bitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// FLAC encoder doesn&amp;apos;t need a bitrate, other encoders do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;bitrate&amp;quot;&lt;/span&gt;, &amp;amp;bitRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t storeMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE, &amp;amp;mInputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (input) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For this specific case we could be using camera source even if storeMetaDataInBuffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// returns Gralloc source. Pretend that we are; this will force us to use nBufferSize.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInputMetadataType == kMetadataBufferTypeGrallocSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputMetadataType = kMetadataBufferTypeCameraSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t usageBits;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX-&amp;gt;getParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode, (OMX_INDEXTYPE)OMX_IndexParamConsumerUsageBits,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;usageBits, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(usageBits)) == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inputFormat-&amp;gt;setInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-read-often&amp;quot;&lt;/span&gt;, !!(usageBits &amp;amp; GRALLOC_USAGE_SW_READ_OFTEN));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t prependSPSPPS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepend-sps-pps-to-idr-frames&amp;quot;&lt;/span&gt;, &amp;amp;prependSPSPPS)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; prependSPSPPS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_INDEXTYPE index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;getExtensionIndex(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mNode,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.android.index.prependSPSPPSToIDRFrames&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            PrependSPSPPSToIDRFramesParams params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            params.bEnable = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, index, &amp;amp;params, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(params));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Encoder could not be configured to emit SPS/PPS before &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;IDR frames. (err %d)&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Only enable metadata mode on encoder output if encoder can prepend&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// sps/pps to idr frames, since in metadata mode the bitstream is in an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// opaque handle, to which we don&amp;apos;t have access.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t video = !strncasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsVideo = video;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp; video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_BOOL enable = (OMX_BOOL) (prependSPSPPS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;store-metadata-in-buffers-output&amp;quot;&lt;/span&gt;, &amp;amp;storeMeta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; storeMeta != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexOutput, enable, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers (output) failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;repeat-previous-frame-after&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mRepeatFrameDelayUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRepeatFrameDelayUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-pts-gap-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxPtsGapUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxPtsGapUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-fps-to-encoder&amp;quot;&lt;/span&gt;, &amp;amp;mMaxFps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMaxFps = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;time-lapse&amp;quot;&lt;/span&gt;, &amp;amp;mTimePerCaptureUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTimePerCaptureUs = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;ll;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;create-input-buffers-suspended&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (int32_t*)&amp;amp;mCreateInputBuffersSuspended)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCreateInputBuffersSuspended = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; we only use native window for video decoders&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;RefBase&amp;gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveNativeWindow = msg-&amp;gt;findObject(&lt;span class=&quot;string&quot;&gt;&amp;quot;native-window&amp;quot;&lt;/span&gt;, &amp;amp;obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; obj != NULL &amp;amp;&amp;amp; video &amp;amp;&amp;amp; !encoder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLegacyAdaptiveExperiment = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video &amp;amp;&amp;amp; !encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t usageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected&amp;quot;&lt;/span&gt;, &amp;amp;usageProtected) &amp;amp;&amp;amp; usageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;protected output buffers must be sent to an ANativeWindow&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagIsGrallocUsageProtected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ANativeWindow&amp;gt; nativeWindow =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            static_cast&amp;lt;ANativeWindow *&amp;gt;(static_cast&amp;lt;Surface *&amp;gt;(obj.get()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// START of temporary support for automatic FRC - THIS WILL BE REMOVED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, &amp;amp;autoFrc)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; enabled = autoFrc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            OMX_CONFIG_BOOLEANTYPE config;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            InitOMXParams(&amp;amp;config);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            config.bEnabled = (OMX_BOOL)enabled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status_t temp = mOMX-&amp;gt;setConfig(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, (OMX_INDEXTYPE)OMX_IndexConfigAutoFramerateConversion,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;config, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(config));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (temp == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;auto-frc&amp;quot;&lt;/span&gt;, enabled);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (enabled) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;codec does not support requested auto-frc (err %d)&amp;quot;&lt;/span&gt;, temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// END of temporary support for automatic FRC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t tunneled;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;, &amp;amp;tunneled) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tunneled != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring TUNNELED video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t audioHwSync = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio-hw-sync&amp;quot;&lt;/span&gt;, &amp;amp;audioHwSync)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;No Audio HW Sync provided for video tunnel&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = configureTunneledVideoPlayback(audioHwSync, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;configureTunneledVideoPlayback(%d,%p) failed!&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        audioHwSync, nativeWindow.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, kPortIndexOutput, OMX_TRUE, maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Configuring CPU controlled video playback.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTunneled = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Explicity reset the sideband handle of the window for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// non-tunneled video in case the window was previously used&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// for a tunneled video playback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = native_window_set_sideband_stream(nativeWindow.get(), NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;set_sideband_stream(NULL) failed! (err %d).&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Always try to enable dynamic output buffers on native surface&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNode, kPortIndexOutput, OMX_TRUE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// if adaptive playback has been requested, try JB fallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;NOTE:&lt;/span&gt; THIS FALLBACK MECHANISM WILL BE REMOVED DUE TO ITS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// LARGE MEMORY REQUIREMENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we will not do adaptive playback on software accessed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// surfaces as they never had to respond to changes in the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// crop window, and we don&amp;apos;t trust that they will be able to.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; usageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canDoAdaptivePlayback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nativeWindow-&amp;gt;query(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        nativeWindow.get(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        NATIVE_WINDOW_CONSUMER_USAGE_BITS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;usageBits) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    canDoAdaptivePlayback =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (usageBits &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                (GRALLOC_USAGE_SW_READ_MASK |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 GRALLOC_USAGE_SW_WRITE_MASK)) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t maxWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, maxHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canDoAdaptivePlayback &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, &amp;amp;maxWidth) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, &amp;amp;maxHeight)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback(%dx%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), maxWidth, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = mOMX-&amp;gt;prepareForAdaptivePlayback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mNode, kPortIndexOutput, OMX_TRUE, maxWidth,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW_IF(err != OK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] prepareForAdaptivePlayback failed w/ err %d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            mComponentName.c_str(), err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-width&amp;quot;&lt;/span&gt;, maxWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-height&amp;quot;&lt;/span&gt;, maxHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// allow failure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] storeMetaDataInBuffers succeeded&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(storingMetadataInDecodedBuffers());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mLegacyAdaptiveExperiment = ADebug::isExperimentEnabled(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&amp;quot;legacy-adaptive&amp;quot;&lt;/span&gt;, !msg-&amp;gt;contains(&lt;span class=&quot;string&quot;&gt;&amp;quot;no-experiments&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t push;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;push-blank-buffers-on-shutdown&amp;quot;&lt;/span&gt;, &amp;amp;push)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; push != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFlags |= kFlagPushBlankBuffersToNativeWindowOnShutdown;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;rotation-degrees&amp;quot;&lt;/span&gt;, &amp;amp;rotationDegrees)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = rotationDegrees;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRotationDegrees = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (video) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// determine need for software renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow &amp;amp;&amp;amp; mComponentName.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoEncoder(mime, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupVideoDecoder(mime, msg, haveNativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNativeWindow = static_cast&amp;lt;Surface *&amp;gt;(obj.get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// initialize native window now to get actual output format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; this is needed for some encoders even though they don&amp;apos;t use native window&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = initNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fallback for devices that do not handle flex-YUV for native buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (haveNativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t requestedColorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;requestedColorFormat) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    requestedColorFormat == OMX_COLOR_FormatYUV420Flexible) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                status_t err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int32_t colorFormat = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_U32 flexibleEquivalent = OMX_COLOR_FormatUnused;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!outputFormat-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;color-format&amp;quot;&lt;/span&gt;, &amp;amp;colorFormat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;ouptut port did not have a color format (wrong domain?)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Requested output format %#x and got %#x.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mComponentName.c_str(), requestedColorFormat, colorFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isFlexibleColorFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mOMX, mNode, colorFormat, haveNativeWindow, &amp;amp;flexibleEquivalent)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || flexibleEquivalent != (OMX_U32)requestedColorFormat) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// device did not handle flex-YUV request for native window, fall back&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// to SW renderer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] Falling back to software renderer&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindow.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mNativeWindowUsageBits = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    haveNativeWindow = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    usingSwRenderer = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (storingMetadataInDecodedBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;storeMetaDataInBuffers(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                mNode, kPortIndexOutput, OMX_FALSE, &amp;amp;mOutputMetadataType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mOutputMetadataType = kMetadataBufferTypeInvalid; &lt;span class=&quot;comment&quot;&gt;// just in case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; implement adaptive-playback support for bytebuffer mode.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// This is done by SW codecs, but most HW codecs don&amp;apos;t support it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        inputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;adaptive-playback&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = mOMX-&amp;gt;enableGraphicBuffers(mNode, kPortIndexOutput, OMX_FALSE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsGrallocUsageProtected) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// fallback is not supported for protected playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = PERMISSION_DENIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        err = setupVideoDecoder(mime, msg, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (usingSwRenderer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            outputFormat-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;using-sw-renderer&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Since we did not always check for these, leave them optional&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and have the decoder figure it all out.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder ? kPortIndexInput : kPortIndexOutput,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t isADTS, aacProfile;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sbrMode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t maxOutputChannelCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t pcmLimiterEnable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            drcParams_t drc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;is-adts&amp;quot;&lt;/span&gt;, &amp;amp;isADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isADTS = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-profile&amp;quot;&lt;/span&gt;, &amp;amp;aacProfile)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                aacProfile = OMX_AUDIO_AACObjectNull;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-sbr-mode&amp;quot;&lt;/span&gt;, &amp;amp;sbrMode)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sbrMode = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-max-output-channel_count&amp;quot;&lt;/span&gt;, &amp;amp;maxOutputChannelCount)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxOutputChannelCount = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-pcm-limiter-enable&amp;quot;&lt;/span&gt;, &amp;amp;pcmLimiterEnable)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pcmLimiterEnable = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-encoded-target-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.encodedTargetLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.encodedTargetLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-cut-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcCut)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcCut = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-boost-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.drcBoost)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.drcBoost = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-drc-heavy-compression&amp;quot;&lt;/span&gt;, &amp;amp;drc.heavyCompression)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.heavyCompression = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;aac-target-ref-level&amp;quot;&lt;/span&gt;, &amp;amp;drc.targetRefLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// value is unknown&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drc.targetRefLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAACCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, bitRate, aacProfile,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    isADTS != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sbrMode, maxOutputChannelCount, drc,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    pcmLimiterEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setupAMRCodec(encoder, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* isWAMR */&lt;/span&gt;, bitRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_ALAW)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_G711_MLAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// These are PCM-like formats with a fixed sample rate but&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a variable number of channels.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sampleRate = &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupG711Codec(encoder, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, sampleRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, compressionLevel = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;missing channel count or sample rate for FLAC encoder&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;complexity&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    !msg-&amp;gt;findInt32(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&amp;quot;flac-compression-level&amp;quot;&lt;/span&gt;, &amp;amp;compressionLevel)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default FLAC compression level&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 0&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionLevel &amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;compression level %d outside [0..8] range, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;string&quot;&gt;&amp;quot;using 8&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    compressionLevel = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupFlacCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    encoder, numChannels, sampleRate, compressionLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels, sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (encoder&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupRawAudioFormat(kPortIndexInput, sampleRate, numChannels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_EAC3)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t numChannels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int32_t sampleRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-count&amp;quot;&lt;/span&gt;, &amp;amp;numChannels)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;sample-rate&amp;quot;&lt;/span&gt;, &amp;amp;sampleRate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = setupEAC3Codec(encoder, numChannels, sampleRate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-delay&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderDelay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderDelay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;encoder-padding&amp;quot;&lt;/span&gt;, &amp;amp;mEncoderPadding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEncoderPadding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;channel-mask&amp;quot;&lt;/span&gt;, &amp;amp;mChannelMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mChannelMaskPresent = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t maxInputSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;max-input-size&amp;quot;&lt;/span&gt;, &amp;amp;maxInputSize)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, (size_t)maxInputSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.Nvidia.aac.decoder&amp;quot;&lt;/span&gt;, mComponentName.c_str())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setMinBufferSize(kPortIndexInput, &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);  &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;label&quot;&gt;XXX&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;priority&amp;quot;&lt;/span&gt;, &amp;amp;priority)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setPriority(priority);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t rateInt = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; rateFloat = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!msg-&amp;gt;findFloat(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateFloat)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;operating-rate&amp;quot;&lt;/span&gt;, &amp;amp;rateInt);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rateFloat = (&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;)rateInt;  &lt;span class=&quot;comment&quot;&gt;// 16MHz (FLINTMAX) is OK for upper bound.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rateFloat &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = setOperatingRate(rateFloat, video);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBaseOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = getPortFormat(kPortIndexInput, inputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = getPortFormat(kPortIndexOutput, outputFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputFormat = inputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mOutputFormat = outputFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x4E86;&amp;#x8FD9;&amp;#x91CC;&amp;#x6574;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x548C;&amp;#x914D;&amp;#x7F6E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;start&amp;#x9636;&amp;#x6BB5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaCodec::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;MediaResource&amp;gt; resources;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type = (mFlags &amp;amp; kFlagIsSecure) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            kResourceSecureCodec : kResourceNonSecureCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *subtype = mIsVideo ? kResourceVideoCodec : kResourceAudioCodec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(type), String8(subtype), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t know the buffer size at this point, but it&amp;apos;s fine to use 1 because&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the reclaimResource call doesn&amp;apos;t consider the requester&amp;apos;s buffer size for now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resources.push_back(MediaResource(String8(kResourceGraphicMemory), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= kMaxRetry; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t try to reclaim resource for the first time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mResourceManagerService-&amp;gt;reclaimResource(resources)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Recover codec from previous error before retry start.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to reset codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = PostAndAwaitResponse(mConfigureMsg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;retrying start: failed to configure codec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = PostAndAwaitResponse(msg, &amp;amp;response);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isResourceError(err)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(STARTED)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (mHavePendingInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onInputBufferAvailable()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHavePendingInputBuffers = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec-&amp;gt;signalResume()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //..................&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, OK)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else if (mState != CONFIGURED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PostReplyWithError(replyID, INVALID_OPERATION)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mReplyID = replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setState(STARTING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;initiateStart()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8ABF;&amp;#x7528;initiateStart&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x72B6;&amp;#x6001;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::initiateStart() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;ACodec:&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;kWhatStart:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onStart();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; ACodec&lt;span class=&quot;tag&quot;&gt;::LoadedState&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::onStart&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;onStart&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;sendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;signalErr&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;(OMX_ErrorUndefined, makeNoSideEffectStatus(err));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;changeState(mCodec&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mLoadedToIdleState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;ACodec&lt;/span&gt;::signalResume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatResume, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;))&lt;/span&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatResume:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::ExecutingState::resume() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    submitOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Post all available input buffers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mBuffers[kPortIndexInput].size() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;u) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] we don&amp;apos;t have any input buffers to resume&amp;quot;&lt;/span&gt;, mCodec-&amp;gt;mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mCodec-&amp;gt;mBuffers[kPortIndexInput].size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo *info = &amp;amp;mCodec-&amp;gt;mBuffers[kPortIndexInput].editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info-&amp;gt;mStatus == BufferInfo::OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postFillThisBuffer(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mActive = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void ACodec::BaseState::postFillThisBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCodec-&amp;gt;mPortEOS[kPortIndexInput]) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)BufferInfo::OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; notify = mCodec-&amp;gt;mNotify-&amp;gt;dup();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, CodecBase::kWhatFillThisBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mData-&amp;gt;meta()-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, info-&amp;gt;mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatInputBufferFilled, mCodec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-id&amp;quot;&lt;/span&gt;, info-&amp;gt;mBufferID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;reply&amp;quot;&lt;/span&gt;, reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = BufferInfo::OWNED_BY_UPSTREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; CodecBase::kWhatFillThisBuffer:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagIsAsync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mHaveInputSurface) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == FLUSHED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mHavePendingInputBuffers = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onInputBufferAvailable();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kFlagDequeueInputPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(handleDequeueInputBuffer(mDequeueInputReplyID));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++mDequeueInputTimeoutGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagDequeueInputPending;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeueInputReplyID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postActivityNotificationIfPossible();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;MediaCodec&lt;/span&gt;::onInputBufferAvailable&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((index = dequeuePortBuffer(kPortIndexInput)) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; msg = mCallback-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackID&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;CB_INPUT_AVAILABLE&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x8FD9;&amp;#x4E2A;mCallback&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#x5417;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::Decoder::onConfigure(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;format) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; reply = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatCodecNotify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;setCallback(reply);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//..................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaCodec::setCallback(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;callback) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatSetCallback, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;callback&amp;quot;&lt;/span&gt;, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PostAndAwaitResponse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, &amp;amp;response)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;case kWhatSetCallback:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AReplyToken&amp;gt; replyID&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;senderAwaitsResponse(&amp;amp;replyID))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findMessage(&amp;quot;callback&amp;quot;, &amp;amp;callback))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = callback&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mCallback != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags |= kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFlags &amp;amp;= ~kFlagIsAsync&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; response = new AMessage&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    response-&amp;gt;postReply(replyID)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x77E5;&amp;#x9053;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;i&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;kWhatCodecNotify &amp;#x4E0B;&amp;#x7684; CB_INPUT_AVAILABLE&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaCodec::CB_INPUT_AVAILABLE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;index&amp;quot;&lt;/span&gt;, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleAnInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;bool NuPlayer::Decoder::handleAnInputBuffer(size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCodec-&amp;gt;getInputBuffer(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (buffer == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleError(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mInputBuffers.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = mInputBuffers.size(); i &amp;lt;= &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMediaBuffers.editItemAt(i) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mInputBufferIsDequeued.editItemAt(i) = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//CHECK_LT(bufferIx, mInputBuffers.size());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;] != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;]-&amp;gt;release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaBuffers.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;) = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mCSDsToSubmit.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; buffer = mCSDsToSubmit.itemAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] resubmitting CSD&amp;quot;&lt;/span&gt;, mComponentName.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCSDsToSubmit.removeAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(onInputBufferFetched(msg));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!mPendingInputMessages.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = *mPendingInputMessages.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPendingInputMessages.erase(mPendingInputMessages.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mInputBufferIsDequeued.editItemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDequeuedInputBuffers.push_back(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onRequestInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; NuPlayer::DecoderBase::onRequestInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRequestInputBuffersPending) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// doRequestBuffers() return true if we should request more data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (doRequestBuffers()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRequestInputBuffersPending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatRequestInputBuffers, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; NuPlayer::Decoder::doRequestBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mRenderer is only NULL if we have a legacy widevine source that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// is not yet ready. In this case we must not fetch input.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDiscontinuityPending() || mRenderer == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (err == OK &amp;amp;&amp;amp; !mDequeuedInputBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t bufferIx = *mDequeuedInputBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setSize(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer-ix&amp;quot;&lt;/span&gt;, bufferIx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = fetchInputData(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK &amp;amp;&amp;amp; err != ERROR_END_OF_STREAM) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if EOS, need to queue EOS buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDequeuedInputBuffers.erase(mDequeuedInputBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPendingInputMessages.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || !onInputBufferFetched(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingInputMessages.push_back(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err == -EWOULDBLOCK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mSource-&amp;gt;feedMoreTSData() == OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; NuPlayer::Decoder::fetchInputData(sp&amp;lt;AMessage&amp;gt; &amp;amp;reply) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; accessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; dropAccessUnit;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;dequeueAccessUnit(mIsAudio, &amp;amp;accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EWOULDBLOCK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == INFO_DISCONTINUITY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; type;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;type));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; formatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     (type &amp;amp; ATSParser::DISCONTINUITY_AUDIO_FORMAT))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (!mIsAudio &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            (type &amp;amp; ATSParser::DISCONTINUITY_VIDEO_FORMAT));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeChange = (type &amp;amp; ATSParser::DISCONTINUITY_TIME) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;%s discontinuity (format=%d, time=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;, formatChange, timeChange);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; seamlessFormatChange = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AMessage&amp;gt; newFormat = mSource-&amp;gt;getFormat(mIsAudio);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    seamlessFormatChange =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        supportsSeamlessFormatChange(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// treat seamless format change separately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    formatChange = !seamlessFormatChange;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// For format or time change, return EOS to queue EOS input,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// then wait for EOS on output.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (formatChange &lt;span class=&quot;comment&quot;&gt;/* not seamless */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mFormatChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTimeChangePending = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    err = ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seamlessFormatChange) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// reuse existing decoder and don&amp;apos;t flush&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rememberCodecSpecificData(newFormat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// This stream is unaffected by the discontinuity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EWOULDBLOCK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reply should only be returned without a buffer set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// when there is an error (including EOS)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(err != OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reply-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsAudio&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !mIsSecure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mRenderer-&amp;gt;getVideoLateByUs() &amp;gt; &lt;span class=&quot;number&quot;&gt;100000l&lt;/span&gt;l&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; mIsVideoAVC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; !IsAVCReferenceFrame(accessUnit)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            dropAccessUnit = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumInputFramesDropped;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (dropAccessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ALOGV(&amp;quot;returned a valid buffer of %s data&amp;quot;, mIsAudio ? &amp;quot;mIsAudio&amp;quot; : &amp;quot;video&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; mediaTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(accessUnit-&amp;gt;meta()-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;timeUs&amp;quot;&lt;/span&gt;, &amp;amp;mediaTimeUs));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;[%s] feeding input buffer at media time %.3f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mIsAudio ? &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         mediaTimeUs / &lt;span class=&quot;number&quot;&gt;1E6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCCDecoder != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCCDecoder-&amp;gt;decode(accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reply-&amp;gt;setBuffer(&lt;span class=&quot;string&quot;&gt;&amp;quot;buffer&amp;quot;&lt;/span&gt;, accessUnit);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x7740;&amp;#x770B;&amp;#x4E0B;&amp;#x5982;&amp;#x4F55;&amp;#x83B7;&amp;#x53D6;&amp;#x7D22;&amp;#x5F15;&amp;#x5217;&amp;#x8868;,&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;onChangeConfiguration3&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x957F;&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x6709;&amp;#x5174;&amp;#x8DA3;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E3B;&amp;#x8981;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x70B9;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5224;&amp;#x65AD;audio&amp;#x53CA;Video&amp;#x662F;&amp;#x5426;&amp;#x53D1;&amp;#x9001;&amp;#x53D8;&amp;#x5316;&lt;/li&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x5F53;&amp;#x524D;&amp;#x7684;mFetcherInfos&amp;#x66F4;&amp;#x65B0;resumeMask&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x6709;&amp;#x65B0;&amp;#x7684;Fetcher&amp;#x90A3;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x65B0;&amp;#x5EFA;FetcherInfo&lt;/li&gt;
&lt;li&gt;&amp;#x542F;&amp;#x52A8;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Fetcher&lt;/li&gt;
&lt;li&gt;&amp;#x68C0;&amp;#x67E5;&amp;#x5F53;&amp;#x524D;&amp;#x5E26;&amp;#x5BBD;&amp;#x6839;&amp;#x636E;&amp;#x5E26;&amp;#x5BBD;&amp;#x5207;&amp;#x6362;&amp;#x8D44;&amp;#x6E90;&lt;br&gt;&amp;#x4F46;&amp;#x662F;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5728;&amp;#x4E8E;fetcher-&amp;gt;startAsync,&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; LiveSession::onChangeConfiguration3(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetcher-&amp;gt;startAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kAudioIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kVideoIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sources[kSubtitleIndex],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getMetadataSource(sources, mNewStreamMask, switching),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.mTimeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? mLastSeekTimeUs : startTime.mTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.getSegmentTimeUs(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            startTime.mSeq,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            seekMode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::startAsync(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;audioSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;videoSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;subtitleSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AnotherPacketSource&amp;gt; &amp;amp;metadataSource,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; startTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; segmentStartTimeUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; startDiscontinuitySeq,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LiveSession::SeekMode seekMode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatStart, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight sml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatStart:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t err = onStart(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;&lt;span class=&quot;type&quot;&gt;AMessage&lt;/span&gt;&amp;gt; notify = mNotify-&amp;gt;dup&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;what&amp;quot;&lt;/span&gt;, kWhatStarted);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;err&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    notify-&amp;gt;post&lt;span class=&quot;literal&quot;&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; PlaylistFetcher::onStart(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_AUDIO) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;audioSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_AUDIO,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_VIDEO) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;videoSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_VIDEO,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (streamTypeMask &amp;amp; LiveSession::STREAMTYPE_SUBTITLES) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;subtitleSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_SUBTITLES,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *ptr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// metadataSource is not part of streamTypeMask&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((streamTypeMask &amp;amp; (LiveSession::STREAMTYPE_AUDIO | LiveSession::STREAMTYPE_VIDEO))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; msg-&amp;gt;findPointer(&lt;span class=&quot;string&quot;&gt;&amp;quot;metadataSource&amp;quot;&lt;/span&gt;, &amp;amp;ptr)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPacketSources.add(LiveSession::STREAMTYPE_METADATA,&lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(ptr));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//...............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::postMonitorQueue(&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; minDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; maxDelayUs = delayUsToRefreshPlaylist();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxDelayUs &amp;lt; minDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        maxDelayUs = minDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; maxDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Need to refresh playlist in %lld&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)maxDelayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delayUs = maxDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatMonitorQueue, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mMonitorQueueGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg-&amp;gt;post(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatMonitorQueue:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;kWhatDownloadNext:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t generation;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, &amp;amp;generation));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (generation != mMonitorQueueGeneration) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Stale event&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg-&amp;gt;what() == kWhatMonitorQueue) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onDownloadNext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::onMonitorQueue() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.......................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (finalResult == OK &amp;amp;&amp;amp; bufferedDurationUs &amp;lt; kMinBufferedDurationUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;monitoring, buffered=%lld &amp;lt; %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)bufferedDurationUs, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)kMinBufferedDurationUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// delay the next download slightly; hopefully this gives other concurrent fetchers&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a better chance to run.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// onDownloadNext();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage(kWhatDownloadNext, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;generation&amp;quot;&lt;/span&gt;, mMonitorQueueGeneration);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg-&amp;gt;post(&lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We&amp;apos;d like to maintain buffering above durationToBufferUs, so try&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// again when buffer just about to go below durationToBufferUs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (or after targetDurationUs / 2, whichever is smaller).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = bufferedDurationUs - kMinBufferedDurationUs + &lt;span class=&quot;number&quot;&gt;1000000l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; targetDurationUs / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delayUs = targetDurationUs / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;pausing for %lld, buffered=%lld &amp;gt; %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)delayUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)bufferedDurationUs,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)kMinBufferedDurationUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postMonitorQueue(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;initDownloadState &amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x83B7;&amp;#x53D6;TS&amp;#x5305;&amp;#x4E4B;&amp;#x524D;&amp;#x83B7;&amp;#x53D6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Uri&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; PlaylistFetcher::initDownloadState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString &amp;amp;uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; &amp;amp;itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; &amp;amp;firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; &amp;amp;lastSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = refreshPlaylist();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    firstSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lastSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; discontinuity = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlaylist-&amp;gt;getSeqNumberRange(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;firstSeqNumberInPlaylist, &amp;amp;lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDiscontinuitySeq &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDiscontinuitySeq = mPlaylist-&amp;gt;getDiscontinuitySeq();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSegmentFirstPTS = -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mSeqNumber &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_GE(mStartTimeUs, &lt;span class=&quot;number&quot;&gt;0l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSegmentStartTimeUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mPlaylist-&amp;gt;isComplete() &amp;amp;&amp;amp; !mPlaylist-&amp;gt;isEvent()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If this is a live session, start 3 segments from the end on connect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = lastSeqNumberInPlaylist - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// When seeking mSegmentStartTimeUs is unavailable (&amp;lt; 0), we&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// use mStartTimeUs (client supplied timestamp) to determine both start segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// and relative position inside a segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStartTimeUs -= getSegmentStartTimeUs(mSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsRelative = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Initial sequence number for time %lld is %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mStartTimeUs, mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// When adapting or track switching, mSegmentStartTimeUs (relative&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// to media time 0) is used to determine the start segment; mStartTimeUs (absolute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// timestamps coming from the media container) is used to determine the position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// inside a segments.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStreamTypeMask != LiveSession::STREAMTYPE_SUBTITLES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; mSeekMode != LiveSession::kSeekModeNextSample) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// avoid double fetch/decode&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Use (mSegmentStartTimeUs + 1/2 * targetDurationUs) to search&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// for the starting segment in new variant.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If the two variants&amp;apos; segments are aligned, this gives the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// next segment. If they&amp;apos;re not aligned, this gives the segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// that overlaps no more than 1/2 * targetDurationUs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mSegmentStartTimeUs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        + mPlaylist-&amp;gt;getTargetDuration() / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = getSeqNumberForTime(mSegmentStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; minSeq = getSeqNumberForDiscontinuity(mDiscontinuitySeq);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; minSeq) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = minSeq;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;gt; lastSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = lastSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Initial sequence number is %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// if mPlaylist is NULL then err must be non-OK; but the other way around might not be true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || mSeqNumber &amp;gt; lastSeqNumberInPlaylist&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err != OK || !mPlaylist-&amp;gt;isComplete()) &amp;amp;&amp;amp; mNumRetries &amp;lt; kMaxNumRetries) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++mNumRetries;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;gt; lastSeqNumberInPlaylist || err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// make sure we reach this retry logic on refresh failures&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// by adding an err != OK clause to all enclosing if&amp;apos;s.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// refresh in increasing fraction (1/2, 1/3, ...) of the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// playlist&amp;apos;s target duration or 3 seconds, whichever is less&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = kMaxMonitorDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delayUs = mPlaylist-&amp;gt;size() * mPlaylist-&amp;gt;getTargetDuration()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            / (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + mNumRetries);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; kMaxMonitorDelayUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delayUs = kMaxMonitorDelayUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;sequence number high: %d from (%d .. %d), &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;string&quot;&gt;&amp;quot;monitor in %lld (retry=%d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        lastSeqNumberInPlaylist, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)delayUs, mNumRetries);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                postMonitorQueue(delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we&amp;apos;ve missed the boat, let&amp;apos;s start 3 segments prior to the latest sequence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// number available and signal a discontinuity.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;We&amp;apos;ve missed the boat, restarting playback.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&amp;quot;  mStartup=%d, was  looking for %d in %d-%d&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStartup, mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStopParams != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we should have kept on fetching until we hit the boundaries in mStopParams,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// but since the segments we are supposed to fetch have already rolled off&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// the playlist, i.e. we have already missed the boat, we inevitably have to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// skip.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeqNumber = lastSeqNumberInPlaylist - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeqNumber &amp;lt; firstSeqNumberInPlaylist) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber = firstSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Cannot find sequence number %d in playlist &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;string&quot;&gt;&amp;quot;(contains %d - %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     mSeqNumber, firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      firstSeqNumberInPlaylist + (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)mPlaylist-&amp;gt;size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTSParser-&amp;gt;signalEOS(ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Use an empty buffer; we don&amp;apos;t have any new data, just want to extract&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// potential new access units after flush.  Reset mSeqNumber to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// lastSeqNumberInPlaylist such that we set the correct access unit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// properties in extractAndQueueAccessUnitsFromTs.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sp&amp;lt;ABuffer&amp;gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSeqNumber = lastSeqNumberInPlaylist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    extractAndQueueAccessUnitsFromTs(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(ERROR_END_OF_STREAM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// It&amp;apos;s possible that we were never able to download the playlist.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// In this case we should notify error, instead of EOS, as EOS during&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// prepare means we succeeded in downloading everything.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to download playlist!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notifyError(ERROR_IO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumRetries = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mPlaylist-&amp;gt;itemAt(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSeqNumber - firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;itemMeta));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(itemMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity-sequence&amp;quot;&lt;/span&gt;, &amp;amp;mDiscontinuitySeq));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; val;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (itemMeta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;discontinuity&amp;quot;&lt;/span&gt;, &amp;amp;val) &amp;amp;&amp;amp; val != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLastDiscontinuitySeq &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; mDiscontinuitySeq != mLastDiscontinuitySeq) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Seek jumped to a new discontinuity sequence. We need to signal&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// a format change to decoder. Decoder needs to shutdown and be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// created again if seamless format change is unsupported.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;saw discontinuity: mStartup %d, mLastDiscontinuitySeq %d, &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&amp;quot;mDiscontinuitySeq %d, mStartTimeUs %lld&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStartup, mLastDiscontinuitySeq, mDiscontinuitySeq, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mStartTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discontinuity = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLastDiscontinuitySeq = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// decrypt a junk buffer to prefetch key; since a session uses only one http connection,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// this avoids interleaved connections to the key and segment file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;ABuffer&amp;gt; junk = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        junk-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = decryptBuffer(mSeqNumber - firstSeqNumberInPlaylist, junk,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* first */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_NOT_CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mStartup &amp;amp;&amp;amp; !mTimeChangeSignaled) || discontinuity) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We need to signal a time discontinuity to ATSParser on the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// first segment after start, or on a discontinuity segment.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Setting mNextPTSTimeUs informs extractAndQueueAccessUnitsXX()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to send the time discontinuity.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlaylist-&amp;gt;isComplete() || mPlaylist-&amp;gt;isEvent()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this was a live event this made no sense since&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t have access to all the segment before the current&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// one.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mNextPTSTimeUs = getSegmentStartTimeUs(mSeqNumber);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Setting mTimeChangeSignaled to true, so that if start time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// searching goes into 2nd segment (without a discontinuity),&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t reset time again. It causes corruption when pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// data in ATSParser is cleared.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTimeChangeSignaled = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (discontinuity) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;queueing discontinuity (explicit=%d)&amp;quot;&lt;/span&gt;, discontinuity);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Signal a format discontinuity to ATSParser to clear partial data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// from previous streams. Not doing this causes bitstream corruption.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTSParser != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTSParser-&amp;gt;signalDiscontinuity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ATSParser::DISCONTINUITY_FORMATCHANGE, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* extra */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        queueDiscontinuity(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ATSParser::DISCONTINUITY_FORMAT_ONLY,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* extra */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStartup &amp;amp;&amp;amp; mStartTimeUsRelative &amp;amp;&amp;amp; mFirstPTSValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This means we guessed mStartTimeUs to be in the previous&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// segment (likely very close to the end), but either video or&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// audio has not found start by the end of that segment.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this new segment is not a discontinuity, keep searching.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If this new segment even got a discontinuity marker, just&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// set mStartTimeUs=0, and take all samples from now on.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFirstPTSValid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mIDRFound = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mVideoBuffer-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;fetching segment %d from (%d .. %d)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeqNumber, firstSeqNumberInPlaylist, lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; PlaylistFetcher::onDownloadNext() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AString uri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; itemMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;ABuffer&amp;gt; tsBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; firstSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; lastSeqNumberInPlaylist = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; connectHTTP = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDownloadState-&amp;gt;hasSavedState()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDownloadState-&amp;gt;restoreState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connectHTTP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;resuming: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!initDownloadState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lastSeqNumberInPlaylist)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;fetching: &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; range_offset, range_length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-offset&amp;quot;&lt;/span&gt;, &amp;amp;range_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !itemMeta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;range-length&amp;quot;&lt;/span&gt;, &amp;amp;range_length)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        range_offset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        range_length = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// block-wise download&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; shouldPause = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bytesRead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; startUs = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x8F7D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bytesRead = mHTTPDownloader-&amp;gt;fetchBlock(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uri.c_str(), &amp;amp;buffer, range_offset, range_length, kDownloadBlockSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* actualURL */&lt;/span&gt;, connectHTTP);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delayUs = ALooper::GetNowUs() - startUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead == ERROR_NOT_CONNECTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = bytesRead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;failed to fetch .ts segment at url &amp;apos;%s&amp;apos;&amp;quot;&lt;/span&gt;, uri.c_str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// add sample for bandwidth estimation, excluding samples from subtitles (as&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// its too small), or during startup/resumeUntil (when we could have more than&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// one connection open which affects bandwidth)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStartup &amp;amp;&amp;amp; mStopParams == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; bytesRead &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; (mStreamTypeMask&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp; (LiveSession::STREAMTYPE_AUDIO&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        | LiveSession::STREAMTYPE_VIDEO))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSession-&amp;gt;addBandwidthMeasurement(bytesRead, delayUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayUs &amp;gt; &lt;span class=&quot;number&quot;&gt;2000000l&lt;/span&gt;l) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                FLOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bytesRead %zd took %.2f seconds - abnormal bandwidth dip&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        bytesRead, (&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt;)delayUs / &lt;span class=&quot;number&quot;&gt;1.0e6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        connectHTTP = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(buffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size = buffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Set decryption range.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer-&amp;gt;setRange(size - bytesRead, bytesRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;key&amp;#x89E3;&amp;#x5BC6;buffer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = decryptBuffer(mSeqNumber - firstSeqNumberInPlaylist, buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                buffer-&amp;gt;offset() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* first */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Unset decryption range.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;decryptBuffer failed w/ error %d&amp;quot;&lt;/span&gt;, err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; startUp = mStartup; &lt;span class=&quot;comment&quot;&gt;// save current start up state&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferStartsWithTsSyncByte(buffer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Incremental extraction is only supported for MPEG2 transport streams.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(buffer-&amp;gt;data(), buffer-&amp;gt;capacity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer-&amp;gt;setRange(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer-&amp;gt;capacity() != buffer-&amp;gt;capacity()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; tsOff = tsBuffer-&amp;gt;offset(), tsSize = tsBuffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ABuffer(buffer-&amp;gt;data(), buffer-&amp;gt;capacity());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tsBuffer-&amp;gt;setRange(tsOff, tsSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tsBuffer-&amp;gt;setRange(tsBuffer-&amp;gt;offset(), tsBuffer-&amp;gt;size() + bytesRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x89E3;&amp;#x5BC6;&amp;#x540E;&amp;#x7684;buffer&amp;#x9012;&amp;#x7ED9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = extractAndQueueAccessUnitsFromTs(tsBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EAGAIN) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// starting sequence number too low/high&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTSParser.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPacketSources.size(); i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;AnotherPacketSource&amp;gt; packetSource = mPacketSources.valueAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                packetSource-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_OUT_OF_RANGE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reached stopping point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we&amp;apos;re switching, post start notification&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// this should only be posted when the last chunk is full processed by TSParser&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekMode != LiveSession::kSeekModeExactPosition &amp;amp;&amp;amp; startUp != mStartup) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(mStartTimeUsNotify != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsNotify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mStartTimeUsNotify.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shouldPause || shouldPauseDownload()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// save state and return if this is not the last chunk,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// leaving the fetcher in paused state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bytesRead != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDownloadState-&amp;gt;saveState(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        itemMeta,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        tsBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        firstSeqNumberInPlaylist,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        lastSeqNumberInPlaylist);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (bytesRead != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferStartsWithTsSyncByte(buffer)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If we don&amp;apos;t see a stream in the program table after fetching a full ts segment&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// mark it as nonexistent.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ATSParser::SourceType srcTypes[] =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                { ATSParser::VIDEO, ATSParser::AUDIO };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LiveSession::StreamType streamTypes[] =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                { LiveSession::STREAMTYPE_VIDEO, LiveSession::STREAMTYPE_AUDIO };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumTypes = NELEM(srcTypes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumTypes; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ATSParser::SourceType srcType = srcTypes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            LiveSession::StreamType streamType = streamTypes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;AnotherPacketSource&amp;gt; source =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;AnotherPacketSource *&amp;gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTSParser-&amp;gt;getSource(srcType).get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mTSParser-&amp;gt;hasSource(srcType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;MPEG2 Transport stream does not contain %s data.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      srcType == ATSParser::VIDEO ? &lt;span class=&quot;string&quot;&gt;&amp;quot;video&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;audio&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStreamTypeMask &amp;amp;= ~streamType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPacketSources.removeItem(streamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkDecryptPadding(buffer) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Incorrect padding bytes after decryption.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyError(ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString method;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(buffer-&amp;gt;meta()-&amp;gt;findString(&lt;span class=&quot;string&quot;&gt;&amp;quot;cipher-method&amp;quot;&lt;/span&gt;, &amp;amp;method));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((tsBuffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; method == &lt;span class=&quot;string&quot;&gt;&amp;quot;NONE&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || tsBuffer-&amp;gt;size() &amp;gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;MPEG2 transport stream is not an even multiple of 188 &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;bytes in length.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(ERROR_MALFORMED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// bulk extract non-ts files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; startUp = mStartup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tsBuffer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = extractAndQueueAccessUnits(buffer, itemMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == -EAGAIN) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// starting sequence number too low/high&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == ERROR_OUT_OF_RANGE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// reached stopping point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyStopReached();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ++mSeqNumber;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// if adapting, pause after found the next starting point&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekMode != LiveSession::kSeekModeExactPosition &amp;amp;&amp;amp; startUp != mStartup) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(mStartTimeUsNotify != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStartTimeUsNotify-&amp;gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStartTimeUsNotify.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        shouldPause = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!shouldPause) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postMonitorQueue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x9700;&amp;#x8981;&amp;#x5207;&amp;#x6362;&amp;#x5E26;&amp;#x5BBD;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; LiveSession::switchBandwidthIfNeeded(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bufferHigh, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bufferLow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// no need to check bandwidth if we only have 1 bandwidth settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; bandwidthBps, shortTermBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isStable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;estimateBandwidth&amp;#x9884;&amp;#x6D4B;&amp;#x5E26;&amp;#x5BBD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthEstimator-&amp;gt;estimateBandwidth(&amp;amp;bandwidthBps, &amp;amp;isStable, &amp;amp;shortTermBps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth estimated at %.2f kbps, &amp;quot;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;stable %d, shortTermBps %.2f kbps&amp;quot;&lt;/span&gt;,bandwidthBps / &lt;span class=&quot;number&quot;&gt;1024.0f&lt;/span&gt;, isStable, shortTermBps / &lt;span class=&quot;number&quot;&gt;1024.0f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastBandwidthBps = bandwidthBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastBandwidthStable = isStable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;no bandwidth estimate.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; curBandwidth = mBandwidthItems.itemAt(mCurBandwidthIndex).mBandwidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// canSwithDown and canSwitchUp can&amp;apos;t both be true.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we only want to switch up when measured bw is 120% higher than current variant,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// and we only want to switch down when measured bw is below current variant.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canSwitchDown = bufferLow &amp;amp;&amp;amp; (bandwidthBps &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)curBandwidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; canSwitchUp = bufferHigh &amp;amp;&amp;amp; (bandwidthBps &amp;gt; (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt;)curBandwidth * &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canSwitchDown || canSwitchUp) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// bandwidth estimating has some delay, if we have to downswitch when&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it hasn&amp;apos;t stabilized, use the short term to guess real bandwidth,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// since it may be dropping too fast.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (note this doesn&amp;apos;t apply to upswitch, always use longer average there)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isStable &amp;amp;&amp;amp; canSwitchDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (shortTermBps &amp;lt; bandwidthBps) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bandwidthBps = shortTermBps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x8981;&amp;#x4FEE;&amp;#x6539;&amp;#x5E26;&amp;#x5BBD;&amp;#x6570;&amp;#x503C;index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bandwidthIndex = getBandwidthIndex(bandwidthBps);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it&amp;apos;s possible that we&amp;apos;re checking for canSwitchUp case, but the returned&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// bandwidthIndex is &amp;lt; mCurBandwidthIndex, as getBandwidthIndex() only uses 70%&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// of measured bw. In that case we don&amp;apos;t want to do anything, since we have&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// both enough buffer and enough bw.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((canSwitchUp &amp;amp;&amp;amp; bandwidthIndex &amp;gt; mCurBandwidthIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         || (canSwitchDown &amp;amp;&amp;amp; bandwidthIndex &amp;lt; mCurBandwidthIndex)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if not yet prepared, just restart again with new bw index.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// this is faster and playback experience is cleaner.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x4FEE;&amp;#x6539;&amp;#x914D;&amp;#x7F6E;&amp;#xFF0C;&amp;#x5305;&amp;#x62EC;&amp;#x91CD;&amp;#x542F;&amp;#x5404;&amp;#x79CD;&amp;#x8D44;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            changeConfiguration(mInPreparationPhase ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : -&lt;span class=&quot;number&quot;&gt;1l&lt;/span&gt;l, bandwidthIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;size_t LiveSession::getBandwidthIndex(int32_t bandwidthBps) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mBandwidthItems.size() &amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// shouldn&amp;apos;t be here if we only have 1 bandwidth, check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// logic to get rid of redundant bandwidth polling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;getBandwidthIndex() called for single bandwidth playlist!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#if 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.bw-index&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = strtol(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (size_t)&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.max-bw&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; maxBw = strtoul(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxBw &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; bandwidthBps &amp;gt; maxBw) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;bandwidth capped to %ld bps&amp;quot;&lt;/span&gt;, maxBw);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    bandwidthBps = maxBw;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Pick the highest bandwidth stream that&amp;apos;s not currently blacklisted&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// below or equal to estimated bandwidth.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t lowestBandwidth = getLowestValidBandwidthIndex();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt; lowestBandwidth) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// be conservative (70%) to avoid overestimating and immediately&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// switching down again.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            size_t adjustedBandwidthBps = bandwidthBps * &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            const BandwidthItem &amp;amp;item = mBandwidthItems[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (item.mBandwidth &amp;lt;= adjustedBandwidthBps&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; isBandwidthValid(item)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            --&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Change bandwidth at random()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = uniformRand() * mBandwidthItems.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// There&amp;apos;s a 50% chance to stay on the current bandwidth and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// a 50% chance to switch to the next higher bandwidth (wrapping around&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// to lowest)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const size_t kMinIndex = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ssize_t mCurBandwidthIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurBandwidthIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = kMinIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (uniformRand() &amp;lt; &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = (size_t)mCurBandwidthIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mCurBandwidthIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; == mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = kMinIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurBandwidthIndex = &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Pick the highest bandwidth stream below or equal to 1.2 Mbit/sec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mBandwidthItems.itemAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;).mBandwidth &amp;gt; &lt;span class=&quot;number&quot;&gt;1200000&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#elif 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; value[PROPERTY_VALUE_MAX];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (property_get(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.httplive.bw-index&amp;quot;&lt;/span&gt;, value, NULL)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = strtoul(value, &amp;amp;end, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(end &amp;gt; value &amp;amp;&amp;amp; *end == &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= mBandwidthItems.size()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mBandwidthItems.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// Highest bandwidth stream&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_GE(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;HLS-&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#HLS-&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;HLS &amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;HLS &amp;#x6982;&amp;#x8FF0;&lt;/h4&gt;&lt;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[4]</title>
    <link href="http://yoursite.com/2016/08/01/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-3/"/>
    <id>http://yoursite.com/2016/08/01/Android-源码分析基于Stagefright的MediaPlayer播放框架-3/</id>
    <published>2016-08-01T03:20:27.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x4EE5;&amp;#x514D;&amp;#x4E00;&amp;#x5927;&amp;#x5806;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F15;&amp;#x6765;&amp;#x5927;&amp;#x5BB6;&amp;#x7684;&amp;#x4E0D;&amp;#x9002;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/08/01/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-3/1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x5728;prepare&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;start&amp;#x65B9;&amp;#x6CD5;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x4E86;&amp;#x3002;&amp;#x4E3A;&amp;#x4E86;&amp;#x7B80;&amp;#x5355;&amp;#x8D77;&amp;#x89C1;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;start&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x5173;&amp;#x7CFB;&amp;#x4E0D;&amp;#x505A;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x4EC5;&amp;#x4EC5;&amp;#x5217;&amp;#x51FA;&amp;#x8FD9;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; throws IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isRestricted()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _setVolume(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stayAwake(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_start&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;start(), &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;status_t MediaPlayer::&lt;/span&gt;start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t ret = NO_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    Mutex::&lt;/span&gt;Autolock _l(mLock)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = getThreadId()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentState &amp;amp; MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STARTED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = NO_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (mPlayer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;amp;&amp;amp; ( mCurrentState &amp;amp; ( MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PREPARED |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PLAYBACK_COMPLETE | MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PAUSED ) ) ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setLooping(mLoop)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setVolume(mLeftVolume, mRightVolume)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer-&amp;gt;setAuxEffectSendLevel(mSendLevel)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentState = MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STARTED&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = mPlayer-&amp;gt;start()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != NO_ERROR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCurrentState = MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_STATE_ERROR&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCurrentState == MEDI&lt;span class=&quot;built_in&quot;&gt;A_PLAYER&lt;/span&gt;_PLAYBACK_COMPLETE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;playback completed immediately following start()&amp;quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;start called in state %d&amp;quot;&lt;/span&gt;, mCurrentState)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = INVALID_OPERATION&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;play();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;play&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ATRACE_CALL&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;value&quot;&gt;::Autolock &lt;span class=&quot;function&quot;&gt;autoLock&lt;/span&gt;(mLock);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;modifyFlags&lt;/span&gt;(CACHE_UNDERRUN, &lt;span class=&quot;attribute&quot;&gt;CLEAR&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;function&quot;&gt;play_l&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Start&amp;#x7684;&amp;#x771F;&amp;#x6B63;&amp;#x5DE5;&amp;#x4F5C;&amp;#x662F;&amp;#x4ECE;AwesomePlayer::play_l&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;AwesomePlayer::play_l&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;createAudioPlayer_l&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;startAudioPlayer_l&amp;#x5F00;&amp;#x59CB;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x5C06;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::play_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(SEEK_PREVIEW, CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaRenderingStartGeneration = ++mStartGeneration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mFlags &amp;amp; PREPARED)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = prepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PLAYING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(FIRST_FRAME, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioPlayer == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            createAudioPlayer_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(!(mFlags &amp;amp; AUDIO_RUNNING));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// We don&amp;apos;t want to post an error notification at this point,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// the error returned from MediaPlayer::start() will suffice.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = startAudioPlayer_l(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sendErrorNotification */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; AT_EOS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Legacy behaviour, if a stream finishes playing and then&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// is started again, we play from the start...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        seekTo_l(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;createAudioPlayer_l&amp;#x65B9;&amp;#x6CD5;&amp;#x76F8;&amp;#x5BF9;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x5B83;&amp;#x901A;&amp;#x8FC7;AudioPlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;AudioPlayer&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;mAudioSource&amp;#x8D4B;&amp;#x7ED9;&amp;#x5B83;&amp;#xFF0C;mAudioPlayer&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x4E3A;mAudioSource&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;OMXCodec&amp;#x3002;&amp;#x5728;&amp;#x6784;&amp;#x9020;AudioPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#x65F6;&amp;#x4F1A;&amp;#x5B58;&amp;#x653E;&amp;#x5728;&amp;#x5176;&amp;#x6210;&amp;#x5458;mSource&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;mAudioSink&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5927;&amp;#x5BB6;&amp;#x8FD8;&amp;#x6709;&amp;#x5370;&amp;#x8C61;&amp;#x5427;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x4E4B;&amp;#x524D;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x5728;setDataSource&amp;#x9636;&amp;#x6BB5;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;AudioOutPut&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x8BF4;&amp;#x8FD9;&amp;#x91CC;&amp;#x505A;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x5C06;&amp;#x8F93;&amp;#x5165;mAudioSource&amp;#x8D4B;&amp;#x7ED9;AudioPlayer&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x662F;&amp;#x5C06;mAudioSink&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E0E;&amp;#x786C;&amp;#x4EF6;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x8D4B;&amp;#x7ED9;AudioPlayer&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void AwesomePlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;createAudioPlayer_l&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioPlayer = new &lt;span class=&quot;function&quot;&gt;AudioPlayer&lt;/span&gt;(mAudioSink, flags, this);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioPlayer-&amp;gt;&lt;span class=&quot;function&quot;&gt;setSource&lt;/span&gt;(mAudioSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If there was a seek request before we ever started,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// honor the request now.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Make sure to do this before starting the audio player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// to avoid a race condition.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x4E4B;&amp;#x524D;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;seek&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x90A3;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x5728;&amp;#x542F;&amp;#x52A8;audio player&amp;#x4E4B;&amp;#x524D;&amp;#x8FDB;&amp;#x884C;seek&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;seekAudioIfNecessary_l&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioPlayer::AudioPlayer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerBase::AudioSink&amp;gt; &amp;amp;audioSink,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AwesomePlayer *observer)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInputBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSampleRate(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLatencyUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFrameSize(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesPlayed(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesPlayedSysTimeUs(ALooper::GetNowUs()),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPositionTimeMediaUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPositionTimeRealUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSeeking(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mReachedEOS(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFinalStatus(OK),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSeekTimeUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsFirstBuffer(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstBufferResult(OK),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioSink(audioSink),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mObserver(observer),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPinnedTimeUs(-1ll),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPlaying(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStartPosUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mCreateFlags(flags) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AudioPlayer::setSource(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSource = source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;audio Player&amp;#x521B;&amp;#x5EFA;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;startAudioPlayer_l&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::startAudioPlayer_l(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; sendErrorNotification) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mFlags &amp;amp; AUDIOPLAYER_STARTED)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; wasSeeking = mAudioPlayer-&amp;gt;isSeeking();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We&amp;apos;ve already started the MediaSource in order to enable&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the prefetcher to read its data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mAudioPlayer-&amp;gt;start(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sourceAlreadyStarted */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(AUDIOPLAYER_STARTED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasSeeking) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(!mAudioPlayer-&amp;gt;isSeeking());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We will have finished the seek while starting the audio player.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postAudioSeekComplete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyIfMediaStarted_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;AudioPlayer::start&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;mSource-&amp;gt;read(&amp;amp;mFirstBuffer, &amp;amp;options); &amp;#x8BFB;&amp;#x53D6;&amp;#x7B2C;&amp;#x4E00;&amp;#x6BB5;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x89E3;&amp;#x7801;&amp;#x7B2C;&amp;#x4E00;&amp;#x5E27;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x542F;&amp;#x52A8;&amp;#x4E86;&amp;#x89E3;&amp;#x7801;&amp;#x5FAA;&amp;#x73AF;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;mAudioSink-&amp;gt;open&amp;#xFF0C; mAudioSink-&amp;gt;start();&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioPlayer::start(&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; sourceAlreadyStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstBufferResult = mSource-&amp;gt;read(&amp;amp;mFirstBuffer, &amp;amp;options);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFirstBufferResult == INFO_FORMAT_CHANGED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstBufferResult = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsFirstBuffer = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsFirstBuffer = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; audioFormat = AUDIO_FORMAT_PCM_16_BIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink.get() != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mAudioSink-&amp;gt;open(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSampleRate, numChannels, channelMask, audioFormat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                DEFAULT_AUDIOSINK_BUFFERCOUNT,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;AudioPlayer::AudioSinkCallback,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt;)flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                useOffload() ? &amp;amp;offloadInfo : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mLatencyUs = (&lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt;)mAudioSink-&amp;gt;latency() * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFrameSize = mAudioSink-&amp;gt;frameSize();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mAudioSink-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// do not alter behavior for non offloaded tracks: ignore start status.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!useOffload()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;AudioSinkCallback&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; AudioPlayer::AudioSinkCallback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink * &lt;span class=&quot;comment&quot;&gt;/* audioSink */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buffer, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink::&lt;span class=&quot;keyword&quot;&gt;cb_event_t&lt;/span&gt; event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioPlayer *me = (AudioPlayer *)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_FILL_BUFFER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; me-&amp;gt;fillBuffer(buffer, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_STREAM_END:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: stream end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mReachedEOS = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;notifyAudioEOS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_TEAR_DOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: Tear down event&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mObserver-&amp;gt;postAudioTearDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec::read(MediaBuffer **buffer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ReadOptions *options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInitialBufferSubmit) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mInitialBufferSubmit = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//===========================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        drainInputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == EXECUTING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Otherwise mState == RECONFIGURING and this code will trigger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// after the output port is reenabled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//===========================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fillOutputBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x7B49;&amp;#x5F85;&amp;#x7F13;&amp;#x5B58;&amp;#x88AB;&amp;#x586B;&amp;#x6EE1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState != ERROR &amp;amp;&amp;amp; !mNoMoreOutputData &amp;amp;&amp;amp; mFilledBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err = waitForBufferFilled_l()) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x7F13;&amp;#x5B58;&amp;#x8FD8;&amp;#x662F;&amp;#x7A7A;&amp;#x7684;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x89E3;&amp;#x7801;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFilledBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mSignalledEOS ? mFinalStatus : ERROR_END_OF_STREAM;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index = *mFilledBuffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFilledBuffers.erase(mFilledBuffers.begin());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BufferInfo *info = &amp;amp;mPortBuffers[kPortIndexOutput].editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)info-&amp;gt;mStatus, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)OWNED_BY_US);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mStatus = OWNED_BY_CLIENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    info-&amp;gt;mMediaBuffer-&amp;gt;add_ref();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSkipCutBuffer != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSkipCutBuffer-&amp;gt;submit(info-&amp;gt;mMediaBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *buffer = info-&amp;gt;mMediaBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;void&lt;/span&gt; OMXCodec::drainInputBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mState == EXECUTING &lt;span class=&quot;title&quot;&gt;||&lt;/span&gt; mState == RECONFIGURING)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kUseSecureInputBuffers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BufferInfo&amp;gt; &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffers &lt;/span&gt;= &amp;amp;mPortBuffers[kPortIndexInput]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; buffers-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (!drainAnyInputBuffer()&lt;span class=&quot;title&quot;&gt;||&lt;/span&gt; (mFlags &amp;amp; kOnlySubmitOneInputBufferAtOneTime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;preprocessor&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;&lt;span class=&quot;keyword&quot;&gt;BufferInfo&amp;gt; &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffers &lt;/span&gt;= &amp;amp;mPortBuffers[kPortIndexInput]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; buffers-&amp;gt;size(); ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;BufferInfo &lt;/span&gt;*&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt; = &amp;amp;&lt;span class=&quot;keyword&quot;&gt;buffers-&amp;gt;editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt;-&amp;gt;mStatus != OWNED_BY_US) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                continue&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (!drainInputBuffer(&lt;span class=&quot;preprocessor&quot;&gt;info&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; kOnlySubmitOneInputBufferAtOneTime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; OMXCodec::drainAnyInputBuffer() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; drainInputBuffer((BufferInfo *)&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; OMXCodec::drainInputBuffer(BufferInfo *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaBuffer *srcBuffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSeekTimeUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLeftOverBuffer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mSource-&amp;gt;read(&amp;amp;srcBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MP3Source::read(MediaBuffer **out, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ReadOptions *options) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaBuffer *buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mGroup-&amp;gt;acquire_buffer(&amp;amp;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num_samples;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sample_rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x540C;&amp;#x6B65;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = mDataSource-&amp;gt;readAt(mCurrentPos, buffer-&amp;gt;data(), &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; header = U32_AT((&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *)buffer-&amp;gt;data());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((header &amp;amp; kMask) == (mFixedHeader &amp;amp; kMask)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; GetMPEGAudioFrameSize(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                header, &amp;amp;frame_size, &amp;amp;sample_rate, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;bitrate, &amp;amp;num_samples)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// re-calculate mCurrentTimeUs because we might have called Resync()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (seekCBR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCurrentTimeUs = (mCurrentPos - mFirstFramePos) * &lt;span class=&quot;number&quot;&gt;8000&lt;/span&gt; / bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBasisTimeUs = mCurrentTimeUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(frame_size &amp;lt;= buffer-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x9700;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; n = mDataSource-&amp;gt;readAt(mCurrentPos, buffer-&amp;gt;data(), frame_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;set_range(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, frame_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;meta_data()-&amp;gt;setInt64(kKeyTime, mCurrentTimeUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buffer-&amp;gt;meta_data()-&amp;gt;setInt32(kKeyIsSyncFrame, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPos += frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSamplesRead += num_samples;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentTimeUs = mBasisTimeUs + ((mSamplesRead * &lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;) / sample_rate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *out = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x4EA4;&amp;#x7ED9;mAudioSink-&amp;gt;open&amp;#xFF0C; mAudioSink-&amp;gt;start()&amp;#x4E86;&amp;#xFF0C;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;mAudioSink&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaPlayerService::Client::setDataSource_pre&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService::Client::setDataSource_pre(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!p-&amp;gt;hardwareOutput()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioOutput = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioOutput(mAudioSessionId, IPCThreadState::self()-&amp;gt;getCallingUid(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPid, mAudioAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;MediaPlayerInterface*&amp;gt;(p.get())-&amp;gt;setAudioSink(mAudioOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;mAudioSink&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x6790;open&amp;#x65B9;&amp;#x6CD5;&amp;#x4E86;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;mAudioSink-&amp;gt;open &amp;#x4E2D;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E2D;&amp;#x6709;&amp;#x4E2A;&amp;#x51FD;&amp;#x6570;&amp;#x6307;&amp;#x9488; AudioPlayer::AudioSinkCallback &amp;#xFF0C;&amp;#x5176;&amp;#x4E3B;&amp;#x8981;&amp;#x4F5C;&amp;#x7528;&amp;#x5C31;&amp;#x662F;audioout&amp;#x64AD;&amp;#x653E;pcm&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5B9A;&amp;#x671F;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728; mCallback&amp;#x4E2D;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x6709;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#xFF0C;&amp;#x5728;&amp;#x6784;&amp;#x9020;AudioTrack&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4F20;&amp;#x5165;&amp;#x4E86;CallbackWrapper&amp;#x4F5C;&amp;#x4E3A;audiotrack&amp;#x7684;callback&amp;#x5F53;audiotrack&amp;#x9700;&amp;#x8981;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x51FD;&amp;#x6570;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayerService::AudioOutput::open(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; channelCount, &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bufferCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AudioCallback cb, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; suggestedFrameCount)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AudioTrack&amp;gt; t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CallbackData *newcbd = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728; mCallback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = cb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallbackCookie = cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// We don&amp;apos;t attempt to create a new track if we are recycling an&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// offloaded track. But, if we are recycling a non-offloaded or we&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// are switching where one is offloaded and one isn&amp;apos;t then we create&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// the new track in advance so that we can read additional stream info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(reuse &amp;amp;&amp;amp; bothOffloaded)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;creating new AudioTrack&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCallback != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newcbd = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; CallbackData(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//new &amp;#x4E00;&amp;#x4E2A;AudioTrack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            t = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioTrack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mStreamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//audiotrack&amp;#x9700;&amp;#x8981;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6B64;&amp;#x51FD;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    CallbackWrapper,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    newcbd,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;// notification frames&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    AudioTrack::TRANSFER_CALLBACK,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mUid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mPid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    doNotReconnect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallbackData = newcbd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06; new&amp;#x51FA;&amp;#x6765;&amp;#x7684;AudioTrack&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;mTrack&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTrack = t;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6709;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5230;AudioOut&amp;#x64AD;&amp;#x653E;pcm&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5B9A;&amp;#x671F;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x6B64;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;,&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x5982;&amp;#x679C;&amp;#x8DDF;&amp;#x8E2A;mCallback&amp;#x4F60;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x76F4;&amp;#x63A5;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x76F8;&amp;#x5173;&amp;#x8C03;&amp;#x7528;&amp;#x5728;AudioOutput::CallbackWrapper&amp;#x4E2D;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&lt;br&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x4ECE;CallbackWrapper&amp;#x7684;&amp;#x6CE8;&amp;#x518C;&amp;#x4EE5;&amp;#x53CA;&amp;#x5982;&amp;#x4F55;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x8FDB;&amp;#x884C;&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x8FDB;&amp;#x884C;&amp;#x64CD;&amp;#x4F5C;&amp;#x8FDB;&amp;#x884C;&amp;#x8F83;&amp;#x4E3A;&amp;#x7EC6;&amp;#x81F4;&amp;#x7684;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioTrack&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;set&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;CallbackWrapper&amp;#x662F;&amp;#x5B83;&amp;#x7684;&amp;#x7B2C;7&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AudioTrack::AudioTrack(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_stream_type_t&lt;/span&gt; streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;callback_t&lt;/span&gt; cbf,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transfer_type transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; uid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_attributes_t&lt;/span&gt;* pAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mStatus(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIsTimed(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPreviousPriority(ANDROID_PRIORITY_NORMAL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPreviousSchedulingGroup(SP_DEFAULT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mPausedPosition(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSelectedDeviceId(AUDIO_PORT_HANDLE_NONE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = &lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;(streamType, sampleRate, format, channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frameCount, flags, cbf, user, notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*sharedBuffer*/&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*threadCanCallJava*/&lt;/span&gt;, sessionId, transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            offloadInfo, uid, pid, pAttributes, doNotReconnect);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;set&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;CallbackWrapper&amp;#x6700;&amp;#x7EC8;&amp;#x88AB;&amp;#x8D4B;&amp;#x7ED9;mCbf&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x5728;&amp;#x5176;&amp;#x4E2D;&amp;#x5F00;&amp;#x542F;&amp;#x4E86;AudioTrackThread&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;createTrack_l&amp;#x521B;&amp;#x5EFA;IAudioTrack&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_stream_type_t&lt;/span&gt; streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; sampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_format_t&lt;/span&gt; format,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_channel_mask_t&lt;/span&gt; channelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameCount,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;audio_output_flags_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;callback_t&lt;/span&gt; cbf,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* user,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; notificationFrames,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMemory&amp;gt;&amp;amp; sharedBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; threadCanCallJava,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        transfer_type transferType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_offload_info_t&lt;/span&gt; *offloadInfo,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; uid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;audio_attributes_t&lt;/span&gt;* pAttributes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; doNotReconnect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (transferType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TRANSFER_DEFAULT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TRANSFER_CALLBACK:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cbf == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; || sharedBuffer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//........................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCbf = cbf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cbf != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTrackThread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioTrackThread(*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, threadCanCallJava);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTrackThread-&amp;gt;run(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioTrack&amp;quot;&lt;/span&gt;, ANDROID_PRIORITY_AUDIO, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*stack*/&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// thread begins in paused state, and will not reference us until start()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// create the IAudioTrack&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = createTrack_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AudioTrack::AudioTrackThread::AudioTrackThread(AudioTrack&amp;amp; receiver, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; bCanCallJava)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : Thread(bCanCallJava), mReceiver(receiver), mPaused(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;), mPausedInt(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;), mPausedNs(&lt;span class=&quot;number&quot;&gt;0L&lt;/span&gt;L),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mIgnoreNextPausedInt(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; AudioTrack::AudioTrackThread::threadLoop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;nsecs_t&lt;/span&gt; ns = mReceiver.processAudioBuffer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (ns) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_INACTIVE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pauseInternal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_NEVER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NS_WHENEVER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Event driven: call wake() when callback notifications conditions change.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ns = INT64_MAX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LOG_ALWAYS_FATAL_IF(ns &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;processAudioBuffer() returned %&amp;quot;&lt;/span&gt; PRId64, ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pauseInternal(ns);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;processAudioBuffer&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5341;&amp;#x5206;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x4EC5;&amp;#x4EC5;&amp;#x5173;&amp;#x6CE8;&amp;#x4E0E;mCbf&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x3002;&amp;#x5982;&amp;#x7EA2;&amp;#x8272;&amp;#x6807;&amp;#x6CE8;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6BB5;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;nsecs_t&lt;/span&gt; AudioTrack::processAudioBuffer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (waitStreamEnd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;FIXME:&lt;/span&gt;  Instead of blocking in proxy-&amp;gt;waitStreamEndDone(), Callback thread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// should wait on proxy futex and handle CBLK_STREAM_END_DONE within this function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (and make sure we don&amp;apos;t callback for more data while we&amp;apos;re stopping).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This helps with position, marker notifications, and track invalidation.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; timespec timeout;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout.tv_sec = WAIT_STREAM_END_TIMEOUT_SEC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        timeout.tv_nsec = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = proxy-&amp;gt;waitStreamEndDone(&amp;amp;timeout);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (status) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; NO_ERROR:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; DEAD_OBJECT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; TIMED_OUT:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mCbf(EVENT_STREAM_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;AutoMutex &lt;span class=&quot;title&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// The previously assigned value of waitStreamEnd is no longer valid,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// since the mutex has been unlocked and either the callback handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// or another thread could have re-started the AudioTrack during that time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                waitStreamEnd = mState == STATE_STOPPING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (waitStreamEnd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mState = STATE_STOPPED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mReleased = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newUnderrun) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_UNDERRUN, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (loopCountNotifications &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_LOOP_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --loopCountNotifications;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; CBLK_BUFFER_END) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_BUFFER_END, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (markerReached) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_MARKER, mUserData, &amp;amp;markerPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (newPosCount &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; temp = newPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_NEW_POS, mUserData, &amp;amp;temp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newPosition += updatePeriod;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newPosCount--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mObservedSequence != sequence) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mObservedSequence = sequence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCbf(EVENT_NEW_IAUDIOTRACK, mUserData, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// for offloaded tracks, just wait for the upper layers to recreate the track&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isOffloadedOrDirect()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NS_INACTIVE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; reqSize = audioBuffer.size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCbf(EVENT_MORE_DATA, mUserData, &amp;amp;audioBuffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; writtenSize = audioBuffer.size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// A lot has transpired since ns was calculated, so run again immediately and re-calculate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5728;new AudioTrack&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x542F;&amp;#x52A8;AudioTrackThread&amp;#xFF0C;&amp;#x5728;AudioTrackThread&amp;#x4E2D;&amp;#x7684;threadLoop&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;mCbf(EVENT_MORE_DATA, mUserData, &amp;amp;audioBuffer);&amp;#x7B49;&amp;#x56DE;&amp;#x8C03;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x8C03;&amp;#x7528;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioOutput::CallbackWrapper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;data-&amp;gt;getOutput();&amp;#x83B7;&amp;#x5F97;AudioOutput&amp;#xFF0C;&amp;#x518D;&amp;#x901A;&amp;#x8FC7;*me-&amp;gt;mCallback&amp;#x6765;&amp;#x8C03;&amp;#x7528;AudioPlayer::AudioSinkCallback&amp;#x4E2D;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::AudioOutput&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::CallbackWrapper&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int event, &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; *cookie, &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; *info) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//ALOGV(&amp;quot;callbackwrapper&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CallbackData *&lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt; = (CallbackData*)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// lock to ensure we aren&amp;apos;t caught in the middle of a track switch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;lock();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioOutput *me = &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getOutput();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioTrack&lt;span class=&quot;tag&quot;&gt;::Buffer&lt;/span&gt; *buffer = (AudioTrack&lt;span class=&quot;tag&quot;&gt;::Buffer&lt;/span&gt; *)info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_MORE_DATA&lt;/span&gt;: {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t actualSize = (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me, buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;raw, buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;size, me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CB_EVENT_FILL_BUFFER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Log when no data is returned from the callback.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (1) We may have no data (especially with network streaming sources).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (2) We may have reached the EOS and the audio track is not stopped yet.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Note that AwesomePlayer/AudioPlayer will only return zero size when it reaches the EOS.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// NuPlayerRenderer will return zero when it doesn&amp;apos;t have data (it doesn&amp;apos;t block to fill).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This is a benign busy-wait, with the next data request generated 10 ms or more later;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// nevertheless for power reasons, we don&amp;apos;t want to see too many of these.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mBytesWritten += actualSize;  &lt;span class=&quot;comment&quot;&gt;// benign race with reader.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;size = actualSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_STREAM_END&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// currently only occurs for offloaded callbacks&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackwrapper: deliver EVENT_STREAM_END&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(me, &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* buffer */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* size */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie, CB_EVENT_STREAM_END);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_NEW_IAUDIOTRACK&lt;/span&gt; :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;callbackwrapper: deliver EVENT_TEAR_DOWN&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (*me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallback)(me,  &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* buffer */&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* size */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                me&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;mCallbackCookie, CB_EVENT_TEAR_DOWN);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AudioTrack&lt;span class=&quot;tag&quot;&gt;::EVENT_UNDERRUN&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This occurs when there is no data available, typically&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// when there is a failure to supply data to the AudioTrack.  It can also&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// occur in non-offloaded mode when the audio device comes out of standby.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If an AudioTrack underruns it outputs silence. Since this happens suddenly&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// it may sound like an audible pop or glitch.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The underrun event is sent once per track underrun; the condition is reset&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// when more data is sent to the AudioTrack.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;received unknown event type: %d inside CallbackWrapper !&amp;quot;&lt;/span&gt;, event);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;unlock();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;AudioPlayer::AudioSinkCallback&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5047;&amp;#x8BBE;&amp;#x5F53;&amp;#x524D;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x4E3A;CB_EVENT_FILL_BUFFER&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;AudioPlayer::fillBuffer&amp;#x6765;&amp;#x586B;&amp;#x5145;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;br&gt;&amp;#x5728;AudioPlayer::fillBuffer&amp;#x4E2D;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;err = mSource-&amp;gt;read(&amp;amp;mInputBuffer, &amp;amp;options);&amp;#x5373;&amp;#x8C03;&amp;#x7528;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;mediabuffer&amp;#x6765;&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x4E0D;&amp;#x5217;&amp;#x51FA;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; AudioPlayer::AudioSinkCallback(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink * &lt;span class=&quot;comment&quot;&gt;/* audioSink */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *buffer, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *cookie,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaPlayerBase::AudioSink::&lt;span class=&quot;keyword&quot;&gt;cb_event_t&lt;/span&gt; event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioPlayer *me = (AudioPlayer *)cookie;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(event) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_FILL_BUFFER:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; me-&amp;gt;fillBuffer(buffer, size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_STREAM_END:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: stream end&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mReachedEOS = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;notifyAudioEOS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; MediaPlayerBase::AudioSink::CB_EVENT_TEAR_DOWN:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;AudioSinkCallback: Tear down event&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        me-&amp;gt;mObserver-&amp;gt;postAudioTearDown();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5B8C;open&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;start&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x53EA;&amp;#x6389;&amp;#x8C03;&amp;#x7528;mTrack-&amp;gt;start.&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::AudioOutput&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::start&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTrack != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setVolume(mLeftVolume, mRightVolume);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setAuxEffectSendLevel(mSendLevel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mTrack&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;AudioTrack::start&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x5185;&amp;#x90E8;&amp;#x8C03;&amp;#x7528;&amp;#x4E86; mAudioTrack-&amp;gt;start();&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    State previousState = mState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previousState == STATE_PAUSED_STOPPING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = STATE_STOPPING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mState = STATE_ACTIVE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) updateAndGetPosition_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AudioTrackThread&amp;gt; t = mAudioTrackThread;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (t != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previousState == STATE_STOPPING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mProxy-&amp;gt;interrupt();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            t-&amp;gt;resume();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPreviousPriority = getpriority(PRIO_PROCESS, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        get_sched_policy(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;amp;mPreviousSchedulingGroup);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidSetThreadPriority(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, ANDROID_PRIORITY_AUDIO);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = NO_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(flags &amp;amp; CBLK_INVALID)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = mAudioTrack-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status == DEAD_OBJECT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            flags |= CBLK_INVALID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8DDF;&amp;#x8E2A;&amp;#x6E90;&amp;#x7801;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mAudioTrack&amp;#x662F;&amp;#x5728;createTrack_l()&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x5BF9;&amp;#x5E94;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;,&amp;#x5B83;&amp;#x662F;&amp;#x8C03;&amp;#x7528;audioFlinger-&amp;gt;createTrack&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6D41;&amp;#x7A0B;Audiotrack&amp;#x542F;&amp;#x52A8;&amp;#x540E;&amp;#x5C31;&amp;#x4F1A;&amp;#x5468;&amp;#x671F;&amp;#x6027;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x56DE;&amp;#x8C03;&amp;#x51FD;&amp;#x6570;&amp;#x4ECE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x83B7;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x8F93;&amp;#x51FA;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// must be called with mLock held&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AudioTrack::createTrack_l()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IAudioTrack&amp;gt; track = audioFlinger-&amp;gt;createTrack(streamType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mSampleRate,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mFormat,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mChannelMask,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;temp,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;trackFlags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mSharedBuffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      output,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      tid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;mSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      mClientUid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                      &amp;amp;status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = track;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x65E0;&amp;#x56FE;&amp;#x65E0;&amp;#x771F;&amp;#x76F8;&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF01;&amp;#x518D;&amp;#x770B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x5E94;&amp;#x8BE5;&amp;#x66F4;&amp;#x6E05;&amp;#x6670;&amp;#x4E86;&amp;#x5427;&amp;#xFF0C;&amp;#x8981;&amp;#x662F;&amp;#x8FD8;&amp;#x6709;&amp;#x7591;&amp;#x95EE;&amp;#x53EF;&amp;#x4EE5;&amp;#x7ED9;&amp;#x6211;&amp;#x53D1;&amp;#x90AE;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/08/01/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-3/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5148;&amp;#x4E0A;&amp;#x56FE;&amp;#xFF0C;&amp;#x4EE5;&amp;#x514D;&amp;#x4E00;&amp;#x5927;&amp;#x5806;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F15;&amp;#x6765;&amp;#x5927;&amp;#x5BB6;&amp;#x7684;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[3]</title>
    <link href="http://yoursite.com/2016/07/31/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-2/"/>
    <id>http://yoursite.com/2016/07/31/Android-源码分析基于Stagefright的MediaPlayer播放框架-2/</id>
    <published>2016-07-31T13:54:41.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;/h5&gt;&lt;h6 id=&quot;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot;&gt;&lt;a href=&quot;#Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot; class=&quot;headerlink&quot; title=&quot;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&quot;&gt;&lt;/a&gt;Prepare&amp;#x2013;&amp;#x52A0;&amp;#x8F7D;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&lt;/h6&gt;&lt;p&gt;&amp;#x901A;&amp;#x8FC7;setDataSource&amp;#x8BBE;&amp;#x7F6E;&amp;#x64AD;&amp;#x653E;&amp;#x8D44;&amp;#x6E90;&amp;#x540E;&amp;#x3002;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;Prepare&amp;#x65B9;&amp;#x6CD5;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x4E86;&amp;#x3002;Prepare&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x662F;&amp;#x6700;&amp;#x4E3A;&amp;#x590D;&amp;#x6742;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4F53;&amp;#x4E0A;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x6210;&amp;#x4E24;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x6570;&amp;#x636E;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x8BBE;&amp;#x7F6E;&amp;#xFF0C;Prepare&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x6D41;&amp;#x7A0B;&amp;#x548C;setDataSource&amp;#x4E00;&amp;#x6837;&amp;#x90FD;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;Java&amp;#x5C42;&amp;#x5230;jni&amp;#x5C42;&amp;#x518D;&amp;#x5230;native&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5C31;&amp;#x4E0D;&amp;#x505A;&amp;#x8FC7;&amp;#x591A;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scanInternalSubtitleTracks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalStateException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_prepare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mp == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jniThrowException(env, &lt;span class=&quot;string&quot;&gt;&amp;quot;java/lang/IllegalStateException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Handle the case where the display surface was set before the mp was&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// initialized. We try again to make it stick.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IGraphicBufferProducer&amp;gt; st = getVideoSurfaceTexture(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mp-&amp;gt;setVideoSurfaceTexture(st);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;prepare(), &lt;span class=&quot;string&quot;&gt;&amp;quot;java/io/IOException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Prepare failed.&amp;quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayer::prepare()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock _l(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = getThreadId();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareSync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -EALREADY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareSync = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; ret = prepareAsync_l()&amp;#xFF1B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareSync) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSignal.wait(mLock);  &lt;span class=&quot;comment&quot;&gt;// wait for prepare done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPrepareSync = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPrepareStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F00;&amp;#x59CB;&amp;#xFF1A;&lt;br&gt;MediaPlayer &amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;mPlayer-&amp;gt;prepareAsync()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;mPlayer&amp;#x8868;&amp;#x793A;&amp;#x7684;&amp;#x662F;Stagefright Player&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x5F80;&amp;#x4E0B;&amp;#x770B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MediaPlayer&lt;span class=&quot;tag&quot;&gt;::prepareAsync_l&lt;/span&gt;(){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( (mPlayer != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ( mCurrentState &lt;span class=&quot;subst&quot;&gt;&amp;amp;&lt;/span&gt; (MEDIA_PLAYER_INITIALIZED | MEDIA_PLAYER_STOPPED) ) ) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioAttributesParcel != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setParameter(KEY_PARAMETER_AUDIO_ATTRIBUTES, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *mAudioAttributesParcel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setAudioStreamType(mStreamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCurrentState = MEDIA_PLAYER_PREPARING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; INVALID_OPERATION;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;StagefrightPlayer&amp;#x4E2D;&amp;#x53EA;&amp;#x662F;&amp;#x7B80;&amp;#x5355;&amp;#x5730;&amp;#x8C03;&amp;#x7528;AwesomePlayer&amp;#x7684;prepareAsync&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;prepareAsync();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::prepareAsync() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ATRACE_CALL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;  &lt;span class=&quot;comment&quot;&gt;// async prepare already pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsAsyncPrepare = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; prepareAsync_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;AwesomePlayer&amp;#x7C7B;&amp;#x7684;prepareAsync_l&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;AwesomeEvent&amp;#xFF0C;&amp;#x542F;&amp;#x52A8;Queue&amp;#xFF0C;&amp;#x5C06;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;mAsyncPrepareEvent post&amp;#x5230;Queue&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::prepareAsync_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;  &lt;span class=&quot;comment&quot;&gt;// async prepare already pending&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mQueueStarted) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mQueue.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mQueueStarted = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAsyncPrepareEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onPrepareAsyncEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mQueue.postEvent(mAsyncPrepareEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x7EE7;&amp;#x7EED;&amp;#x4ECB;&amp;#x7ECD;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;TimedEventQueue&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#x3002;&amp;#x4ECE;&amp;#x540D;&amp;#x79F0;&amp;#x4E0A;&amp;#x770B;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E8B;&amp;#x4EF6;&amp;#x961F;&amp;#x5217;&amp;#x3002;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x5B83;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x53EA;&amp;#x662F;&amp;#x7ED9;&amp;#x5B83;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E00;&amp;#x4E2A;DeathRecipient.&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TimedEventQueue::TimedEventQueue()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mNextEventID(1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mRunning(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStopped(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDeathRecipient(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PMDeathRecipient(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mWakeLockCount(0) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;start&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;ThreadWrapper&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void TimedEventQueu&lt;span class=&quot;number&quot;&gt;e::&lt;/span&gt;start() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mRunning) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStopped = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_t attr&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_init(&amp;amp;attr)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_setdetachstate(&amp;amp;attr, PTHREAD_CREATE_JOINABLE)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_create(&amp;amp;mThread, &amp;amp;attr, ThreadWrapper, this)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pthread_attr_destroy(&amp;amp;attr)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRunning = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *TimedEventQueue::ThreadWrapper(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *me) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    androidSetThreadPriority(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;TimedEventQueue *&amp;gt;(me)-&amp;gt;threadEntry();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;ThreadWrapper&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x4E0D;&amp;#x65AD;&amp;#x5FAA;&amp;#x73AF;&amp;#x67E5;&amp;#x770B;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;Event&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x8FBE;&amp;#x5230;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x4E3A;&amp;#x7A7A;&amp;#x5219;&amp;#x5C06;&amp;#x4F1A;&amp;#x7B49;&amp;#x5F85;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FBE;&amp;#x5230;&amp;#x8D85;&amp;#x65F6;&amp;#x65F6;&amp;#x95F4;10&amp;#x79D2;&amp;#x5219;&amp;#x4F1A;&amp;#x9000;&amp;#x51FA;&amp;#x7EBF;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x8D85;&amp;#x65F6;&amp;#x65F6;&amp;#x95F4;&amp;#x4E4B;&amp;#x524D;&amp;#x8FBE;&amp;#x5230;&amp;#x5B83;&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x95F4;&amp;#x5219;&amp;#x8C03;&amp;#x7528;&amp;#x8BE5;Event&amp;#x7684;fire&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; TimedEventQueue::threadEntry() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prctl(PR_SET_NAME, (&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&amp;quot;TimedEventQueue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; now_us = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;Event&amp;gt; event;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; wakeLocked = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStopped) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mQueue.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mQueueNotEmptyCondition.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event_id eventID = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQueue.empty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// The only event in the queue could have been cancelled&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// while we were waiting for its scheduled time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                List&amp;lt;QueueItem&amp;gt;::iterator it = mQueue.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                eventID = (*it).event-&amp;gt;eventID();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                now_us = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; when_us = (*it).realtime_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; delay_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (when_us &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || when_us == INT64_MAX) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = when_us - now_us;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delay_us &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; kMaxTimeoutUs = &lt;span class=&quot;number&quot;&gt;10000000l&lt;/span&gt;l;  &lt;span class=&quot;comment&quot;&gt;// 10 secs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; timeoutCapped = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    delay_us = kMaxTimeoutUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    timeoutCapped = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mQueueHeadChangedCondition.waitRelative(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mLock, delay_us * &lt;span class=&quot;number&quot;&gt;1000l&lt;/span&gt;l);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timeoutCapped &amp;amp;&amp;amp; err == -ETIMEDOUT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// We finally hit the time this event is supposed to&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// trigger.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    now_us = ALooper::GetNowUs();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// The event w/ this id may have been cancelled while we&amp;apos;re&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// waiting for its trigger-time, in that case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// removeEventFromQueue_l will return NULL.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Otherwise, the QueueItem will be removed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// from the queue and the referenced event returned.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event = removeEventFromQueue_l(eventID, &amp;amp;wakeLocked);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (event != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Fire event with the lock NOT held.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            event-&amp;gt;fire(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, now_us);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wakeLocked) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                releaseWakeLock_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;fire &amp;#x65B9;&amp;#x6CD5;&amp;#x91CC;&amp;#x9762;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;AwesomeEvent&amp;#x4E2D;mPlayer&amp;#x7684;mMethod&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;mMethod&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;new AwesomeEvent&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x9012;&amp;#x8FDB;&amp;#x53BB;&amp;#x7684;onPrepareAsyncEvent&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;struct &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; : public &lt;span class=&quot;type&quot;&gt;TimedEventQueue&lt;/span&gt;::&lt;span class=&quot;type&quot;&gt;Event&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;(&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt; *player,&lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt;::*&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;)())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mPlayer(player),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMethod(&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;protected:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual ~&lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;() {}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    virtual &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; fire(&lt;span class=&quot;type&quot;&gt;TimedEventQueue&lt;/span&gt; * /* queue */, int64_t /* now_us */) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (mPlayer-&amp;gt;*mMethod)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt; *mPlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;AwesomePlayer&lt;/span&gt;::*mMethod)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;operator=(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;AwesomeEvent&lt;/span&gt; &amp;amp;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;AwesomePlayer &amp;#x4E0B;&amp;#x7684;onPrepareAsyncEvent&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;onPrepareAsyncEvent&lt;br&gt;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;beginPrepareAsync_l&amp;#x3002;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;initAudioDecoder()&amp;#x5BF9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x4E86;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::onPrepareAsyncEvent() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beginPrepareAsync_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::beginPrepareAsync_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFlags &amp;amp; PREPARE_CANCELLED) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;prepare was cancelled before doing anything&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        abortPrepare(UNKNOWN_ERROR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mUri.size() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = finishSetDataSource_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoTrack != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = initVideoDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTrack != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; mAudioSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = initAudioDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            abortPrepare(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARING_CONNECTED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isStreamingHTTP()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        postBufferingEvent_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        finishAsyncPrepare_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x662F;&amp;#x600E;&amp;#x6837;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;OMXCodec::Create&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ATRACE_CALL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; meta = mAudioTrack-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    audio_stream_type_t streamType = AUDIO_STREAM_MUSIC;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSink != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        streamType = mAudioSink-&amp;gt;getAudioStreamType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOffloadAudio = canOffloadStream(meta, (mVideoSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                     isStreamingHTTP(), streamType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mOmxSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTrack-&amp;gt;getFormat()-&amp;gt;findInt64(kKeyDuration, &amp;amp;durationUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Mutex::Autolock autoLock(mMiscStateLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mDurationUs &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || durationUs &amp;gt; mDurationUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDurationUs = durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status_t err = mAudioSource-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_QCELP)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// For legacy reasons we&amp;apos;re simply going to ignore the absence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// of an audio decoder for QCELP instead of aborting playback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// altogether.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::Autolock autoLock(mStatsLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TrackStat *stat = &amp;amp;mStats.mTracks.editItemAt(mStats.mAudioTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mAudioSource-&amp;gt;getFormat()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                -&amp;gt;findCString(kKeyDecoderComponent, &amp;amp;component)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            component = &lt;span class=&quot;string&quot;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stat-&amp;gt;mDecoderName = component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mAudioSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; ? OK : UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;&amp;#x8FD9;&amp;#x4E2A;mimeType&amp;#x67E5;&amp;#x627E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x521B;&amp;#x5EFA;OMXCodecObserver&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x8D4B;&amp;#x7ED9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7531;allocateNode&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MetaData&amp;gt; &amp;amp;meta, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;MimeType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Vector&amp;lt;CodecNameAndQuirks&amp;gt; matchingCodecs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x627E;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3B;&amp;#x8981;&amp;#x4ECE;/etc/media_codecs.xml  /etc/media_codecs_performence.xml &amp;#x4E2D;&amp;#x52A0;&amp;#x8F7D;&amp;#x5339;&amp;#x914D;&amp;#x5BF9;&amp;#x5E94;mimetype&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    findMatchingCodecs(mime, createEncoder, matchComponentName, flags, &amp;amp;matchingCodecs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x91CC;&amp;#x627E;&amp;#x5230;&amp;#x4E4B;&amp;#x540E;&amp;#x5C06;&amp;#x653E;&amp;#x5728;matchingCodecs&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x7684;&amp;#x5B58;&amp;#x653E;&amp;#x5F62;&amp;#x5F0F;&amp;#x4E3A;MediaCodecInfo&amp;#x7684;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;OMXCodecObserver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;OMXCodecObserver&amp;gt; observer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodecObserver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IOMX::node_id node = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; matchingCodecs.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentNameBase = matchingCodecs[i].mName.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks = matchingCodecs[i].mQuirks;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName = componentNameBase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x83B7;&amp;#x53D6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = omx-&amp;gt;allocateNode(componentName, observer, &amp;amp;node);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;OMXCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    omx, node, quirks, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer-&amp;gt;setCodec(codec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = codec-&amp;gt;configureCodec(meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; codec;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5339;&amp;#x914D;&amp;#x662F;&amp;#x8C03;&amp;#x7528;findMatchingCodecs&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x4E4B;&amp;#x524D;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x6240;&amp;#x62E5;&amp;#x6709;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x5B83;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x89E3;&amp;#x6790;/etc/media_codecs.xml&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;findCodecByType&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;matchingCodecs&amp;#x4E2D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void OMXCodec::findMatchingCodecs(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uint32_t flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;CodecNameAndQuirks&amp;gt; *matchingCodecs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    matchingCodecs-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x6240;&amp;#x62E5;&amp;#x6709;&amp;#x7684;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaCodecList&amp;gt; &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt; = MediaCodecList::getInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;findCodecByType&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x7684;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssize_t matchIndex =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt;-&amp;gt;findCodecByType(mime, createEncoder, index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matchIndex &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index = matchIndex + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaCodecInfo&amp;gt; info = &lt;span class=&quot;keyword&quot;&gt;list&lt;/span&gt;-&amp;gt;getCodecInfo(matchIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName = info-&amp;gt;getCodecName();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matchComponentName &amp;amp;&amp;amp; strcmp(componentName, matchComponentName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When requesting software-only codecs, only push software codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When requesting hardware-only codecs, only push hardware codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// When there is request neither for software-only nor for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// hardware-only codecs, push all codecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (((flags &amp;amp; kSoftwareCodecsOnly) &amp;amp;&amp;amp;   IsSoftwareCodec(componentName)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ((flags &amp;amp; kHardwareCodecsOnly) &amp;amp;&amp;amp;  !IsSoftwareCodec(componentName)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (!(flags &amp;amp; (kSoftwareCodecsOnly | kHardwareCodecsOnly)))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;matchingCodecs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ssize_t index = matchingCodecs-&amp;gt;add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CodecNameAndQuirks *entry = &amp;amp;matchingCodecs-&amp;gt;editItemAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mName = String8(componentName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry-&amp;gt;mQuirks = getComponentQuirks(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;matching &amp;apos;%s&amp;apos; quirks 0x%08x&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  entry-&amp;gt;mName.string(), entry-&amp;gt;mQuirks);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5BF9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x6392;&amp;#x5E8F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flags &amp;amp; kPreferSoftwareCodecs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        matchingCodecs-&amp;gt;sort(CompareSoftwareCodecsFirst);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaCodecList&lt;span class=&quot;tag&quot;&gt;::getInstance&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;tag&quot;&gt;::Autolock&lt;/span&gt; _l(sRemoteInitMutex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sRemoteList == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IBinder&amp;gt; binder =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            defaultServiceManager()&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IMediaPlayerService&amp;gt; service =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get() != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sRemoteList = service&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getCodecList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sRemoteList == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// if failed to get remote list, create local list&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sRemoteList = getLocalInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sRemoteList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaPlayerService::getCodecList() &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MediaCodecList::getLocalInstance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaCodecList&amp;gt; MediaCodecList::getLocalInstance() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sInitMutex)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sCodecList == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaCodecList *codecList = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaCodecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (codecList-&amp;gt;initCheck() == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sCodecList = codecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; codecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sCodecList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MediaCodecList::MediaCodecList()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInitCheck(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mUpdate(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mGlobalSettings(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(&lt;span class=&quot;string&quot;&gt;&amp;quot;/etc/media_codecs.xml&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(&lt;span class=&quot;string&quot;&gt;&amp;quot;/etc/media_codecs_performance.xml&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    parseTopLevelXMLFile(kProfilingResults, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;/* ignore_errors */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; MediaCodecList::findCodecByType(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *type, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; encoder, &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; startIndex) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *advancedFeatures[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;feature-secure-playback&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;feature-tunneled-playback&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; numCodecs = mCodecInfos.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x904D;&amp;#x5386;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9879;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (; startIndex &amp;lt; numCodecs; ++startIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; MediaCodecInfo &amp;amp;info = *mCodecInfos.itemAt(startIndex).get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x5219;&amp;#x63A5;&amp;#x7740;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x8FDB;&amp;#x884C;&amp;#x5224;&amp;#x65AD;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (info.isEncoder() != encoder) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x80FD;&amp;#x591F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x7684;MimeType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MediaCodecInfo::Capabilities&amp;gt; capabilities = info.getCapabilitiesFor(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (capabilities == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;details = capabilities-&amp;gt;getDetails();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; required;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isAdvanced = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; ix = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; ix &amp;lt; ARRAY_SIZE(advancedFeatures); ix++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (details-&amp;gt;findInt32(advancedFeatures[ix], &amp;amp;required) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    required != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                isAdvanced = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isAdvanced) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; startIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -ENOENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/22.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x6B65;&amp;#x9AA4;&amp;#x53EA;&amp;#x662F;&amp;#x8FC7;&amp;#x6EE4;&amp;#x51FA;&amp;#x80FD;&amp;#x591F;&amp;#x652F;&amp;#x6301;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x3002;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x7247;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5206;&amp;#x914D;&amp;#x8282;&amp;#x70B9;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t err = omx-&amp;gt;allocateNode(componentName, observer, &amp;amp;&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;OMXCodec&amp;gt;&lt;/span&gt; codec = new OMXCodec(omx, &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, quirks&lt;/span&gt;, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5C06;&amp;#x5B9E;&amp;#x4F8B;&amp;#x8D4B;&amp;#x7ED9;observer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;observer-&amp;gt;setCodec(codec);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//&amp;#x5E76;&amp;#x7528;&lt;span class=&quot;keyword&quot;&gt;meta&lt;/span&gt;&amp;#x6765;&amp;#x914D;&amp;#x7F6E;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;err = codec-&amp;gt;configureCodec(&lt;span class=&quot;keyword&quot;&gt;meta&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;allocateNode&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9996;&amp;#x5148;&amp;#x521B;&amp;#x5EFA;OMXNodeInstance&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&lt;br&gt;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateNode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *name, const sp&lt;span class=&quot;tag&quot;&gt;&amp;lt;IOMXObserver&amp;gt;&lt;/span&gt; &amp;amp;observer, node_id *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;/span&gt;::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= 0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMXNodeInstance *instance = new OMXNodeInstance(this, observer, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_COMPONENTTYPE *handle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = mMaster-&amp;gt;makeComponentInstance(name, &amp;amp;OMXNodeInstance::kCallbacks,instance, &amp;amp;handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= makeNodeID&lt;/span&gt;(instance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDispatchers.add(*&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, new&lt;/span&gt; CallbackDispatcher(instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance-&amp;gt;setHandle(*&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, handle&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLiveNodes.add(IInterface::asBinder(observer), instance);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IInterface::asBinder(observer)-&amp;gt;linkToDeath(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;OMXNodeInstance&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXNodeInstance::OMXNodeInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX *owner, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMXObserver&amp;gt; &amp;amp;observer, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOwner(owner),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNodeID(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandle(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mObserver(observer),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDying(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mBufferIDCount(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mName = ADebug::GetDebugName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEBUG = ADebug::GetDebugLevelFromProperty(name, &lt;span class=&quot;string&quot;&gt;&amp;quot;debug.stagefright.omx-debug&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;debug level for %s is %d&amp;quot;&lt;/span&gt;, name, DEBUG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DEBUG_BUMP = DEBUG;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumPortBuffers[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNumPortBuffers[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDebugLevelBumpPendingBuffers[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDebugLevelBumpPendingBuffers[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetadataType[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetadataType[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = kMetadataBufferTypeInvalid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;makeComponentInstance&amp;#x65B9;&amp;#x6CD5;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.indexOfKey(String8(name))&amp;#x627E;&amp;#x5230;&amp;#x6307;&amp;#x5B9A;&amp;#x540D;&amp;#x5B57;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;,&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.valueAt(index);&amp;#x8FD4;&amp;#x56DE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;mPluginByComponentName&amp;#x662F;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;AwesomePlayer&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&amp;#x91CC;&amp;#x9762;&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x662F;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&lt;br&gt;ssize_t index = mPluginByComponentName.indexOfKey(String8(name));&lt;br&gt;OMXPluginBase *plugin = mPluginByComponentName.valueAt(index);&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;plugin&amp;#x7684;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByInstance&amp;#x4E2D;&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE OMXMaster::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*component = NULL;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.indexOfKey(String8(name))&amp;#x627E;&amp;#x5230;&amp;#x6307;&amp;#x5B9A;&amp;#x540D;&amp;#x5B57;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x7D22;&amp;#x5F15;,&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;mPluginByComponentName.valueAt(index);&amp;#x8FD4;&amp;#x56DE;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x4E2A;mPluginByComponentName&amp;#x662F;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;AwesomePlayer&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&amp;#x91CC;&amp;#x9762;&amp;#x5B58;&amp;#x653E;&amp;#x7684;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t index = mPluginByComponentName.indexOfKey(String8(name));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OMXPluginBase *&lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt; = mPluginByComponentName.valueAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;plugin&amp;#x7684;makeComponentInstance&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5B9E;&amp;#x4F8B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//mPluginByInstance&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;-&amp;gt;makeComponentInstance(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; != OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPluginByInstance.add(*component, &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E3A;&amp;#x4F8B;&amp;#x5B50;&amp;#x6765;&amp;#x5206;&amp;#x6790;makeComponentInstance&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;br&gt;&amp;#x9996;&amp;#x5148;SoftOMXPlugin::makeComponentInstance&amp;#x4F1A;&amp;#x4ECE;kComponents&amp;#x6570;&amp;#x7EC4;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;kComponents&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x4F53;&amp;#x6570;&amp;#x7EC4;&amp;#xFF0C;&amp;#x5B58;&amp;#x653E;&amp;#x7740;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x540D;&amp;#xFF0C;&amp;#x52A8;&amp;#x6001;&amp;#x94FE;&amp;#x63A5;&amp;#x5E93;&amp;#x540E;&amp;#x7F00;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x662F;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x8FD8;&amp;#x662F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;&amp;#x52A8;&amp;#x6001;&amp;#x94FE;&amp;#x63A5;&amp;#x5E93;&amp;#x7684;&amp;#x540E;&amp;#x7F00;&amp;#x6784;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#xFF0C;&amp;#x63A5;&amp;#x7740;&amp;#x6253;&amp;#x5F00;&amp;#x8BE5;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SoftOMXPlugin::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumComponents; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// &amp;#x5728;kComponents&amp;#x6570;&amp;#x7EC4;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;strcmp&lt;/span&gt;(name, kComponents[i].mName)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6784;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;MP3&amp;#x4E3A;&amp;#x4F8B;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#x4E3A;&amp;#xFF1A;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// libstagefright_soft_mp3dec.so&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AString libName = &lt;span class=&quot;string&quot;&gt;&amp;quot;libstagefright_soft_&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libName.append(kComponents[i].mLibNameSuffix);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        libName.append(&lt;span class=&quot;string&quot;&gt;&amp;quot;.so&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6253;&amp;#x5F00;&amp;#x8BE5;&amp;#x5E93;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *libHandle = dlopen(libName.c_str(), RTLD_NOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; SoftOMXComponent *(*CreateSoftOMXComponentFunc)(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                OMX_PTR, OMX_COMPONENTTYPE **);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CreateSoftOMXComponentFunc createSoftOMXComponent =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (CreateSoftOMXComponentFunc)dlsym(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    libHandle,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;_Z22createSoftOMXComponentPKcPK16OMX_CALLBACKTYPE&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;PvPP17OMX_COMPONENTTYPE&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;SoftOMXComponent&amp;gt; codec =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (*createSoftOMXComponent)(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_ERRORTYPE err = codec-&amp;gt;initCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        codec-&amp;gt;incStrong(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        codec-&amp;gt;setLibHandle(libHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorNone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorInvalidComponentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight xquery&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static const struct {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mLibNameSuffix;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const char *mRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} kComponents[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.aac.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;aacdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.aac.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;aacenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrnb.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrnb.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrnbenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrwb.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.amrwb.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;amrwbenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h264.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;avcdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h264.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;avcenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.hevc.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;hevcdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.hevc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.g711.alaw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;g711dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711alaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.g711.mlaw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;g711dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711mlaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg2.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg2dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h263.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.h263.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4enc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg4.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mpeg4.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mpeg4enc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.mp3.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;mp3dec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vorbis.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vorbisdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.vorbis&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.opus.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;opusdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.opus&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp8.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp9.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp9&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.vp8.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;vpxenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.raw.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;rawdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.raw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.flac.encoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;flacenc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.flac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    { &lt;span class=&quot;string&quot;&gt;&amp;quot;OMX.google.gsm.decoder&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;gsmdec&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.gsm&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6BCF;&amp;#x4E2A;&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;MP3&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x5728;&amp;#x5B83;&amp;#x5185;&amp;#x90E8;&amp;#x901A;&amp;#x8FC7; android::SoftMP3&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;MP3&amp;#x8F6F;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android::&lt;span class=&quot;function&quot;&gt;SoftOMXComponent *&lt;span class=&quot;title&quot;&gt;createSoftOMXComponent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData, OMX_COMPONENTTYPE **component)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; android::SoftMP3(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F30;&amp;#x8BA1;&amp;#x5927;&amp;#x5BB6;&amp;#x4F1A;&amp;#x6709;&amp;#x70B9;&amp;#x6655;&amp;#x4E86;&amp;#x5427;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x70B9;&amp;#x6655;&amp;#x6211;&amp;#x8FD9;&amp;#x91CC;&amp;#x518D;&amp;#x4E0A;&amp;#x4E2A;&amp;#x56FE;&amp;#x505A;&amp;#x4E2A;&amp;#x5C0F;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/23.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5B9E;&amp;#x4F8B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x662F;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x62FF;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;mimetype&amp;#x6211;&amp;#x4EEC;&amp;#x53BB;&amp;#x5339;&amp;#x914D;&amp;#x53EF;&amp;#x4EE5;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E2A;&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x548C;&amp;#x4EC0;&amp;#x4E48;&amp;#x5339;&amp;#x914D;&amp;#xFF1F;&amp;#x5C31;&amp;#x662F;&amp;#x4ECE;/etc/media_codecs.xml./etc/media_codec_performance.xml&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;xml&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x89E3;&amp;#x6790;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E2D;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E86;&amp;#x5E73;&amp;#x53F0;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4FE1;&amp;#x606F;&amp;#x5C01;&amp;#x88C5;&amp;#x5728;&amp;#x4E00;&amp;#x4E2A;MediaCodecInfo&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&amp;#x5339;&amp;#x914D;&amp;#x540E;&amp;#x7684;&amp;#x6240;&amp;#x6709;MediaCodecInfo&amp;#x5B58;&amp;#x653E;&amp;#x5728;matchingCodecs&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x62FF;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5217;&amp;#x8868;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;ComponentName&amp;#x5230;mPluginByComponentName&amp;#x4E2D;&amp;#x67E5;&amp;#x627E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;plugin&amp;#x3002;&amp;#x6BD4;&amp;#x5982;MP3&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x627E;&amp;#x5230;SoftOMXPlugin&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x4ECE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5E93;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x5E93;&amp;#x5185;&amp;#x90E8;&amp;#x7684;createSoftOMXComponent&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;SoftMp3&amp;#x8FD9;&amp;#x4E2A;component&amp;#xFF0C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x540E;&amp;#x52A0;&amp;#x5165;&amp;#x5230;mPluginByInstance&lt;/p&gt;
&lt;p&gt;&amp;#x5728;MP3&amp;#x8F6F;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x6709;&amp;#x4E09;&amp;#x4E2A;&amp;#x6B65;&amp;#x9AA4;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SimpleSoftOMXComponent&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&lt;/li&gt;
&lt;li&gt;initPorts();&lt;/li&gt;
&lt;li&gt;initDecoder();&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SoftMP3::SoftMP3(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SimpleSoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mConfig(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; tPVMP3DecoderExternal),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDecoderBuf(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAnchorTimeUs(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumFramesOutput(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mNumChannels(2),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSamplingRate(44100),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSignalledError(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSawInputEos(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSignalledOutputEos(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOutputPortSettingsChange(NONE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initPorts();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x5728;SimpleSoftOMXComponent&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;SoftOMXComponent&amp;#xFF0C;&amp;#x5E76;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;mHandler&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;mLooper&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;mHandler&amp;#x6CE8;&amp;#x518C;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;mLooper&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x542F;&amp;#x52A8;mLooper&amp;#x3002;&lt;br&gt;&amp;#x5728;mHandler&amp;#x4E2D;&amp;#x80FD;&amp;#x591F;&amp;#x5904;&amp;#x7406;kWhatEmptyThisBuffer&amp;#xFF0C;kWhatFillThisBuffer&amp;#xFF0C;kWhatSendCommand&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5F53;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E8B;&amp;#x4EF6;&amp;#x89E6;&amp;#x53D1;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x53D1;&amp;#x9001;&amp;#x5230;SimpleSoftOMXComponent::onMessageReceived&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleSoftOMXComponent::SimpleSoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLooper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ALooper),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandler(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AHandlerReflector&amp;lt;SimpleSoftOMXComponent&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mState(OMX_StateLoaded),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetState(OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;setName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;start(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// runOnCallingThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// canCallJava&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;SoftOMXComponent::SoftOMXComponent&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;OMX_COMPONENTTYPE&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x4F53;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5728;&lt;br&gt;frameworks/native/include/media/openmax/OMX_Component.h&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x5BF9;&amp;#x5176;&amp;#x5B9A;&amp;#x4E49;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SoftOMXComponent::SoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mName(name),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mCallbacks(callbacks),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mComponent(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMX_COMPONENTTYPE),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLibHandle(&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nSize = sizeof(*mComponent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nVersionMajor = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nVersionMinor = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nRevision = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;nVersion.s.nStep = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;pComponentPrivate = this;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;pApplicationPrivate = appData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetComponentVersion = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SendCommand = SendCommandWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetParameter = GetParameterWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetParameter = SetParameterWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetConfig = GetConfigWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetConfig = SetConfigWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetExtensionIndex = GetExtensionIndexWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;GetState = GetStateWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentTunnelRequest = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;UseBuffer = UseBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;AllocateBuffer = AllocateBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;FreeBuffer = FreeBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;EmptyThisBuffer = EmptyThisBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;FillThisBuffer = FillThisBufferWrapper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;SetCallbacks = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentDeInit = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;UseEGLImage = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComponent-&amp;gt;ComponentRoleEnum = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *component = mComponent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;callback&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OMX_CALLBACKTYPE OMXNodeInstance::kCallbacks = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;OnEvent, &amp;amp;OnEmptyBufferDone, &amp;amp;OnFillBufferDone&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;initPorts&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E24;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E3A;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;index&amp;#x4E3A;0&amp;#xFF0C;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;index&amp;#x4E3A;1.&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void &lt;span class=&quot;type&quot;&gt;SoftMP3&lt;/span&gt;::initPorts() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;OMX_PARAM_PORTDEFINITIONTYPE&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;InitOMXParams&lt;/span&gt;(&amp;amp;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nPortIndex&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDir&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_DirInput&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt; =&lt;/span&gt; kNumBuffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountActual&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferSize&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bEnabled&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_TRUE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bPopulated&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDomain&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_PortDomainAudio&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bBuffersContiguous&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferAlignment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;cMIMEType&lt;/span&gt; =&lt;/span&gt; const_cast&amp;lt;char *&amp;gt;(&lt;span class=&quot;type&quot;&gt;MEDIA_MIMETYPE_AUDIO_MPEG&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;pNativeRender&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bFlagErrorConcealment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eEncoding&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_AUDIO_CodingMP3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addPort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nPortIndex&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDir&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_DirOutput&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt; =&lt;/span&gt; kNumBuffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountActual&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferCountMin&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferSize&lt;/span&gt; =&lt;/span&gt; kOutputBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bEnabled&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_TRUE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bPopulated&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eDomain&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_PortDomainAudio&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bBuffersContiguous&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;nBufferAlignment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;cMIMEType&lt;/span&gt; =&lt;/span&gt; const_cast&amp;lt;char *&amp;gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio/raw&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;pNativeRender&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;bFlagErrorConcealment&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_FALSE&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;format&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;audio&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;eEncoding&lt;/span&gt; =&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;OMX_AUDIO_CodingPCM&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    addPort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;initDecoder&amp;#x6765;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SoftMP&lt;span class=&quot;number&quot;&gt;3::&lt;/span&gt;initDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfig-&amp;gt;equalizerType = flat&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConfig-&amp;gt;crcEnabled = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t memRequirements = pvmp3_decoderMemRequirements()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDecoderBuf = malloc(memRequirements)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pvmp3_InitDecoder(mConfig, mDecoderBuf)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsFirst = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x56DE;&amp;#x5934;&amp;#x603B;&amp;#x7ED3;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E4B;&amp;#x524D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x5982;&amp;#x4F55;&amp;#x4ECE;&amp;#x4F20;&amp;#x5165;&amp;#x7684;mimetype&amp;#x5230;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;component&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;component&amp;#x4E2A;&amp;#x4EBA;&amp;#x8BA4;&amp;#x4E3A;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x7EC4;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5B83;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E2A;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x6240;&amp;#x4F5C;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6838;&amp;#x5FC3;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x548C;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;&amp;#x914D;&amp;#x7F6E;&amp;#x3002;&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;OMX_CALLBACKTYPE&amp;#xFF0C;OMX_COMPONENTTYPE&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x4EE5;&amp;#x53CA;mHandler&amp;#x3002;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x4E2A;&amp;#x56FE;&amp;#x5427;&amp;#xFF0C;&amp;#x65E0;&amp;#x56FE;&amp;#x65E0;&amp;#x771F;&amp;#x76F8;&amp;#xFF01;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/24.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x56DE;&amp;#x8FC7;&amp;#x5934;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;allocateNode&amp;#xFF0C;&amp;#x5728;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x521B;&amp;#x5EFA;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x8C03;&amp;#x7528;makeNodeID&amp;#x4E3A;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;node&amp;#x521B;&amp;#x5EFA;ID&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mNodeIDToInstance&amp;#x4E2D;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x4E2A;id&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX::node_id OMX::makeNodeID(OMXNodeInstance *instance) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // mLock is already held.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt; &lt;/span&gt;&lt;span class=&quot;title&quot;&gt;= (node_id&lt;/span&gt;)++mNodeCounter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNodeIDToInstance.add(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, instance&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;OMXCodec&amp;#xFF0C;&amp;#x5728;OMXCodec&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;setComponentRole&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;mimeType&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;isEncoder&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Role Name&amp;#xFF0C;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXCodec::OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOMX(omx),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexInput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexOutput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setComponentRole();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXCodec::setComponentRole(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; MimeToRole {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *decoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *encoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; MimeToRole kMimeToRole[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_I,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp1&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_II,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.mp2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.mp2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AMR_NB,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrnb&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrnb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AMR_WB,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.amrwb&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.amrwb&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AAC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.aac&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.aac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_VORBIS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.vorbis&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.vorbis&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_OPUS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.opus&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.opus&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_G711_MLAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711mlaw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.g711mlaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_G711_ALAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.g711alaw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.g711alaw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_AVC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.avc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.avc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_HEVC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.hevc&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.hevc&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_MPEG4,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg4&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg4&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_H263,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.h263&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.h263&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_VP8,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp8&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp8&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_VP9,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.vp9&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.vp9&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_RAW,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.raw&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.raw&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_FLAC,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.flac&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.flac&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_MSGSM,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.gsm&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.gsm&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_VIDEO_MPEG2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;video_decoder.mpeg2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;video_encoder.mpeg2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { MEDIA_MIMETYPE_AUDIO_AC3,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_decoder.ac3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio_encoder.ac3&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumMimeToRole =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMimeToRole) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMimeToRole[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumMimeToRole; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, kMimeToRole[i].mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i == kNumMimeToRole) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *role =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isEncoder ? kMimeToRole[i].encoderRole&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  : kMimeToRole[i].decoderRole;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (role != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PARAM_COMPONENTROLETYPE roleParams;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        InitOMXParams(&amp;amp;roleParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;strncpy&lt;/span&gt;((&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *)roleParams.cRole,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                role, OMX_MAX_STRINGNAME_SIZE - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        roleParams.cRole[OMX_MAX_STRINGNAME_SIZE - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = omx-&amp;gt;setParameter(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                node, OMX_IndexParamStandardComponentRole,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;roleParams, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(roleParams));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (err != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to set standard component role &amp;apos;%s&amp;apos;.&amp;quot;&lt;/span&gt;, role);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x770B;&amp;#x5B8C;&amp;#x4E86;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;initAudioDecoder&amp;#x4E2D;&amp;#x7684;&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t err = mAudioSource-&amp;gt;start()&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x660E;&amp;#x786E;mAudioSource&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#xFF0C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_RAW)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffloadAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mAudioTrack;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mAudioSource = mOmxSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;status_t err = mAudioSource-&amp;gt;start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mAudioSource&amp;#x6307;&amp;#x7684;&amp;#x662F;mOmxSource&amp;#xFF0C;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;OMXCodec&amp;#x3002;&amp;#x800C;OMXCodec::Create&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;OMXCodec&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;OMXCodec&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;.&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec&lt;span class=&quot;tag&quot;&gt;::start&lt;/span&gt;(MetaData *meta) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;tag&quot;&gt;::Autolock&lt;/span&gt; autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; &lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; MetaData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Decoder case&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err = mSource&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;start(&lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;get())) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;mSource&amp;#x7684;start&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;init()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x8BE5;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x9488;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x90E8;&amp;#x5206;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#x3002;&amp;#x540C;&amp;#x6837;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x5206;&amp;#x6790;&amp;#x5177;&amp;#x4F53;&amp;#x6D41;&amp;#x7A0B;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x8981;&amp;#x660E;&amp;#x786E;mSource&amp;#x5230;&amp;#x5E95;&amp;#x6307;&amp;#x7684;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4ECE;&amp;#x5B83;&amp;#x7684;&amp;#x6839;&amp;#x6E90;&amp;#x627E;&amp;#x8D77;.&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXCodec::OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx, IOMX::node_id node,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; quirks, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mOMX(omx),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSource(source),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..{&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexInput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPortStatus[kPortIndexOutput] = ENABLED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setComponentRole();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMX&amp;gt; &amp;amp;omx,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MetaData&amp;gt; &amp;amp;meta, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; createEncoder,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaSource&amp;gt; &amp;amp;source,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *matchComponentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;ANativeWindow&amp;gt; &amp;amp;nativeWindow) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;OMXCodec&amp;gt; codec = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMXCodec(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    omx, node, quirks, flags,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    createEncoder, mime, componentName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    source, nativeWindow);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::initAudioDecoder() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOmxSource = OMXCodec::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mClient.&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt;(), mAudioTrack-&amp;gt;getFormat(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// createEncoder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mAudioTrack);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::setAudioSource(sp&amp;lt;MediaSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F7F;&amp;#x7528;MediaExtractor&amp;#x5BF9;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x505A;A/V&amp;#x7684;&amp;#x5206;&amp;#x79BB;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource_l(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaExtractor&amp;gt; &amp;amp;extractor) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveVideo &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           setVideoSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setAudioSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x6700;&amp;#x7EC8;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x6839;&amp;#x6E90;&amp;#x6765;&amp;#x81EA;extractor-&amp;gt;getTrack&amp;#xFF0C;&amp;#x5047;&amp;#x8BBE;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x6B4C;&amp;#x66F2;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x4E3A;MP3&amp;#x683C;&amp;#x5F0F;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;extractor&amp;#x5C31;&amp;#x662F;MP3Extractor,&amp;#x5219;mAudioTrack&amp;#x5C31;&amp;#x662F;MP3Extractor::getTrack&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;MP3Source&amp;#xFF0C;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x8FD9;&amp;#x70B9;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x7EE7;&amp;#x7EED;&amp;#x5BF9;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaSource&amp;gt; MP3Extractor::getTrack(&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; index) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInitCheck != OK || index != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MP3Source(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta, mDataSource, mFirstFramePos, mFixedHeader,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSeeker);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;MP3Source::start&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;MediaBuffer&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;MediaBufferGroup&amp;#x7684;add_buffer&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;MediaBufferGroup&amp;#x4E2D;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5C06;&amp;#x4E00;&amp;#x4E9B;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x6807;&amp;#x5FD7;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4E3A;&amp;#x521D;&amp;#x59CB;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t MP3Sour&lt;span class=&quot;number&quot;&gt;ce::&lt;/span&gt;start(MetaData *) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(!mStarted)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGroup = new MediaBufferGroup&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGroup-&amp;gt;add_buffer(new MediaBuffer(kMaxFrameSize))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPos = mFirstFramePos&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentTimeUs = 0&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBasisTimeUs = mCurrentTimeUs&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSamplesRead = 0&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStarted = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return OK&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;init&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXCodec::init() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// mLock is held.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    status_t &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!(mQuirks &amp;amp; kRequiresLoadedToIdleAfterAllocation)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = mOMX-&amp;gt;sendCommand(mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(LOADED_TO_IDLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = allocateBuffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQuirks &amp;amp; kRequiresLoadedToIdleAfterAllocation) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; = mOMX-&amp;gt;sendCommand(mNode, OMX_CommandStateSet, OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setState(LOADED_TO_IDLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mState != EXECUTING &amp;amp;&amp;amp; mState != &lt;span class=&quot;keyword&quot;&gt;ERROR&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAsyncCompletion.wait(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mState == &lt;span class=&quot;keyword&quot;&gt;ERROR&lt;/span&gt; ? UNKNOWN_ERROR : OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;init&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;allocateBuffers&amp;#x6765;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;mOMX-&amp;gt;sendCommand&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x5E95;&amp;#x5C42;&amp;#x3002;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;allocateBuffers&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; OMXCodec::allocateBuffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = allocateBuffersOnPort(kPortIndexInput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; allocateBuffersOnPort(kPortIndexOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;allocateBuffersOnPort&amp;#x4E2D;&amp;#x5206;&amp;#x522B;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x6307;&amp;#x5B9A;&amp;#x5927;&amp;#x5C0F;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x5E76;&amp;#x5BF9;&amp;#x5176;&amp;#x7EDF;&amp;#x4E00;&amp;#x7BA1;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; OMXCodec::allocateBuffersOnPort(OMX_U32 portIndex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNativeWindow != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; portIndex == kPortIndexOutput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; allocateOutputBuffersFromNativeWindow();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mFlags &amp;amp; kStoreMetaDataInVideoBuffers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; portIndex == kPortIndexInput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        err = mOMX-&amp;gt;storeMetaDataInBuffers(mNode, kPortIndexInput, OMX_TRUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_PARAM_PORTDEFINITIONTYPE def;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x83B7;&amp;#x53D6;&amp;#x53C2;&amp;#x6570;def&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x521D;&amp;#x59CB;&amp;#x4E0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    InitOMXParams(&amp;amp;def);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    def.nPortIndex = portIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6307;&amp;#x5B9A;&amp;#x7AEF;&amp;#x53E3;&amp;#x7684;def&amp;#x53C2;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err = mOMX-&amp;gt;getParameter(mNode, OMX_IndexParamPortDefinition, &amp;amp;def, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(def));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CODEC_LOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;allocating %u buffers of size %u on %s port&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            def.nBufferCountActual, def.nBufferSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            portIndex == kPortIndexInput ? &lt;span class=&quot;string&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x4E3A;&amp;#x6307;&amp;#x5B9A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A;def.nBufferSize &amp;#x4E2A;&amp;#x6570;&amp;#x4E3A;def.nBufferCountActual&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x5206;&amp;#x914D;&amp;#x53C2;&amp;#x6570;&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x68C0;&amp;#x67E5;def.nBufferSize &amp;#xFF0C;def.nBufferCountActual &amp;#x662F;&amp;#x5426;&amp;#x5408;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (def.nBufferSize != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; def.nBufferCountActual &amp;gt; SIZE_MAX / def.nBufferSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x5206;&amp;#x914D;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A;totalSize&amp;#x7684;&amp;#x603B;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; totalSize = def.nBufferCountActual * def.nBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDealer[portIndex] = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MemoryDealer(totalSize, &lt;span class=&quot;string&quot;&gt;&amp;quot;OMXCodec&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (OMX_U32 i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; def.nBufferCountActual; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x603B;&amp;#x7F13;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E2D;&amp;#x5212;&amp;#x5206;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x5927;&amp;#x5C0F;&amp;#x4E3A; def.nBufferSize&amp;#x7684;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IMemory&amp;gt; mem = mDealer[portIndex]-&amp;gt;allocate(def.nBufferSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BufferInfo info;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mSize = def.nBufferSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IOMX::buffer_id buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexInput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; ((mQuirks &amp;amp; kRequiresAllocateBufferOnInputPorts)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    || (mFlags &amp;amp; kUseSecureInputBuffers))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMXLivesLocally) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x524D;&amp;#x5C06;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x6E05;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mem.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E3A;&amp;#x8BE5;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, def.nBufferSize, &amp;amp;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;info.mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBufferWithBackup(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexOutput&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;amp;&amp;amp; (mQuirks &amp;amp; kRequiresAllocateBufferOnOutputPorts)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMXLivesLocally) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x524D;&amp;#x5C06;&amp;#x5B58;&amp;#x50A8;&amp;#x7A7A;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x6E05;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mem.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E3A;&amp;#x8BE5;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, def.nBufferSize, &amp;amp;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;info.mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                err = mOMX-&amp;gt;allocateBufferWithBackup(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = mOMX-&amp;gt;useBuffer(mNode, portIndex, mem, &amp;amp;buffer, mem-&amp;gt;size());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mem != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            info.mData = mem-&amp;gt;pointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mBuffer = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mStatus = OWNED_BY_US;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mMem = mem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        info.mMediaBuffer = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x5206;&amp;#x914D;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x4FE1;&amp;#x606F;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x7AEF;&amp;#x53E3;&amp;#x7F13;&amp;#x5B58;&amp;#x8868;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x4E00;&amp;#x7BA1;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPortBuffers[portIndex].push(info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CODEC_LOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;allocated buffer %u on %s port&amp;quot;&lt;/span&gt;, buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             portIndex == kPortIndexInput ? &lt;span class=&quot;string&quot;&gt;&amp;quot;input&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;output&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexOutput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = mSource-&amp;gt;getFormat();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; delay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyEncoderDelay, &amp;amp;delay)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            delay = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; padding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyEncoderPadding, &amp;amp;padding)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            padding = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; numchannels = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delay + padding) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOutputFormat-&amp;gt;findInt32(kKeyChannelCount, &amp;amp;numchannels)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frameSize = &lt;span class=&quot;function&quot;&gt;numchannels * &lt;span class=&quot;title&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(int16_t)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSkipCutBuffer != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; prevbuffersize = mSkipCutBuffer-&amp;gt;size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prevbuffersize != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;Replacing SkipCutBuffer holding %zu bytes&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        prevbuffersize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mSkipCutBuffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SkipCutBuffer(delay * frameSize, padding * frameSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (portIndex == kPortIndexInput &amp;amp;&amp;amp; (mFlags &amp;amp; kUseSecureInputBuffers)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector&amp;lt;MediaBuffer *&amp;gt; buffers;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; def.nBufferCountActual; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; BufferInfo &amp;amp;info = mPortBuffers[kPortIndexInput].itemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaBuffer *mbuf = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaBuffer(info.mData, info.mSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            buffers.push(mbuf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = mSource-&amp;gt;setBuffers(buffers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, OMX_U32&lt;/span&gt; port_index, size_t size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        buffer_id *buffer, void **buffer_data) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return findInstance(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;)-&amp;gt;allocateBuffer&lt;/span&gt;(port_index, size, buffer, buffer_data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;status_t&lt;/span&gt; OMXNodeInstance::allocateBuffer(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_U32 portIndex, size_t size, OMX::&lt;span class=&quot;keyword&quot;&gt;buffer_id &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        void **&lt;span class=&quot;keyword&quot;&gt;buffer_data) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    Mutex:&lt;/span&gt;:Autolock autoLock(mLock)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BufferMeta &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer_meta &lt;/span&gt;= new &lt;span class=&quot;keyword&quot;&gt;BufferMeta(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    OMX_BUFFERHEADERTYPE *header&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = OMX_AllocateBuffer(mHandle, &amp;amp;header, portIndex, &lt;span class=&quot;keyword&quot;&gt;buffer_meta, &lt;/span&gt;size)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (err != OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CLOG_ERROR(allocateBuffer, err, &lt;span class=&quot;keyword&quot;&gt;BUFFER_FMT(portIndex, &lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;%zu@&amp;quot;&lt;/span&gt;, size))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delete &lt;span class=&quot;keyword&quot;&gt;buffer_meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;keyword&quot;&gt;buffer_meta &lt;/span&gt;= NULL&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *&lt;span class=&quot;keyword&quot;&gt;buffer &lt;/span&gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return StatusFromOMXError(err)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(header-&amp;gt;pAppPrivate, &lt;span class=&quot;keyword&quot;&gt;buffer_meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    *&lt;span class=&quot;keyword&quot;&gt;buffer &lt;/span&gt;= makeBufferID(header)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *&lt;span class=&quot;keyword&quot;&gt;buffer_data &lt;/span&gt;= header-&amp;gt;pBuffer&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;addActiveBuffer(portIndex, &lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;literal&quot;&gt;sp&lt;/span&gt;&amp;lt;GraphicBufferSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;bufferSource(getGraphicBufferSource());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;bufferSource &lt;/span&gt;!= NULL &amp;amp;&amp;amp; portIndex == kPortIndexInput) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bufferSource-&amp;gt;addCodecBuffer(header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_BUFFER(allocateBuffer, NEW_BUFFER_FMT(*&lt;span class=&quot;keyword&quot;&gt;buffer, &lt;/span&gt;portIndex, &lt;span class=&quot;string&quot;&gt;&amp;quot;%zu@%p&amp;quot;&lt;/span&gt;, size, *&lt;span class=&quot;keyword&quot;&gt;buffer_data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    return OK&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x5230;&amp;#x8FC7;&amp;#x6211;&amp;#x4EEC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Component&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;initPort&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7AEF;&amp;#x53E3;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x90A3;&amp;#x65F6;&amp;#x5019;&amp;#x8FD8;&amp;#x6CA1;&amp;#x4E3A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5185;&amp;#x5B58;&amp;#xFF0C;&amp;#x4EC5;&amp;#x4EC5;&amp;#x53EA;&amp;#x662F;&amp;#x53C2;&amp;#x6570;&amp;#x8BBE;&amp;#x7F6E;&amp;#x800C;&amp;#x5DF2;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;init&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#x5206;&amp;#x914D;&amp;#x5185;&amp;#x5B58;&amp;#x7A7A;&amp;#x95F4;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;&amp;#x7A7A;&amp;#x95F4;&amp;#x5206;&amp;#x914D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5148;&amp;#x4ECE;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#x5212;&amp;#x5206;&amp;#x51FA;&amp;#x4E00;&amp;#x6574;&amp;#x5757;&amp;#x6240;&amp;#x9700;&amp;#x7684;&amp;#x603B;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x7EC6;&amp;#x5206;&amp;#x540E;&amp;#x8C03;&amp;#x7528;addActiveBuffer&amp;#x5C06;&amp;#x5176;&amp;#x5206;&amp;#x914D;&amp;#x7ED9;&amp;#x67D0;&amp;#x4E2A;&amp;#x7AEF;&amp;#x53E3;&amp;#xFF1A;&lt;br&gt;&amp;#x8001;&amp;#x529E;&amp;#x6CD5;&amp;#x4E0A;&amp;#x56FE;&amp;#x6765;&amp;#x8BF4;&amp;#x660E;&amp;#x5185;&amp;#x5B58;&amp;#x5206;&amp;#x914D;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/25.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;sendCommand&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::sendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;, OMX_COMMANDTYPE&lt;/span&gt; cmd, OMX_S32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return findInstance(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;)-&amp;gt;sendCommand&lt;/span&gt;(cmd, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXNodeInstance *OMX::findInstance(node_id &lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;/span&gt;::Autolock autoLock(mLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ssize_t index = mNodeIDToInstance.indexOfKey(&lt;span class=&quot;keyword&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;identifier&quot;&gt;&lt;/span&gt;&lt;span class=&quot;title&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return&lt;/span&gt; index &lt;span class=&quot;tag&quot;&gt;&amp;lt; 0 ? NULL : mNodeIDToInstance.valueAt(index);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXNodeInstance::sendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_S32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;GraphicBufferSource&amp;gt;&amp;amp; bufferSource(getGraphicBufferSource());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (bufferSource != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt; &amp;amp;&amp;amp; cmd == OMX_CommandStateSet) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (param == OMX_StateIdle) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x4ECE;Executing&amp;#x5230;Idle&amp;#xFF0C;ACodec&amp;#x7B49;&amp;#x5F85;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x518D;&amp;#x5411;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bufferSource-&amp;gt;omxIdle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (param == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Initiating transition from Idle/Executing -&amp;gt; Loaded&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Buffers are about to be freed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bufferSource-&amp;gt;omxLoaded();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setGraphicBufferSource(&lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// fall through&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *paramString =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cmd == OMX_CommandStateSet ? asString((OMX_STATETYPE)param) : portString(param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_STATE(sendCommand, &lt;span class=&quot;string&quot;&gt;&amp;quot;%s(%d), %s(%d)&amp;quot;&lt;/span&gt;, asString(cmd), cmd, paramString, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = OMX_SendCommand(mHandle, cmd, param, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_IF_ERROR(sendCommand, err, &lt;span class=&quot;string&quot;&gt;&amp;quot;%s(%d), %s(%d)&amp;quot;&lt;/span&gt;, asString(cmd), cmd, paramString, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; StatusFromOMXError(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;OMXNodeInstance::sendCommand&amp;#x4E3B;&amp;#x8981;&amp;#x6709;&amp;#x4E24;&amp;#x9879;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x8C03;&amp;#x7528; bufferSource-&amp;gt;omxIdle();&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x4ECE;Executing&amp;#x5230;Idle&amp;#xFF0C;&amp;#x7B49;&amp;#x5F85;&amp;#x539F;&amp;#x5148;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E0D;&amp;#x518D;&amp;#x53D1;&amp;#x9001;&amp;#x6570;&amp;#x636E;&amp;#x5230;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x8C03;&amp;#x7528;OMX_SendCommand&amp;#x7EE7;&amp;#x7EED;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;hardware/qcom/media/mm-core/inc/OMX_Core.h&amp;#x4E2D;&amp;#x627E;&amp;#x5230;OMX_SendCommand&amp;#x5B8F;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#xFF0C;&amp;#x5B83;&amp;#x8C03;&amp;#x7528;hComponent&amp;#x4E2D;&amp;#x7684;SendCommand&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;&amp;#x5904;&amp;#x7406;&amp;#x6D41;&amp;#x7A0B;&amp;#x8F6C;&amp;#x7ED9;&amp;#x5B83;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define OMX_SendCommand(                                    \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         hComponent,                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Cmd,                                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         nParam,                                            &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         pCmdData)                                          &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;((OMX_COMPONENTTYPE*)hComponent)&lt;/span&gt;-&amp;gt;&lt;/span&gt;SendCommand(         &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         hComponent,                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         Cmd,                                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         nParam,                                            &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         pCmdData)                          &lt;span class=&quot;comment&quot;&gt;/* Macro End */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;OMX_SendCommand(mHandle, cmd, param, NULL)&amp;#x8FDB;&amp;#x884C;&amp;#x5B8F;&amp;#x5C55;&amp;#x5F00;&amp;#x4E4B;&amp;#x540E;&amp;#x5C31;&amp;#x53D8;&amp;#x6210;&amp;#x5C06;cmd&amp;#x8FD9;&amp;#x4E2A;&amp;#x547D;&amp;#x4EE4;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;mHandle&amp;#xFF0C;&amp;#x8BA9;&amp;#x5B83;&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x5FC5;&amp;#x987B;&amp;#x660E;&amp;#x786E;&amp;#x5230;&amp;#x5E95;mHandle&amp;#x6307;&amp;#x7684;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;OMXNodeInstance&amp;#x4E2D;&amp;#x770B;&amp;#x5230;&amp;#xFF0C;mHandle&amp;#x662F;&amp;#x901A;&amp;#x8FC7;setHandle&amp;#x8FDB;&amp;#x884C;&amp;#x8D4B;&amp;#x503C;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; OMXNodeInstance&lt;span class=&quot;tag&quot;&gt;::setHandle&lt;/span&gt;(OMX&lt;span class=&quot;tag&quot;&gt;::node_id&lt;/span&gt; node_id, OMX_HANDLETYPE &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mNodeID = node_id;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CLOG_LIFE(allocateNode, &lt;span class=&quot;string&quot;&gt;&amp;quot;handle=%p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(mHandle == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHandle = &lt;span class=&quot;keyword&quot;&gt;handle&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x800C;OMXNodeInstance::setHandle&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;OMX::allocateNode&amp;#x4E2D;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x800C;&amp;#x8FD9;&amp;#x4E2A;handle&amp;#x662F;&amp;#x901A;&amp;#x8FC7;mMaster-&amp;gt;makeComponentInstance&amp;#x4E2D;&amp;#x4F20;&amp;#x9012;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMX::allocateNode(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IOMXObserver&amp;gt; &amp;amp;observer, node_id *node) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err = mMaster-&amp;gt;makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name, &amp;amp;OMXNodeInstance::kCallbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            instance, &amp;amp;handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    instance-&amp;gt;setHandle(*node, handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE OMXMaster::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;-&amp;gt;makeComponentInstance(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPluginByInstance.add(*component, &lt;span class=&quot;keyword&quot;&gt;plugin&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;err&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SoftOMXPlugin::makeComponentInstance(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_&lt;span class=&quot;built_in&quot;&gt;CALLBACKTYPE&lt;/span&gt; *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_CO&lt;span class=&quot;built_in&quot;&gt;MPONENTTYPE&lt;/span&gt; **component) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;SoftOMXComponent&amp;gt; codec =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (*createSoftOMXComponent)(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorInvalidComponentName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;android::&lt;span class=&quot;function&quot;&gt;SoftOMXComponent *&lt;span class=&quot;title&quot;&gt;createSoftOMXComponent&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData, OMX_COMPONENTTYPE **component)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; android::SoftMP3(name, callbacks, appData, component);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Soft&lt;span class=&quot;built_in&quot;&gt;MP3&lt;/span&gt;::Soft&lt;span class=&quot;built_in&quot;&gt;MP3&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_&lt;span class=&quot;built_in&quot;&gt;CALLBACKTYPE&lt;/span&gt; *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_CO&lt;span class=&quot;built_in&quot;&gt;MPONENTTYPE&lt;/span&gt; **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SimpleSoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;..&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOutputPortSettingsChange(NONE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initPorts();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initDecoder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SimpleSoftOMXComponent::SimpleSoftOMXComponent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; OMX_CALLBACKTYPE *callbacks,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_PTR appData,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMPONENTTYPE **component)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : SoftOMXComponent(name, callbacks, appData, component),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLooper(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ALooper),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mHandler(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AHandlerReflector&amp;lt;SimpleSoftOMXComponent&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mState(OMX_StateLoaded),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTargetState(OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;setName(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;registerHandler(mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper-&amp;gt;start(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// runOnCallingThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// canCallJava&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ANDROID_PRIORITY_FOREGROUND);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;mHandler&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5728;SimpleSoftOMXComponent&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x88AB;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x3002;&lt;br&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;SimpleSoftOMXComponent&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5B83;&amp;#x7684;SendCommand&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMX_ERRORTYPE SimpleSoftOMXComponent&lt;span class=&quot;tag&quot;&gt;::sendCommand&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_U32 param, OMX_PTR &lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;built_in&quot;&gt;data&lt;/span&gt; == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; msg = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; AMessage(kWhatSendComm&lt;span class=&quot;subst&quot;&gt;and&lt;/span&gt;, mHandler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;, cmd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;, param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;post();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OMX_ErrorNone;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; SimpleSoftOMXComponent::onMessageReceived(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; msgType = msg-&amp;gt;what();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;msgType = %d&amp;quot;&lt;/span&gt;, msgType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (msgType) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; kWhatSendCommand:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; cmd, param;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;, &amp;amp;cmd));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(msg-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;, &amp;amp;param));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onSendCommand((OMX_COMMANDTYPE)cmd, (OMX_U32)param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&amp;#x2026;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;typename&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;SimpleSoftOMXComponent:&lt;/span&gt;:onSendCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OMX_COMMANDTYPE cmd, OMX_U32 param) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (cmd) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandStateSet:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onChangeState((OMX_STATETYPE)param);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandPortEnable:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandPortDisable:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onPortEnable(param, cmd == OMX_CommandPortEnable);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;OMX_CommandFlush:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            onPortFlush(param, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* sendFlushComplete */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;        default:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TRESPASS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SimpleSoftOMXComponent::&lt;span class=&quot;keyword&quot;&gt;on&lt;/span&gt;ChangeState(OMX_STATETYPE &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // We shouldn&amp;apos;t be &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; a &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; transition already.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ((int)mState, (int)mTargetState);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    switch (mState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateLoaded:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((int)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;, (int)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateIdle:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; == OMX_StateLoaded || &lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; == OMX_StateExecuting);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        case OMX_StateExecuting:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((int)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt;, (int)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &lt;span class=&quot;variable&quot;&gt;&amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortFlush(i, false /* sendFlushComplete */);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = OMX_StateIdle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify(OMX_EventCmdComplete, OMX_CommandStateSet, state, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            break;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TRESPASS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTargetState = state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    checkTransitions();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void SimpleSoftOMXComponent::checkTransitions() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState != mTargetState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; transitionComplete = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK_EQ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)mTargetState, (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)OMX_StateIdle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; PortInfo &amp;amp;port = mPorts.itemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port.mDef.bEnabled == OMX_FALSE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port.mDef.bPopulated == OMX_FALSE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    transitionComplete = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTargetState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transitionComplete) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mState = mTargetState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mState == OMX_StateLoaded) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onReset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notify(OMX_EventCmdComplete, OMX_CommandStateSet, mState, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mPorts.size(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PortInfo *port = &amp;amp;mPorts.editItemAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mTransition == PortInfo::DISABLING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mBuffers.&lt;span class=&quot;keyword&quot;&gt;empty&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Port %zu now disabled.&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mTransition = PortInfo::NONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notify(OMX_EventCmdComplete, OMX_CommandPortDisable, i, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortEnableCompleted(i, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* enabled */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mTransition == PortInfo::ENABLING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (port-&amp;gt;mDef.bPopulated == OMX_TRUE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Port %zu now enabled.&amp;quot;&lt;/span&gt;, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mTransition = PortInfo::NONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                port-&amp;gt;mDef.bEnabled = OMX_TRUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                notify(OMX_EventCmdComplete, OMX_CommandPortEnable, i, &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                onPortEnableCompleted(i, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* enabled */&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7ECF;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;&amp;#x5C42;&amp;#x5C42;&amp;#x8DDF;&amp;#x8E2A;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;OMX_SendCommand(mHandle, cmd, param, NULL)&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x5C06;idle&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x5E95;&amp;#x5C42;&amp;#x5E76;&amp;#x7981;&amp;#x6B62;&amp;#x5F80;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E2D;&amp;#x8F93;&amp;#x5165;&amp;#x89E3;&amp;#x7801;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x81F3;&amp;#x6B64;prepare&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6574;&amp;#x4E2A;&amp;#x5927;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6;&amp;#x6765;&amp;#x770B;&amp;#x5728;Prepare&amp;#x9636;&amp;#x6BB5;&amp;#x4E3B;&amp;#x8981;&amp;#x505A;&amp;#x7684;&amp;#x662F;&amp;#x6839;&amp;#x636E;&amp;#x5F85;&amp;#x64AD;&amp;#x653E;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8F93;&amp;#x5165;&amp;#x8F93;&amp;#x51FA;&amp;#x7AEF;&amp;#x53E3;&amp;#x521B;&amp;#x5EFA;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x5C06;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;idle&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;br&gt;&amp;#x8001;&amp;#x6837;&amp;#x5B50;&amp;#x4E0A;&amp;#x56FE;&amp;#x4F5C;&amp;#x4E3A;&amp;#x7ED3;&amp;#x5C3E;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/26.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#x5417;&amp;#xFF1F;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5462;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x770B;&amp;#x5230;&amp;#x7684;&amp;#x53EA;&amp;#x662F;beginAsyncPrepare_l&amp;#x6700;&amp;#x540E;&amp;#x8FD8;&amp;#x6709;finishAsyncPrepare_l&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x901A;&amp;#x77E5;&amp;#x4E0A;&amp;#x5C42;prepare&amp;#x7ED3;&amp;#x675F;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::finishAsyncPrepare_l() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mIsAsyncPrepare) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVideoSource == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyListener_l(MEDIA_SET_VIDEO_SIZE, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            notifyVideoSize_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyListener_l(MEDIA_PREPARED);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareResult = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags((PREPARING|PREPARE_CANCELLED|PREPARING_CONNECTED), CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    modifyFlags(PREPARED, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAsyncPrepareEvent = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPreparedCondition.broadcast();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTearDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPrepareResult == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mExtractorFlags &amp;amp; MediaExtractor::CAN_SEEK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                seekTo_l(mAudioTearDownPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAudioTearDownWasPlaying) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                modifyFlags(CACHE_UNDERRUN, CLEAR);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                play_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioTearDown = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x770B;&amp;#x4E0B;notifyListener_l(MEDIA_PREPARED);&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::notifyListener_l(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; msg, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext2) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mListener != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;amp;&amp;amp; !mAudioTearDown) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MediaPlayerBase&amp;gt; listener = mListener.promote();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            listener-&amp;gt;sendEvent(msg, ext1, ext2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5927;&amp;#x5BB6;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x5F20;&amp;#x56FE;&amp;#x5427;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x8FD9;&amp;#x5F20;&amp;#x56FE;&amp;#x4E0A;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x660E;&amp;#x663E;&amp;#x770B;&amp;#x51FA;&amp;#x6574;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x675F;&amp;#x70B9;&amp;#x4E3A;EventHandler&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-2/27.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x4E0A;&amp;#x5C42;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6CE8;&amp;#x518C;mOnPreparedListener&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x5219;&amp;#x8C03;&amp;#x7528;onPrepared&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;&amp;#x540E;&amp;#x7EED;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4EA4;&amp;#x7ED9;&amp;#x5F00;&amp;#x53D1;&amp;#x8005;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;MEDIA_PREPARED:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scanInternalSubtitleTracks();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RuntimeException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// send error message instead of crashing;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// send error message instead of inlining a call to onError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to avoid code duplication.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Message msg2 = obtainMessage(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                MEDIA_ERROR, MEDIA_ERROR_UNKNOWN, MEDIA_ERROR_UNSUPPORTED, &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sendMessage(msg2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOnPreparedListener != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOnPreparedListener.onPrepared(mMediaPlayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之基于Stagefright的MediaPlayer播放框架[2]</title>
    <link href="http://yoursite.com/2016/07/31/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6-1/"/>
    <id>http://yoursite.com/2016/07/31/Android-源码分析之基于Stagefright的MediaPlayer播放框架-1/</id>
    <published>2016-07-31T09:59:18.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;/h5&gt;&lt;h6 id=&quot;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;a href=&quot;#setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot; class=&quot;headerlink&quot; title=&quot;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;/a&gt;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/h6&gt;&lt;p&gt;setDataSource&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;Url&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;Content Provider&amp;#x4F5C;&amp;#x4E3A;&amp;#x83B7;&amp;#x53D6;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x6807;&amp;#x8BC6;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x5C06;&amp;#x6D41;&amp;#x7A0B;&amp;#x7B80;&amp;#x5355;&amp;#x5316;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Uri&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x8FDB;&amp;#x884C;&amp;#x4F20;&amp;#x9012;&amp;#x3002;&amp;#x5206;&amp;#x6790;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, Uri uri)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, SecurityException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(context, uri, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5047;&amp;#x8BBE;&amp;#x8D70;&amp;#x7684;&amp;#x662F;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x5206;&amp;#x652F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setDataSource(Context context, &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri, &lt;span class=&quot;built_in&quot;&gt;Map&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;&amp;gt; headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throws IOException, IllegalArgumentException, SecurityException,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IllegalStateException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; scheme = uri.getScheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ContentResolver.SCHEME_FILE.equals(scheme)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//1. &amp;#x5F53;uri&amp;#x4E3A;file&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setDataSource(uri.getPath());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ContentResolver.SCHEME_CONTENT.equals(scheme)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; Settings.AUTHORITY.equals(uri.getAuthority())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//2. &amp;#x5F53;uri&amp;#x4E3A;&amp;#x94C3;&amp;#x58F0;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x91CC;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Redirect ringtones to go directly to underlying provider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uri = RingtoneManager.getActualDefaultRingtoneUri(context,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                RingtoneManager.getDefaultType(uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (uri == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileNotFoundException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Failed to resolve default ringtone&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssetFileDescriptor fd = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//3. &amp;#x5982;&amp;#x679C;content&amp;#x4E3A;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5206;&amp;#x652F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ContentResolver resolver = context.getContentResolver();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fd = resolver.openAssetFileDescriptor(uri, &lt;span class=&quot;string&quot;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd.getDeclaredLength() &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setDataSource(fd.getFileDescriptor());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setDataSource(fd.getFileDescriptor(), fd.getStartOffset(), fd.getDeclaredLength());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SecurityException | IOException ex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.w(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;Couldn&amp;apos;t open file on client side; trying server side: &amp;quot;&lt;/span&gt; + ex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fd.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5426;&amp;#x5219;&amp;#x8D70;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(uri.toString(), headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, SecurityException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(path, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; setDataSource(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] keys, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] values)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throws IOException, IllegalArgumentException, SecurityException, IllegalStateException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri = &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt;.parse(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; scheme = uri.getScheme();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;.equals(scheme)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        path = uri.getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scheme != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// handle non-file sources&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nativeSetDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaHTTPService.createHttpServiceBinderIfNecessary(path),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            keys,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; File file = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (file.exists()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FileInputStream &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(file);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FileDescriptor fd = &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;.getFD();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setDataSource(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt;.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IOException(&lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSource failed.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// intentionally less than LONG_MAX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource(fd, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0x7ffffffffffffff&lt;/span&gt;L);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _setDataSource(fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, IllegalArgumentException, IllegalStateException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6574;&amp;#x4E2A;setDataSource&amp;#x7684;&amp;#x5927;&amp;#x81F4;&amp;#x8DEF;&amp;#x5F84;&amp;#x56FE;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x770B;&amp;#x4E0D;&amp;#x6E05;&amp;#x695A;&amp;#x53EF;&amp;#x4EE5;&amp;#x70B9;&amp;#x51FB;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x518D;&amp;#x770B;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5C06;&amp;#x56FE;&amp;#x7247;&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x540E;&amp;#x653E;&amp;#x5927;&amp;#x770B;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5185;&amp;#x5BB9;&amp;#x592A;&amp;#x591A;&amp;#x6240;&amp;#x4EE5;&amp;#x753B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5BB9;&amp;#x7EB3;&amp;#x4E0D;&amp;#x4E0B;&amp;#x53EA;&amp;#x80FD;&amp;#x5C06;&amp;#x5176;&amp;#x7F29;&amp;#x5C0F;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x51C6;&amp;#x5907;&amp;#x8FDB;&amp;#x5165;JNI&amp;#x5C42;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;JNI&amp;#x90E8;&amp;#x5206;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;&lt;br&gt;android_media_MediaPlayer_setDataSourceFD&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;getMediaPlayer&amp;#x65B9;&amp;#x6CD5;&amp;#x83B7;&amp;#x53D6;&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;fields.context&amp;#x4E0A;&amp;#x7684;native MediaPlayer&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;mp-&amp;gt;setDataSource(fd, offset, length)&amp;#x4E2D;&amp;#x7684;mp&amp;#x6307;&amp;#x7684;&amp;#x662F;native&amp;#x7684;MediaPlayer&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaPlayer_setDataSourceFD&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz, jobject fileDescriptor, jlong offset, jlong length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = getMediaPlayer(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd = jniGetFDFromFileDescriptor(env, fileDescriptor);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSourceFD: fd %d&amp;quot;&lt;/span&gt;, fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    process_media_player_call( env, thiz, mp-&amp;gt;setDataSource(fd, offset, length),&lt;span class=&quot;string&quot;&gt;&amp;quot;java/io/IOException&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSourceFD failed.&amp;quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot;&gt;&lt;a href=&quot;#&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&quot;&gt;&lt;/a&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&lt;/h6&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt; getMediaPlayer(JNIEnv* env, jobject thiz)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(sLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaPlayer* &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; p = (MediaPlayer*)env-&amp;gt;GetLongField(thiz, fields.context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt;(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;native mediaplayer&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;MediaPlayerService&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;create&amp;#x65B9;&amp;#x6CD5;&amp;#x901A;&amp;#x8FC7;MediaPlayerService::Client::Client&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;MediaPlayerService&amp;#x7684;&amp;#x5BA2;&amp;#x6237;&amp;#x7AEF;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x8D4B;&amp;#x7ED9;player&amp;#x3002; &amp;#x56E0;&amp;#x6B64;player-&amp;gt;setDataSource(httpService, url, headers)))&amp;#x4E2D;&amp;#x7684;player&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&lt;br&gt;MediaPlayerService::Client&amp;#x3002;&lt;br&gt;@frameworks/av/media/libmedia/mediaplayer.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = BAD_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (url != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerService&amp;gt;&amp;amp; service(getMediaPlayerService());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (service != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;IMediaPlayer&amp;gt; player(service-&amp;gt;create(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, mAudioSessionId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((NO_ERROR != doSetRetransmitEndpoint(player)) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (NO_ERROR != player-&amp;gt;setDataSource(httpService, url, headers))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                player.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            err = attachNewPlayer(player);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;Client&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#xFF1A;&lt;br&gt;@ frameworks/av/media/libmedia/IMediaDeathNotifier.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*static*/&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerService&amp;gt;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IMediaDeathNotifier::getMediaPlayerService()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::Autolock _l(sServiceLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sMediaPlayerService == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;ServiceManger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IServiceManager&amp;gt; sm = defaultServiceManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;IBinder&amp;gt; binder;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;MediaPlayerService&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            binder = sm-&amp;gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (binder != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            usleep(&lt;span class=&quot;number&quot;&gt;500000&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 0.5 s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sDeathNotifier == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sDeathNotifier = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DeathNotifier();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x7ED1;&amp;#x5B9A;&amp;#x6B7B;&amp;#x4EA1;&amp;#x901A;&amp;#x77E5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        binder-&amp;gt;linkToDeath(sDeathNotifier);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sMediaPlayerService = interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGE_IF(sMediaPlayerService == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;no media player service!?&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sMediaPlayerService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;MediaPlayerService&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;&amp;#x5728;mediaserver&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F1A;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;@frameworks/av/media/libmediaplayerservice/MediaPlayerService.cpp&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IMediaPlayer&amp;gt; MediaPlayerService::create(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerClient&amp;gt;&amp;amp; client,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; audioSessionId)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid = IPCThreadState::self()-&amp;gt;getCallingPid();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; connId = android_atomic_inc(&amp;amp;mNextConnId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;Client&amp;gt; c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Client(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, pid, connId, client, audioSessionId,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IPCThreadState::self()-&amp;gt;getCallingUid());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    wp&amp;lt;Client&amp;gt; w = c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;lock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mClients.add(w);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;new&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;Client&amp;#x5BF9;&amp;#x8C61;&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mClients&amp;#x4E2D;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;Client&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6CA1;&amp;#x5565;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MediaPlayerService::Client::Client(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerService&amp;gt;&amp;amp; service, &lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; pid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; connId, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayerClient&amp;gt;&amp;amp; client,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; audioSessionId, &lt;span class=&quot;keyword&quot;&gt;uid_t&lt;/span&gt; uid)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPid = pid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mConnId = connId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mService = service;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mClient = client;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLoop = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioSessionId = audioSessionId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mUID = uid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRetransmitEndpointValid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioAttributes = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; CALLBACK_ANTAGONIZER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGD(&lt;span class=&quot;string&quot;&gt;&amp;quot;create Antagonizer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAntagonizer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Antagonizer(notify, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;MediaPlayerService::Client::setDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&lt;br&gt;MediaPlayerFactory::getPlayerType&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;player&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;&lt;br&gt;setDataSource_pre(playerType)&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;getPlayerType&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;player&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x518D;&amp;#x8C03;&amp;#x7528;&amp;#x6240;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;player&amp;#x7684;setDataSource&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x8FD9;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x4E00;&amp;#x6B65;&amp;#x4E00;&amp;#x6B65;&amp;#x8FDB;&amp;#x884C;&amp;#x6DF1;&amp;#x5165;&amp;#x5206;&amp;#x6790;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaPlayerService::Client::setDataSource(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; length)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; stat sb;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ret = fstat(fd, &amp;amp;sb);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;fstat(%d) failed: %d, %s&amp;quot;&lt;/span&gt;, fd, ret, strerror(errno));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x5927;&amp;#x4E8E;&amp;#x6587;&amp;#x4EF6;&amp;#x5927;&amp;#x5C0F;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5F97;&amp;#x4E0D;&amp;#x5BF9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset &amp;gt;= sb.st_size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;offset error&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ::close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x504F;&amp;#x79FB;&amp;#x91CF;&amp;#x52A0;&amp;#x4E0A;&amp;#x957F;&amp;#x5EA6;&amp;#x5927;&amp;#x4E8E;&amp;#x6574;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&amp;#x5219;&amp;#x8F93;&amp;#x51FA;&amp;#x9519;&amp;#x8BEF;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x6574;length&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offset + length &amp;gt; sb.st_size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = sb.st_size - offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;calculated length = %lld&amp;quot;&lt;/span&gt;, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//get the file type of current play file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//there will create StagefrightPlayer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    player_type playerType = MediaPlayerFactory::getPlayerType(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,fd,offset,length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = setDataSource_pre(playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_INIT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// now set data source&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDataSource_post(p, p-&amp;gt;setDataSource(fd, offset, length));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mStatus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;getPlayerType&amp;#xFF0C;&amp;#x5B83;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;IMediaPlayer&amp;#x7C7B;&amp;#x578B;&amp;#x7684;client&amp;#x53C2;&amp;#x6570;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E2A;url&amp;#x53C2;&amp;#x6570;&amp;#x3002;&amp;#x800C;&amp;#x83B7;&amp;#x5F97;player&amp;#x7C7B;&amp;#x578B;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;GET_PLAYER_TYPE_IMPL&amp;#x5B8F;&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;player_type MediaPlayerFactory::getPlayerType(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaPlayer&amp;gt;&amp;amp; client,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* url) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GET_PLAYER_TYPE_IMPL(client, url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;sFactoryMap&amp;#x662F;&amp;#x5305;&amp;#x542B;&amp;#x6BCF;&amp;#x79CD;&amp;#x7C7B;&amp;#x578B;Player&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#x7684;&amp;#x6570;&amp;#x7EC4;&amp;#xFF0C;&amp;#x5728;GET_PLAYER_TYPE_IMPL&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;sFactoryMap&amp;#x5E76;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;IFactory&amp;#x7684;scoreFactory&amp;#x65B9;&amp;#x6CD5;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x8BC4;&amp;#x4F30;&amp;#x627E;&amp;#x51FA;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;Player&amp;#x7C7B;&amp;#x578B;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight livescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#define GET_PLAYER_TYPE_IMPL(a...)                      \&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;Mutex&lt;/span&gt;::Autolock lock_(&amp;amp;sLock);                      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    player_type ret = STAGEFRIGHT_PLAYER;               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    float bestScore = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;;                              &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                     &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; sFactoryMap.size(); ++i) {   &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        IFactory* v = sFactoryMap.valueAt(i);           &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        float thisScore;                                &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(v != NULL);                               &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        thisScore = v-&amp;gt;scoreFactory(a, bestScore);      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (thisScore &amp;gt; bestScore) {                    &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ret = sFactoryMap.keyAt(i);                 &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bestScore = thisScore;                      &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }                                           &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }                                                                                              &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; == bestScore) {                             &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = getDefaultPlayerType();                   &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }                                                                        &lt;span class=&quot;string&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x83B7;&amp;#x5F97;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x7C7B;&amp;#x578B;&amp;#x540E;&amp;#x5728;setDataSource_pre&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;createPlayer&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;player&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService::Client::setDataSource_pre(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;player type = %d&amp;quot;&lt;/span&gt;, playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// create the right type of player&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = createPlayer(playerType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!p-&amp;gt;hardwareOutput()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAudioOutput = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AudioOutput(mAudioSessionId, IPCThreadState::self()-&amp;gt;getCallingUid(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPid, mAudioAttributes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;MediaPlayerInterface*&amp;gt;(p.get())-&amp;gt;setAudioSink(mAudioOutput);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x97F3;&amp;#x9891;&amp;#x64AD;&amp;#x653E;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x62BD;&amp;#x8C61;&amp;#x2013;AudioOutput&amp;#xFF0C;&amp;#x5B83;&amp;#x8D1F;&amp;#x8D23;&amp;#x5C06;Buffer&amp;#x8F93;&amp;#x51FA;&amp;#x5230;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;start&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;MediaPlayerService::Client::createPlayer&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;MediaPlayerFactory&amp;#x8FD9;&amp;#x4E2A;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x4F20;&amp;#x8FDB;&amp;#x53BB;&amp;#x7684;playerType&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;Player&amp;#xFF0C;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaPlayerBase&amp;gt; MediaPlayerService&lt;span class=&quot;tag&quot;&gt;::Client&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;::createPlayer&lt;/span&gt;(player_type playerType)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// determine if we have the right player type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayerBase&amp;gt; p = mPlayer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((p != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (p&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;playerType() != playerType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p = MediaPlayerFactory&lt;span class=&quot;tag&quot;&gt;::createPlayer&lt;/span&gt;(playerType, this, notify, mPid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p != &lt;span class=&quot;built_in&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;setUID(mUID);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4F8B;&amp;#x5982;&amp;#x6211;&amp;#x4EEC;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x662F;STAGEFRIGHT_PLAYER&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;StagefrightPlayer.&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; sp&amp;lt;MediaPlayerBase&amp;gt; createPlayer(&lt;span class=&quot;keyword&quot;&gt;pid_t&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* pid */&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StagefrightPlayer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;StagefrightPlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D; new &amp;#x51FA;&amp;#x4E86;AwesomePlayer&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;StagefrightPlayer&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;StagefrightPlayer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;function&quot;&gt;mPlayer&lt;/span&gt;(new AwesomePlayer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ALOGV&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;StagefrightPlayer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlayer-&amp;gt;&lt;span class=&quot;function&quot;&gt;setListener&lt;/span&gt;(this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x5F53;&amp;#x65F6;&amp;#x662F;&amp;#x8FDE;&amp;#x540C;NuPlayer&amp;#x4E00;&amp;#x8D77;&amp;#x753B;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#x4E24;&amp;#x8005;&amp;#x8FD8;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5927;&amp;#x5BB6;&amp;#x6682;&amp;#x65F6;&amp;#x4E0D;&amp;#x60F3;&amp;#x4E86;&amp;#x89E3;Nuplayer&amp;#x53EF;&amp;#x4EE5;&amp;#x53EA;&amp;#x770B;&amp;#x4E00;&amp;#x8FB9;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;AwesomePlayer&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;RegisterDefaultSniffers&amp;#x6CE8;&amp;#x518C;&amp;#x4E86;&amp;#x683C;&amp;#x5F0F;sniffer&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;AwesomeEvent&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;mClient.connect()&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7F16;&amp;#x7801;&amp;#x5668;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AwesomePlayer::AwesomePlayer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mQueueStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mUIDValid(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTimeSource(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoRenderingStarted(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoRendererIsPreview(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mMediaRenderingStartGeneration(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mStartGeneration(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioPlayer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDisplayWidth(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDisplayHeight(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoScalingMode(NATIVE_WINDOW_SCALING_MODE_SCALE_TO_WINDOW),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFlags(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mExtractorFlags(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVideoBuffer(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDecryptHandle(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mLastVideoTimeUs(-1),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mTextDriver(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOffloadAudio(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAudioTearDown(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mClient.connect(), (status_t)OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSource::RegisterDefaultSniffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onVideoEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreamDoneEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onStreamDone);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreamDoneEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBufferingEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onBufferingUpdate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBufferingEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoLagEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onVideoLagUpdate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoLagEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCheckAudioStatusEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;AwesomePlayer::onCheckAudioStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioStatusEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTearDownEvent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AwesomeEvent(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                              &amp;amp;AwesomePlayer::onAudioTearDownEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTearDownEventPending = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mClockEstimator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WindowedLinearFitEstimator();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaybackSettings = AUDIO_PLAYBACK_RATE_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// static&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void DataSour&lt;span class=&quot;number&quot;&gt;ce::&lt;/span&gt;RegisterDefaultSniffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;number&quot;&gt;::A&lt;/span&gt;utolock autoLock(gSnifferMutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (gSniffersRegistered) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG4)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMatroska)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffOgg)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWAV)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffFLAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAMR)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2TS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMP3)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2PS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWVM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMidi)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char value[PROPERTY_VALUE_MAX]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (property_get(&amp;quot;drm.service.enabled&amp;quot;, value, NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; (!strcmp(value, &amp;quot;1&amp;quot;) || !strcasecmp(value, &amp;quot;true&amp;quot;))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RegisterSniffer_l(SniffDRM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gSniffersRegistered = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;OMXClient::connect&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5B83;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaPlayerService&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;getOMX&amp;#x83B7;&amp;#x53D6;new &amp;#x51FA;&amp;#x6765;&amp;#x7684;OMX&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&amp;#x5728;OMX&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x6709;&amp;#x4E2A;mMaster&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x5B83;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;addVendorPlugin&amp;#x4EE5;&amp;#x53CA;addPlugin&amp;#x6765;&amp;#x52A0;&amp;#x8F7D;&amp;#x8F6F;&amp;#x4EF6;&amp;#x4EE5;&amp;#x53CA;&amp;#x786C;&amp;#x4EF6;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x63D2;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t OMXClient&lt;span class=&quot;tag&quot;&gt;::connect&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IServiceManager&amp;gt; sm = defaultServiceManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IBinder&amp;gt; binder = sm&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getService(String16(&lt;span class=&quot;string&quot;&gt;&amp;quot;media.player&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;IMediaPlayerService&amp;gt; service = interface_cast&amp;lt;IMediaPlayerService&amp;gt;(binder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOMX = service&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;getOMX();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;mOMX&lt;span class=&quot;subst&quot;&gt;-&amp;gt;&lt;/span&gt;livesLocally(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* node */&lt;/span&gt;, getpid())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGI(&lt;span class=&quot;string&quot;&gt;&amp;quot;Using client-side OMX mux.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOMX = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; MuxOMX(mOMX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;IOMX&amp;gt; MediaPlayerService::getOMX() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOMX.get() == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOMX = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OMX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mOMX;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;OMX&lt;/span&gt;&lt;span class=&quot;pseudo&quot;&gt;::OMX&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;tag&quot;&gt;mMaster&lt;/span&gt;(new OMXMaster),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;mNodeCounter&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;OMXMaster&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;OMXMaster&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : &lt;span class=&quot;function&quot;&gt;mVendorLibHandle&lt;/span&gt;(NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addVendorPlugin&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addPlugin&lt;/span&gt;(new SoftOMXPlugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;VendorPlugin&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x5B83;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;dlopen&amp;#x6253;&amp;#x5F00;libstagefrighthw.so&amp;#x52A8;&amp;#x6001;&amp;#x5E93;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x91CC;&amp;#x9762;&amp;#x7684;createOMXPlugin&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;OMXPluginBase&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;OMXMaster::addPlugin(OMXPluginBase *plugin)&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x5176;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByComponentName&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void OMXMaster&lt;span class=&quot;value&quot;&gt;::&lt;span class=&quot;function&quot;&gt;addVendorPlugin&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;addPlugin&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;libstagefrighthw.so&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXMaster::addPlugin(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *libname) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVendorLibHandle = dlopen(libname, RTLD_NOW);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; OMXPluginBase *(*CreateOMXPluginFunc)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CreateOMXPluginFunc createOMXPlugin =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (CreateOMXPluginFunc)dlsym(mVendorLibHandle, &lt;span class=&quot;string&quot;&gt;&amp;quot;createOMXPlugin&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!createOMXPlugin)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        createOMXPlugin = (CreateOMXPluginFunc)dlsym(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mVendorLibHandle, &lt;span class=&quot;string&quot;&gt;&amp;quot;_ZN7android15createOMXPluginEv&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (createOMXPlugin) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addPlugin((*createOMXPlugin)());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;OMXMaster::addPlugin(OMXPluginBase *plugin)&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;enumerateComponents&amp;#x65B9;&amp;#x6CD5;&amp;#x5217;&amp;#x51FA;VentorPlugin&amp;#x6216;&amp;#x8005;SoftPlugin&amp;#x4E2D;&amp;#x7684;&amp;#x6240;&amp;#x6709;Components&amp;#xFF0C;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPluginByComponentName&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OMXMaster::addPlugin(OMXPluginBase *plugin) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlugins.push_back(plugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_U32 index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; name[&lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OMX_ERRORTYPE err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((err = plugin-&amp;gt;enumerateComponents(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    name, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(name), index++)) == OMX_ErrorNone) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;String8 &lt;span class=&quot;title&quot;&gt;name8&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(name)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPluginByComponentName.indexOfKey(name8) &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;A component of name &amp;apos;%s&amp;apos; already exists, ignoring this one.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 name8.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPluginByComponentName.add(name8, plugin);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/11.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;Client&amp;#x90E8;&amp;#x5206;&amp;#x6839;&amp;#x636E;Uri&amp;#x7C7B;&amp;#x578B;&amp;#x627E;&amp;#x5230;&amp;#x5339;&amp;#x914D;&amp;#x7684;player&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;player&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x4EE5;MP3&amp;#x683C;&amp;#x5F0F;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x7684;&amp;#x5C06;&amp;#x662F;StagefrightPlayer&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#xFF0C;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;new&amp;#x51FA;&amp;#x4E86;&amp;#x5E26;&amp;#x6709;AwesomeEvent&amp;#x7684;AwesomePlayer&amp;#xFF0C;&amp;#x5E76;&amp;#x6CE8;&amp;#x518C;&amp;#x4E86;&amp;#x683C;&amp;#x5F0F;sniffer&amp;#x4EE5;&amp;#x53CA;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;VentorPlugin&amp;#x4EE5;&amp;#x53CA;SoftPlugin&amp;#x540D;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x3002;&lt;/p&gt;
&lt;h6 id=&quot;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;a href=&quot;#&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&quot;&gt;&lt;/a&gt;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/h6&gt;&lt;p&gt;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x52A0;&amp;#x8F7D;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x6DFB;&amp;#x52A0;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&amp;#x518D;&amp;#x56DE;&amp;#x5230;SetDataSource&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x4E0A;&amp;#x6765;&amp;#xFF0C;&amp;#x521B;&amp;#x5EFA;&amp;#x5B8C;StagefrightPlayer&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;SetDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;mPlayer&amp;#x7684;SetDataSource&amp;#x3002;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;StagefrightPlayer&amp;#x521B;&amp;#x5EFA;&amp;#x6D41;&amp;#x7A0B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x77E5;&amp;#x9053;mPlayer&amp;#x662F;AwesomePlayer&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;AwesomePlayer&amp;#x7C7B;&amp;#x4E2D;&amp;#x7684;setDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightPlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mPlayer-&amp;gt;setDataSource(httpService, url, headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;AwesomePlayer&amp;#x7C7B;&amp;#x4E2D;setDataSource&amp;#xFF0C;&amp;#x5B83;&amp;#x7ECF;&amp;#x8FC7;&amp;#x5C42;&amp;#x5C42;&amp;#x8C03;&amp;#x7528;&amp;#x6700;&amp;#x7EC8;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;FileSource &amp;#x5BF9;&amp;#x8C61;&amp;#x8D4B;&amp;#x7ED9;mFileSource&amp;#x3002;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;MediaExtractor::Create&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;Extractor&amp;#x4ECE;FileSource&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x51FA;&amp;#x5982;&amp;#xFF0C;&amp;#x6BD4;&amp;#x7279;&amp;#x7387;&amp;#x7B49;&amp;#x53C2;&amp;#x6570;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;IMediaHTTPService&amp;gt; &amp;amp;httpService,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyedVector&amp;lt;String8, String8&amp;gt; *headers) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setDataSource_l(httpService, uri, headers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    reset_l();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;DataSource&amp;gt; dataSource = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileSource(fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err = dataSource-&amp;gt;initCheck();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileSource = dataSource;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mFd = fd;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mURI = String8();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; setDataSource_l(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;status_t AwesomePlayer::setDataSource_l(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;dataSource) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaExtractor&amp;gt; extractor = MediaExtractor::Create(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (extractor-&amp;gt;getDrmFlag()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        checkDrmStatus(dataSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource_l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(extractor)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x521B;&amp;#x5EFA;MediaExtractor&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;&amp;#x5404;&amp;#x4E2A;sniff&amp;#x65B9;&amp;#x6CD5;&amp;#x5224;&amp;#x65AD;&amp;#x51FA;&amp;#x5F53;&amp;#x524D;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x6839;&amp;#x636E;mime&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;MediaExtractor&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x6211;&amp;#x4EEC;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4E3A;MP3&amp;#x7C7B;&amp;#x578B;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5C06;&amp;#x662F;MP3Extractor&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaExtractor&amp;gt; MediaExtractor::Create(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const sp&amp;lt;DataSource&amp;gt; &amp;amp;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; confidence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;-&amp;gt;sniff(&amp;amp;tmp, &amp;amp;confidence, &amp;amp;meta)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;FAILED to autodetect media content.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mime = tmp.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Autodetected media content as &amp;apos;%s&amp;apos; with confidence %.2f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             mime, confidence);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bool isDrm = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// DRM MIME type syntax is &amp;quot;drm+type+original&amp;quot; where&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// type is &amp;quot;es_based&amp;quot; or &amp;quot;container_based&amp;quot; and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// original is the content&amp;apos;s cleartext MIME type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *originalMime = strchr(mime+&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;+&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (originalMime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// second + not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+es_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// DRMExtractor sets container metadata kKeyIsDRM to 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DRMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, originalMime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+container_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mime = originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isDrm = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaExtractor *ret = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/mp4&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG4Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MP3Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMRExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FLACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WAV)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WAVExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_OGG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OggExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MATROSKA)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatroskaExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2TS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2TSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WVM)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Return now.  WVExtractor should not have the DrmFlag set in the block below.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WVMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC_ADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2PS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2PSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MIDI)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MidiExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDrm) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6709;&amp;#x4E86;MP3Extractor&amp;#x4E4B;&amp;#x540E;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;Media&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x6587;&amp;#x4EF6;&amp;#x5173;&amp;#x952E;&amp;#x4FE1;&amp;#x606F;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x662F;extractor-&amp;gt;getTrack(i)&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F1A;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6B4C;&amp;#x66F2;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;setAudioSource&amp;#x4EE5;&amp;#x53CA;setVideoSource&amp;#x8D4B;&amp;#x503C;&amp;#x7ED9;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x540E;&amp;#x7EED;&amp;#x5C06;&amp;#x4F1A;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x4F5C;&amp;#x4E3A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x3002;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; AwesomePlayer::setDataSource_l(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaExtractor&amp;gt; &amp;amp;extractor) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Attempt to approximate overall stream bitrate by summing all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// tracks&amp;apos; individual bitrates, if not all of them advertise bitrate,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// we have to fail.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; totalBitRate = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExtractor = extractor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = extractor-&amp;gt;getTrackMetaData(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!meta-&amp;gt;findInt32(kKeyBitRate, &amp;amp;bitrate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            totalBitRate = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        totalBitRate += bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; fileMeta = mExtractor-&amp;gt;getMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta-&amp;gt;findInt64(kKeyDuration, &amp;amp;duration)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDurationUs = duration;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBitrate = totalBitRate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;mBitrate = %lld bits/sec&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)mBitrate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mBitrate = mBitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mTracks.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mAudioTrackIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStats.mVideoTrackIndex = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveAudio = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; haveVideo = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; extractor-&amp;gt;countTracks(); ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; meta = extractor-&amp;gt;getTrackMetaData(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *_mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;_mime));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String8 mime = String8(_mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveVideo &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setVideoSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveVideo = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Set the presentation/display size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; displayWidth, displayHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success = meta-&amp;gt;findInt32(kKeyDisplayWidth, &amp;amp;displayWidth);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                success = meta-&amp;gt;findInt32(kKeyDisplayHeight, &amp;amp;displayHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (success) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDisplayWidth = displayWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mDisplayHeight = displayHeight;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mVideoTrackIndex = mStats.mTracks.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mTracks.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TrackStat *stat =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mStats.mTracks.editItemAt(mStats.mVideoTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stat-&amp;gt;mMIME = mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !strncasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setAudioSource(extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            haveAudio = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mActiveAudioTrackIndex = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mStatsLock)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mAudioTrackIndex = mStats.mTracks.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mStats.mTracks.push();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TrackStat *stat =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;mStats.mTracks.editItemAt(mStats.mAudioTrackIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                stat-&amp;gt;mMIME = mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), MEDIA_MIMETYPE_AUDIO_VORBIS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sp&amp;lt;MetaData&amp;gt; fileMeta = extractor-&amp;gt;getMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; loop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileMeta != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;amp;&amp;amp; fileMeta-&amp;gt;findInt32(kKeyAutoLoop, &amp;amp;loop) &amp;amp;&amp;amp; loop != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    modifyFlags(AUTO_LOOPING, SET);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;(), MEDIA_MIMETYPE_TEXT_3GPP)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            addTextSource_l(i, extractor-&amp;gt;getTrack(i));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!haveAudio &amp;amp;&amp;amp; !haveVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWVMExtractor != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mWVMExtractor-&amp;gt;getError();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExtractorFlags = extractor-&amp;gt;flags();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; AwesomePlayer::setAudioSource(sp&amp;lt;MediaSource&amp;gt; &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioTrack = &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; MediaPlayerService::Client::setDataSource_post(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayerBase&amp;gt;&amp;amp; p,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot; setDataSource&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;  error: %d&amp;quot;&lt;/span&gt;, mStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set the re-transmission endpoint if one was chosen.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRetransmitEndpointValid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mStatus = p-&amp;gt;setRetransmitEndpoint(&amp;amp;mRetransmitEndpoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus != NO_ERROR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;setRetransmitEndpoint error: %d&amp;quot;&lt;/span&gt;, mStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayer = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x8D34;&amp;#x4E2A;setDataSource&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#x56FE;&amp;#xFF1A;&lt;br&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;-1/12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之基于Stagefright的MediaPlayer播放框架[1]</title>
    <link href="http://yoursite.com/2016/07/31/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%92%AD%E6%94%BE%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/07/31/Android-源码分析之基于Stagefright的MediaPlayer播放框架/</id>
    <published>2016-07-31T02:32:34.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x518D;&amp;#x524D;&amp;#x4E00;&amp;#x4E2A;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5927;&amp;#x5BB6;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6709;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x6574;&amp;#x4F53;&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5C06;&amp;#x9488;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5177;&amp;#x4F53;&amp;#x7EC6;&amp;#x8282;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#x672C;&amp;#x5730;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x65F6;&amp;#x7684;&amp;#x4E00;&amp;#x822C;&amp;#x8C03;&amp;#x7528;&amp;#x6B65;&amp;#x9AA4;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6B65;&amp;#x9AA4;&amp;#x6240;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;a href=&quot;#&amp;#x6BCF;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&quot;&gt;&lt;/a&gt;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&lt;/h5&gt;&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E0A;&amp;#x5C42;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x60C5;&amp;#x51B5;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&lt;br&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x4ECE;JNI&amp;#x5C42;&amp;#x83B7;&amp;#x53D6;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;MediaPlayer&amp;#x76F8;&amp;#x5173;&amp;#x57DF;&amp;#x548C;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x7531;&amp;#x4E8E;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#x5728;&amp;#x4E0A;&amp;#x5C42;&amp;#x521B;&amp;#x5EFA;&amp;#x4F1A;&amp;#x6BD4;&amp;#x5728;&amp;#x4E0B;&amp;#x5C42;&amp;#x521B;&amp;#x5EFA;&amp;#x6765;&amp;#x5F97;&amp;#x5BB9;&amp;#x6613;&amp;#x4E9B;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x521B;&amp;#x5EFA;EventHandler&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5904;&amp;#x7406;&amp;#x5E95;&amp;#x5C42;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x5411;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setDataSource() &amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x5E76;&amp;#x4E3A;&amp;#x5176;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;br&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x672C;&amp;#x5730;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimetype&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x9009;&amp;#x62E9;&amp;#x9002;&amp;#x5F53;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x5E76;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&lt;/li&gt;
&lt;li&gt;&amp;#x521B;&amp;#x5EFA;AudioOutput&amp;#xFF0C;&amp;#x5C06;&amp;#x5176;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x6B65;&amp;#x9AA4;1&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6570;&amp;#x636E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5B83;&amp;#x8F93;&amp;#x51FA;&amp;#x5230;&amp;#x786C;&amp;#x4EF6;&amp;#x8BBE;&amp;#x5907;&amp;#x4E0A;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x6570;&amp;#x636E;&amp;#x6E90;FileSource&amp;#x3002;&amp;#x6839;&amp;#x636E;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Mimetype&amp;#x521B;&amp;#x5EFA;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;Extractor&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x521B;&amp;#x5EFA;&amp;#x76F8;&amp;#x5E94;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5BB9;&amp;#x5668;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#x4E2D;&amp;#x4F5C;&amp;#x4E3A;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x8F93;&amp;#x5165;&amp;#x6570;&amp;#x636E;&amp;#x6765;&amp;#x6E90;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setDisplay()&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x4E3A;&amp;#x89C6;&amp;#x9891;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6E32;&amp;#x67D3;&amp;#x753B;&amp;#x677F;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x6D41;&amp;#x5C31;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;&amp;#x63A5;&amp;#x53E3;&amp;#x663E;&amp;#x793A;&amp;#x5230;&amp;#x663E;&amp;#x793A;&amp;#x5C4F;&amp;#x4E0A;&amp;#x7684;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;prepare()&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x4E0A;&amp;#x9762;MediaExtractor&amp;#x4ECE;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x51FA;&amp;#x7684;mimetype&amp;#x7C7B;&amp;#x578B;&amp;#x641C;&amp;#x5BFB;&amp;#x5E76;&amp;#x52A0;&amp;#x8F7D;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x914D;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8BBE;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x7684;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&lt;/li&gt;
&lt;li&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x89E3;&amp;#x7801;&amp;#x5668;Buffer&amp;#x7684;&amp;#x5C3A;&amp;#x5BF8;&amp;#x5927;&amp;#x5C0F;&amp;#x6570;&amp;#x636E;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;start()&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x521B;&amp;#x5EFA;AudioPlayer&amp;#x5E76;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4ECE;&amp;#x97F3;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5BB9;&amp;#x5668;&amp;#x4E2D;&amp;#x8BFB;&amp;#x53D6;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x4F20;&amp;#x9001;&amp;#x7ED9;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x7801;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x5C06;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED9;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&lt;/li&gt;
&lt;li&gt;&amp;#x901A;&amp;#x8FC7;AudioPlayer&amp;#x5411;&amp;#x786C;&amp;#x4EF6;&amp;#x8F93;&amp;#x51FA;&amp;#x97F3;&amp;#x9891;&amp;#x6570;&amp;#x636E;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x521B;&amp;#x5EFA;&amp;#x89C6;&amp;#x9891;Render&amp;#x6765;&amp;#x6E32;&amp;#x67D3;&amp;#x89E3;&amp;#x7801;&amp;#x597D;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x6570;&amp;#x636E;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x89E3;&amp;#x6790;&amp;#xFF1A;&lt;/h5&gt;&lt;h6 id=&quot;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&quot;&gt;&lt;a href=&quot;#&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&quot;&gt;&lt;/a&gt;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&lt;/h6&gt;&lt;h6 id=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5E95;&amp;#x5C42;MediaPlayer&amp;#x4E0E;Java&amp;#x5C42;MediaPlayer&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x901A;&amp;#x9053;&quot;&gt;&lt;a href=&quot;#&amp;#x5EFA;&amp;#x7ACB;&amp;#x5E95;&amp;#x5C42;MediaPlayer&amp;#x4E0E;Java&amp;#x5C42;MediaPlayer&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x901A;&amp;#x9053;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5E95;&amp;#x5C42;MediaPlayer&amp;#x4E0E;Java&amp;#x5C42;MediaPlayer&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x901A;&amp;#x9053;&quot;&gt;&lt;/a&gt;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5E95;&amp;#x5C42;MediaPlayer&amp;#x4E0E;Java&amp;#x5C42;MediaPlayer&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#x901A;&amp;#x9053;&lt;/h6&gt;&lt;p&gt;&amp;#x5728;MediaPlayer&amp;#x52A0;&amp;#x8F7D;&amp;#x540E;&amp;#x5B83;&amp;#x4F1A;&amp;#x5148;&amp;#x6267;&amp;#x884C;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x9759;&amp;#x6001;&amp;#x4EE3;&amp;#x7801;&amp;#x5757;&amp;#x53EA;&amp;#x6709;&amp;#x5728;&amp;#x7C7B;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x52A0;&amp;#x8F7D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5730;&amp;#x65B9;&amp;#x52A0;&amp;#x8F7D;&amp;#x52A8;&amp;#x6001;&amp;#x5E93;libmedia_jni.so&amp;#x662F;&amp;#x6700;&amp;#x4E3A;&amp;#x5408;&amp;#x9002;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.loadLibrary(&lt;span class=&quot;string&quot;&gt;&amp;quot;media_jni&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    native_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;native_init&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E9B;&amp;#x5C5E;&amp;#x6027;&amp;#x7684;id&amp;#x4E3A;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E9B;field id&amp;#x662F;&amp;#x6BD4;&amp;#x8F83;&amp;#x5E38;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x7C7B;&amp;#x52A0;&amp;#x8F7D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x76F4;&amp;#x63A5;&amp;#x83B7;&amp;#x53D6;&amp;#x53EF;&amp;#x4EE5;&amp;#x907F;&amp;#x514D;&amp;#x540E;&amp;#x7EED;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6BCF;&amp;#x6B21;&amp;#x90FD;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x964D;&amp;#x4F4E;&amp;#x4E86;&amp;#x6267;&amp;#x884C;&amp;#x6548;&amp;#x7387;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight mel&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android_media_MediaPlayer_native_init(JNIEnv &lt;span class=&quot;variable&quot;&gt;*env&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass clazz;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;&amp;#x4E0A;&amp;#x5C42;&amp;#x83B7;&amp;#x53D6;Context&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clazz = &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;FindClass(&lt;span class=&quot;string&quot;&gt;&amp;quot;android/media/MediaPlayer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fields.context = &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetFieldID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;mNativeContext&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;native_setup&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FD9;&amp;#x4E2A;&amp;#x503C;&amp;#x57DF;&amp;#xFF0C;&amp;#x7528;&amp;#x4E8E;&amp;#x5C06;native&amp;#x5C42;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x5230;Java&amp;#x5C42;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.post_event = &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetStaticMethodID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;postEventFromNative&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;(Ljava/lang/Object;IIILjava/lang/Object;)V&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.surface_texture = &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetFieldID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;mNativeSurfaceTexture&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;DeleteLocalRef(clazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clazz = &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;FindClass(&lt;span class=&quot;string&quot;&gt;&amp;quot;android/net/ProxyInfo&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.proxyConfigGetHost =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetMethodID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;getHost&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;()Ljava/lang/String;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.proxyConfigGetPort =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetMethodID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;getPort&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;()I&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.proxyConfigGetExclusionList =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;GetMethodID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;getExclusionListAsString&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;()Ljava/lang/String;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;-&amp;gt;DeleteLocalRef(clazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gPlaybackParamsFields.init(&lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gSyncParamsFields.init(&lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;MediaPlayer&amp;#x7C7B;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x6765;&amp;#x8BE6;&amp;#x7EC6;&amp;#x770B;&amp;#x4E0B;&amp;#x4E0A;&amp;#x5C42;&amp;#x548C;native&amp;#x5C42;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x8FDB;&amp;#x884C;&amp;#x6D88;&amp;#x606F;&amp;#x4F20;&amp;#x9012;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MediaPlayer&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper looper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;EventHandler&amp;#x7528;&amp;#x4E8E;&amp;#x5904;&amp;#x7406;&amp;#x4ECE;native&amp;#x5C42;&amp;#x4F20;&amp;#x9012;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((looper = Looper.myLooper()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEventHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventHandler(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, looper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((looper = Looper.getMainLooper()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEventHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; EventHandler(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, looper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEventHandler = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MediaPlayer&amp;#x7684;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;native_setup&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    native_setup(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WeakReference&amp;lt;MediaPlayer&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;EventHandler&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;Handler&amp;#x7528;&amp;#x4E8E;&amp;#x5904;&amp;#x7406;&amp;#x4ECE;native&amp;#x5C42;&amp;#x4F20;&amp;#x9012;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;native_setup&lt;/p&gt;
&lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android&lt;span class=&quot;number&quot;&gt;_m&lt;/span&gt;edia&lt;span class=&quot;number&quot;&gt;_M&lt;/span&gt;ediaPlayer&lt;span class=&quot;number&quot;&gt;_n&lt;/span&gt;ative&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;setup(JNIEnv *env, jobject thiz, jobject weak&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; mp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaPlayer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;JNIMediaPlayerListener &amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;&amp;#x4E0A;&amp;#x9762;new&amp;#x51FA;&amp;#x6765;&amp;#x7684;MediaPlayer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// JNIMediaPlayerListener &amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5C06;native&amp;#x5C42;&amp;#x7684;&amp;#x901A;&amp;#x77E5;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;Java&amp;#x5C42;&amp;#x7684;postEventFromNative&amp;#x65B9;&amp;#x6CD5;&amp;#x4F20;&amp;#x9012;&amp;#x4E0A;&amp;#x53BB;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x5DE5;&amp;#x4F5C;&amp;#x662F;&amp;#x5728;frameworks/base/media/jni/android_media_MediaPlayer.cpp:JNIMediaPlayerListener::notify&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;fields.post_event&amp;#x6B63;&amp;#x662F;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;android_media_MediaPlayer_native_init&amp;#x4E2D;&amp;#x4ECE;Java&amp;#x5C42;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;JNIMediaPlayerListener&amp;gt; listener = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JNIMediaPlayerListener(env, thiz, weak&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x4E0A;&amp;#x8FF0;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;JNIMediaPlayerListener&amp;#x8D4B;&amp;#x7ED9;MediaPlayer&amp;#x672C;&amp;#x5730;&amp;#x7C7B;&amp;#x7684;mListener&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mp-&amp;gt;setListener(listener);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Stow our new C++ MediaPlayer in an opaque field in the Java object.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setMediaPlayer(env, thiz, mp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;native_setup&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x5C42;&amp;#x7684;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#x4EE5;&amp;#x53CA;JNIMediaPlayerListener&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;JNIMediaPlayerListener &amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x5C06;native&amp;#x5C42;&amp;#x7684;&amp;#x901A;&amp;#x77E5;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;Java&amp;#x5C42;&amp;#x7684;postEventFromNative&amp;#x65B9;&amp;#x6CD5;&amp;#x4F20;&amp;#x9012;&amp;#x4E0A;&amp;#x53BB;,&amp;#x8FD9;&amp;#x4E2A;&amp;#x5DE5;&amp;#x4F5C;&amp;#x662F;&amp;#x5728;frameworks/base/media/jni/android_media_MediaPlayer.cpp:JNIMediaPlayerListener::notify&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x7684;fields.post_event&amp;#x6B63;&amp;#x662F;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;android_media_MediaPlayer_native_init&amp;#x4E2D;&amp;#x4ECE;Java&amp;#x5C42;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;MediaPlayer native&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x53EA;&amp;#x662F;&amp;#x5BF9;&amp;#x4E00;&amp;#x4E9B;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MediaPlayer::MediaPlayer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mListener = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;                       &lt;span class=&quot;comment&quot;&gt;//&amp;#x7528;&amp;#x4E8E;&amp;#x4E0E;Java&amp;#x5C42;&amp;#x901A;&amp;#x4FE1;&amp;#x7684;Listener JNIMediaPlayerListener&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCookie = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStreamType = AUDIO_STREAM_MUSIC;       &lt;span class=&quot;comment&quot;&gt;//Stream &amp;#x7C7B;&amp;#x578B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioAttributesParcel = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentPosition = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;                      &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F53;&amp;#x524D;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSeekPosition = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;                        &lt;span class=&quot;comment&quot;&gt;//Seek&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCurrentState = MEDIA_PLAYER_IDLE;     &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F53;&amp;#x524D;MediaPlayer&amp;#x7684;&amp;#x72B6;&amp;#x6001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareSync = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;                      &lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x5426;&amp;#x540C;&amp;#x6B65;Prepare&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPrepareStatus = NO_ERROR;               &lt;span class=&quot;comment&quot;&gt;//Prepare&amp;#x72B6;&amp;#x6001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLoop = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x662F;&amp;#x5426;&amp;#x5FAA;&amp;#x73AF;&amp;#x64AD;&amp;#x653E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLeftVolume = mRightVolume = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;;          &lt;span class=&quot;comment&quot;&gt;//&amp;#x5DE6;&amp;#x53F3;&amp;#x97F3;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoWidth = mVideoHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x5BBD;&amp;#x5EA6;&amp;#x548C;&amp;#x9AD8;&amp;#x5EA6;&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLockThreadId = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;                               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioSessionId = AudioSystem::newAudioUniqueId();  &lt;span class=&quot;comment&quot;&gt;//AudioSession Id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AudioSystem::acquireAudioSessionId(mAudioSessionId, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;AudioSessionId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSendLevel = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRetransmitEndpointValid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5F53;native MediaPlayer&amp;#x521B;&amp;#x5EFA;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;setMediaPlayer&amp;#x5C06;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;MediaPlayer native&amp;#x5C42;&amp;#x5BF9;&amp;#x8C61;&amp;#x8D4B;&amp;#x7ED9;Java&amp;#x5C42;&amp;#x7684;Context&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt; &lt;span class=&quot;title&quot;&gt;setMediaPlayer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;JNIEnv* env, jobject thiz, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;MediaPlayer&amp;gt;&amp;amp; player&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaPlayer&amp;gt; old = (MediaPlayer*)env-&amp;gt;GetLongField(thiz, fields.context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (player.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        player-&amp;gt;incStrong((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)setMediaPlayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (old != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        old-&amp;gt;decStrong((&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*)setMediaPlayer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;SetLongField(thiz, fields.context, (jlong)player.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; old;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;native&amp;#x5C42;&amp;#x662F;&amp;#x600E;&amp;#x6837;&amp;#x5C06;&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x5230;&amp;#x4E0A;&amp;#x5C42;&amp;#x5C31;&amp;#x5148;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;JNIMediaPlayerListener&lt;/p&gt;
&lt;p&gt;JNIMediaPlayerListener&amp;#x662F;&amp;#x8FDE;&amp;#x63A5;native&amp;#x5C42;&amp;#x7684;MediaPlayer&amp;#x4E0E;Java&amp;#x5C42;MediaPlayer&amp;#x7684;&amp;#x91CD;&amp;#x8981;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&amp;#x3002;&amp;#x5B83;&amp;#x901A;&amp;#x8FC7;JNI&amp;#x8C03;&amp;#x7528;Java&amp;#x5C42;&amp;#x7684;postEventFromNative&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4E8B;&amp;#x4EF6;&amp;#x4F20;&amp;#x9012;&amp;#x5230;Java&amp;#x5C42;&amp;#x3002;&amp;#x6700;&amp;#x7EC8;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;Java&amp;#x5C42;MediaPlayer&amp;#x4E2D;&amp;#x7684;EventHandler&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight rust&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;class JNIMediaPlayerListener: public MediaPlayerListener{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JNIMediaPlayerListener(JNIEnv* env, jobject thiz, jobject weak_thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ~JNIMediaPlayerListener();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; void notify(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; msg, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext2, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Parcel *obj = NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JNIMediaPlayerListener();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass      mClass;     &lt;span class=&quot;comment&quot;&gt;// &amp;#x6307;&amp;#x5411;native&amp;#x5C42; MediaPlayer&amp;#x7684;&amp;#x5F15;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jobject     mObject;   &lt;span class=&quot;comment&quot;&gt;// Java&amp;#x5C42;MediaPlayer&amp;#x7684;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JNIMediaPlayerListener::JNIMediaPlayerListener(JNIEnv* env, jobject thiz, jobject weak_thiz)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass clazz = env-&amp;gt;GetObjectClass(thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE(&lt;span class=&quot;string&quot;&gt;&amp;quot;Can&amp;apos;t find android/media/MediaPlayer&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jniThrowException(env, &lt;span class=&quot;string&quot;&gt;&amp;quot;java/lang/Exception&amp;quot;&lt;/span&gt;, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521D;&amp;#x59CB;&amp;#x5316;mClass&amp;#x548C;mObject  &amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mClass = (jclass)env-&amp;gt;NewGlobalRef(clazz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mObject  = env-&amp;gt;NewGlobalRef(weak_thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;JNIMediaPlayerListener::~JNIMediaPlayerListener()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6790;&amp;#x6784;&amp;#x6389;mClass&amp;#x548C;mObject  &amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JNIEnv *env = AndroidRuntime::getJNIEnv();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;DeleteGlobalRef(mObject);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;DeleteGlobalRef(mClass);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void JNIMediaPlayerListener::notify(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; msg, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ext2, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Parcel *obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    JNIEnv *env = AndroidRuntime::getJNIEnv();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj &amp;amp;&amp;amp; obj-&amp;gt;dataSize() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x8981;&amp;#x4F20;&amp;#x9012;&amp;#x7684;ParcelObject&amp;#x5BF9;&amp;#x8C61;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jobject jParcel = createJavaParcelObject(env);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (jParcel != NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Parcel* nativeParcel = parcelForJavaObject(env, jParcel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x8981;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nativeParcel-&amp;gt;setData(obj-&amp;gt;data(), obj-&amp;gt;dataSize());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;Java&amp;#x5C42;&amp;#x7684;postEventFromNative&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            env-&amp;gt;CallStaticVoidMethod(mClass, fields.post_event, mObject,msg, ext1, ext2, jParcel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            env-&amp;gt;DeleteLocalRef(jParcel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        env-&amp;gt;CallStaticVoidMethod(mClass, fields.post_event, mObject,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                msg, ext1, ext2, NULL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (env-&amp;gt;ExceptionCheck()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGW(&lt;span class=&quot;string&quot;&gt;&amp;quot;An exception occurred while notifying an event.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LOGW_EX(env);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        env-&amp;gt;ExceptionClear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;JNIMediaPlayerListener&amp;#x4E2D;&amp;#x6700;&amp;#x4E3B;&amp;#x8981;&amp;#x7684;&amp;#x5C31;&amp;#x662F;notify&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x5C01;&amp;#x88C5;&amp;#x5B8C;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;JNI&amp;#x63A5;&amp;#x53E3;&amp;#x8C03;&amp;#x7528;Java&amp;#x5C42;&amp;#x7684;postEventFromNative&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;&amp;#x81F3;&amp;#x6B64;MediaPlayer&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5B8C;&amp;#x6210;&amp;#xFF0C;Native&amp;#x5C42;&amp;#x7684;MediaPlayer&amp;#x5B8C;&amp;#x6210;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;setMediaPlayer&amp;#x5C06;&amp;#x5176;&amp;#x8D4B;&amp;#x7ED9;Java&amp;#x5C42;&amp;#x7684;mNativeContext&amp;#xFF0C;Java&amp;#x5C42;&amp;#x7684;MediaPlayer&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;native_setup&amp;#x5C06;&amp;#x5176;&amp;#x5F15;&amp;#x7528;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5230;native&amp;#x5C42;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;JNIMediaPlayerListener&amp;#x3002;JNIMediaPlayerListener&amp;#x8D1F;&amp;#x8D23;&amp;#x5C06;native&amp;#x5C42;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x901A;&amp;#x77E5;&amp;#x5230;Java&amp;#x5C42;&amp;#x7684;MediaPlayer&amp;#x4E0A;&amp;#x3002;&amp;#x5E76;&amp;#x4EA4;&amp;#x7ED9;EventHandler&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x6574;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x5927;&amp;#x81F4;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8C03;&amp;#x7528;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/31/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x907F;&amp;#x514D;&amp;#x6574;&amp;#x4E2A;&amp;#x535A;&amp;#x5BA2;&amp;#x7684;&amp;#x7BC7;&amp;#x5E45;&amp;#x592A;&amp;#x957F;&amp;#x6211;&amp;#x5C06;&amp;#x4E00;&amp;#x4E2A;&amp;#x9636;&amp;#x6BB5;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E00;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF0C;&amp;#x4E0B;&amp;#x4E2A;&amp;#x535A;&amp;#x5BA2;&amp;#x5C06;&amp;#x5411;&amp;#x5927;&amp;#x5BB6;&amp;#x4ECB;&amp;#x7ECD;setDataSource&amp;#x2013;&amp;#x521B;&amp;#x5EFA;&amp;#x64AD;&amp;#x653E;&amp;#x5F15;&amp;#x64CE;&amp;#xFF0C;&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#xFF0C;&amp;#x5173;&amp;#x4E8E;&amp;#x4ECA;&amp;#x5929;&amp;#x7684;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5982;&amp;#x679C;&amp;#x5927;&amp;#x5BB6;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x7591;&amp;#x95EE;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x53D1;&amp;#x73B0;&amp;#x6709;&amp;#x9519;&amp;#x8BEF;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x6B22;&amp;#x8FCE;&amp;#x5927;&amp;#x5BB6;&amp;#x7559;&amp;#x8A00;&amp;#x6216;&amp;#x8005;&amp;#x53D1;&amp;#x90AE;&amp;#x4EF6;&amp;#x544A;&amp;#x8BC9;&amp;#x6211;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x518D;&amp;#x524D;&amp;#x4E00;&amp;#x4E2A;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5927;&amp;#x5BB6;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之基于Stagefright的MediaPlayer播放框架[0]</title>
    <link href="http://yoursite.com/2016/07/30/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B%E5%9F%BA%E4%BA%8EStagefright%E7%9A%84MediaPlayer%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2016/07/30/Android-源码分析之基于Stagefright的MediaPlayer框架/</id>
    <published>2016-07-30T11:15:30.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;Android&amp;#x4E0A;&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x5E95;&amp;#x5C42;&amp;#x6846;&amp;#x67B6;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ECF;&amp;#x5386;&amp;#x4E86;&amp;#x591A;&amp;#x6B21;&amp;#x53D8;&amp;#x52A8;&amp;#xFF0C;&amp;#x4ECE;&amp;#x6700;&amp;#x65E9;&amp;#x5148;&amp;#x7684;OpenCore&amp;#x5230;&amp;#x540E;&amp;#x6765;&amp;#x7684;StageFright&amp;#x518D;&amp;#x5230;&amp;#x73B0;&amp;#x5728;&amp;#x7684;NuPlayerDriver&amp;#xFF0C;&amp;#x5728;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5F00;&amp;#x59CB;&amp;#x63A5;&amp;#x89E6;Android&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5DF2;&amp;#x7ECF;&amp;#x79FB;&amp;#x9664;&amp;#x4E86;OpenCore&amp;#x6240;&amp;#x4EE5;&amp;#x5BF9;OpenCore&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#x4EC5;&amp;#x4EC5;&amp;#x505C;&amp;#x7559;&amp;#x5728;&amp;#x542C;&amp;#x8BF4;&amp;#x8FC7;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6846;&amp;#x67B6;&amp;#x5728;&amp;#x6F14;&amp;#x8FDB;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x4E00;&amp;#x822C;&amp;#x90FD;&amp;#x662F;&amp;#x5148;&amp;#x4E24;&amp;#x79CD;&amp;#x6846;&amp;#x67B6;&amp;#x5E76;&amp;#x5B58;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x5728;&amp;#x67D0;&amp;#x4E2A;&amp;#x7248;&amp;#x672C;&amp;#x4E2D;&amp;#x5C06;&amp;#x5176;&amp;#x79FB;&amp;#x9664;&amp;#xFF0C;&amp;#x65E9;&amp;#x5148;Android&amp;#x4E2D;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;Stagefright + NuPlayer&amp;#x5E76;&amp;#x5B58;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x524D;&amp;#x8005;&amp;#x8D1F;&amp;#x8D23;&amp;#x64AD;&amp;#x653E;&amp;#x672C;&amp;#x5730;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x540E;&amp;#x8005;&amp;#x7528;&amp;#x4E8E;&amp;#x64AD;&amp;#x653E;&amp;#x7F51;&amp;#x7EDC;&amp;#x6D41;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x540E;&amp;#x6765;&amp;#x7684;Android L&amp;#x5F00;&amp;#x59CB;NuPlayeri&amp;#x6E10;&amp;#x6E10;&amp;#x5F00;&amp;#x59CB;&amp;#x66FF;&amp;#x4EE3;&amp;#x4E86;Stagefright&amp;#xFF0C;&amp;#x76EE;&amp;#x524D;&amp;#x672C;&amp;#x5730;&amp;#x64AD;&amp;#x653E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5207;&amp;#x6362;&amp;#x5230;NuPlayer&amp;#x4E0A;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;Android N AOPS &amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x751A;&amp;#x81F3;&amp;#x79FB;&amp;#x9664;&amp;#x4E86;Stagefright&amp;#x3002;&amp;#x5728;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x4E24;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x7ED9;&amp;#x5927;&amp;#x5BB6;&amp;#x4ECB;&amp;#x7ECD;Stragefright&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x4EE5;&amp;#x53CA;Nuplayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x3002;&lt;br&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x8FD9;&amp;#x7BC7;&amp;#x5148;&amp;#x5E26;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x4E0B;Stagefright&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x3002;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;Stagefright&amp;#x548C;Nuplayer&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;Android MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x5927;&amp;#x4F53;&amp;#x7ED3;&amp;#x6784;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x7ED3;&amp;#x6784;&amp;#x53EF;&amp;#x4EE5;&amp;#x5206;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MediaPlayer  Java&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5F00;&amp;#x53D1;&amp;#x4E0A;&amp;#x5C42;&amp;#x5E94;&amp;#x7528;&amp;#x6240;&amp;#x63A5;&amp;#x89E6;&amp;#x7684;API&amp;#x5C42;&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E; frameworks/base/media/java/android/media/MediaPlayer.java&lt;/li&gt;
&lt;li&gt;MediaPlayer  JNI &amp;#x5C42;&amp;#xFF0C;&amp;#x5B83;&amp;#x7528;&amp;#x4E8E;&amp;#x5C06;Java&amp;#x5C42;&amp;#x548C;MediaPlayer&amp;#x7684; native&amp;#x5C42;&amp;#x8FDE;&amp;#x63A5;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E;frameworks/base/media/jni/android_media_MediaPlayer.cpp&lt;/li&gt;
&lt;li&gt;MediaPLayer  Native&amp;#x5C42;&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;MediaPlayer&amp;#x7684;&amp;#x672C;&amp;#x5730;&amp;#x4EE3;&amp;#x7801;&amp;#x8FD9;&amp;#x91CC;&amp;#x5305;&amp;#x62EC;&amp;#x4E86;Stagefright + AwesomePlayer &amp;#x4EE5;&amp;#x53CA;Nuplayer + Nuplayer &amp;#x4E24;&amp;#x5927;&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;&amp;#x4EE3;&amp;#x7801;&amp;#x4F4D;&amp;#x4E8E;frameworks/av/&lt;/li&gt;
&lt;li&gt;MediaPlayer  HardWare&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D89;&amp;#x53CA;&amp;#x5230;&amp;#x4E00;&amp;#x4E9B;&amp;#x786C;&amp;#x7F16;&amp;#x7801;&amp;#x90E8;&amp;#x5206;&lt;br&gt;&lt;img src=&quot;/2016/07/30/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x6846;&amp;#x67B6;/1.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x53EA;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x901A;&amp;#x7528;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x6765;&amp;#x4E2A;&amp;#x57FA;&amp;#x4E8E;Stagefight&amp;#x7684;MediaPLayer&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/30/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x6846;&amp;#x67B6;/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x6700;&amp;#x4E0A;&amp;#x5C42;&amp;#x662F;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5305;&amp;#x62EC;Music&amp;#xFF0C;Video&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x662F;&amp;#x4E00;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5E94;&amp;#x7528;&amp;#x4F7F;&amp;#x7528;framwork&amp;#x5C42;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;&amp;#x4E0A;&amp;#x5C42;API&amp;#x63A5;&amp;#x53E3;&amp;#x6765;&amp;#x8BBF;&amp;#x95EE;&amp;#x548C;&amp;#x64CD;&amp;#x4F5C;&amp;#x5E95;&amp;#x5C42;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x5728;Java&amp;#x5C42;&amp;#x548C;native&amp;#x5C42;&amp;#x4E4B;&amp;#x95F4;&amp;#x901A;&amp;#x8FC7;jni&amp;#x5C42;&amp;#x6765;&amp;#x8FDB;&amp;#x884C;&amp;#x6620;&amp;#x5C04;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;native&amp;#x5C42;&amp;#x90E8;&amp;#x4EF6;&amp;#x5219;&amp;#x901A;&amp;#x8FC7;IPC&amp;#x8FDB;&amp;#x7A0B;&amp;#x95F4;&amp;#x901A;&amp;#x4FE1;&amp;#x65B9;&amp;#x5F0F;&amp;#x6765;&amp;#x4ECE;Media Player Service&amp;#x83B7;&amp;#x5F97;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x54CD;&amp;#x5E94;&amp;#x3002;Media Player Service &amp;#x662F;&amp;#x5728;mediaserver&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x88AB;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x6765;&amp;#x7684;&amp;#xFF0C;&amp;#x5B83;&amp;#x8D1F;&amp;#x8D23;&amp;#x6839;&amp;#x636E;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;mimetype&amp;#x521B;&amp;#x5EFA;&amp;#x5408;&amp;#x9002;&amp;#x7684;media player&amp;#xFF0C;&amp;#x5E76;&amp;#x7531;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;mediaplayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x4E00;&amp;#x4E2A;&amp;#x5408;&amp;#x9002;&amp;#x7684;&amp;#x7F16;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x83B7;&amp;#x53D6;&amp;#x548C;&amp;#x64CD;&amp;#x4F5C;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x7BA1;&amp;#x7406;&amp;#x5176;&amp;#x95F4;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5404;&amp;#x4E2A;&amp;#x5C42;&amp;#x7684;&amp;#x66F4;&amp;#x4E3A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;br&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E2D;&amp;#x4E0D;&amp;#x88AB;&amp;#x6574;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x7ED5;&amp;#x6655;&amp;#x5EFA;&amp;#x8BAE;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E9B;&amp;#x56FE;&amp;#x5BF9;&amp;#x6574;&amp;#x4E2A;&amp;#x6846;&amp;#x67B6;&amp;#x6709;&amp;#x5927;&amp;#x4F53;&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#x3002;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4F1A;&amp;#x66F4;&amp;#x504F;&amp;#x5411;&amp;#x4E8E;&amp;#x7EC6;&amp;#x8282;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x548C;framework&amp;#x5C42;&lt;br&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x5230;MediaPlayer&amp;#x7684;&amp;#x5E94;&amp;#x7528;&amp;#x5F88;&amp;#x591A;&amp;#xFF0C;&amp;#x6700;&amp;#x5E38;&amp;#x89C1;&amp;#x7684;&amp;#x5C31;&amp;#x662F;Music&amp;#x548C;Video&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;AOSP&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x7684;packages/apps&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x7528;&amp;#x5230;&amp;#x4E86;frameworks/base/media/&amp;#x6240;&amp;#x63D0;&amp;#x4F9B;&amp;#x7684;MediaPlayer&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x90FD;&amp;#x5341;&amp;#x5206;&amp;#x7B80;&amp;#x5355;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x4E9B;&amp;#x63A5;&amp;#x53E3;&amp;#x7684;&amp;#x5177;&amp;#x4F53;&amp;#x529F;&amp;#x80FD;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F00;&amp;#x53D1;&amp;#x51FA;&amp;#x4E00;&amp;#x6B3E;&amp;#x529F;&amp;#x80FD;&amp;#x8F83;&amp;#x4E3A;&amp;#x9F50;&amp;#x5168;&amp;#x7684;Music&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5982;&amp;#x679C;&amp;#x9047;&amp;#x5230;&amp;#x4E00;&amp;#x4E9B;&amp;#x96BE;&amp;#x4EE5;&amp;#x89E3;&amp;#x51B3;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x6DF1;&amp;#x5165;&amp;#x5230;native&amp;#x5C42;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF0C;&amp;#x4ECE;&amp;#x5E95;&amp;#x5C42;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x6765;&amp;#x627E;&amp;#x5230;&amp;#x95EE;&amp;#x9898;&amp;#x7684;&amp;#x6839;&amp;#x6E90;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;framework&amp;#x5C42;&amp;#x4EE3;&amp;#x7801;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x52A0;&amp;#x6DF1;&amp;#x5165;&amp;#x5F97;&amp;#x4E86;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x673A;&amp;#x5236;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Native Media Player &amp;#x5C42;&amp;#xFF1A;&lt;br&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x521A;&amp;#x63A5;&amp;#x89E6;MediaPlayer&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6700;&amp;#x6015;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x9605;&amp;#x8BFB;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x4E86;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x7A0B;&amp;#x8D70;&amp;#x5230;JNI&amp;#x63A5;&amp;#x53E3;&amp;#xFF0C;&amp;#x518D;&amp;#x4ECE;JNI&amp;#x63A5;&amp;#x53E3;&amp;#x8FDB;&amp;#x5165;native&amp;#x5C42;&amp;#xFF0C;&amp;#x6574;&amp;#x4E2A;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6D41;&amp;#x548C;&amp;#x63A7;&amp;#x5236;&amp;#x6D41;&amp;#x90FD;&amp;#x4F1A;&amp;#x53D8;&amp;#x5F97;&amp;#x590D;&amp;#x6742;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4E0D;&amp;#x50CF;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x90A3;&amp;#x6837;&amp;#x8C03;&amp;#x5F0F;&amp;#x8D77;&amp;#x6765;&amp;#x65B9;&amp;#x4FBF;&amp;#xFF0C;&amp;#x6709;&amp;#x5927;&amp;#x91CF;&amp;#x7684;&amp;#x6587;&amp;#x6863;&amp;#x53EF;&amp;#x4EE5;&amp;#x53C2;&amp;#x9605;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x5B66;&amp;#x4E60;&amp;#x65B9;&amp;#x5F0F;&amp;#x53EA;&amp;#x80FD;&amp;#x901A;&amp;#x8FC7;&amp;#x6253;Log&amp;#x548C;&amp;#x9605;&amp;#x8BFB;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#x3002;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5C06;&amp;#x4F1A;&amp;#x518D;&amp;#x540E;&amp;#x7EED;&amp;#x90E8;&amp;#x5206;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x8BB2;&amp;#x89E3;&amp;#x5206;&amp;#x6790;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Media Player Service &amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x4ECE;Native&amp;#x5C42;&amp;#x53D1;&amp;#x51FA;&amp;#x7684;IPC&amp;#x8BF7;&amp;#x6C42;&amp;#x5C06;&amp;#x4F1A;&amp;#x7531;Media Player Service &amp;#x90E8;&amp;#x5206;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;.MediaPlayerService&amp;#x662F;&amp;#x5728;frameworks/av/media/mediaserver/main_mediaserver.cpp&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8FD8;&amp;#x542F;&amp;#x52A8;&amp;#x4E86;&amp;#x591A;&amp;#x4E2A;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x670D;&amp;#x52A1;&amp;#x6BD4;&amp;#x5982;AudioFlinger, CameraService&amp;#x7B49;&amp;#xFF0C;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;Media Player Service &amp;#x5B50;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5305;&amp;#x62EC;MediaPlayerService&amp;#x5BF9;&amp;#x8C61;&amp;#x7684;&amp;#x521B;&amp;#x5EFA;,&amp;#x4EE5;&amp;#x53CA;&amp;#x5185;&amp;#x7F6E;&amp;#x5E95;&amp;#x5C42;Media PLayer&amp;#x64AD;&amp;#x653E;&amp;#x6846;&amp;#x67B6;&amp;#x5DE5;&amp;#x5382;&amp;#x7684;&amp;#x6CE8;&amp;#x518C;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6; MediaPlayerService &amp;#x670D;&amp;#x52A1;&amp;#x542F;&amp;#x52A8;&amp;#xFF0C;MediaPlayerService&amp;#x5C06;&amp;#x4F1A;&amp;#x63A5;&amp;#x53D7;Native MediaPlayer &amp;#x5C42;&amp;#x7684;IPC&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x4E3A;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64CD;&amp;#x4F5C;media&amp;#x5185;&amp;#x5BB9;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x5B9E;&amp;#x4F8B;&amp;#x5316;&amp;#x4E00;&amp;#x4E2A;MediaPlayerService::Client&amp;#x5BF9;&amp;#x8C61;, Client&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;createPlayer &amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x5DE5;&amp;#x5382;&amp;#x7C7B;&amp;#x4E3A;&amp;#x67D0;&amp;#x4E2A;&amp;#x7279;&amp;#x5B9A;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#x672C;&amp;#x5730;media player&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x53D1;&amp;#x5411;native&amp;#x5C42;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x90FD;&amp;#x4F1A;&amp;#x4EA4;&amp;#x7ED9;&amp;#x521A;&amp;#x521A;&amp;#x63D0;&amp;#x5230;&amp;#x7684;native &amp;#x5C42;&amp;#x7684; media palyer&amp;#x6765;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;media player&amp;#x6307;&amp;#x7684;&amp;#x662F;StagefrightPlayer&amp;#x6216;&amp;#x8005;Nuplayerdriver.&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x4E0D;&amp;#x8BA8;&amp;#x8BBA;Nuplayerdriver&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/30/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;&amp;#x57FA;&amp;#x4E8E;Stagefright&amp;#x7684;MediaPlayer&amp;#x6846;&amp;#x67B6;/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;AwesomePlayer&amp;#x662F;&amp;#x5B9E;&amp;#x73B0;&amp;#x64AD;&amp;#x653E;&amp;#x7684;&amp;#x5E95;&amp;#x5C42;&amp;#x64CD;&amp;#x4F5C;&amp;#x8005;&amp;#xFF0C;&amp;#x5B83;&amp;#x5728;StagefrightPlayer&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x88AB;&amp;#x521B;&amp;#x5EFA;&amp;#xFF0C;&amp;#x5B83;&amp;#x8D1F;&amp;#x8D23;&amp;#x5C06;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x548C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x5BF9;&amp;#x5E94;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x8FD9;&amp;#x91CC;&amp;#x6D89;&amp;#x53CA;&amp;#x5230;&amp;#x4E86;MediaExtractor&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x4ECE;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x62BD;&amp;#x53D6;&amp;#x5230;&amp;#x6709;&amp;#x6548;&amp;#x7684;&amp;#x5934;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5728;&amp;#x51C6;&amp;#x5907;&amp;#x64AD;&amp;#x653E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;AwesomePlayer&amp;#x901A;&amp;#x8FC7;OMXCodec&amp;#x6765;&amp;#x6839;&amp;#x636E;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x521B;&amp;#x5EFA;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#xFF0C;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x662F;&amp;#x9A7B;&amp;#x7559;&amp;#x5728;OMX&amp;#x5B50;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E0A;&amp;#xFF08;OMX&amp;#x662F;OpenMAX&amp;#x5728;Android&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;)&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89E3;&amp;#x7801;&amp;#x5668;&amp;#x4E3B;&amp;#x8981;&amp;#x7528;&amp;#x4E8E;&amp;#x5904;&amp;#x7406;&amp;#x5185;&amp;#x5B58;&amp;#x7F13;&amp;#x51B2;&amp;#xFF0C;&amp;#x8F6C;&amp;#x5316;&amp;#x6210;&amp;#x539F;&amp;#x59CB;&amp;#x6570;&amp;#x636E;&amp;#x683C;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x4EE3;&amp;#x7801;&amp;#x4E3B;&amp;#x8981;&amp;#x5728;frameworks/av/media/libstagefright/omx &amp;#x4EE5;&amp;#x53CA;frameworks/av/media/libstagefright/codecs &amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;, Stagefright Media Player&amp;#x548C; OMX&amp;#x90E8;&amp;#x4EF6;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;IPC&amp;#x65B9;&amp;#x5F0F;&amp;#x4EA4;&amp;#x4E92;&amp;#x7684;.&lt;br&gt;AwesomePlayer&amp;#x6700;&amp;#x7EC8;&amp;#x4F1A;&amp;#x5904;&amp;#x7406;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x53D1;&amp;#x51FA;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#xFF0C;&amp;#x6682;&amp;#x505C;&amp;#xFF0C;&amp;#x505C;&amp;#x6B62;&amp;#x7B49;&amp;#x8BF7;&amp;#x6C42;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x8BF7;&amp;#x6C42;&amp;#x5F80;&amp;#x5F80;&amp;#x548C;&amp;#x5A92;&amp;#x4F53;&amp;#x7C7B;&amp;#x578B;&amp;#x6709;&amp;#x5173;&amp;#x8054;&amp;#x5BF9;&amp;#x4E8E;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;.AwesomePlayer &amp;#x5C06;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;AudioPlayer&amp;#x6765;&amp;#x5BF9;&amp;#x6587;&amp;#x4EF6;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x53EA;&amp;#x6709;&amp;#x97F3;&amp;#x9891;&amp;#x90E8;&amp;#x5206;&amp;#x9700;&amp;#x8981;&amp;#x64AD;&amp;#x653E;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;AwesomePlayer&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;AudioPlayer::start()&amp;#x8FDB;&amp;#x884C;&amp;#x64AD;&amp;#x653E;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x7528;&amp;#x6237;&amp;#x63D0;&amp;#x4EA4;&amp;#x4E86;&amp;#x5176;&amp;#x4ED6;&amp;#x65B0;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;AudioPlayer&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;MediaSource&amp;#x5BF9;&amp;#x8C61;&amp;#x6765;&amp;#x548C;&amp;#x5E95;&amp;#x5C42;&amp;#x7684;OMX&amp;#x5B50;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8FDB;&amp;#x884C;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&lt;br&gt;&amp;#x5BF9;&amp;#x4E8E;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;AwesomePlayer&amp;#x5C06;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;AwesomeRenderer&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x6E32;&amp;#x67D3;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaSource/OMXCodec &amp;#x5BF9;&amp;#x8C61;&amp;#x548C; OMX&amp;#x5B50;&amp;#x7CFB;&amp;#x7EDF;&amp;#x8FDB;&amp;#x884C;&amp;#x4EA4;&amp;#x4E92;&amp;#x3002;&amp;#x5E76;&amp;#x4E14;AwesomePlayer&amp;#x8D1F;&amp;#x8D23;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x540C;&amp;#x6B65;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;AwesomePlayer&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x65F6;&amp;#x95F4;&amp;#x961F;&amp;#x5217;&amp;#x673A;&amp;#x5236;TimedEventQueue.&amp;#x5F53;&amp;#x4E00;&amp;#x4E2A;&amp;#x5165;&amp;#x961F;&amp;#x7684;&amp;#x4E8B;&amp;#x4EF6;&amp;#x5230;&amp;#x671F;&amp;#x4E86;&amp;#xFF0C;TimedEventQueue&amp;#x5C06;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;AwesomePlayer&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x56DE;&amp;#x8C03;&amp;#x65B9;&amp;#x6CD5;&amp;#x4ECE;&amp;#x800C;&amp;#x4FDD;&amp;#x8BC1;&amp;#x97F3;&amp;#x9891;&amp;#x548C;&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x540C;&amp;#x6B65;. &amp;#x8FD9;&amp;#x4E9B;&amp;#x662F;&amp;#x5728; AwesomePlayer::onVideoEvent()&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;, &amp;#x5728;&amp;#x5904;&amp;#x7406;&amp;#x5B8C;&amp;#x5F53;&amp;#x524D;&amp;#x5E27;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;AwesomePlayer::postVideoEvent_l()&amp;#x6765;&amp;#x5B89;&amp;#x6392;&amp;#x4E0B;&amp;#x4E00;&amp;#x6B21;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x3002;&amp;#x6574;&amp;#x4E2A;&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x5927;&amp;#x4F53;&amp;#x529F;&amp;#x80FD;&amp;#x5C31;&amp;#x662F;&amp;#x8FD9;&amp;#x6837;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5230;&amp;#x4E86;&amp;#x7EC6;&amp;#x8282;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x590D;&amp;#x6742;&amp;#x4E86;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x4E0D;&amp;#x6015;&amp;#xFF0C;&amp;#x4E00;&amp;#x70B9;&amp;#x70B9;&amp;#x5206;&amp;#x6790;&amp;#x5C31;&amp;#x4F1A;&amp;#x770B;&amp;#x5230;&amp;#x6574;&amp;#x4E2A;&amp;#x6846;&amp;#x67B6;&amp;#x7684;&amp;#x5168;&amp;#x8C8C;&amp;#x4E86;&amp;#x3002;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x6709;&amp;#x8010;&amp;#x5FC3;&amp;#x548C;&amp;#x7EC6;&amp;#x5FC3;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x591A;&amp;#x603B;&amp;#x7ED3;&amp;#x3002;&amp;#x597D;&amp;#x4E86;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x5148;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7EC6;&amp;#x8282;&amp;#x90E8;&amp;#x5206;&amp;#x653E;&amp;#x5728;&amp;#x4E0B;&amp;#x4E00;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Android&amp;#x4E0A;&amp;#x7684;MediaPlayer&amp;#x64AD;&amp;#x653E;&amp;#x5E95;&amp;#x5C42;&amp;#x6846;&amp;#x67B6;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ECF;&amp;#x5386;&amp;#x4E86;&amp;#x591A;&amp;#x6B21
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之MediaPlayer 一 状态机介绍</title>
    <link href="http://yoursite.com/2016/07/30/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BMediaPlayer-%E4%B8%80-%E7%8A%B6%E6%80%81%E6%9C%BA%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2016/07/30/Android-源码分析之MediaPlayer-一-状态机介绍/</id>
    <published>2016-07-30T08:45:31.000Z</published>
    <updated>2016-08-05T15:30:23.278Z</updated>
    
    <content type="html">&lt;h4 id=&quot;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&lt;/h4&gt;&lt;p&gt;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x53EF;&amp;#x4EE5;&amp;#x9009;&amp;#x62E9;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5C06;&amp;#x8D44;&amp;#x6E90;&amp;#x5B58;&amp;#x653E;&amp;#x5728;raw&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x5728;&amp;#x7EBF;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;Uri&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x672C;&amp;#x5730;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;Uri&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;Content Provider &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x7528;&amp;#x6CD5;&amp;#x603B;&amp;#x7ED3;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/30/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;MediaPlayer-&amp;#x4E00;-&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x4ECB;&amp;#x7ECD;/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;MediaPlayer&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;a href=&quot;#MediaPlayer&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x673A;&amp;#x5236;&quot; class=&quot;headerlink&quot; title=&quot;MediaPlayer&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x673A;&amp;#x5236;&quot;&gt;&lt;/a&gt;MediaPlayer&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x673A;&amp;#x5236;&lt;/h4&gt;&lt;p&gt;MediaPlayer&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x4E0D;&amp;#x662F;&amp;#x53EF;&amp;#x4EE5;&amp;#x4EFB;&amp;#x610F;&amp;#x5207;&amp;#x6362;&amp;#x7684;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x5207;&amp;#x6362;&amp;#x53D7;&amp;#x5230;&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x5668;&amp;#x7684;&amp;#x7EA6;&amp;#x675F;&amp;#xFF1A;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;MediaPlayer&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x7684;&amp;#x5207;&amp;#x6362;&amp;#x56FE;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FDD;&amp;#x80CC;&amp;#x4E86;&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x5207;&amp;#x6362;&amp;#x89C4;&amp;#x5219;&amp;#x5219;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x5F02;&amp;#x5E38;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5C06;&amp;#x4F1A;&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/30/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;MediaPlayer-&amp;#x4E00;-&amp;#x72B6;&amp;#x6001;&amp;#x673A;&amp;#x4ECB;&amp;#x7ECD;/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x56FE;&amp;#x4E2D;&amp;#x6BCF;&amp;#x4E2A;&amp;#x692D;&amp;#x5706;&amp;#x4EE3;&amp;#x8868;&amp;#x4E00;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#x70B9;&amp;#xFF0C;&amp;#x5171;&amp;#x6709;Idle&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;End&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Error&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Initialized &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Prepared &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Started&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Paused &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;Stop &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#x4E5D;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Idle&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;MediaPlayer&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x8FDB;&amp;#x5165;Idle&amp;#x72B6;&amp;#x6001;:&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x4F7F;&amp;#x7528;new&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x8C03;&amp;#x7528; reset()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4E24;&amp;#x79CD;&amp;#x6709;&amp;#x7EC6;&amp;#x5FAE;&amp;#x7684;&amp;#x5DEE;&amp;#x522B;&amp;#xFF1A;&amp;#x5728;&amp;#x4E0A;&amp;#x8FF0;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x5230;&amp;#x8FBE;Idle&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x7ACB;&amp;#x5373;&amp;#x8C03;&amp;#x7528;getCurrentPosition(), getDuration(),setLooping(boolean), setVolume(float, float), pause(), start(), stop(), seekTo(int), prepare() or prepareAsync()&amp;#x8FD9;&amp;#x4E9B;&amp;#x65B9;&amp;#x6CD5;&amp;#x5219;&amp;#x4F1A;&amp;#x4EA7;&amp;#x751F;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x524D;&amp;#x8005;&amp;#x4E0D;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;OnErrorListener.onError()&amp;#xFF0C;&amp;#x540E;&amp;#x8005;&amp;#x5219;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;OnErrorListener.onError()&amp;#x3002;&amp;#x8FD8;&amp;#x6709;&amp;#x4E2A;&amp;#x5F88;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x662F;&amp;#xFF1A;&amp;#x5F53;&amp;#x4F7F;&amp;#x7528;new&amp;#x65B9;&amp;#x5F0F;&amp;#x521B;&amp;#x5EFA;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x5904;&amp;#x4E8E;Idle&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;create&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x662F;&amp;#x5904;&amp;#x4E8E;Prepared&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x56E0;&amp;#x6B64;&amp;#x4F7F;&amp;#x7528;&amp;#x4F7F;&amp;#x7528;create&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x5B9E;&amp;#x4F8B;&amp;#x540E;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8C03;&amp;#x7528;prepare()&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;End&amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5F53;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x8C03;&amp;#x7528;release()&amp;#x65B9;&amp;#x6CD5;&amp;#x540E;&amp;#x5C31;&amp;#x5904;&amp;#x4E8E;End&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x4E00;&amp;#x65E6;&amp;#x5904;&amp;#x4E8E;End&amp;#x72B6;&amp;#x6001;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x5C06;&amp;#x4E0D;&amp;#x80FD;&amp;#x518D;&amp;#x88AB;&amp;#x4F7F;&amp;#x7528;&amp;#x5E76;&amp;#x4E14;&amp;#x4E0D;&amp;#x80FD;&amp;#x518D;&amp;#x56DE;&amp;#x5230;&amp;#x5176;&amp;#x4ED6;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Error&amp;#x72B6;&amp;#x6001;:&amp;#x5F53;&amp;#x51FA;&amp;#x73B0;&amp;#x4E0D;&amp;#x652F;&amp;#x6301;&amp;#x64AD;&amp;#x653E;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#xFF0C;&amp;#x64AD;&amp;#x653E;&amp;#x6D41;&amp;#x8D85;&amp;#x65F6;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5728;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x5904;&amp;#x4E8E;&amp;#x9519;&amp;#x8BEF;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;prepare(), prepareAsync()&amp;#x6216;&amp;#x8005;setDataSource&amp;#x65B9;&amp;#x6CD5;&amp;#x65F6;&amp;#x4F1A;&amp;#x89E6;&amp;#x53D1;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FDB;&amp;#x5165;Error&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x901A;&amp;#x8FC7;setOnErrorListener(android.media.MediaPlayer.OnErrorListener).&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E86;&amp;#x9519;&amp;#x8BEF;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&amp;#x5219;&amp;#x5728;&amp;#x53D1;&amp;#x751F;&amp;#x4E0A;&amp;#x8FF0;&amp;#x9519;&amp;#x8BEF;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;OnErrorListener.onError()&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x548C;End&amp;#x72B6;&amp;#x6001;&amp;#x4E0D;&amp;#x540C;&amp;#xFF0C;&amp;#x5904;&amp;#x4E8E;Error&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x5B9E;&amp;#x4F8B;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;reset()&amp;#x56DE;&amp;#x5230;&amp;#x7A7A;&amp;#x95F2;&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Initialized &amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5728;Idle&amp;#x72B6;&amp;#x6001;&amp;#x8C03;&amp;#x7528;setDataSource&amp;#x5C06;&amp;#x4F1A;&amp;#x5230;&amp;#x8FBE;Initialized&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepared &amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5728;&amp;#x8C03;&amp;#x7528;start()&amp;#x65B9;&amp;#x6CD5;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x5165;Prepared &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x4E24;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x5230;&amp;#x8FBE;&amp;#x8FD9;&amp;#x79CD;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x8C03;&amp;#x7528;prepare()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x662F;&amp;#x540C;&amp;#x6B65;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x5728;&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x8FDB;&amp;#x5165;Prepared &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x79CD;&amp;#x662F;&amp;#x8C03;&amp;#x7528;prepareAsync()&amp;#x4F7F;&amp;#x7528;&amp;#x5F02;&amp;#x6B65;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x662F;&amp;#x5148;&amp;#x8BA9;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x8FDB;&amp;#x5165;Prepared&amp;#x72B6;&amp;#x6001;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x673A;&amp;#x5236;&amp;#x7EE7;&amp;#x7EED;&amp;#x5B8C;&amp;#x6210;&amp;#x51C6;&amp;#x5907;&amp;#x5DE5;&amp;#x4F5C;&amp;#x76F4;&amp;#x5230;&amp;#x5B8C;&amp;#x6210;&amp;#x3002;&amp;#x4E0D;&amp;#x8BBA;&amp;#x54EA;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x53EA;&amp;#x8981;&amp;#x8C03;&amp;#x7528;setOnPreparedListener&amp;#x65B9;&amp;#x6CD5;.&amp;#x5728;&amp;#x5B8C;&amp;#x6210;&amp;#x540E;&amp;#x90FD;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;onPrepared()&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Started&amp;#x72B6;&amp;#x6001;:&amp;#x5728;&amp;#x6210;&amp;#x529F;&amp;#x8C03;&amp;#x7528;start()&amp;#x65B9;&amp;#x6CD5;&amp;#x540E;MediaPlayer&amp;#x5BF9;&amp;#x8C61;&amp;#x5C06;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;&amp;#x8FD9;&amp;#x4E2A;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x518D;&amp;#x8C03;&amp;#x7528;start()&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4E0D;&amp;#x4F1A;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x5F71;&amp;#x54CD;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;isPlaying()&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x67E5;&amp;#x770B;&amp;#x662F;&amp;#x5426;&amp;#x5904;&amp;#x4E8E;Started&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;setOnBufferingUpdateListener(OnBufferingUpdateListener)&amp;#x6CE8;&amp;#x518C;&amp;#x5BF9;&amp;#x7F13;&amp;#x5B58;&amp;#x533A;&amp;#x60C5;&amp;#x51B5;&amp;#x7684;&amp;#x76D1;&amp;#x542C;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Paused &amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5728;Started&amp;#x72B6;&amp;#x6001;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;pause()&amp;#x65B9;&amp;#x6CD5;&amp;#x8BA9;&amp;#x5176;&amp;#x8FDB;&amp;#x5165;Paused &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x5728;&amp;#x505C;&amp;#x6B62;&amp;#x72B6;&amp;#x6001;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;start()&amp;#x65B9;&amp;#x6CD5;&amp;#x56DE;&amp;#x5230;Started&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;stop()&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x5165;Stop&amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#x4ECE;Started&amp;#x72B6;&amp;#x6001;&amp;#x72B6;&amp;#x6001;&amp;#x5230;Paused &amp;#x72B6;&amp;#x6001;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x5F02;&amp;#x6B65;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5F53;pause()&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x5C0F;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;&amp;#x624D;&amp;#x80FD;&amp;#x5C06;&amp;#x72B6;&amp;#x6001;&amp;#x66F4;&amp;#x65B0;&amp;#x5230;isPlaying()&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stop &amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5F53;MediaPlayer&amp;#x5B9E;&amp;#x4F8B;&amp;#x5904;&amp;#x4E8E;Started, Paused, Prepared &amp;#x6216;&amp;#x8005;PlaybackCompleted&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;stop&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;Stop &amp;#x72B6;&amp;#x6001;&amp;#x3002;&amp;#x5728;&amp;#x8FDB;&amp;#x5165;stop&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x4E0D;&amp;#x80FD;&amp;#x76F4;&amp;#x63A5;start&amp;#xFF0C;&amp;#x800C;&amp;#x5FC5;&amp;#x987B;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;prepare() &amp;#x6216;&amp;#x8005;prepareAsync()&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x5165;Prepared &amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x53EF;&amp;#x4EE5;&amp;#x518D;&amp;#x6B21;&amp;#x8FDB;&amp;#x5165;start&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#xFF1A;&amp;#x5F53;&amp;#x64AD;&amp;#x653E;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x679C;&amp;#x5FAA;&amp;#x73AF;&amp;#x6A21;&amp;#x5F0F;&amp;#x8BBE;&amp;#x4E3A;false&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5728;&amp;#x64AD;&amp;#x653E;&amp;#x7ED3;&amp;#x675F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD9;&amp;#x4E4B;&amp;#x524D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8C03;&amp;#x7528;setOnCompletionListener(OnCompletionListener)&amp;#x6CE8;&amp;#x518C;&amp;#x76D1;&amp;#x542C;&amp;#x5668;&amp;#x7684;&amp;#x8BDD;&amp;#xFF0C;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;OnCompletion.onCompletion()&amp;#x56DE;&amp;#x8C03;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;start()&amp;#x65B9;&amp;#x6CD5;&amp;#x91CD;&amp;#x65B0;&amp;#x5F00;&amp;#x59CB;&amp;#x64AD;&amp;#x653E;&amp;#x6B4C;&amp;#x66F2;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5FAA;&amp;#x73AF;&amp;#x6A21;&amp;#x5F0F;&amp;#x8BBE;&amp;#x4E3A;true&amp;#x5219;&amp;#x64AD;&amp;#x653E;&amp;#x5B8C;&amp;#x6210;&amp;#x5C06;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#x800C;&amp;#x662F;&amp;#x7EE7;&amp;#x7EED;&amp;#x7559;&amp;#x5728;Started&amp;#x72B6;&amp;#x6001;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x8C03;&amp;#x6574;&amp;#x6B4C;&amp;#x66F2;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x8FDB;&amp;#x5EA6;,&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;seekTo(int)&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x8C03;&amp;#x6574;&amp;#x6B4C;&amp;#x66F2;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x8FDB;&amp;#x5EA6;&amp;#xFF0C;seekTo(int)&amp;#x65B9;&amp;#x6CD5;&amp;#x4F1A;&amp;#x7ACB;&amp;#x523B;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5B9E;&amp;#x9645;&amp;#x7684;seek&amp;#x64CD;&amp;#x4F5C;&amp;#x4F1A;&amp;#x7B49;&amp;#x5F85;&amp;#x4E00;&amp;#x4F1A;&amp;#x513F;&amp;#x624D;&amp;#x4F1A;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;setOnSeekCompleteListener(OnSeekCompleteListener).&amp;#x5728;seek&amp;#x64CD;&amp;#x4F5C;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;OnSeekComplete.onSeekComplete()&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;Start&amp;#xFF0C;Prepared, Paused &amp;#x548C; PlaybackCompleted &amp;#x72B6;&amp;#x6001;&amp;#x8C03;&amp;#x7528;seekTo(int)&amp;#x65B9;&amp;#x6CD5;&amp;#x8C03;&amp;#x6574;&amp;#x6B4C;&amp;#x66F2;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x8FDB;&amp;#x5EA6;&amp;#x3002;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;MediaPlayer&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x4F7F;&amp;#x7528;Media
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之MediaScanner[2]</title>
    <link href="http://yoursite.com/2016/07/29/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BMediaScanner-2/"/>
    <id>http://yoursite.com/2016/07/29/Android-源码分析之MediaScanner-2/</id>
    <published>2016-07-29T02:40:48.000Z</published>
    <updated>2016-08-05T15:38:00.754Z</updated>
    
    <content type="html">&lt;h4 id=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot;&gt;&lt;a href=&quot;#&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot;&gt;&lt;/a&gt;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&lt;/h4&gt;&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x5206;&amp;#x6790;&amp;#x7684;&amp;#x662F;&amp;#x975E;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x56FE;&amp;#x50CF;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5728;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x7AE0;&amp;#x8282;&amp;#x5C06;&amp;#x4ECB;&amp;#x7ECD;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x4EE5;MP3&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5206;&amp;#x6790;&amp;#x5BF9;&amp;#x8C61;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;&amp;#x5BF9;&amp;#x4E8E;MP3&amp;#x683C;&amp;#x5F0F;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x7F51;&amp;#x4E0A;&amp;#x627E;&amp;#x4E0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x5C55;&amp;#x5F00;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;TAG&amp;#x89E3;&amp;#x6790;&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;a href=&quot;#&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;TAG&amp;#x89E3;&amp;#x6790;&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;TAG&amp;#x89E3;&amp;#x6790;&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&quot;&gt;&lt;/a&gt;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;TAG&amp;#x89E3;&amp;#x6790;&amp;#x6D41;&amp;#x7A0B;&amp;#x5206;&amp;#x6790;&lt;/h5&gt;&lt;p&gt;&amp;#x5728;doScanFile&amp;#x4E2D;&amp;#x4F1A;&amp;#x6267;&amp;#x884C;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5224;&amp;#x65AD;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x6587;&amp;#x4EF6;&amp;#x4E3A;&amp;#x97F3;&amp;#x9891;&amp;#x6216;&amp;#x8005;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x8C03;&amp;#x7528;processFile&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Uri doScanFile(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; mimeType, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified,&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isDirectory, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; scanAlways, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        FileEntry entry = beginFile(path, mimeType, lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fileSize, isDirectory, noMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (entry.mLastModifiedChanged || scanAlways)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x6216;&amp;#x8005;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x8C03;&amp;#x7528;processFile&amp;#x62BD;&amp;#x53D6;&amp;#x5143;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// we only extract metadata for audio and video files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isaudio || isvideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    processFile(path, mimeType, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//.........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                result = endFile(entry, ringtones, notifications, alarms, music, podcasts);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//...................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;doScanFile&amp;#x8C03;&amp;#x7528;&amp;#x7684;processFile&amp;#x662F;native&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&lt;br&gt;&amp;#x56E0;&amp;#x6B64;&amp;#x9996;&amp;#x5148;&amp;#x8C03;&amp;#x7528;android_media_Mediascanner.cpp.&amp;#x4E2D;&amp;#x7684;android_media_MediaScanner_processFile&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;StageFrightMediaScanner&amp;#x7684;processFile&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaScanner_processFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        JNIEnv *env, jobject thiz, jstring path,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jstring mimeType, jobject client)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaScanner *mp = getNativeScanner_l(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;MimeType&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mimeTypeStr = (mimeType ? env-&amp;gt;GetStringUTFChars(mimeType, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) : &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//...........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;MyMediaScannerClient &lt;span class=&quot;title&quot;&gt;myClient&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(env, client)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;StageFrightMediaScanner&amp;#x7684;processFile&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaScanResult result = mp-&amp;gt;processFile(pathStr, mimeTypeStr, myClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;getNativeScanner_l&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; MediaScanner *&lt;span class=&quot;title&quot;&gt;getNativeScanner_l&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv* env, jobject thiz)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (MediaScanner *) env-&amp;gt;GetLongField(thiz, fields.context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5B83;&amp;#x662F;&amp;#x5C06;fields.context&amp;#x8F6C;&amp;#x6362;&amp;#x4E3A;MediaScanner&amp;#xFF0C;fields.context&amp;#x8FD9;&amp;#x4E2A;&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x6765;&amp;#x7684;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x5427;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaScanner_native_setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env, jobject thiz)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;native_setup&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaScanner *mp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StagefrightMediaScanner;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..............&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;SetLongField(thiz, fields.context, (jlong)mp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;getNativeScanner_l&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;StagefrightMediaScanner&lt;br&gt;&amp;#x800C;&amp;#x5728;StagefrightMediaScanner&amp;#x7684;processFile&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5219;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;MediaScannerClient&amp;#x7C7B;&amp;#x4E2D;&amp;#x7684;beginFile&amp;#x4EE5;&amp;#x53CA;endFile&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD8;&amp;#x6709;StagefrightMediaScanner &amp;#x7684;processFileInternal&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;StagefrightMediaScanner&lt;/span&gt;::processFile(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;char&lt;/span&gt; *path, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;char&lt;/span&gt; *mimeType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;MediaScannerClient&lt;/span&gt; &amp;amp;client) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;ALOGV&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;processFile &amp;apos;%s&amp;apos;.&amp;quot;&lt;/span&gt;, path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.setLocale(locale());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //client = &lt;span class=&quot;type&quot;&gt;MyMediaScannerClient&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.beginFile();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = processFileInternal(path, mimeType, client);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.endFile();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;MyMediaScannerClient::beginFile&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; FileEntry beginFile(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; mimeType, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isDirectory, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMimeType = mimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileType = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileSize = fileSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsDrm = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isDirectory) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!noMedia &amp;amp;&amp;amp; isNoMediaFile(path)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            noMedia = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoMedia = noMedia;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// try mimeType first, if it is specified&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mimeType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFileType = MediaFile.getFileTypeForMimeType(mimeType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// if mimeType was not specified, compute file type based on file extension.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFileType == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaFile.MediaFileType mediaFileType = MediaFile.getFileType(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mediaFileType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFileType = mediaFileType.fileType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMimeType == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mMimeType = mediaFileType.mimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDrmEnabled() &amp;amp;&amp;amp; MediaFile.isDrmFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFileType = getFileTypeFromDrm(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileEntry entry = makeEntryFor(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// add some slack to avoid a rounding error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; delta = (entry != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) ? (lastModified - entry.mLastModified) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; wasModified = delta &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; || delta &amp;lt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || wasModified) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasModified) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry.mLastModified = lastModified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileEntry(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, path, lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (isDirectory ? MtpConstants.FORMAT_ASSOCIATION : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry.mLastModifiedChanged = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mProcessPlaylists &amp;amp;&amp;amp; MediaFile.isPlayListFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayLists.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(entry);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t process playlists in the main scan, so return null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// clear all the metadata&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mArtist = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAlbumArtist = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAlbum = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTitle = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComposer = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGenre = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTrack = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mYear = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDuration = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPath = path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLastModified = lastModified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWriter = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCompilation = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;processFileInternal&amp;#x65B9;&amp;#x6CD5;&amp;#x5F00;&amp;#x59CB;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x5185;&amp;#x90E8;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x4E86;&amp;#xFF0C;&amp;#x5728;processFileInternal&amp;#x4E2D;&amp;#x5BF9;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x5206;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x6269;&amp;#x5C55;&amp;#x540D;&amp;#xFF0C;&amp;#x770B;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x5E73;&amp;#x53F0;&amp;#x6240;&amp;#x652F;&amp;#x6301;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E3A;&amp;#x7A7A;&amp;#x6216;&amp;#x8005;&amp;#x4E0D;&amp;#x652F;&amp;#x6301;&amp;#x5C31;&amp;#x8FD4;&amp;#x56DE;MEDIA_SCAN_RESULT_SKIPPED&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x6839;&amp;#x636E;&amp;#x6587;&amp;#x4EF6;&amp;#x6269;&amp;#x5C55;&amp;#x540D;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x662F;DRM&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x7684;&amp;#x8BDD;&amp;#x5219;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;DRM&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;DRM&amp;#x4FE1;&amp;#x606F;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;drmManagerClient-&amp;gt;getMetadata(&amp;amp;tmp)&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;&amp;#xFF0C;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x5C01;&amp;#x88C5;&amp;#x5728;DrmMetadata&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x3002;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x5C06;&amp;#x653E;&amp;#x5728;&amp;#x4ECA;&amp;#x540E;&amp;#x7684;DRM&amp;#x90E8;&amp;#x5206;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x7684;TAG&amp;#x4FE1;&amp;#x606F;&amp;#xFF1A;&lt;br&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x5982;&amp;#x4E0B;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;StagefrightMetadataRetriever ::setDataSource&lt;br&gt;StagefrightMetadataRetriever ::extractMetadata&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x6BD4;&amp;#x8F83;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x5BF9;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x8BE6;&amp;#x7EC6;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MediaScanResult StagefrightMediaScanner::processFileInternal(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *path, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * &lt;span class=&quot;comment&quot;&gt;/* mimeType */&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaScannerClient &amp;amp;client) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x6709;&amp;#x6269;&amp;#x5C55;&amp;#x540D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *extension = &lt;span class=&quot;built_in&quot;&gt;strrchr&lt;/span&gt;(path, &lt;span class=&quot;string&quot;&gt;&amp;apos;.&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!extension) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_SKIPPED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x6269;&amp;#x5C55;&amp;#x540D;&amp;#x5341;&amp;#x5206;&amp;#x652F;&amp;#x6301;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!FileHasAcceptableExtension(extension)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_SKIPPED;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;&amp;#x5A92;&amp;#x4F53;&amp;#x62BD;&amp;#x53D6;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MediaMetadataRetriever&amp;gt; mRetriever(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaMetadataRetriever);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6253;&amp;#x5F00;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd = open(path, O_RDONLY | O_LARGEFILE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fd &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// couldn&amp;apos;t open it locally, maybe the media server can?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6253;&amp;#x4E0D;&amp;#x5F00;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x7F51;&amp;#x7EDC;&amp;#x4E0A;&amp;#x83B7;&amp;#x53D6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = mRetriever-&amp;gt;setDataSource(&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/* httpService */&lt;/span&gt;, path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = mRetriever-&amp;gt;setDataSource(fd, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0x7ffffffffffffff&lt;/span&gt;L);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        close(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x62BD;&amp;#x53D6;&amp;#x5A92;&amp;#x4F53;&amp;#x5934;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((value = mRetriever-&amp;gt;extractMetadata(METADATA_KEY_MIMETYPE)) != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        status = client.setMimeType(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; KeyMap {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *tag;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; KeyMap kKeyMap[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;tracknumber&amp;quot;&lt;/span&gt;, METADATA_KEY_CD_TRACK_NUMBER },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;discnumber&amp;quot;&lt;/span&gt;, METADATA_KEY_DISC_NUMBER },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;album&amp;quot;&lt;/span&gt;, METADATA_KEY_ALBUM },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;artist&amp;quot;&lt;/span&gt;, METADATA_KEY_ARTIST },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;albumartist&amp;quot;&lt;/span&gt;, METADATA_KEY_ALBUMARTIST },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;, METADATA_KEY_COMPOSER },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;genre&amp;quot;&lt;/span&gt;, METADATA_KEY_GENRE },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;, METADATA_KEY_TITLE },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;year&amp;quot;&lt;/span&gt;, METADATA_KEY_YEAR },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;duration&amp;quot;&lt;/span&gt;, METADATA_KEY_DURATION },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;writer&amp;quot;&lt;/span&gt;, METADATA_KEY_WRITER },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;compilation&amp;quot;&lt;/span&gt;, METADATA_KEY_COMPILATION },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;isdrm&amp;quot;&lt;/span&gt;, METADATA_KEY_IS_DRM },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;, METADATA_KEY_VIDEO_WIDTH },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { &lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;, METADATA_KEY_VIDEO_HEIGHT },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumEntries = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kKeyMap) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kKeyMap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6309;&amp;#x7167;kKeyMap&amp;#x8868;&amp;#x683C;&amp;#x7684;&amp;#x987A;&amp;#x5E8F;&amp;#x4ECE;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;TAG&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;client&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumEntries; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((value = mRetriever-&amp;gt;extractMetadata(kKeyMap[i].key)) != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            status = client.addStringTag(kKeyMap[i].tag, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x80FD;&amp;#x591F;&amp;#x652F;&amp;#x6301;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x683C;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;FileHasAcceptableExtension&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *extension)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *kValidExtensions[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;.mp3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mp4&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.m4a&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.3gp&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.3gpp&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.3g2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.3gpp2&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;.mpeg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.ogg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mid&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.smf&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.imy&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.wma&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.aac&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;.wav&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.amr&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.midi&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.xmf&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.rtttl&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.rtx&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.ota&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;.mkv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mka&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.webm&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.ts&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.fl&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.flac&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mxmf&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&amp;quot;.avi&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mpeg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mpg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.awb&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;.mpga&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumValidExtensions =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kValidExtensions) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kValidExtensions[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumValidExtensions; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(extension, kValidExtensions[i])) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;setDataSource&amp;#xFF0C;&amp;#x5B83;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;FileSource&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setDataSource&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileDescriptor fd, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; length)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IllegalArgumentException&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;setDataSource&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;FileSource&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x4F20;&amp;#x9012;&amp;#x5230;MediaExtractor::Create&amp;#x4E2D;&amp;#x6839;&amp;#x636E;FileSource&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5408;&amp;#x9002;&amp;#x7684;MediaExtractor&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; StagefrightMetadataRetriever::setDataSource(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fd, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; offset, &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fd = dup(fd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;setDataSource(%d, %&amp;quot;&lt;/span&gt; PRId64 &lt;span class=&quot;string&quot;&gt;&amp;quot;, %&amp;quot;&lt;/span&gt; PRId64 &lt;span class=&quot;string&quot;&gt;&amp;quot;)&amp;quot;&lt;/span&gt;, fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    clearMetadata();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSource = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileSource(fd, offset, length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x68C0;&amp;#x67E5;&amp;#x662F;&amp;#x5426;&amp;#x6253;&amp;#x5F00;&amp;#x6587;&amp;#x4EF6;&amp;#x6210;&amp;#x529F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((err = mSource-&amp;gt;initCheck()) != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; err;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;FileSource&amp;#x4F20;&amp;#x5165;&amp;#x540E;&amp;#x6839;&amp;#x636E;FileSource&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x5408;&amp;#x9002;&amp;#x7684;MediaExtractor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExtractor = MediaExtractor::Create(mSource);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mExtractor == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSource.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; UNKNOWN_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x521B;&amp;#x5EFA;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;MediaExtractor&amp;#x7684;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x5148;&amp;#x8C03;&amp;#x7528;DataSource&amp;#x7684;sniff&amp;#xFF0C;&amp;#x5728;DataSource&amp;#x7684;sniff&amp;#x4E2D;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;Sniffers&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x63A2;&amp;#x6D4B;&amp;#xFF0C;&amp;#x6765;&amp;#x9009;&amp;#x51FA;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x3002;&amp;#x4EE5;mimetype&amp;#x5F62;&amp;#x5F0F;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&amp;#x6839;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;mimetype&amp;#x521B;&amp;#x5EFA;MediaExtractor&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// static&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MediaExtractor&amp;gt; MediaExtractor::Create(const sp&amp;lt;DataSource&amp;gt; &amp;amp;&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *mime) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;AMessage&amp;gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; confidence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;DataSource&amp;#x7684;sniff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;-&amp;gt;sniff(&amp;amp;tmp, &amp;amp;confidence, &amp;amp;meta)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;FAILED to autodetect media content.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mime = tmp.string();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;Autodetected media content as &amp;apos;%s&amp;apos; with confidence %.2f&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             mime, confidence);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bool isDrm = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// DRM MIME type syntax is &amp;quot;drm+type+original&amp;quot; where&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// type is &amp;quot;es_based&amp;quot; or &amp;quot;container_based&amp;quot; and&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// original is the content&amp;apos;s cleartext MIME type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *originalMime = strchr(mime+&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;apos;+&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (originalMime == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// second + not found&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+es_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// DRMExtractor sets container metadata kKeyIsDRM to 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; DRMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, originalMime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;drm+container_based+&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mime = originalMime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isDrm = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaExtractor *ret = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG4)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/mp4&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG4Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MPEG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MP3Extractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_NB)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || !strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AMR_WB)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMRExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_FLAC)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FLACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WAV)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WAVExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_OGG)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; OggExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MATROSKA)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MatroskaExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2TS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2TSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_WVM)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Return now.  WVExtractor should not have the DrmFlag set in the block below.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WVMExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_AAC_ADTS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AACExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;, meta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_CONTAINER_MPEG2PS)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MPEG2PSExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDIA_MIMETYPE_AUDIO_MIDI)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ret = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MidiExtractor(&lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ret != &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDrm) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           ret-&amp;gt;setDrmFlag(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ret;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;sniff&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; DataSource::sniff(String8 *mimeType, &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; *confidence, sp&amp;lt;AMessage&amp;gt; *meta) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *mimeType = &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *confidence = &lt;span class=&quot;number&quot;&gt;0.0f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Mutex::&lt;span class=&quot;function&quot;&gt;Autolock &lt;span class=&quot;title&quot;&gt;autoLock&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(gSnifferMutex)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!gSniffersRegistered) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (List&amp;lt;SnifferFunc&amp;gt;::iterator it = gSniffers.begin();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         it != gSniffers.end(); ++it) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String8 newMimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; newConfidence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;AMessage&amp;gt; newMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;&amp;#x5404;&amp;#x79CD;&amp;#x55C5;&amp;#x63A2;&amp;#x5668;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x83B7;&amp;#x53D6;&amp;#x7C7B;&amp;#x578B;&amp;#x548C;&amp;#x53EF;&amp;#x4FE1;&amp;#x5EA6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((*it)(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &amp;amp;newMimeType, &amp;amp;newConfidence, &amp;amp;newMeta)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newConfidence &amp;gt; *confidence) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                *mimeType = newMimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                *confidence = newConfidence;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                *meta = newMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; *confidence &amp;gt; &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E9B;sniff&amp;#x662F;&amp;#x5728;StagefrightMetadataRetriever&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;StagefrightMetadataRetriever::StagefrightMetadataRetriever()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mParsedMetaData(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mAlbumArt(NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6CE8;&amp;#x518C;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x683C;&amp;#x5F0F;&amp;#x55C5;&amp;#x63A2;&amp;#x5668;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    DataSource::RegisterDefaultSniffers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CHECK_EQ(mClient.connect(), (status_t)OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;sniff&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//static&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void DataSour&lt;span class=&quot;number&quot;&gt;ce::&lt;/span&gt;RegisterDefaultSniffers() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Mutex&lt;span class=&quot;number&quot;&gt;::A&lt;/span&gt;utolock autoLock(gSnifferMutex)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (gSniffersRegistered) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG4)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMatroska)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffOgg)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWAV)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffFLAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAMR)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2TS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMP3)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffAAC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMPEG2PS)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffWVM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RegisterSniffer_l(SniffMidi)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char value[PROPERTY_VALUE_MAX]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (property_get(&amp;quot;drm.service.enabled&amp;quot;, value, NULL)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; (!strcmp(value, &amp;quot;1&amp;quot;) || !strcasecmp(value, &amp;quot;true&amp;quot;))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RegisterSniffer_l(SniffDRM)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gSniffersRegistered = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;sniff&amp;#x53C8;&amp;#x662F;&amp;#x600E;&amp;#x6837;&amp;#x5B8C;&amp;#x6210;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x5224;&amp;#x65AD;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;RegisterDefaultSniffers&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;MP3&amp;#x4E3A;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;sniff&amp;#x4E3A;SniffMP3&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x53EA;&amp;#x5173;&amp;#x6CE8;MP3&amp;#x7684;sniff&amp;#x2013;SniffMP3&amp;#x3002;SniffMP3&amp;#x9996;&amp;#x5148;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;Resync&amp;#x65B9;&amp;#x6CD5;&amp;#x5BF9;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x5E27;&amp;#x7684;&amp;#x5E27;&amp;#x5934;&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x65B0;&amp;#x91CD;&amp;#x5B9A;&amp;#x4F4D;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x5728;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x5E27;&amp;#x5185;&amp;#x5BF9;&amp;#x5E27;&amp;#x5934;&amp;#x8FDB;&amp;#x884C;&amp;#x641C;&amp;#x7D22;&amp;#xFF1A;&amp;#x6BCF;&amp;#x6B21;&amp;#x8BFB;&amp;#x5165;1024&amp;#x5B57;&amp;#x8282;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x5230;&amp;#x5F85;&amp;#x68C0;&amp;#x6D4B;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#xFF0C;&amp;#x518D;&amp;#x4ECE;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x4E2D;&amp;#x6BCF;&amp;#x6B21;&amp;#x8BFB;&amp;#x53D6;4&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;32&amp;#x4F4D;&amp;#x8FDB;&amp;#x884C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x627E;&amp;#x5230;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x8BDD;&amp;#x8FD8;&amp;#x4F1A;&amp;#x8BFB;&amp;#x5165;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x8FDE;&amp;#x7EED;3&amp;#x4E2A;&amp;#x5E27;&amp;#x7684;&amp;#x5E27;&amp;#x5934;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x68C0;&amp;#x6D4B;&amp;#x3002;&amp;#x5982;&amp;#x679C;4&amp;#x6B21;&amp;#x68C0;&amp;#x6D4B;&amp;#x5747;&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x8BDD;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4F5C;&amp;#x4E3A;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x5E27;&amp;#x7684;&amp;#x8D77;&amp;#x59CB;&amp;#x4F4D;&amp;#x7F6E;&amp;#x8FD4;&amp;#x56DE;&amp;#xFF0C;&amp;#x68C0;&amp;#x6D4B;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;GetMPEGAudioFrameSize&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x5F85;&amp;#x68C0;&amp;#x6D4B;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x5185;&amp;#x6570;&amp;#x636E;&amp;#x6CA1;&amp;#x6709;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x5219;&amp;#x518D;&amp;#x6B21;&amp;#x8BFB;&amp;#x5165;&amp;#x6570;&amp;#x636E;&amp;#x5230;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x76F4;&amp;#x5230;&amp;#x68C0;&amp;#x6D4B;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x8FBE;&amp;#x5230;&amp;#x6700;&amp;#x5927;&amp;#x68C0;&amp;#x6D4B;&amp;#x5B57;&amp;#x8282;&amp;#x6570;128*1024&amp;#x5B57;&amp;#x8282;&amp;#x4E3A;&amp;#x6B62;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SniffMP3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source, String8 *mimeType,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; *confidence, sp&amp;lt;AMessage&amp;gt; *meta)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; pos = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; post_id3_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!Resync(source, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;amp;pos, &amp;amp;post_id3_pos, &amp;amp;header)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *meta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AMessage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*meta)-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;offset&amp;quot;&lt;/span&gt;, pos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*meta)-&amp;gt;setInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;, header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (*meta)-&amp;gt;setInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;post-id3-offset&amp;quot;&lt;/span&gt;, post_id3_pos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *mimeType = MEDIA_MIMETYPE_AUDIO_MPEG;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *confidence = &lt;span class=&quot;number&quot;&gt;0.2f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Resync&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source, uint32_t match_header,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        off64_t *inout_pos, off64_t *post_id3_pos, uint32_t *out_header)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (post_id3_pos != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        *post_id3_pos = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8DF3;&amp;#x8FC7;&amp;#x6807;&amp;#x9898;&amp;#x5E27;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5F00;&amp;#x59CB;&amp;#x540C;&amp;#x6B65;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (*inout_pos == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Skip an optional ID3 header if syncing at the very beginning&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// of the datasource.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; id3header[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BFB;&amp;#x53D6;&amp;#x5934;10&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x591F;10&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;&amp;#x8868;&amp;#x793A;&amp;#x5B58;&amp;#x5728;&amp;#x9519;&amp;#x8BEF;&amp;#x8FD4;&amp;#x56DE;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;readAt(*inout_pos, id3header, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(id3header))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(id3header)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If we can&amp;apos;t even read these 10 bytes, we might as well bail&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// out, even if there _were_ 10 bytes of valid mp3 audio data...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5934;3&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;&amp;#x4E0D;&amp;#x662F;ID3&amp;#x9000;&amp;#x51FA;&amp;#x8BE5;&amp;#x5FAA;&amp;#x73AF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;memcmp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;ID3&amp;quot;&lt;/span&gt;, id3header, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Skip the ID3v2 header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// &amp;#x83B7;&amp;#x53D6;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; len =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ((id3header[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                | ((id3header[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                | ((id3header[&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                | (id3header[&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;] &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7f&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            len += &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *inout_pos += len; &lt;span class=&quot;comment&quot;&gt;// inout_pos &amp;#x6307;&amp;#x5411;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x533A;&amp;#x7684;&amp;#x9996;&amp;#x5730;&amp;#x5740;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;skipped ID3 tag, new starting offset is %lld (0x%016llx)&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)*inout_pos, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)*inout_pos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (post_id3_pos != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *post_id3_pos = *inout_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; pos = *inout_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; valid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kMaxReadBytes = &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kMaxBytesChecked = &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; buf[kMaxReadBytes];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; bytesToRead = kMaxReadBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; totalBytesRead = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; remainingBytes = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; reachEOS = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *tmp = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x4F4D;&amp;#x7F6E;&amp;#x8D85;&amp;#x8FC7;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x533A;&amp;#x7684;kMaxBytesChecked&amp;#xFF08;128K&amp;#xFF09;&amp;#x5C31;&amp;#x505C;&amp;#x6B62;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pos &amp;gt;= (&lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt;)(*inout_pos + kMaxBytesChecked)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t scan forever.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;giving up at offset %lld&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)pos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (remainingBytes &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (reachEOS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(buf, tmp, remainingBytes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                bytesToRead = kMaxReadBytes - remainingBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * The next read position should start from the end of&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * the last buffer, and thus should include the remaining&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 * bytes in the buffer.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                totalBytesRead = source-&amp;gt;readAt(pos + remainingBytes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                buf + remainingBytes,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                bytesToRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (totalBytesRead &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                reachEOS = (totalBytesRead != bytesToRead);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                totalBytesRead += remainingBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                remainingBytes = totalBytesRead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                tmp = buf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;tmp&amp;#x7F13;&amp;#x51B2;&amp;#x533A;&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x5934;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; header = U32_AT(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (match_header != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (header &amp;amp; kMask) != (match_header &amp;amp; kMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5E27;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x6821;&amp;#x9A8C;&amp;#x5931;&amp;#x8D25;&amp;#x5219;&amp;#x4ECE;&amp;#x5F53;&amp;#x524D;&amp;#x5176;&amp;#x5B9E;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;32&amp;#x5B57;&amp;#x8282;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            --remainingBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sample_rate, num_channels, bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!GetMPEGAudioFrameSize(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    header, &amp;amp;frame_size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;sample_rate, &amp;amp;num_channels, &amp;amp;bitrate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ++tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            --remainingBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;found possible 1st frame at %lld (header = 0x%08x)&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)pos, header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We found what looks like a valid frame,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// now find its successors.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; test_pos = pos + frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        valid = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x518D;&amp;#x8FDE;&amp;#x7EED;&amp;#x8BFB;&amp;#x53D6;3&amp;#x4E09;&amp;#x4E2A;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x533A;&amp;#x7684;&amp;#x5E27;&amp;#x5934;&amp;#x8FDB;&amp;#x884C;&amp;#x68C0;&amp;#x67E5;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x90FD;&amp;#x6B63;&amp;#x786E;&amp;#x5C31;&amp;#x9000;&amp;#x51FA;&amp;#x68C0;&amp;#x6D4B;&amp;#xFF0C;&amp;#x5C06;&amp;#x627E;&amp;#x5230;&amp;#x7684;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x533A;&amp;#x57DF;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x4EE5;&amp;#x53CA;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x5E27;&amp;#x7684;&amp;#x5E27;&amp;#x5934;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; ++j) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; tmp[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;readAt(test_pos, tmp, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                valid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; test_header = U32_AT(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;subsequent header is %08x&amp;quot;&lt;/span&gt;, test_header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((test_header &amp;amp; kMask) != (header &amp;amp; kMask)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                valid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; test_frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!GetMPEGAudioFrameSize(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        test_header, &amp;amp;test_frame_size)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                valid = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;found subsequent frame #%d at %lld&amp;quot;&lt;/span&gt;, j + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)test_pos);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            test_pos += test_frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (valid) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *inout_pos = pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (out_header != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                *out_header = header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;no dice, no valid sequence of frames found.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        --remainingBytes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!valid);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; valid;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;MediaExtractor::Create &amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x901A;&amp;#x8FC7;sniff&amp;#x6765;&amp;#x8BC6;&amp;#x522B;&amp;#x5F53;&amp;#x524D;&amp;#x97F3;&amp;#x9891;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;mimeType&amp;#x4EE5;&amp;#x53CA;&amp;#x53EF;&amp;#x884C;&amp;#x5EA6;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x5177;&amp;#x4F53;&amp;#x7684;Extractor &amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD9;&amp;#x91CC;&amp;#x4EE5;MP3&amp;#x6587;&amp;#x4EF6;&amp;#x4E3A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;sniff&amp;#x5224;&amp;#x65AD;&amp;#x540E;&amp;#x5728;MediaExtractor::Create&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x521B;&amp;#x5EFA;MP3Extractor&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5728;MP3Extractor&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x4ECE;&amp;#x4F20;&amp;#x5165;&amp;#x7684;header&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x91C7;&amp;#x6837;&amp;#x9891;&amp;#x7387;&amp;#xFF0C;&amp;#x901A;&amp;#x9053;&amp;#x6570;&amp;#xFF0C;&amp;#x5E27;&amp;#x5927;&amp;#x5C0F;&amp;#x7B49;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x5176;&amp;#x5B58;&amp;#x5165;MetaData&amp;#x5BF9;&amp;#x8C61;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MP3Extractor::MP3Extractor(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;AMessage&amp;gt; &amp;amp;meta)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mInitCheck(NO_INIT),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mDataSource(source),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstFramePos(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFixedHeader(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; pos = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; post_id3_pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; success;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E9B;&amp;#x503C;&amp;#x5728;SniffMP3&amp;#x4E2D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x83B7;&amp;#x53D6;&amp;#x4E86;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; meta_offset;&lt;span class=&quot;comment&quot;&gt;/*&amp;#x8868;&amp;#x793A;&amp;#x5E27;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x504F;&amp;#x79FB;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; meta_header;&lt;span class=&quot;comment&quot;&gt;/*&amp;#x8868;&amp;#x793A;&amp;#x5E27;&amp;#x5934;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; meta_post_id3_offset;&lt;span class=&quot;comment&quot;&gt;/*&amp;#x8868;&amp;#x793A;TAB&amp;#x5E27;&amp;#x7684;&amp;#x504F;&amp;#x79FB;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&amp;amp;&amp;amp; meta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;offset&amp;quot;&lt;/span&gt;, &amp;amp;meta_offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; meta-&amp;gt;findInt32(&lt;span class=&quot;string&quot;&gt;&amp;quot;header&amp;quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; *)&amp;amp;meta_header)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; meta-&amp;gt;findInt64(&lt;span class=&quot;string&quot;&gt;&amp;quot;post-id3-offset&amp;quot;&lt;/span&gt;, &amp;amp;meta_post_id3_offset)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The sniffer has already done all the hard work for us, simply&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// accept its judgement.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pos = (&lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt;)meta_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        header = meta_header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        post_id3_pos = (&lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt;)meta_post_id3_offset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        success = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstFramePos = pos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFixedHeader = header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMeta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MetaData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; frame_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; sample_rate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num_channels;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bitrate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    GetMPEGAudioFrameSize(header, &amp;amp;frame_size, &amp;amp;sample_rate, &amp;amp;num_channels, &amp;amp;bitrate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; layer = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; - ((header &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;) &amp;amp; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (layer) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta-&amp;gt;setCString(kKeyMIMEType, MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_I);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta-&amp;gt;setCString(kKeyMIMEType, MEDIA_MIMETYPE_AUDIO_MPEG_LAYER_II);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMeta-&amp;gt;setCString(kKeyMIMEType, MEDIA_MIMETYPE_AUDIO_MPEG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TRESPASS();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMeta-&amp;gt;setInt32(kKeySampleRate, sample_rate);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMeta-&amp;gt;setInt32(kKeyBitRate, bitrate * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMeta-&amp;gt;setInt32(kKeyChannelCount, num_channels);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int64_t&lt;/span&gt; durationUs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (durationUs &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMeta-&amp;gt;setInt64(kKeyDuration, durationUs);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInitCheck = OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Get iTunes-style gapless info if present.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// When getting the id3 tag, skip the V1 tags to prevent the source cache&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// from being iterated to the end of the file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ID3 &lt;span class=&quot;title&quot;&gt;id3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mDataSource, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (id3.isValid()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ID3::Iterator *com = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ID3::Iterator(id3, &lt;span class=&quot;string&quot;&gt;&amp;quot;COM&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (com-&amp;gt;done()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            com = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ID3::Iterator(id3, &lt;span class=&quot;string&quot;&gt;&amp;quot;COMM&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(!com-&amp;gt;done()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String8 commentdesc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            String8 commentvalue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            com-&amp;gt;getString(&amp;amp;commentdesc, &amp;amp;commentvalue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * desc = commentdesc.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * value = commentvalue.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// first 3 characters are the language, which we don&amp;apos;t care about&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(desc) &amp;gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;strcmp&lt;/span&gt;(desc + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;iTunSMPB&amp;quot;&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int32_t&lt;/span&gt; delay, padding;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;sscanf&lt;/span&gt;(value, &lt;span class=&quot;string&quot;&gt;&amp;quot; %*x %x %x %*x&amp;quot;&lt;/span&gt;, &amp;amp;delay, &amp;amp;padding) == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mMeta-&amp;gt;setInt32(kKeyEncoderDelay, delay);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mMeta-&amp;gt;setInt32(kKeyEncoderPadding, padding);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            com-&amp;gt;next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        com = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BC6;&amp;#x522B;&amp;#x51FA;&amp;#x4E86;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x683C;&amp;#x5F0F;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x4ECE;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x97F3;&amp;#x4E50;&amp;#x5185;&amp;#x5BB9;&amp;#x6570;&amp;#x636E;&amp;#x5E27;&amp;#x5934;&amp;#x90E8;&amp;#xFF08;HEAD&amp;#xFF09;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4E86;&amp;#x91C7;&amp;#x6837;&amp;#x7387;&amp;#xFF0C;&amp;#x6BD4;&amp;#x7279;&amp;#x7387;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x975E;&amp;#x5E38;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#x9700;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x90A3;&amp;#x5C31;&amp;#x662F;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5728;&amp;#x90A3;&amp;#x91CC;&amp;#x8BB0;&amp;#x5F55;&amp;#x8005;&amp;#x6B4C;&amp;#x66F2;&amp;#x4F5C;&amp;#x8005;&amp;#xFF0C;&amp;#x4E13;&amp;#x8F91;&amp;#x540D;&amp;#xFF0C;&amp;#x6B4C;&amp;#x66F2;&amp;#x540D;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x4E13;&amp;#x8F91;&amp;#x5C01;&amp;#x9762;&amp;#x56FE;&amp;#x7247;&amp;#x548C;&amp;#x5185;&amp;#x5D4C;&amp;#x6B4C;&amp;#x8BCD;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x90E8;&amp;#x5206;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x91CD;&amp;#x70B9;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x6B21;&amp;#x56DE;&amp;#x5230;processFileInternal&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;Tags&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x662F;&amp;#x5728;mRetriever-&amp;gt;extractMetadata(kKeyMap[i].key)&amp;#x4E2D;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#xFF0C;&lt;br&gt;&amp;#x5728;extractMetadata&amp;#x65B9;&amp;#x6CD5;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x8981;&amp;#x5BFB;&amp;#x627E;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;Tag&amp;#x7684;key&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x5C1A;&amp;#x672A;&amp;#x5BF9;&amp;#x5E27;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#x5219;&amp;#x5148;&amp;#x8C03;&amp;#x7528;parseMetaData&amp;#x65B9;&amp;#x6CD5;&amp;#x5BF9;Tag&amp;#x6807;&amp;#x7B7E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5DF2;&amp;#x7ECF;&amp;#x89E3;&amp;#x6790;&amp;#x8FC7;&amp;#x4E86;&amp;#x5219;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x4F7F;&amp;#x7528;&amp;#x4F20;&amp;#x4EBA;&amp;#x5230;keyCode &amp;#x5230;mMetaData&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x67E5;&amp;#x627E;&amp;#xFF0C;&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x9700;&amp;#x8981;&amp;#x67E5;&amp;#x627E;&amp;#x5230;&amp;#x90A3;&amp;#x4E2A;Tag&amp;#x7684;&amp;#x503C;.&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *StagefrightMetadataRetriever::extractMetadata(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; keyCode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mExtractor == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;parseMetaData()&amp;#x89E3;&amp;#x6790;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mParsedMetaData) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        parseMetaData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mParsedMetaData = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt; index = mMetaData.indexOfKey(keyCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mMetaData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mMetaData.valueAt(index).&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;void StagefrightMetadataRetriever::&lt;/span&gt;parseMetaData() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x83B7;&amp;#x53D6;MetaData&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; meta = mExtractor-&amp;gt;getMetaData()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //TAG&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;map&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    struct Map {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int from&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int to&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *name&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static const Map kMap[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyMIMEType, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_MIMETYPE, NULL },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyCDTrackNumber, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_CD_TRACK_NUMBER, &lt;span class=&quot;string&quot;&gt;&amp;quot;tracknumber&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyDiscNumber, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_DISC_NUMBER, &lt;span class=&quot;string&quot;&gt;&amp;quot;discnumber&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAlbum, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_ALBUM, &lt;span class=&quot;string&quot;&gt;&amp;quot;album&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyArtist, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_ARTIST, &lt;span class=&quot;string&quot;&gt;&amp;quot;artist&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAlbumArtist, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_ALBUMARTIST, &lt;span class=&quot;string&quot;&gt;&amp;quot;albumartist&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAuthor, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_AUTHOR, NULL },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyComposer, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_COMPOSER, &lt;span class=&quot;string&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyDate, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_DATE, NULL },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyGenre, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_GENRE, &lt;span class=&quot;string&quot;&gt;&amp;quot;genre&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyTitle, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_TITLE, &lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyYear, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_YEAR, &lt;span class=&quot;string&quot;&gt;&amp;quot;year&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyWriter, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_WRITER, &lt;span class=&quot;string&quot;&gt;&amp;quot;writer&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyCompilation, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_COMPILATION, &lt;span class=&quot;string&quot;&gt;&amp;quot;compilation&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyLocation, METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_LOCATION, NULL },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    static const size_t kNumMapEntries = sizeof(kMap) / sizeof(kMap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x521B;&amp;#x5EFA;&amp;#x5224;&amp;#x65AD;&amp;#x5B57;&amp;#x7B26;&amp;#x7F16;&amp;#x7801;&amp;#x68C0;&amp;#x6D4B;&amp;#x5668;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CharacterEncodingDetector *detector = new CharacterEncodingDetector()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x5C06;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;TAG&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;detector&amp;#x4E2D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; kNumMapEntries; ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *value&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findCString(kMap[i].from, &amp;amp;value)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (kMap[i].name) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // add to charset detector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                //&amp;#x8FD9;&amp;#x91CC;&amp;#x6CA1;&amp;#x6709;&amp;#x76F4;&amp;#x63A5;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mMetaData&amp;#x800C;&amp;#x662F;&amp;#x5148;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;CharacterEncodingDetector&amp;#x7684;mNames&amp;#xFF0C;mValues&amp;#x4E2D;&amp;#x7B49;&amp;#x5F85;&amp;#x8F6C;&amp;#x6362;&amp;#x7F16;&amp;#x7801;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                detector-&amp;gt;addTag(kMap[i].name, value)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // directly add to output list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mMetaData.add(kMap[i].to, String8(value))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;    void CharacterEncodingDetector::&lt;/span&gt;addTag(const char *name, const char *value) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNames.push_back(name)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mValues.push_back(value)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#xD7;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x5F00;&amp;#x59CB;&amp;#x8F6C;&amp;#x5316;&amp;#x7F16;&amp;#x7801;&amp;#xFF0C;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x653E;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x8FDB;&amp;#x884C;&amp;#x4ECB;&amp;#x7ECD;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    detector-&amp;gt;detectAndConvert()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int size = detector-&amp;gt;size()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x5C06;&amp;#x8F6C;&amp;#x6362;&amp;#x540E;&amp;#x7684;TAG&amp;#x653E;&amp;#x5230;mMetaData&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x6574;&amp;#x4E2A;mMetaData&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x90FD;&amp;#x662F;&amp;#x6B63;&amp;#x786E;&amp;#x7F16;&amp;#x7801;&amp;#x540E;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; size; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            const char *name&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            const char *value&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            detector-&amp;gt;getTag(i, &amp;amp;name, &amp;amp;value)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            for (size_t j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; j &amp;lt; kNumMapEntries; ++j) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (kMap[j].name &amp;amp;&amp;amp; !strcmp(kMap[j].name, name)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mMetaData.add(kMap[j].to, String8(value))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete detector&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    const void *data&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    uint32_t type&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t dataSize&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findData(kKeyAlbumArt, &amp;amp;type, &amp;amp;data, &amp;amp;dataSize)&amp;amp;&amp;amp; mAlbumArt == NULL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;        mAlbumArt = MediaAlbumArt::&lt;/span&gt;fromData(dataSize, data)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size_t numTracks = mExtractor-&amp;gt;countTracks()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    char tmp[&lt;span class=&quot;number&quot;&gt;32&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%zu&amp;quot;&lt;/span&gt;, numTracks)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_NUM_TRACKS, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    float captureFps&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (meta-&amp;gt;findFloat(kKeyCaptureFramerate, &amp;amp;captureFps)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%f&amp;quot;&lt;/span&gt;, captureFps)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_CAPTURE_FRAMERATE, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bool hasAudio = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bool hasVideo = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t videoWidth = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t videoHeight = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t audioBitrate = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int32_t rotationAngle = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // The overall duration is the duration of the longest track.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int64_t maxDurationUs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 timedTextLang&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (size_t i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; numTracks; ++i) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sp&amp;lt;MetaData&amp;gt; trackMeta = mExtractor-&amp;gt;getTrackMetaData(i)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int64_t durationUs&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (trackMeta-&amp;gt;findInt64(kKeyDuration, &amp;amp;durationUs)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (durationUs &amp;gt; maxDurationUs) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                maxDurationUs = durationUs&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *mime&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (trackMeta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;mime)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!hasAudio &amp;amp;&amp;amp; !strncasecmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, mime, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                hasAudio = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!trackMeta-&amp;gt;findInt32(kKeyBitRate, &amp;amp;audioBitrate)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    audioBitrate = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!hasVideo &amp;amp;&amp;amp; !strncasecmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;video/&amp;quot;&lt;/span&gt;, mime, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                hasVideo = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(trackMeta-&amp;gt;findInt32(kKeyWidth, &amp;amp;videoWidth))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                CHECK(trackMeta-&amp;gt;findInt32(kKeyHeight, &amp;amp;videoHeight))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!trackMeta-&amp;gt;findInt32(kKeyRotation, &amp;amp;rotationAngle)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    rotationAngle = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(mime, MEDI&lt;span class=&quot;built_in&quot;&gt;A_MIMETYPE&lt;/span&gt;_TEXT_3GPP)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                const char *lang&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                trackMeta-&amp;gt;findCString(kKeyMediaLanguage, &amp;amp;lang)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                timedTextLang.append(String8(lang))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                timedTextLang.append(String8(&lt;span class=&quot;string&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // To save the language codes for all timed text tracks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;keyword&quot;&gt;If&lt;/span&gt; multiple text tracks present, the format will look&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // like &lt;span class=&quot;string&quot;&gt;&amp;quot;eng:chi&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!timedTextLang.isEmpty()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_TIMED_TEXT_LANGUAGES, timedTextLang)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // The duration value is &lt;span class=&quot;literal&quot;&gt;a&lt;/span&gt; string representing the duration in ms.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%&amp;quot;&lt;/span&gt; PRId64, (maxDurationUs + &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_DURATION, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hasAudio) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_HAS_AUDIO, String8(&lt;span class=&quot;string&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (hasVideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_HAS_VIDEO, String8(&lt;span class=&quot;string&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, videoWidth)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_VIDEO_WIDTH, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, videoHeight)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_VIDEO_HEIGHT, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, rotationAngle)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_VIDEO_ROTATION, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (numTracks == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; hasAudio &amp;amp;&amp;amp; audioBitrate &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;, audioBitrate)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_BITRATE, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        off64_t sourceSize&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSource-&amp;gt;getSize(&amp;amp;sourceSize) == OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            int64_t avgBitRate = (int64_t)(sourceSize * &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;E6 / maxDurationUs)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sprintf(tmp, &lt;span class=&quot;string&quot;&gt;&amp;quot;%&amp;quot;&lt;/span&gt; PRId64, avgBitRate)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_BITRATE, String8(tmp))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (numTracks == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const char *fileMIME&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK(meta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;fileMIME))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strcasecmp(fileMIME, &lt;span class=&quot;string&quot;&gt;&amp;quot;video/x-matroska&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sp&amp;lt;MetaData&amp;gt; trackMeta = mExtractor-&amp;gt;getTrackMetaData(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            const char *trackMIME&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            CHECK(trackMeta-&amp;gt;findCString(kKeyMIMEType, &amp;amp;trackMIME))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!strncasecmp(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio/&amp;quot;&lt;/span&gt;, trackMIME, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // The matroska file only contains &lt;span class=&quot;literal&quot;&gt;a&lt;/span&gt; single audio track,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // rewrite its mime type.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mMetaData.add(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_MIMETYPE, String8(&lt;span class=&quot;string&quot;&gt;&amp;quot;audio/x-matroska&amp;quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // To check whether the media file is drm-protected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mExtractor-&amp;gt;getDrmFlag()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMetaData.add(METADAT&lt;span class=&quot;built_in&quot;&gt;A_KEY&lt;/span&gt;_IS_DRM, String8(&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5B8C;&amp;#x6210;&amp;#x5173;&amp;#x952E;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C31;&amp;#x662F;&amp;#x4ECE;Meta&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x5404;&amp;#x4E2A;TAG&amp;#xFF0C;&amp;#x7ECF;&amp;#x8FC7;&amp;#x5B57;&amp;#x7B26;&amp;#x7F16;&amp;#x7801;&amp;#x8F6C;&amp;#x6362;&amp;#x540E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mMetaData&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E0D;&amp;#x8981;&amp;#x5FFD;&amp;#x7565;&amp;#x4E86;getMetaData&amp;#xFF0C;getMetaData&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;&amp;#x521B;&amp;#x5EFA;&amp;#x7528;&amp;#x4E8E;&amp;#x5BF9;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x5934;&amp;#x7684;ID3V2&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x548C;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;&amp;#x6587;&amp;#x4EF6;&amp;#x5C3E;&amp;#x90E8;&amp;#x7684;ID3V1&amp;#x5E27;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#x7684;ID3&amp;#x5BF9;&amp;#x8C61;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x5230;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x89E3;&amp;#x6790;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x5305;&amp;#x62EC;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x6B4C;&amp;#x66F2;&amp;#x4FE1;&amp;#x606F;&amp;#x6807;&amp;#x7B7E;&amp;#x4EE5;&amp;#x53CA;&amp;#x6B4C;&amp;#x8BCD;&amp;#xFF0C;&amp;#x4E13;&amp;#x8F91;&amp;#x5C01;&amp;#x9762;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&amp;#x60F3;&amp;#x8981;&amp;#x771F;&amp;#x6B63;&amp;#x4E86;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;&amp;#x89E3;&amp;#x6790;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x5F97;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;ID3&amp;#x7C7B;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x548C;ID3::Iterator&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sp&amp;lt;MetaData&amp;gt; MP3Extractor::getMetaData() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sp&amp;lt;MetaData&amp;gt; meta = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MetaData;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mInitCheck != OK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;mimetype&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    meta-&amp;gt;setCString(kKeyMIMEType, &lt;span class=&quot;string&quot;&gt;&amp;quot;audio/mpeg&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;id3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;ID3 &lt;span class=&quot;title&quot;&gt;id3&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(mDataSource)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!id3.isValid()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; Map {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; key;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *tag1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *tag2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; Map kMap[] = {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAlbum, &lt;span class=&quot;string&quot;&gt;&amp;quot;TALB&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TAL&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyArtist, &lt;span class=&quot;string&quot;&gt;&amp;quot;TPE1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TP1&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAlbumArtist, &lt;span class=&quot;string&quot;&gt;&amp;quot;TPE2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TP2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyComposer, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCOM&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCM&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyGenre, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCON&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCO&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyTitle, &lt;span class=&quot;string&quot;&gt;&amp;quot;TIT2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TT2&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyYear, &lt;span class=&quot;string&quot;&gt;&amp;quot;TYE&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TYER&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyAuthor, &lt;span class=&quot;string&quot;&gt;&amp;quot;TXT&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TEXT&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyCDTrackNumber, &lt;span class=&quot;string&quot;&gt;&amp;quot;TRK&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TRCK&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyDiscNumber, &lt;span class=&quot;string&quot;&gt;&amp;quot;TPA&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TPOS&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        { kKeyCompilation, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCP&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;TCMP&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; kNumMapEntries = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMap) / &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(kMap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E0A;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;TAG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; kNumMapEntries; ++i) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ID3::Iterator *it = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ID3::Iterator(id3, kMap[i].tag1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;done()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            it = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ID3::Iterator(id3, kMap[i].tag2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it-&amp;gt;done()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String8 s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        it-&amp;gt;getString(&amp;amp;s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt; it;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        meta-&amp;gt;setCString(kMap[i].key, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; dataSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String8 mime;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x4E13;&amp;#x8F91;&amp;#x5C01;&amp;#x9762;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *data = id3.getAlbumArt(&amp;amp;dataSize, &amp;amp;mime);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        meta-&amp;gt;setData(kKeyAlbumArt, MetaData::TYPE_NONE, data, dataSize);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        meta-&amp;gt;setCString(kKeyAlbumArtMIME, mime.&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; meta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;ID3&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;ID3&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F1A;&amp;#x5148;&amp;#x8C03;&amp;#x7528;parseV2&amp;#xFF0C;&amp;#x5982;&amp;#x679C;parseV2&amp;#x8FD4;&amp;#x56DE;false&amp;#x7684;&amp;#x8BDD;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;parseV1&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;ID3&amp;#x4F1A;&amp;#x9996;&amp;#x5148;&amp;#x89E3;&amp;#x6790;&amp;#x4F4D;&amp;#x4E8E;&amp;#x6587;&amp;#x4EF6;&amp;#x5934;&amp;#x5230;ID3V2&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x89E3;&amp;#x6790;&amp;#x5931;&amp;#x8D25;&amp;#x5219;&amp;#x4F1A;&amp;#x5C1D;&amp;#x8BD5;&amp;#x89E3;&amp;#x6790;ID3V1&amp;#x5E27;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ID3::ID3(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source, bool ignoreV1, off64_t offset)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mIsValid(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mData(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mSize(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFirstFrameOffset(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mVersion(ID3_UNKNOWN),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mRawSize(0) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x6790;ID3V2Tab&amp;#x5185;&amp;#x5BB9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsValid = parseV2(source, offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mIsValid &amp;amp;&amp;amp; !ignoreV1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x89E3;&amp;#x6790;ID3V1 TAB &amp;#x5185;&amp;#x5BB9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsValid = parseV1(source);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x800C;&amp;#x5728;parseV2&amp;#x4EE5;&amp;#x53CA;parseV1&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x4E5F;&amp;#x8FD8;&amp;#x6CA1;&amp;#x5F00;&amp;#x59CB;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x5B83;&amp;#x4EEC;&amp;#x53EA;&amp;#x662F;&amp;#x5F00;&amp;#x8F9F;&amp;#x4E2A;mData &amp;#x7A7A;&amp;#x95F4;&amp;#x5C06;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;TAG&amp;#x6807;&amp;#x7B7E;&amp;#x52A0;&amp;#x8F7D;&amp;#x5230;mData&amp;#x4E2D;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5C06;&amp;#x4F1A;&amp;#x9488;&amp;#x5BF9;mData&amp;#x4E2D;&amp;#x7684;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ID3::parseV2(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; id3_header {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6807;&amp;#x7B7E;&amp;#x5934;10&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; id[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;/*&amp;#x5FC5;&amp;#x987B;&amp;#x4E3A;&amp;quot;ID3&amp;quot;&amp;#x5426;&amp;#x5219;&amp;#x8BA4;&amp;#x4E3A;&amp;#x6807;&amp;#x7B7E;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; version_major;  &lt;span class=&quot;comment&quot;&gt;/*&amp;#x7248;&amp;#x672C;&amp;#x53F7;ID3V2.3&amp;#x5C31;&amp;#x8BB0;&amp;#x5F55;3*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; version_minor;  &lt;span class=&quot;comment&quot;&gt;/*&amp;#x526F;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x6B64;&amp;#x7248;&amp;#x672C;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E3A;0*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; flags; &lt;span class=&quot;comment&quot;&gt;/*&amp;#x5B58;&amp;#x653E;&amp;#x6807;&amp;#x5FD7;&amp;#x7684;&amp;#x5B57;&amp;#x8282;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7248;&amp;#x672C;&amp;#x53EA;&amp;#x5B9A;&amp;#x4E49;&amp;#x4E86;&amp;#x4E09;&amp;#x4F4D;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; enc_size[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];  &lt;span class=&quot;comment&quot;&gt;/*&amp;#x6807;&amp;#x7B7E;&amp;#x5927;&amp;#x5C0F;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5305;&amp;#x62EC;&amp;#x6807;&amp;#x7B7E;&amp;#x5934;&amp;#x7684;10&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id3_header header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;readAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &amp;amp;header, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(header)) != (&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt;)&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(header)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&amp;#x5FC5;&amp;#x987B;&amp;#x4E3A;&amp;quot;ID3&amp;quot;&amp;#x5426;&amp;#x5219;&amp;#x8BA4;&amp;#x4E3A;&amp;#x6807;&amp;#x7B7E;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;memcmp&lt;/span&gt;(header.id, &lt;span class=&quot;string&quot;&gt;&amp;quot;ID3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3B;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x548C;&amp;#x526F;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x90FD;&amp;#x662F;0xff&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x9519;&amp;#x8BEF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;0xff&lt;/span&gt; || header.version_minor == &lt;span class=&quot;number&quot;&gt;0xff&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3B;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x4E3A;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//............................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3B;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x4E3A;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.flags &amp;amp; &lt;span class=&quot;number&quot;&gt;0x1f&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// We only support the 3 high bits, if any of the lower bits are&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// set, we cannot guarantee to understand the tag format.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3B;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x4E3A;4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3B;&amp;#x7248;&amp;#x672C;&amp;#x53F7;&amp;#x4E0D;&amp;#x662F;&amp;#x4E0A;&amp;#x8FF0;&amp;#x7684;&amp;#x5219;&amp;#x76F4;&amp;#x63A5;&amp;#x8FD4;&amp;#x56DE;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6807;&amp;#x7B7E;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ParseSyncsafeInteger(header.enc_size, &amp;amp;size)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//static const size_t kMaxMetadataSize = 3 * 1024 * 1024;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5927;&amp;#x5C0F;&amp;#x8D85;&amp;#x8FC7;3M&amp;#x5219;&amp;#x9000;&amp;#x51FA;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (size &amp;gt; kMaxMetadataSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5206;&amp;#x914D;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x6807;&amp;#x7B7E;&amp;#x5185;&amp;#x5BB9;&amp;#x7684;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mData = (&lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSize = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mRawSize = mSize + &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//mRawSize &amp;#x8868;&amp;#x793A; &amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x5927;&amp;#x5C0F;&amp;#x52A0;&amp;#x4E0A; &amp;#x6807;&amp;#x7B7E;&amp;#x5934;&amp;#x5927;&amp;#x5C0F;10&amp;#x4E2A;&amp;#x5B57;&amp;#x8282; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BFB;&amp;#x53D6;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;readAt(&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(header), mData, mSize) != (&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt;)mSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstFrameOffset = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//..........................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVersion = ID3_V2_2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (header.version_major == &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVersion = ID3_V2_3;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CHECK_EQ(header.version_major, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVersion = ID3_V2_4;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; ID3::parseV1(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; sp&amp;lt;DataSource&amp;gt; &amp;amp;source) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; V1_TAG_SIZE = &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt; size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;getSize(&amp;amp;size) != OK || size &amp;lt; (&lt;span class=&quot;keyword&quot;&gt;off64_t&lt;/span&gt;)V1_TAG_SIZE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5206;&amp;#x914D;&amp;#x7A7A;&amp;#x95F4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mData = (&lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; *)&lt;span class=&quot;built_in&quot;&gt;malloc&lt;/span&gt;(V1_TAG_SIZE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BFB;&amp;#x53D6;&amp;#x4F4D;&amp;#x4E8E;&amp;#x6587;&amp;#x4EF6;&amp;#x5C3E;&amp;#x90E8;128&amp;#x5B57;&amp;#x8282;&amp;#x7684;V1&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (source-&amp;gt;readAt(size - V1_TAG_SIZE, mData, V1_TAG_SIZE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            != (&lt;span class=&quot;keyword&quot;&gt;ssize_t&lt;/span&gt;)V1_TAG_SIZE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;memcmp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;TAG&amp;quot;&lt;/span&gt;, mData, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;free&lt;/span&gt;(mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mSize = V1_TAG_SIZE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstFrameOffset = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mData[V1_TAG_SIZE - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVersion = ID3_V1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mVersion = ID3_V1_1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x771F;&amp;#x6B63;&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x6D41;&amp;#x7A0B;&amp;#x662F;&amp;#x4ECE;Iterator&amp;#x5F00;&amp;#x59CB;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;Iterator&amp;#x4E2D;&amp;#x5148;&amp;#x662F;&amp;#x8C03;&amp;#x7528;strdup(id)&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x8981;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;Tag&amp;#x5230;ID&amp;#x503C;&amp;#x653E;&amp;#x5230;mID&amp;#x4E2D;&amp;#xFF0C;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;findFrame&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x5230;&amp;#x5E27;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ID3::Iterator::Iterator(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; ID3 &amp;amp;parent, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    : mParent(parent),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mID(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mOffset(mParent.mFirstFrameOffset),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFrameData(NULL),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      mFrameSize(0) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (id) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mID = strdup(id);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x627E;&amp;#x5230;&amp;#x5E27;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    findFrame();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;findFrame&amp;#x4E2D;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;ID&amp;#x4E0E;&amp;#x5B58;&amp;#x50A8;&amp;#x7740;&amp;#x5168;&amp;#x90E8;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x6570;&amp;#x636E;&amp;#x7684;mData&amp;#x7A7A;&amp;#x95F4;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5E27;&amp;#x8FDB;&amp;#x884C;&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x627E;&amp;#x5230;&amp;#x5E27;&amp;#x6807;&amp;#x5FD7;&amp;#x7B49;&amp;#x4E8E;&amp;#x5F53;&amp;#x524D;ID&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x9000;&amp;#x51FA;&amp;#x904D;&amp;#x5386;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;mID&amp;#x5C31;&amp;#x6307;&amp;#x5411;&amp;#x8981;&amp;#x5BFB;&amp;#x627E;&amp;#x6807;&amp;#x7B7E;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ID3::Iterator::findFrame() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFrameData = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFrameSize = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mParent.mVersion == ID3_V2_2) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//..................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mParent.mVersion == ID3_V2_3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                || mParent.mVersion == ID3_V2_4) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x662F;&amp;#x6B63;&amp;#x5E38;&amp;#x7684;MP3&amp;#x683C;&amp;#x5F0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffset + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;gt; mParent.mSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5934;&amp;#x56DB;&amp;#x4E2A;&amp;#x5B57;&amp;#x8282;&amp;#x4E3A;0000&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;memcmp&lt;/span&gt;(&amp;amp;mParent.mData[mOffset], &lt;span class=&quot;string&quot;&gt;&amp;quot;\0\0\0\0&amp;quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; baseSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mParent.mVersion == ID3_V2_4) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//.......................................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                baseSize = U32_AT(&amp;amp;mParent.mData[mOffset + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8868;&amp;#x793A;&amp;#x5305;&amp;#x542B;&amp;#x5E27;&amp;#x5934;&amp;#x7684;&amp;#x603B;&amp;#x5171;&amp;#x5927;&amp;#x5C0F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFrameSize = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + baseSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOffset + mFrameSize &amp;gt; mParent.mSize) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F53;&amp;#x524D;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFrameData = &amp;amp;mParent.mData[mOffset + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mID) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;Tab &amp;#x590D;&amp;#x5236;&amp;#x5230;id&amp;#x4E0A;&amp;#xFF0C;&amp;#x5224;&amp;#x65AD;id&amp;#x662F;&amp;#x5426;&amp;#x7B49;&amp;#x4E8E;mID&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x7B49;&amp;#x5219;&amp;#x7EE7;&amp;#x7EED;&amp;#x67E5;&amp;#x627E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; id[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(id, &amp;amp;mParent.mData[mOffset], &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            id[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;apos;\0&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x7B49;&amp;#x4E8E;&amp;#x8981;&amp;#x627E;&amp;#x7684;ID &amp;#x5219;&amp;#x9000;&amp;#x51FA;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;mOffset &amp;#x6307;&amp;#x5411;&amp;#x7684;&amp;#x662F;&amp;#x8981;&amp;#x67E5;&amp;#x627E;&amp;#x5E27;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!&lt;span class=&quot;built_in&quot;&gt;strcmp&lt;/span&gt;(id, mID)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//.................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOffset += mFrameSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x83B7;&amp;#x53D6;&amp;#x4E13;&amp;#x8F91;&amp;#x56FE;&amp;#x7247;&amp;#xFF1A;&lt;br&gt;&amp;#x4E13;&amp;#x8F91;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5B9E;&amp;#x9645;&amp;#x548C;&amp;#x83B7;&amp;#x53D6;&amp;#x5176;&amp;#x4ED6;TAG&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x662F;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#xFF0C;&amp;#x4E5F;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x904D;&amp;#x5386;&amp;#x5B58;&amp;#x653E;ID3&amp;#x6807;&amp;#x7B7E;&amp;#x539F;&amp;#x59CB;&amp;#x6570;&amp;#x636E;&amp;#x7684;mData&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&amp;#x6807;&amp;#x7B7E;&amp;#x4E3A;&amp;#x201D;APIC&amp;#x201D;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x5C06;&amp;#x6307;&amp;#x5411;&amp;#x4E13;&amp;#x8F91;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x9996;&amp;#x5730;&amp;#x5740;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ID3::getAlbumArt(size_t *length, String8 *mime) &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *length = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mime-&amp;gt;setTo(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//APIC Attached picture &amp;#x5B9A;&amp;#x4F4D;&amp;#x4E13;&amp;#x8F91;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Iterator it(*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,(mVersion == ID3_V2_3 || mVersion == ID3_V2_4) ? &lt;span class=&quot;string&quot;&gt;&amp;quot;APIC&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;PIC&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!it.done()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        size_t &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x6307;&amp;#x5411;&amp;#x4E13;&amp;#x8F91;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; uint8_t *data = it.getData(&amp;amp;&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mVersion == ID3_V2_3 || mVersion == ID3_V2_4) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            uint8_t encoding = data[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mime-&amp;gt;setTo((&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *)&amp;amp;data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            size_t mimeLen = strlen((&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; *)&amp;amp;data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD4;&amp;#x56DE;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            uint8_t picType = data[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + mimeLen];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x56FE;&amp;#x7247;&amp;#x63CF;&amp;#x8FF0;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x957F;&amp;#x5EA6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            size_t descLen = StringSize(&amp;amp;data[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + mimeLen], encoding);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x5B9E;&amp;#x9645;&amp;#x957F;&amp;#x5EA6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            *length = &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - mimeLen - descLen;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD4;&amp;#x56DE;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x5730;&amp;#x5740;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;amp;data[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + mimeLen + descLen];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//...........................................................&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x8FF0;&amp;#x5C31;&amp;#x662F;&amp;#x83B7;&amp;#x53D6;&amp;#x5404;&amp;#x4E2A;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x627E;&amp;#x51FA;&amp;#x6807;&amp;#x7B7E;&amp;#x5E27;&amp;#x7684;&amp;#x503C;&amp;#x540E;&amp;#x5C31;&amp;#x5C06;&amp;#x53EF;&amp;#x4EE5;&amp;#x5C06;&amp;#x5176;&amp;#x53D6;&amp;#x51FA;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;mMetaData&amp;#x4E2D;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x56DE;&amp;#x5230;processFileInternal&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x9700;&amp;#x8981;&amp;#x505A;&amp;#x54EA;&amp;#x4E9B;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF1A;&amp;#x5B83;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;status = client.addStringTag(kKeyMap[i].tag, value);&amp;#x5C06;&amp;#x8BE5;Tag&amp;#x4F20;&amp;#x9012;&amp;#x5230;MediaScannerClient&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5728;MediaScannerClient&amp;#x4E2D;&amp;#x4F1A;&amp;#x505A;&amp;#x54EA;&amp;#x4E9B;&amp;#x5904;&amp;#x7406;&amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; MediaScannerClient::addStringTag(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    handleStringTag(name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;MediaScanner.java&amp;#x4E2D;&amp;#x5C06;&amp;#x4ECE;&amp;#x5E95;&amp;#x5C42;&amp;#x4F20;&amp;#x6765;&amp;#x7684;&amp;#x5BF9;&amp;#x5E94;&amp;#x503C;&amp;#x8D4B;&amp;#x7ED9;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#x3002;&amp;#x81F3;&amp;#x6B64;&amp;#x5C31;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;Tag&amp;#x6807;&amp;#x7B7E;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x65B9;&amp;#x5F0F;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x5C31;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;MediaProvider&amp;#x5C06;&amp;#x5176;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x3002;&amp;#x4ECE;&amp;#x800C;&amp;#x5B8C;&amp;#x6210;&amp;#x5A92;&amp;#x4F53;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleStringTag&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name, String value)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;title;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t trim() here, to preserve the special \001 character&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// used to force sorting. The media provider will trim() before&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// inserting the title in to the database.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTitle = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;artist&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;artist;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mArtist = value.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;albumartist&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;albumartist;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            || name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;band&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;band;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAlbumArtist = value.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;album&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;album;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mAlbum = value.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;composer&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;composer;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mComposer = value.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mProcessGenres &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;genre&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;genre;&amp;quot;&lt;/span&gt;))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mGenre = getGenreName(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;year&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;year;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mYear = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;tracknumber&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;tracknumber;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// track number might be of the form &amp;quot;2/12&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we just read the number before the slash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack = (mTrack / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; + num;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;discnumber&amp;quot;&lt;/span&gt;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name.equals(&lt;span class=&quot;string&quot;&gt;&amp;quot;set&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;set;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// set number might be of the form &amp;quot;1/3&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we just read the number before the slash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; num = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTrack = (num * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) + (mTrack % &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;duration&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mDuration = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;writer&amp;quot;&lt;/span&gt;) || name.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;writer;&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWriter = value.trim();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;compilation&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCompilation = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;isdrm&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mIsDrm = (parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWidth = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name.equalsIgnoreCase(&lt;span class=&quot;string&quot;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHeight = parseSubstring(value, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//Log.v(TAG, &amp;quot;unknown tag: &amp;quot; + name + &amp;quot; (&amp;quot; + mProcessGenres + &amp;quot;)&amp;quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x81F3;&amp;#x6B64;TAG&amp;#x7684;&amp;#x89E3;&amp;#x6790;&amp;#x4EE5;&amp;#x53CA;&amp;#x89E3;&amp;#x7801;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x6700;&amp;#x540E;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;handleStringTag&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x5C06;&amp;#x89E3;&amp;#x7801;&amp;#x540E;&amp;#x7684;TAG&amp;#x5982;&amp;#x4F55;&amp;#x505A;&amp;#x5904;&amp;#x7406;&amp;#x5462;&amp;#xFF1F;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x4ECE;native&amp;#x5C42;&amp;#x4E0A;&amp;#x5347;&amp;#x5230;Java&amp;#x5C42;&amp;#x7684;&amp;#xFF0C;&amp;#x8BF4;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C31;&amp;#x5FC5;&amp;#x987B;&amp;#x8003;&amp;#x8651;android_media_MediaScanner.cpp&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x6E21;&amp;#x7C7B;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x627E;&amp;#x5230;handleStringTag&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x548C;&amp;#x5176;&amp;#x4ED6;&amp;#x4E00;&amp;#x6837;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;CallVoidMethod&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x5165;&amp;#x5230;java&amp;#x5C42;&amp;#x3002;&amp;#x8FD9;&amp;#x6837;java&amp;#x5C42;&amp;#x4E2D;&amp;#x7684;handleStringTag&amp;#x5C31;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;virtual status_t handleStringTag(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* name, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* value)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ALOGV(&lt;span class=&quot;string&quot;&gt;&amp;quot;MediaScanner handleStringTag: name(%s) and value(%s)&amp;quot;&lt;/span&gt;, name, value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jstring nameStr, valueStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((nameStr = mEnv-&amp;gt;NewStringUTF(name)) == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEnv-&amp;gt;ExceptionClear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_MEMORY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *cleaned = &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x6B63;&amp;#x5E38;&amp;#x7684;UTF-8&amp;#x5219;&amp;#x5C06;&amp;#x5176;&amp;#x7F6E;&amp;#x4E3A;&amp;#xFF1F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isValidUtf8(value)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cleaned = strdup(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *chp = cleaned;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; ch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((ch = *chp)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ch &amp;amp; &lt;span class=&quot;number&quot;&gt;0x80&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                *chp = &lt;span class=&quot;string&quot;&gt;&amp;apos;?&amp;apos;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            chp++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        value = cleaned;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    valueStr = mEnv-&amp;gt;NewStringUTF(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    free(cleaned);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (valueStr == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEnv-&amp;gt;DeleteLocalRef(nameStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mEnv-&amp;gt;ExceptionClear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; NO_MEMORY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;JAVA&amp;#x5C42;&amp;#x7684;handleStringTag&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mEnv-&amp;gt;CallVoidMethod(mClient, mHandleStringTagMethodID, nameStr, valueStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mEnv-&amp;gt;DeleteLocalRef(nameStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mEnv-&amp;gt;DeleteLocalRef(valueStr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; checkAndClearExceptionFromCallback(mEnv, &lt;span class=&quot;string&quot;&gt;&amp;quot;handleStringTag&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x6700;&amp;#x540E;&amp;#x8FD8;&amp;#x662F;&amp;#x4E0A;&amp;#x4E2A;&amp;#x56FE;&amp;#x5427;&amp;#xFF0C;&amp;#x867D;&amp;#x7136;&amp;#x6D41;&amp;#x7A0B;&amp;#x7B80;&amp;#x5355;&amp;#x4F46;&amp;#x662F;&amp;#x8FD8;&amp;#x662F;&amp;#x5F88;&amp;#x6742;&amp;#x7684;&amp;#xFF0C;&amp;#x5BB9;&amp;#x6613;&amp;#x4E71;&amp;#xFF1A;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![](/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;MediaScanner-&lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;md/&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;png)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x9644;&amp;#x5F55;&amp;#xFF1A;&amp;#x5E27;&amp;#x6807;&amp;#x8BC6;&amp;#x7684;&amp;#x542B;&amp;#x4E49;&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AENC    	Audio encryption&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;APIC   		Attached picture&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMM		Comments&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;COMR		Commercial&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ENCR		Encryption method registration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;EQUA		Equalization&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ETCO		Event timing codes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GEOB		General encapsulated object&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;GRID		Group identification registration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPLS		Involved people list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LINK		Linked information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MCDI		Music CD identifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MLLT 		MPEGlocation lookup table&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OWNE		Ownership&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PRIV		Private&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PCNT 		Playcounter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POPM		Popularimeter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POSS		Position synchronisation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RBUF		Recommended buffer size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RVAD		Relative volume adjustment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RVRB		Reverb&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYLT		Synchronized lyric/text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;SYTC		Synchronized tempo codes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TALB		Album/Movie/&lt;span class=&quot;operator&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Show&lt;/span&gt; title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TBPM 		BPM(beats per &lt;span class=&quot;keyword&quot;&gt;minute&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TCOM		Composer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TCON		&lt;span class=&quot;keyword&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TCOP		Copyright message&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TDAT 		&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TDLY		Playlist delay&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TENC		Encoded &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;TEXT&lt;/span&gt;		Lyricist/&lt;span class=&quot;built_in&quot;&gt;Text&lt;/span&gt; writer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TFLT 		Filetype&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;TIME&lt;/span&gt; 		&lt;span class=&quot;keyword&quot;&gt;Time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TIT1		&lt;span class=&quot;keyword&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;group&lt;/span&gt; deion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TIT2		Title/songname/&lt;span class=&quot;keyword&quot;&gt;content&lt;/span&gt; deion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TIT3		Subtitle/Deion refinement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TKEY		&lt;span class=&quot;keyword&quot;&gt;Initial&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;key&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TLAN		&lt;span class=&quot;keyword&quot;&gt;Language&lt;/span&gt;(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TLEN		&lt;span class=&quot;keyword&quot;&gt;Length&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TMED		Media &lt;span class=&quot;keyword&quot;&gt;type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOAL		Original album/movie/&lt;span class=&quot;keyword&quot;&gt;show&lt;/span&gt; title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOFN		Original filename&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOLY		Original lyricist(s)/&lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt; writer(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOPE		Original artist(s)/performer(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TORY		Original &lt;span class=&quot;keyword&quot;&gt;release&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;year&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TOWN 		Fileowner/licensee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPE1 		Leadperformer(s)/Soloist(s)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPE2		Band/orchestra/accompaniment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPE3		Conductor/performer refinement&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPE4		Interpreted, remixed, &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; otherwise modified &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPOS 		Partof a &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TPUB		Publisher&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRCK		Track &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;/&lt;span class=&quot;keyword&quot;&gt;Position&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRDA		Recording dates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRSN		Internet radio station &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TRSO		Internet radio station owner&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TSIZ 		&lt;span class=&quot;keyword&quot;&gt;Size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TSRC 		ISRC(international standard recording code)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TSSE		Software/Hardware &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;settings&lt;/span&gt; used &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;encoding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TYER		&lt;span class=&quot;keyword&quot;&gt;Year&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TXXX 		Userdefined &lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt; information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UFID		&lt;span class=&quot;keyword&quot;&gt;Unique&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; identifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;USER&lt;/span&gt;		Terms &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USLT		Unsychronized lyric/&lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt; tranion&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WCOM		Commercial information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WCOP		Copyright/Legal information&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WOAF		Official audio &lt;span class=&quot;keyword&quot;&gt;file&lt;/span&gt; webpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WOAR		Official artist/performer webpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WOAS		Official audio &lt;span class=&quot;keyword&quot;&gt;source&lt;/span&gt; webpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WORS		Official internet radio station homepage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WPAY		Payment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WPUB		Publishers official webpage&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WXXX 		Userdefined &lt;span class=&quot;keyword&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;link&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot;&gt;&lt;a href=&quot;#&amp;#x97F3;&amp;#x9891;&amp;#x89C6;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之MediaScanner[1]</title>
    <link href="http://yoursite.com/2016/07/28/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BMediaScanner/"/>
    <id>http://yoursite.com/2016/07/28/Android-源码分析之MediaScanner/</id>
    <published>2016-07-28T04:37:45.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;MediaScanner&amp;#x5A92;&amp;#x4F53;&amp;#x626B;&amp;#x63CF;&amp;#x5668;&amp;#x987E;&amp;#x540D;&amp;#x601D;&amp;#x4E49;&amp;#x5C31;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x626B;&amp;#x63CF;&amp;#x624B;&amp;#x673A;&amp;#x5185;&amp;#x90E8;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x7684;&amp;#x6A21;&amp;#x5757;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECA;&amp;#x5929;&amp;#x5C31;&amp;#x9488;&amp;#x5BF9;MediaScanner&amp;#x8FD9;&amp;#x4E2A;&amp;#x6A21;&amp;#x5757;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#x5B66;&amp;#x4E60;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;a href=&quot;#&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x6D41;&amp;#x7A0B;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x6D41;&amp;#x7A0B;&quot;&gt;&lt;/a&gt;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x6D41;&amp;#x7A0B;&lt;/h4&gt;&lt;h5 id=&quot;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x8005;-MediaScannerReceiver&quot;&gt;&lt;a href=&quot;#&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x8005;-MediaScannerReceiver&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x8005;  MediaScannerReceiver&quot;&gt;&lt;/a&gt;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x63A5;&amp;#x6536;&amp;#x8005;  MediaScannerReceiver&lt;/h5&gt;&lt;p&gt;MediaScannerReceiver &amp;#x7EE7;&amp;#x627F;&amp;#x81EA;BroadcastReceiver&amp;#x5B83;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x9759;&amp;#x6001;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x8FDB;&amp;#x884C;&amp;#x6CE8;&amp;#x518C;&amp;#x7684;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;receiver&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;MediaScannerReceiver&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;android.intent.action.BOOT_COMPLETED&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;android.intent.action.MEDIA_MOUNTED&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:scheme&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;android.intent.action.MEDIA_UNMOUNTED&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:scheme&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;android:scheme&lt;/span&gt;=&lt;span class=&quot;value&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;intent-filter&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;title&quot;&gt;receiver&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;MediaScannerReceiver&amp;#x63A5;&amp;#x53D7;&amp;#x4E09;&amp;#x79CD;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x5E7F;&amp;#x64AD;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Intent.ACTION_BOOT_COMPLETED:&amp;#x5F00;&amp;#x673A;&amp;#x5E7F;&amp;#x64AD;&amp;#xFF0C;&amp;#x5728;&amp;#x6536;&amp;#x5230;&amp;#x5F00;&amp;#x673A;&amp;#x5E7F;&amp;#x64AD;&amp;#x540E;&amp;#x4F1A;&amp;#x626B;&amp;#x63CF;&amp;#x5185;&amp;#x90E8;&amp;#x548C;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0B;&amp;#x7684;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;Intent.ACTION_MEDIA_MOUNTED:&amp;#x5728;&amp;#x67D0;&amp;#x4E2A;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x52A0;&amp;#x8F7D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;Intent.ACTION_MEDIA_UNMOUNTED: &amp;#x5728;&amp;#x67D0;&amp;#x4E2A;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x5378;&amp;#x8F7D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&lt;/li&gt;
&lt;li&gt;Intent.ACTION_MEDIA_SCANNER_SCAN_FILE&amp;#xFF1A;&amp;#x5728;&amp;#x63A5;&amp;#x53D7;&amp;#x5230;&amp;#x5BF9;&amp;#x67D0;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x8FDB;&amp;#x884C;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;scanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x8FDB;&amp;#x884C;&amp;#x626B;&amp;#x63CF;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x6BCF;&amp;#x79CD;&amp;#x5E7F;&amp;#x64AD;&amp;#x5230;&amp;#x6765;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x53C8;&amp;#x4F1A;&amp;#x8FDB;&amp;#x884C;&amp;#x600E;&amp;#x6837;&amp;#x7684;&amp;#x54CD;&amp;#x5E94;&amp;#x5462;&amp;#xFF1F;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; onReceive(Context context, Intent intent) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    final &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; action = intent&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getAction();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    final Uri uri = intent&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getData();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6536;&amp;#x5230;&amp;#x5F00;&amp;#x673A;&amp;#x5E7F;&amp;#x64AD;&amp;#x540E;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Intent&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;ACTION_BOOT_COMPLETED&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(action)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Scan both internal and external storage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//&amp;#x626B;&amp;#x63CF;&amp;#x5185;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x4E2D;/system/media&amp;#x91CC;&amp;#x9762;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x662F;&amp;#x94C3;&amp;#x58F0;&amp;#x7B49;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scan(context, MediaProvider&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;INTERNAL_VOLUME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x626B;&amp;#x63CF;&amp;#x624B;&amp;#x673A;&amp;#x7684;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5B9E;&amp;#x9645;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x662F;/mnt/sdcard/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scan(context, MediaProvider&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;EXTERNAL_VOLUME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (uri&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getScheme()&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// handle intents related to external storage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; path = uri&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; externalStoragePath = Environment&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getExternalStorageDirectory()&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; legacyPath = Environment&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getLegacyExternalStorageDirectory()&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            try {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                path = &lt;span class=&quot;literal&quot;&gt;new&lt;/span&gt; File(path)&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getCanonicalPath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } catch (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;e(&lt;span class=&quot;built_in&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;couldn&amp;apos;t canonicalize &amp;quot;&lt;/span&gt; + path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (path&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;startsWith(legacyPath)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                path = externalStoragePath + path&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;substring(legacyPath&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;length());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;d(&lt;span class=&quot;built_in&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;action: &amp;quot;&lt;/span&gt; + action + &lt;span class=&quot;string&quot;&gt;&amp;quot; path: &amp;quot;&lt;/span&gt; + path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x6536;&amp;#x5230;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x52A0;&amp;#x8F7D;&amp;#x5B8C;&amp;#x6210;&amp;#x5E7F;&amp;#x64AD;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Intent&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;ACTION_MEDIA_MOUNTED&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(action)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// scan whenever any volume is mounted&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scan(context, MediaProvider&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;EXTERNAL_VOLUME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x8BF7;&amp;#x6C42;&amp;#x7684;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x8981;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x5C5E;&amp;#x4E8E;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x8DEF;&amp;#x5F84;&amp;#x5219;&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (Intent&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;ACTION_MEDIA_SCANNER_SCAN_FILE&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(action) &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    path != &lt;span class=&quot;built_in&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; path&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;startsWith(externalStoragePath + &lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scanFile(context, path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x6574;&amp;#x4E2A;&amp;#x626B;&amp;#x63CF;&amp;#x5F52;&amp;#x7ED3;&amp;#x4E8E;scan&amp;#x548C;scanFile&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x7279;&amp;#x522B;&amp;#x662F;scan&amp;#x65B9;&amp;#x6CD5;&amp;#x65E2;&amp;#x80FD;&amp;#x591F;&amp;#x626B;&amp;#x63CF;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x53C8;&amp;#x80FD;&amp;#x626B;&amp;#x63CF;&amp;#x624B;&amp;#x673A;&amp;#x5185;&amp;#x5B58;&amp;#xFF0C;&amp;#x552F;&amp;#x4E00;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x800C;&amp;#x5DF2;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, String volume)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bundle args = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    args.putString(&lt;span class=&quot;string&quot;&gt;&amp;quot;volume&amp;quot;&lt;/span&gt;, volume);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context.startService(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(context, MediaScannerService.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;).putExtras(args));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scanFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, String path)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Bundle args = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Bundle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    args.putString(&lt;span class=&quot;string&quot;&gt;&amp;quot;filepath&amp;quot;&lt;/span&gt;, path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    context.startService(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(context, MediaScannerService.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;).putExtras(args));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5427;&amp;#xFF0C;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x5C06;&amp;#x8DEF;&amp;#x5F84;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;MediaScannerService&amp;#x5C31;OK&amp;#x4E86;&amp;#xFF0C;&amp;#x552F;&amp;#x4E00;&amp;#x7684;&amp;#x4E0D;&amp;#x540C;&amp;#x662F;&amp;#x643A;&amp;#x5E26;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;key&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5F53;&amp;#x8C03;&amp;#x7528;startService&amp;#x540E;&amp;#x5C31;&amp;#x4F1A;&amp;#x542F;&amp;#x52A8;MediaScannerService&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;MediaSannerService&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x540E;&amp;#x53F0;&amp;#x5904;&amp;#x7406;&amp;#x8005;-MediaScannerService&quot;&gt;&lt;a href=&quot;#&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x540E;&amp;#x53F0;&amp;#x5904;&amp;#x7406;&amp;#x8005;-MediaScannerService&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x540E;&amp;#x53F0;&amp;#x5904;&amp;#x7406;&amp;#x8005; MediaScannerService&quot;&gt;&lt;/a&gt;&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x540E;&amp;#x53F0;&amp;#x5904;&amp;#x7406;&amp;#x8005; MediaScannerService&lt;/h5&gt;&lt;p&gt;&amp;#x5728;Scan&amp;#x548C;ScanFile&amp;#x542F;&amp;#x52A8;&amp;#x9996;&amp;#x6B21;MediaScannerService&amp;#x7684;&amp;#x65F6;&amp;#x5019;MediaScannerService&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;onCreate&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x8FD9;&amp;#x4E2A;&amp;#x670D;&amp;#x52A1;&amp;#xFF0C;&amp;#x5728;onCreate&amp;#x4E2D;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x662F;&amp;#x542F;&amp;#x52A8;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7528;&amp;#x4E8E;&amp;#x626B;&amp;#x63CF;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;Service&amp;#x8FD0;&amp;#x884C;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x76F4;&amp;#x63A5;&amp;#x5728;Service&amp;#x4E2D;&amp;#x6267;&amp;#x884C;&amp;#x626B;&amp;#x63CF;&amp;#x4EFB;&amp;#x52A1;&amp;#x7684;&amp;#x8BDD;&amp;#x4F1A;&amp;#x963B;&amp;#x585E;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PowerManager pm = (PowerManager)getSystemService(Context.POWER_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, TAG);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StorageManager storageManager = (StorageManager)getSystemService(Context.STORAGE_SERVICE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExternalStoragePaths = storageManager.getVolumePaths();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Start up the thread running the service.  Note that we create a&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// separate thread because the service normally runs in the process&amp;apos;s&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// main thread, which we don&amp;apos;t want to block.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Thread thr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;MediaScannerService&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    thr.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x7EBF;&amp;#x7A0B;thr&amp;#x4E2D;&amp;#x53C8;&amp;#x662F;&amp;#x505A;&amp;#x4E86;&amp;#x54EA;&amp;#x4E9B;&amp;#x5DE5;&amp;#x4F5C;&amp;#x5462;&amp;#xFF1F;&amp;#x4ECE;run&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5728;thr&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x662F;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;ServiceHandler&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// reduce priority below other background threads to avoid interfering&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// with other services at boot time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND +Process.THREAD_PRIORITY_LESS_FAVORABLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mServiceLooper = Looper.myLooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mServiceHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServiceHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.loop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E4B;&amp;#x540E;&amp;#x8C03;&amp;#x7528;startService&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;MediaScannerService&amp;#x7C7B;&amp;#x4E2D;&amp;#x7684;onStartCommand&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x3002;&amp;#x5728;onStartCommand&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5411;mServiceHandler&amp;#x53D1;&amp;#x9001;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x3002;&amp;#x5728;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;mServiceHandler&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x4E2D;&amp;#x5305;&amp;#x542B;&amp;#x4E86;&amp;#x4ECE;Intent&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x7684;extra&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x51ED;&amp;#x501F;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4FE1;&amp;#x606F;&amp;#x53EF;&amp;#x4EE5;&amp;#x533A;&amp;#x5206;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x6574;&amp;#x4E2A;valum&amp;#x8FD8;&amp;#x662F;&amp;#x5355;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStartCommand&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Intent intent, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; flags, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startId)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (mServiceHandler == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                wait(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (intent == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;Intent is null in onStartCommand: &amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; NullPointerException());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Service.START_NOT_STICKY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Message msg = mServiceHandler.obtainMessage();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg.arg1 = startId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg.obj = intent.getExtras();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mServiceHandler.sendMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Try again later if we are killed before we can finish scanning.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Service.START_REDELIVER_INTENT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServiceHandler&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void handleMessage(&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt; msg)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Bundle&lt;/span&gt; arguments = (&lt;span class=&quot;type&quot;&gt;Bundle&lt;/span&gt;) msg.obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; filePath = arguments.getString(&lt;span class=&quot;string&quot;&gt;&amp;quot;filepath&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x5355;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (filePath != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;IBinder&lt;/span&gt; binder = arguments.getIBinder(&lt;span class=&quot;string&quot;&gt;&amp;quot;listener&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;IMediaScannerListener&lt;/span&gt; listener = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        (binder == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; : &lt;span class=&quot;type&quot;&gt;IMediaScannerListener&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Stub&lt;/span&gt;.asInterface(binder));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;Uri&lt;/span&gt; uri = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;scanFile&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    uri = scanFile(filePath, arguments.getString(&lt;span class=&quot;string&quot;&gt;&amp;quot;mimetype&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;type&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Exception scanning file&amp;quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    listener.scanCompleted(filePath, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x4E00;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; volume = arguments.getString(&lt;span class=&quot;string&quot;&gt;&amp;quot;volume&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[] directories = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;MediaProvider&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;INTERNAL_VOLUME&lt;/span&gt;.equals(volume)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x5185;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// scan internal media storage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    directories = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[] {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;type&quot;&gt;Environment&lt;/span&gt;.getRootDirectory() + &lt;span class=&quot;string&quot;&gt;&amp;quot;/media&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;type&quot;&gt;Environment&lt;/span&gt;.getOemDirectory() + &lt;span class=&quot;string&quot;&gt;&amp;quot;/media&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;MediaProvider&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;EXTERNAL_VOLUME&lt;/span&gt;.equals(volume)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// scan external storage volumes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x662F;&amp;#x626B;&amp;#x63CF;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    directories = mExternalStoragePaths;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (directories != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;) &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;type&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;start scanning volume &amp;quot;&lt;/span&gt; + volume + &lt;span class=&quot;string&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            + &lt;span class=&quot;type&quot;&gt;Arrays&lt;/span&gt;.toString(directories));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;scan&amp;#x65B9;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    scan(directories, volume);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;) &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.d(&lt;span class=&quot;type&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;done scanning volume &amp;quot;&lt;/span&gt; + volume);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;type&quot;&gt;TAG&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;Exception in handleMessage&amp;quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x626B;&amp;#x63CF;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x9000;&amp;#x51FA;&amp;#x670D;&amp;#x52A1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stopSelf(msg.arg1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5728;mServiceHandler&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x63D0;&amp;#x53D6;Intent&amp;#x4E2D;&amp;#x643A;&amp;#x5E26;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x643A;&amp;#x5E26;&amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x4E3A;filepath&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5219;&amp;#x8BF4;&amp;#x660E;&amp;#x7684;&amp;#x662F;&amp;#x9700;&amp;#x8981;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x4E3A;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5219;&amp;#x8C03;&amp;#x7528;scanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x5BF9;&amp;#x6307;&amp;#x5B9A;&amp;#x6587;&amp;#x4EF6;&amp;#x8DEF;&amp;#x5F84;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x8FDB;&amp;#x884C;&amp;#x626B;&amp;#x63CF;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x643A;&amp;#x5E26;&amp;#x7684;&amp;#x662F;&amp;#x5173;&amp;#x952E;&amp;#x5B57;&amp;#x4E3A;volume&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x5219;&amp;#x8BF4;&amp;#x660E;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E3A;&amp;#x626B;&amp;#x63CF;&amp;#x52A0;&amp;#x8F7D;&amp;#x5377;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E3A;scan&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x5173;&amp;#x6CE8;&amp;#x5BF9;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x52A0;&amp;#x8F7D;&amp;#x5377;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&amp;#x5BF9;&amp;#x5355;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x539F;&amp;#x7406;&amp;#x5927;&amp;#x81F4;&amp;#x76F8;&amp;#x540C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; scan(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt;[] directories, &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; volumeName) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri = &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt;.parse(&lt;span class=&quot;string&quot;&gt;&amp;quot;file://&amp;quot;&lt;/span&gt; + directories[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// don&amp;apos;t sleep while scanning&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5524;&amp;#x9192;&amp;#x9501;&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624B;&amp;#x673A;&amp;#x53D1;&amp;#x751F;&amp;#x7761;&amp;#x7720;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWakeLock.acquire();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ContentValues values = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentValues();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(MediaStore.MEDIA_SCANNER_VOLUME, volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; scanUri = getContentResolver().insert(MediaStore.getMediaScannerUri(), values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x53D1;&amp;#x9001;ACTION_MEDIA_SCANNER_STARTED&amp;#x5E7F;&amp;#x64AD;&amp;#x901A;&amp;#x77E5;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x4EF6;&amp;#x626B;&amp;#x63CF;&amp;#x5373;&amp;#x5C06;&amp;#x5F00;&amp;#x59CB;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sendBroadcast(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.ACTION_MEDIA_SCANNER_STARTED, uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (volumeName.equals(MediaProvider.EXTERNAL_VOLUME)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                openDatabase(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x521B;&amp;#x5EFA;MediaScanner&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaScanner scanner = createMediaScanner();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scanner.scanDirectories(directories, volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;exception in MediaScanner.scan()&amp;quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getContentResolver().delete(scanUri, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x77E5;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x4EF6;&amp;#x626B;&amp;#x63CF;&amp;#x7ED3;&amp;#x675F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sendBroadcast(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Intent(Intent.ACTION_MEDIA_SCANNER_FINISHED, uri));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x91CA;&amp;#x653E;&amp;#x5524;&amp;#x9192;&amp;#x9501;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mWakeLock.release();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E8E;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x8017;&amp;#x65F6;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&amp;#x4E4B;&amp;#x524D;&amp;#x5FC5;&amp;#x987B;&amp;#x83B7;&amp;#x5F97;&amp;#x7535;&amp;#x6E90;&amp;#x9501;&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x624B;&amp;#x673A;&amp;#x4F11;&amp;#x7720;&amp;#xFF0C;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x91CA;&amp;#x653E;&amp;#x7535;&amp;#x6E90;&amp;#x9501;&amp;#x3002;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x5F00;&amp;#x59CB;&amp;#x4E4B;&amp;#x524D;&amp;#x4F1A;&amp;#x5411;&amp;#x7CFB;&amp;#x7EDF;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;Intent.ACTION_MEDIA_SCANNER_STARTED&amp;#x7684;&amp;#x5E7F;&amp;#x64AD;&amp;#xFF0C;&amp;#x901A;&amp;#x77E5;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x4EF6;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x5176;&amp;#x4ED6;&amp;#x90E8;&amp;#x4EF6;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x76D1;&amp;#x542C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5E7F;&amp;#x64AD;&amp;#x3002;&amp;#x6765;&amp;#x91C7;&amp;#x53D6;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x540C;&amp;#x6837;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x4F1A;&amp;#x5411;&amp;#x7CFB;&amp;#x7EDF;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;Intent.ACTION_MEDIA_SCANNER_FINISHED&amp;#x5E7F;&amp;#x64AD;&amp;#x3002;&amp;#x800C;&amp;#x626B;&amp;#x63CF;&amp;#x4EFB;&amp;#x52A1;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MediaScanner&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;scanDirectories&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x8F6C;&amp;#x4E86;&amp;#x4E00;&amp;#x5708;&amp;#x540E;&amp;#x7EC8;&amp;#x4E8E;&amp;#x8FDB;&amp;#x5165;frameworks&amp;#x5C42;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;frameworks&amp;#x5C42;&amp;#x7684;MediaScanner&amp;#x7C7B;&lt;br&gt;&amp;#x5728;MediaScanner&amp;#x7C7B;&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x52A0;&amp;#x8F7D;media_jni&amp;#x5E93;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;native_init&amp;#x8FD9;&amp;#x4E2A;native&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.loadLibrary(&lt;span class=&quot;string&quot;&gt;&amp;quot;media_jni&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    native_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public MediaScanner(Context c) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    native_setup()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mContext = c&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPackageName = c.getPackageName()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBitmapOptions.inSampleSize = 1&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBitmapOptions.inJustDecodeBounds = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setDefaultRingtoneFileNames()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExternalStoragePath = Environment.getExternalStorageDirectory().getAbsolutePath()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mExternalIsEmulated = Environment.isExternalStorageEmulated()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //mClient.testGenreNameConverter()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;MediaScanner&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6700;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;native_setup()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;native_setup&amp;#x4E5F;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;native&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;native_init&amp;#x548C;native_setup&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;native&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;android_media_MediaScanner_native_init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(JNIEnv *env)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass clazz = env-&amp;gt;FindClass(kClassMediaScanner);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (clazz == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fields.context = env-&amp;gt;GetFieldID(clazz, &lt;span class=&quot;string&quot;&gt;&amp;quot;mNativeContext&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fields.context == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;native_init&amp;#x8D1F;&amp;#x8D23;&amp;#x83B7;&amp;#x53D6;MediaScanner&amp;#x4E2D;&amp;#x7684;mNativeContext&amp;#x53D8;&amp;#x91CF;&amp;#x5E76;&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;fields.context&lt;br&gt;native_setup&amp;#x8D1F;&amp;#x8D23;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MediaScanner&amp;#x7684;&amp;#x5B50;&amp;#x7C7B;StagefrightMediaScanner&amp;#x5E76;&amp;#x5C06;native_init&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x4E0A;&amp;#x4E0B;&amp;#x6587;&amp;#x4F20;&amp;#x7ED9;StagefrightMediaScanner&amp;#x5BF9;&amp;#x8C61;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android_media_MediaScanner_native_setup&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;JNIEnv&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;*env, jobject thiz)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaScanner *&lt;/span&gt;mp = new StagefrightMediaScanner&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;mp&lt;/span&gt; == NULL)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        jniThrowException&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;env&lt;/span&gt;, kRunTimeException, &lt;span class=&quot;string&quot;&gt;&amp;quot;Out of memory&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    env-&amp;gt;SetLongField&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;thiz&lt;/span&gt;, fields.context, &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;jlong&lt;/span&gt;)&lt;/span&gt;mp)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x7740;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;scanDirectories&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; scanDirectories(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] directories, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; volumeName) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//1.&amp;#x626B;&amp;#x63CF;&amp;#x524D;&amp;#x9884;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initialize(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//2. &amp;#x9884;&amp;#x626B;&amp;#x63CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prescan(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ENABLE_BULK_INSERTS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// create MediaInserter for bulk inserts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaInserter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaInserter(mMediaProvider, mPackageName, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; directories.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//3.&amp;#x626B;&amp;#x63CF;&amp;#x67D0;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processDirectory(directories[i], mClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ENABLE_BULK_INSERTS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// flush remaining inserts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaInserter.flushAll();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaInserter = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//4. &amp;#x626B;&amp;#x63CF;&amp;#x540E;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postscan(directories);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x8FC7;&amp;#x6EE4;&amp;#x6389;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x65E0;&amp;#x5173;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x6574;&amp;#x4E2A;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5206;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x56DB;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;initialize &amp;#x626B;&amp;#x63CF;&amp;#x524D;&amp;#x9884;&amp;#x5904;&amp;#x7406;&lt;/li&gt;
&lt;li&gt;prescan  &amp;#x9884;&amp;#x626B;&amp;#x63CF;&lt;/li&gt;
&lt;li&gt;processDirectory&amp;#x626B;&amp;#x63CF;&amp;#x67D0;&amp;#x4E2A;&amp;#x76EE;&amp;#x5F55;&lt;/li&gt;
&lt;li&gt;postscan&amp;#x626B;&amp;#x63CF;&amp;#x540E;&amp;#x5904;&amp;#x7406;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;#x626B;&amp;#x63CF;&amp;#x524D;&amp;#x9884;&amp;#x5904;&amp;#x7406;:&lt;br&gt;&amp;#x5728;initialize&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5404;&amp;#x79CD;Uri&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&amp;#x5305;&amp;#x62EC;&amp;#x97F3;&amp;#x9891;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x56FE;&amp;#x50CF;&amp;#xFF0C;&amp;#x56FE;&amp;#x50CF;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#xFF0C;&amp;#x6587;&amp;#x4EF6;&amp;#x7B49;Uri&amp;#x5730;&amp;#x5740;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x662F;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x5219;&amp;#x9700;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4EE5;&amp;#x53CA;&amp;#x98CE;&amp;#x683C;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;void&lt;/span&gt; initialize(&lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; volumeName) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaProvider = mContext&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentResolver()&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;acquireProvider(&lt;span class=&quot;string&quot;&gt;&amp;quot;media&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAudioUri = Audio&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;Media&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mVideoUri = Video&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;Media&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mImagesUri = Images&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;Media&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mThumbsUri = Images&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;Thumbnails&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFilesUri = Files&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFilesUriNoNotify = mFilesUri&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;buildUpon()&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;appendQueryParameter(&lt;span class=&quot;string&quot;&gt;&amp;quot;nonotify&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;subst&quot;&gt;!&lt;/span&gt;volumeName&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;equals&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;internal&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we only support playlists on external media&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mProcessPlaylists = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mProcessGenres = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlaylistsUri = Playlists&lt;span class=&quot;built_in&quot;&gt;.&lt;/span&gt;getContentUri(volumeName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mCaseInsensitivePaths = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#x9884;&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;:&lt;br&gt;&amp;#x9884;&amp;#x626B;&amp;#x63CF;&amp;#x5904;&amp;#x7406;&amp;#x4E3B;&amp;#x8981;&amp;#x5B8C;&amp;#x6210;&amp;#x5982;&amp;#x4E0B;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF1A;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5EFA;&amp;#x7ACB;mPlayLists&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x5728;&amp;#x4E3B;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5BF9;&amp;#x4E8E;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x662F;&amp;#x653E;&amp;#x5230;&amp;#x540E;&amp;#x9762;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x8981;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;mPlayLists&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x50A8;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x8BB0;&amp;#x5F55;&amp;#xFF0C;&amp;#x5728;beginFile&amp;#x626B;&amp;#x5230;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9700;&amp;#x8981;&amp;#x5148;&amp;#x5C06;&amp;#x5176;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;mPlayLists&amp;#x4E2D;&amp;#xFF0C;&amp;#x7B49;&amp;#x5230;postscan&amp;#x9636;&amp;#x6BB5;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x7EDF;&amp;#x4E00;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x626B;&amp;#x63CF;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x5E76;&amp;#x67E5;&amp;#x627E;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x7684;&amp;#x6BCF;&amp;#x4E00;&amp;#x9879;&amp;#x7684;&amp;#x672C;&amp;#x5730;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6BCF;&amp;#x6B21;&amp;#x53EA;&amp;#x626B;&amp;#x63CF;1000&amp;#x6761;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x56E0;&amp;#x4E3A;&amp;#x52A0;&amp;#x8F7D;&amp;#x592A;&amp;#x591A;&amp;#x6570;&amp;#x636E;&amp;#x800C;&amp;#x51FA;&amp;#x73B0;&amp;#x5361;&amp;#x987F;&amp;#x73B0;&amp;#x8C61;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x91CC;&amp;#x5E76;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5220;&amp;#x9664;&amp;#x771F;&amp;#x5B9E;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x8FD9;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5982;&amp;#x679C;&amp;#x6587;&amp;#x4EF6;&amp;#x786E;&amp;#x5B9E;&amp;#x6D88;&amp;#x5931;&amp;#x4E86;&amp;#x5219;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x5220;&amp;#x9664;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x671F;&amp;#x95F4;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x88AB;&amp;#x5378;&amp;#x8F7D;&amp;#x800C;&amp;#x540E;&amp;#x53C8;&amp;#x6302;&amp;#x8F7D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5220;&amp;#x9664;&amp;#x64CD;&amp;#x4F5C;&amp;#x4E5F;&amp;#x662F;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x9879;&amp;#x6240;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x672C;&amp;#x5730;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5219;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x4ECE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5220;&amp;#x9664;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7C7B;&amp;#x578B;&amp;#x5219;&amp;#x4E0D;&amp;#x5220;&amp;#x9664;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x662F;&amp;#x7531;&amp;#x4E8E;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4FE1;&amp;#x606F;&amp;#x88AB;&amp;#x7528;&amp;#x6237;&amp;#x4FEE;&amp;#x6539;&amp;#x5BFC;&amp;#x81F4;&amp;#x7684;&amp;#x3002;&amp;#x7528;&amp;#x6237;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x64AD;&amp;#x653E;&amp;#x5668;&amp;#x4E2D;&amp;#x5220;&amp;#x9664;&amp;#x5B83;&amp;#x4EEC;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x6E05;&amp;#x7A7A;&amp;#x7F3A;&amp;#x4E4F;&amp;#x5B9E;&amp;#x9645;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x9879;&amp;#x540E;&amp;#x91CD;&amp;#x65B0;&amp;#x67E5;&amp;#x8BE2;&amp;#x56FE;&amp;#x7247;&amp;#x6570;&amp;#x76EE;&amp;#xFF0C;&amp;#x97F3;&amp;#x9891;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#x7684;&amp;#x6570;&amp;#x76EE;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; prescan(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; filePath, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; prescanFiles) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; RemoteException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Cursor c = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; where = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] selectionArgs = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5EFA;&amp;#x7ACB;mPlayLists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPlayLists == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayLists = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;FileEntry&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayLists.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x8FF0;&amp;#x5904;&amp;#x7406;mPlayLists&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x6E05;&amp;#x7A7A;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (filePath != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// query for only one file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        where = MediaStore.Files.FileColumns._ID + &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;gt;?&amp;quot;&lt;/span&gt; +&lt;span class=&quot;string&quot;&gt;&amp;quot; AND &amp;quot;&lt;/span&gt; + Files.FileColumns.DATA + &lt;span class=&quot;string&quot;&gt;&amp;quot;=?&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectionArgs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, filePath };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        where = MediaStore.Files.FileColumns._ID + &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;gt;?&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        selectionArgs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] { &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Tell the provider to not delete the file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If the file is truly gone the delete is unnecessary, and we want to avoid&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// accidentally deleting files that are really there (this may happen if the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// filesystem is mounted and unmounted while the scanner is running).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x544A;&amp;#x8BC9;provider&amp;#x4E0D;&amp;#x8981;&amp;#x5220;&amp;#x9664;&amp;#x90A3;&amp;#x4E9B;&amp;#x901A;&amp;#x8FC7;&amp;#x626B;&amp;#x63CF;&amp;#x53D1;&amp;#x73B0;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#x4E3A;&amp;#x7684;&amp;#x662F;&amp;#x907F;&amp;#x514D;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6587;&amp;#x4EF6;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5378;&amp;#x8F7D;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x4EE5;&amp;#x540E;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x53C8;&amp;#x6302;&amp;#x8F7D;&amp;#x4E0A;&amp;#x4E86;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Uri.Builder builder = mFilesUri.buildUpon();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    builder.appendQueryParameter(MediaStore.PARAM_DELETE_DATA, &lt;span class=&quot;string&quot;&gt;&amp;quot;false&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaBulkDeleter deleter = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MediaBulkDeleter(mMediaProvider, mPackageName,builder.build());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Build the list of files from the content provider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prescanFiles) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// First read existing files from the files table.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Because we&amp;apos;ll be deleting entries for missing files as we go,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we need to query the database in small batches, to avoid problems&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// with CursorWindow positioning.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastId = Long.MIN_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Uri limitUri = mFilesUri.buildUpon().appendQueryParameter(&lt;span class=&quot;string&quot;&gt;&amp;quot;limit&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;1000&amp;quot;&lt;/span&gt;).build();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mWasEmptyPriorToScan = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                selectionArgs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt; + lastId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    c.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    c = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                c = mMediaProvider.query(mPackageName, limitUri, FILES_PRESCAN_PROJECTION,where, selectionArgs, MediaStore.Files.FileColumns._ID, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; num = c.getCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (num == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3A;0&amp;#x8868;&amp;#x793A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x67E5;&amp;#x8BE2;&amp;#x5B8C;&amp;#x5168;&amp;#x90E8;&amp;#x6587;&amp;#x4EF6;&amp;#x4FE1;&amp;#x606F;,&amp;#x9000;&amp;#x51FA;&amp;#x5FAA;&amp;#x73AF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mWasEmptyPriorToScan = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F00;&amp;#x59CB;&amp;#x83B7;&amp;#x53D6;&amp;#x8FD9;&amp;#x4E00;&amp;#x6279;&amp;#x67E5;&amp;#x8BE2;&amp;#x5230;&amp;#x7684;&amp;#x8981;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&amp;#x7B49;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (c.moveToNext()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; rowId = c.getLong(FILES_PRESCAN_ID_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path = c.getString(FILES_PRESCAN_PATH_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; format = c.getInt(FILES_PRESCAN_FORMAT_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified = c.getLong(FILES_PRESCAN_DATE_MODIFIED_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    lastId = rowId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Only consider entries with absolute path names.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// This allows storing URIs in the database without the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// media scanner removing them.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (path != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; path.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; exists = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x67E5;&amp;#x770B;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5BF9;&amp;#x5E94;&amp;#x9879;&amp;#x7684;&amp;#x672C;&amp;#x5730;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            exists = Os.access(path, android.system.OsConstants.F_OK);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ErrnoException e1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!exists &amp;amp;&amp;amp; !MtpConstants.isAbstractObject(format)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// do not delete missing playlists, since they may have been&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// modified by the user.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// The user can delete them in the media player instead.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;// instead, clear the path and lastModified fields in the row&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            MediaFile.MediaFileType mediaFileType = MediaFile.getFileType(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; fileType = (mediaFileType == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : mediaFileType.fileType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x8BB0;&amp;#x5F55;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5728;&amp;#x672C;&amp;#x5730;&amp;#x4E2D;&amp;#x6587;&amp;#x4EF6;&amp;#x5E76;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5E76;&amp;#x4E14;&amp;#x4E22;&amp;#x5931;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x4E0D;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x5219;&amp;#x5C06;&amp;#x8BB0;&amp;#x5F55;&amp;#x4ECE;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5220;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7C7B;&amp;#x578B;&amp;#x5219;&amp;#x4E0D;&amp;#x5220;&amp;#x9664;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!MediaFile.isPlayListFileType(fileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                deleter.delete(rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (path.toLowerCase(Locale.US).endsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;/.nomedia&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    deleter.flush();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; parent = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path).getParent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                    mMediaProvider.call(mPackageName, MediaStore.UNHIDE_CALL,parent, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deleter.flush();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// compute original size of images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOriginalCount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    c = mMediaProvider.query(mPackageName, mImagesUri, ID_PROJECTION, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mOriginalCount = c.getCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x9884;&amp;#x5904;&amp;#x7406;&amp;#x4FDD;&amp;#x8BC1;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0E;&amp;#x672C;&amp;#x5730;&amp;#x7684;&amp;#x5B9E;&amp;#x9645;&amp;#x6587;&amp;#x4EF6;&amp;#x5C06;&amp;#x4E00;&amp;#x4E00;&amp;#x5BF9;&amp;#x5E94;&amp;#x3002;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x8FDB;&amp;#x5165;&amp;#x4E86;&amp;#x626B;&amp;#x63CF;&amp;#x9636;&amp;#x6BB5;&amp;#x5728;scanDirectories&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x9700;&amp;#x8981;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x76EE;&amp;#x5F55;&amp;#x8C03;&amp;#x7528;processDirectory(directories[i], mClient);&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;processDirectory&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;nativie&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&amp;#x5728;JNI&amp;#x5C42;&amp;#x7684;android_media_MediaScanner_processDirectory&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;native&amp;#x5C42;&amp;#x7684;MediaScanner.cpp&amp;#x7684;processDirectory&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android_media_MediaScanner_processDirectory(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;JNIEnv&lt;/span&gt; *env, jobject thiz, jstring path, jobject client)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;ALOGV&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;processDirectory&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x83B7;&amp;#x5F97;&lt;span class=&quot;type&quot;&gt;Native&lt;/span&gt;&amp;#x5C42;&amp;#x7684;&amp;#x5A92;&amp;#x4F53;&amp;#x626B;&amp;#x63CF;&amp;#x5668;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MediaScanner&lt;/span&gt; *mp = getNativeScanner_l(env, thiz);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //.......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&amp;#x8FD9;&amp;#x91CC;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&lt;span class=&quot;type&quot;&gt;MyMediaScannerClient&lt;/span&gt;&amp;#x5BF9;&amp;#x8C61;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x9012;&amp;#x5230;processDirectory&amp;#x4E2D;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MyMediaScannerClient&lt;/span&gt; myClient(env, client);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = mp-&amp;gt;processDirectory(pathStr, myClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //............&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MediaScanner&lt;/span&gt;::processDirectory(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;char&lt;/span&gt; *path, &lt;span class=&quot;type&quot;&gt;MediaScannerClient&lt;/span&gt; &amp;amp;client) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //..........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    client.setLocale(locale());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ////&amp;#x8C03;&amp;#x7528;doProcessDirectory&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = doProcessDirectory(pathBuffer, pathRemaining, client, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //.....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;native&amp;#x5C42;MediaScannner&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5B8C;&amp;#x6210;&amp;#x626B;&amp;#x63CF;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7684;&amp;#xFF1A;&amp;#x5728;MediaScannner&amp;#x4E2D;&amp;#x7684;processDirectory &amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x626B;&amp;#x63CF;&amp;#x8DEF;&amp;#x5F84;&amp;#x8C03;&amp;#x7528;&amp;#x4E00;&amp;#x6B21;processDirectory&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;path&amp;#x4E3A;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x6216;&amp;#x8005;&amp;#x5185;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x8DEF;&amp;#x5F84;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MediaScanner&lt;/span&gt;::doProcessDirectory(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;char&lt;/span&gt; *path, &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; pathRemaining, &lt;span class=&quot;type&quot;&gt;MediaScannerClient&lt;/span&gt; &amp;amp;client, &lt;span class=&quot;type&quot;&gt;bool&lt;/span&gt; noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //.......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;DIR&lt;/span&gt;* dir = opendir(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //...........&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;MediaScanResult&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;MEDIA_SCAN_RESULT_OK&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ((entry = readdir(dir))) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (doProcessDirectoryEntry(path, pathRemaining, client, noMedia, entry, fileSpot) == &lt;span class=&quot;type&quot;&gt;MEDIA_SCAN_RESULT_ERROR&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;MEDIA_SCAN_RESULT_ERROR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    closedir(dir);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;doProcessDirectory&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4F1A;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E0B;&amp;#x7684;&amp;#x5B50;&amp;#x6587;&amp;#x4EF6;&amp;#x8C03;&amp;#x7528;doProcessDirectoryEntry&amp;#x8FDB;&amp;#x884C;&amp;#x626B;&amp;#x63CF;&amp;#x3002;&lt;br&gt;&amp;#x5728;&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&amp;#x4E4B;&amp;#x524D;&amp;#x9700;&amp;#x4E8B;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x8FDB;&amp;#x884C;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#x76EE;&amp;#x5F55;&amp;#x5219;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;client.scanFile&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5C06;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x4EA4;&amp;#x7ED9;MyMediaScannerClient&amp;#xFF0C;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;doProcessDirectory&amp;#x5BF9;&amp;#x8BE5;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x7684;&amp;#x5B50;&amp;#x6587;&amp;#x4EF6;&amp;#x518D;&amp;#x8FDB;&amp;#x884C;&amp;#x9012;&amp;#x5F52;&amp;#x626B;&amp;#x63CF;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x5219;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;client.scanFile&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E0E;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#x76EE;&amp;#x5F55;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x662F;&amp;#x5F53;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8C03;&amp;#x7528;client.scanFile&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F20;&amp;#x5165;isDirectory&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;false&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MediaScanResult MediaScanner::doProcessDirectoryEntry(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *path, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pathRemaining, MediaScannerClient &amp;amp;client, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; noMedia,&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; dirent* entry, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* fileSpot) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; stat statbuf;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* name = entry-&amp;gt;d_name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == DT_DIR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// report the directory to the client&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x76EE;&amp;#x5F55;&amp;#x7C7B;&amp;#x578B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (stat(path, &amp;amp;statbuf) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;client.scanFile&amp;#x626B;&amp;#x63CF;&amp;#x76EE;&amp;#x5F55;&amp;#xFF1A;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;isDirectory = true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = client.scanFile(path, statbuf.st_mtime, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*isDirectory*/&lt;/span&gt;, childNoMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// and now process its contents&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5730;&amp;#x65B9;&amp;#x5F00;&amp;#x59CB;&amp;#x626B;&amp;#x63CF;&amp;#x8BE5;&amp;#x76EE;&amp;#x5F55;&amp;#x7684;&amp;#x5B50;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;strcat&lt;/span&gt;(fileSpot, &lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MediaScanResult result = doProcessDirectory(path, pathRemaining - nameLength - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, client, childNoMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result == MEDIA_SCAN_RESULT_ERROR) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (type == DT_REG) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;  &amp;#x8FD9;&amp;#x91CC;&amp;#x7684;isDirectory = false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stat(path, &amp;amp;statbuf);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;status_t&lt;/span&gt; status = client.scanFile(path, statbuf.st_mtime, statbuf.st_size,&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*isDirectory*/&lt;/span&gt;, noMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (status) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_ERROR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; MEDIA_SCAN_RESULT_OK;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0D;&amp;#x8BBA;&amp;#x600E;&amp;#x6837;&amp;#x8FD9;&amp;#x91CC;&amp;#x90FD;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x7684;client.scanFile&amp;#x53EA;&amp;#x4E0D;&amp;#x8FC7;&amp;#xFF0C;&amp;#x4F20;&amp;#x5165;&amp;#x7684;isDirectory&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x7F62;&amp;#x4E86;&amp;#x3002;&amp;#x5927;&amp;#x5BB6;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;client&amp;#x4E3A;MyMediaScannerClient&amp;#x5427;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;virtual&lt;/span&gt; status_t &lt;span class=&quot;title&quot;&gt;scanFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* path, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; isDirectory, &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; noMedia)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mEnv-&amp;gt;CallVoidMethod(mClient, mScanFileMethodID, pathStr, lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fileSize, isDirectory, noMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4E0A;&amp;#x8FF0;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E3B;&amp;#x8981;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;mEnv-&amp;gt;CallVoidMethod(mClient, mScanFileMethodID, pathStr, lastModified,fileSize, isDirectory, noMedia);&amp;#x8FD9;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x54EA;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x5462;&amp;#xFF1F;&amp;#x8981;&amp;#x89E3;&amp;#x51B3;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x5FC5;&amp;#x987B;&amp;#x627E;&amp;#x5230;mScanFileMethodID&lt;br&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MyMediaScannerClient&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;JNIEnv&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;*env, jobject client)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        :   mEnv(env),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mClient(env-&amp;gt;NewGlobalRef(client)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mScanFileMethodID(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mHandleStringTagMethodID(0),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mSetMimeTypeMethodID(0)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    jclass mediaScannerClientInterface =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            env-&amp;gt;FindClass(kClassMediaScannerClient);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // static const char*&lt;/span&gt; const kClassMediaScannerClient =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&amp;quot;android/media/MediaScannerClient&amp;quot;&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if &lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;mediaScannerClientInterface&lt;/span&gt; == NULL)&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ALOGE&lt;span class=&quot;list&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;Class %s not found&amp;quot;&lt;/span&gt;, kClassMediaScannerClient)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } else {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mScanFileMethodID = env-&amp;gt;GetMethodID&lt;span class=&quot;list&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;mediaScannerClientInterface&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;scanFile&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;(Ljava/lang/String;JJZZ)V&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mHandleStringTagMethodID = env-&amp;gt;GetMethodID&lt;span class=&quot;list&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;mediaScannerClientInterface&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;handleStringTag&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;(Ljava/lang/String;Ljava/lang/String;)V&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSetMimeTypeMethodID = env-&amp;gt;GetMethodID&lt;span class=&quot;list&quot;&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;keyword&quot;&gt;mediaScannerClientInterface&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;setMimeType&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&amp;quot;(Ljava/lang/String;)V&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;MyMediaScannerClient&amp;#x5B9E;&amp;#x4F8B;&amp;#x4E2D;&amp;#x7684;scanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x4F4D;&amp;#x4E8E;MediaScanner.java&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x7684;MyMediaScannerClient&amp;#x7684;ScanFile&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scanFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String path, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; isDirectory, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; noMedia)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// This is the callback funtion from native codes.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Log.v(TAG, &amp;quot;scanFile: &amp;quot;+path);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doScanFile(path, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, lastModified, fileSize, isDirectory, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, noMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ScanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;doScanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;doScanFile&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x8FDB;&amp;#x5165;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x9636;&amp;#x6BB5;&amp;#x2014;&amp;#x83B7;&amp;#x53D6;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;TAG&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FD9;&amp;#x4E2A;&amp;#x91CD;&amp;#x8981;&amp;#x9636;&amp;#x6BB5;&amp;#x4E4B;&amp;#x524D;&amp;#x8FD8;&amp;#x662F;&amp;#x5148;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E0B;beginFile&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Uri doScanFile(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; mimeType, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isDirectory, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; scanAlways, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;beginFile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileEntry entry = beginFile(path, mimeType, lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fileSize, isDirectory, noMedia);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (entry.mLastModifiedChanged || scanAlways)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; lowpath = path.toLowerCase(Locale.ROOT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; ringtones = (lowpath.indexOf(RINGTONES_DIR) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; notifications = (lowpath.indexOf(NOTIFICATIONS_DIR) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; alarms = (lowpath.indexOf(ALARMS_DIR) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; podcasts = (lowpath.indexOf(PODCAST_DIR) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; music = (lowpath.indexOf(MUSIC_DIR) &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (!ringtones &amp;amp;&amp;amp; !notifications &amp;amp;&amp;amp; !alarms &amp;amp;&amp;amp; !podcasts);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isaudio = MediaFile.isAudioFileType(mFileType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isvideo = MediaFile.isVideoFileType(mFileType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isimage = MediaFile.isImageFileType(mFileType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isaudio || isvideo || isimage) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                path = Environment.maybeTranslateEmulatedPathToInternal(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        .getAbsolutePath();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E3A;&amp;#x97F3;&amp;#x9891;&amp;#x6216;&amp;#x8005;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x62BD;&amp;#x53D6;&amp;#x5143;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// we only extract metadata for audio and video files&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isaudio || isvideo) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                processFile(path, mimeType, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x56FE;&amp;#x50CF;&amp;#x5219;&amp;#x8C03;&amp;#x7528;processImageFile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isimage) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                processImageFile(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8C03;&amp;#x7528;endFile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = endFile(entry, ringtones, notifications, alarms, music, podcasts);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;beginFile&amp;#x6545;&amp;#x540D;&amp;#x601D;&amp;#x8BAE;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x626B;&amp;#x63CF;&amp;#x524D;&amp;#x8FDB;&amp;#x884C;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x5904;&amp;#x7406;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x786E;&amp;#x5B9A;&amp;#x5F53;&amp;#x524D;&amp;#x666E;&amp;#x901A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x5F53;&amp;#x524D;path&amp;#x53C2;&amp;#x6570;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x8FDB;&amp;#x884C;&amp;#x67E5;&amp;#x8BE2;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x8BE5;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x8BB0;&amp;#x5F55;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5B58;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;path&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;FileEntry&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x65B0;&amp;#x6DFB;&amp;#x52A0;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5219;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x4E2D;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5173;&amp;#x4E8E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5219;new&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;FileEntry&amp;#xFF1A;&lt;br&gt;entry = new FileEntry(0, path, lastModified,(isDirectory ? MtpConstants.FORMAT_ASSOCIATION : 0));&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7C7B;&amp;#x578B;&amp;#x5219;&amp;#x5C06;&amp;#x5176;&amp;#x5148;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;mPlayLists&amp;#x4E2D;&amp;#xFF0C;&amp;#x5728;&amp;#x4E3B;&amp;#x626B;&amp;#x63CF;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5148;&amp;#x4E0D;&amp;#x505A;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x6E05;&amp;#x7A7A;&amp;#x5143;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x4E3A;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x7684;&amp;#x626B;&amp;#x63CF;&amp;#x505A;&amp;#x51C6;&amp;#x5907;&amp;#x3002;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; FileEntry beginFile(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; mimeType, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; lastModified,&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; fileSize, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; isDirectory, &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; noMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMimeType = mimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileType = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFileSize = fileSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mIsDrm = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isDirectory) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!noMedia &amp;amp;&amp;amp; isNoMediaFile(path)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            noMedia = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mNoMedia = noMedia;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// try mimeType first, if it is specified&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mimeType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFileType = MediaFile.getFileTypeForMimeType(mimeType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// if mimeType was not specified, compute file type based on file extension.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFileType == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            MediaFile.MediaFileType mediaFileType = MediaFile.getFileType(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mediaFileType != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mFileType = mediaFileType.fileType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMimeType == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mMimeType = mediaFileType.mimeType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isDrmEnabled() &amp;amp;&amp;amp; MediaFile.isDrmFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mFileType = getFileTypeFromDrm(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4F7F;&amp;#x7528;path&amp;#x67E5;&amp;#x8BE2;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x627E;&amp;#x5230;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#x5E76;&amp;#x4F7F;&amp;#x7528;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4FE1;&amp;#x606F;&amp;#x6765;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;FileEntry&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileEntry entry = makeEntryFor(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// add some slack to avoid a rounding error&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; delta = (entry != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) ? (lastModified - entry.mLastModified) : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; wasModified = delta &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; || delta &amp;lt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || wasModified) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (wasModified) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry.mLastModified = lastModified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileEntry(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, path, lastModified,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (isDirectory ? MtpConstants.FORMAT_ASSOCIATION : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        entry.mLastModifiedChanged = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x7C7B;&amp;#x578B;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7C7B;&amp;#x578B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mProcessPlaylists &amp;amp;&amp;amp; MediaFile.isPlayListFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5728;&amp;#x4E3B;&amp;#x626B;&amp;#x63CF;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mPlayLists.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(entry);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// we don&amp;apos;t process playlists in the main scan, so return null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// clear all the metadata&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mArtist = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAlbumArtist = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAlbum = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTitle = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mComposer = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mGenre = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTrack = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mYear = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mDuration = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPath = path;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLastModified = lastModified;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWriter = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCompilation = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWidth = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mHeight = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; entry;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0D;&amp;#x662F;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6216;&amp;#x8005;&amp;#x56FE;&amp;#x50CF;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x76F4;&amp;#x63A5;&amp;#x5728;doScanFile&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;endFile&amp;#x5C06;&amp;#x4FE1;&amp;#x606F;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;endFile&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&amp;#x5728;endFile&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x505A;&amp;#x4E86;&amp;#x5982;&amp;#x4E0B;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x6B4C;&amp;#x624B;&amp;#x4FE1;&amp;#x606F;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x5219;&amp;#x4F7F;&amp;#x7528;&amp;#x4E13;&amp;#x8F91;&amp;#x4F5C;&amp;#x8005;&amp;#x4F5C;&amp;#x4E3A;&amp;#x6B4C;&amp;#x624B;&amp;#x4FE1;&amp;#x606F;.&lt;/li&gt;
&lt;li&gt;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;toValues&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x4FE1;&amp;#x606F;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ContentValues&amp;#x4E2D;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;toValues&amp;#x65B9;&amp;#x6CD5;&amp;#x6DFB;&amp;#x52A0;&amp;#x7684;&amp;#x57FA;&amp;#x672C;&amp;#x4FE1;&amp;#x606F;&amp;#x8FDB;&amp;#x884C;&amp;#x4FEE;&amp;#x6B63;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x65B0;&amp;#x6DFB;&amp;#x52A0;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x5C06;&amp;#x4F20;&amp;#x5165;&amp;#x7684;ringtones&amp;#xFF0C;notifications&amp;#xFF0C;alarms&amp;#xFF0C;music&amp;#xFF0C;podcasts&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ContentValues&amp;#x4E2D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x56FE;&amp;#x7247;&amp;#x5219;&amp;#x4ECE;ExifInterface&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x957F;&amp;#x5EA6;&amp;#x5BBD;&amp;#x5EA6;&amp;#xFF0C;&amp;#x7ECF;&amp;#x7EAC;&amp;#x5EA6;&amp;#xFF0C;&amp;#x65F6;&amp;#x533A;&amp;#x4FE1;&amp;#x606F;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x65B0;&amp;#x589E;&amp;#x7684;&amp;#x5219;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;ContentValues&amp;#x63D2;&amp;#x5165;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;,&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x8BB0;&amp;#x5F55;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x672C;&amp;#x6765;&amp;#x5C31;&amp;#x6709;&amp;#x7684;&amp;#x5219;&amp;#x8C03;&amp;#x7528;update&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x539F;&amp;#x5148;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x9879;&amp;#x8FDB;&amp;#x884C;&amp;#x66F4;&amp;#x65B0;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x66F4;&amp;#x65B0;Setting&amp;#x4E0A;&amp;#x7684;&amp;#x76F8;&amp;#x5173;&amp;#x8BBE;&amp;#x7F6E;.&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Uri &lt;span class=&quot;title&quot;&gt;endFile&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(FileEntry entry, boolean ringtones, boolean notifications,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean alarms, boolean music, boolean podcasts)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        throws RemoteException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// update database&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// use album artist if artist is missing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mArtist == null || mArtist.length() == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mArtist = mAlbumArtist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ContentValues values = toValues();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String title = values.getAsString(MediaStore.MediaColumns.TITLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (title == null || TextUtils.isEmpty(title.trim())) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title = MediaFile.getFileTitle(values.getAsString(MediaStore.MediaColumns.DATA));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(MediaStore.MediaColumns.TITLE, title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String album = values.getAsString(Audio.Media.ALBUM);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaStore.UNKNOWN_STRING.equals(album)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        album = values.getAsString(MediaStore.MediaColumns.DATA);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// extract last path segment before file name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; lastSlash = album.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastSlash &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; previousSlash = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; idx = album.indexOf(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;, previousSlash + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (idx &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || idx &amp;gt;= lastSlash) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                previousSlash = idx;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (previousSlash != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                album = album.substring(previousSlash + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, lastSlash);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(Audio.Media.ALBUM, album);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; rowId = entry.mRowId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isAudioFileType(mFileType) &amp;amp;&amp;amp; (rowId == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || mMtpObjectHandle != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Only set these for new entries. For existing entries, they&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// may have been modified later, and we want to keep the current&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// values so that custom ringtones still show up in the ringtone&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// picker.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(Audio.Media.IS_RINGTONE, ringtones);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(Audio.Media.IS_NOTIFICATION, notifications);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(Audio.Media.IS_ALARM, alarms);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(Audio.Media.IS_MUSIC, music);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(Audio.Media.IS_PODCAST, podcasts);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFileType == MediaFile.FILE_TYPE_JPEG &amp;amp;&amp;amp; !mNoMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ExifInterface exif = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            exif = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ExifInterface(entry.mPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException ex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// exif is null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exif != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;[] latlng = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (exif.getLatLong(latlng)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(Images.Media.LATITUDE, latlng[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(Images.Media.LONGITUDE, latlng[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; time = exif.getGpsDateTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(Images.Media.DATE_TAKEN, time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If no time zone information is available, we should consider using&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// EXIF local time as taken time if the difference between file time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// and EXIF local time is not less than 1 Day, otherwise MediaProvider&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// will use file time as taken time.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                time = exif.getDateTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (time != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; Math.&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(mLastModified * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; - time) &amp;gt;= &lt;span class=&quot;number&quot;&gt;86400000&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    values.put(Images.Media.DATE_TAKEN, time);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; orientation = exif.getAttributeInt(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ExifInterface.TAG_ORIENTATION, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (orientation != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// We only recognize a subset of orientation tag values.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; degree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt;(orientation) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ExifInterface.ORIENTATION_ROTATE_90:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        degree = &lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ExifInterface.ORIENTATION_ROTATE_180:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        degree = &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; ExifInterface.ORIENTATION_ROTATE_270:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        degree = &lt;span class=&quot;number&quot;&gt;270&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        degree = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(Images.Media.ORIENTATION, degree);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Uri tableUri = mFilesUri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaInserter inserter = mMediaInserter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mNoMedia) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isVideoFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tableUri = mVideoUri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isImageFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tableUri = mImagesUri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isAudioFileType(mFileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tableUri = mAudioUri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Uri result = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    boolean needToSetSettings = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rowId == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mMtpObjectHandle != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values.put(MediaStore.MediaColumns.MEDIA_SCANNER_NEW_OBJECT_ID, mMtpObjectHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tableUri == mFilesUri) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; format = entry.mFormat;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (format == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                format = MediaFile.getFormatCode(entry.mPath, mMimeType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values.put(Files.FileColumns.FORMAT, format);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Setting a flag in order not to use bulk insert for the file related with&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// notifications, ringtones, and alarms, because the rowId of the inserted file is&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// needed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mWasEmptyPriorToScan) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (notifications &amp;amp;&amp;amp; !mDefaultNotificationSet) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(mDefaultNotificationFilename) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        doesPathHaveFilename(entry.mPath, mDefaultNotificationFilename)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    needToSetSettings = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ringtones &amp;amp;&amp;amp; !mDefaultRingtoneSet) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(mDefaultRingtoneFilename) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        doesPathHaveFilename(entry.mPath, mDefaultRingtoneFilename)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    needToSetSettings = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (alarms &amp;amp;&amp;amp; !mDefaultAlarmSet) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (TextUtils.isEmpty(mDefaultAlarmAlertFilename) ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        doesPathHaveFilename(entry.mPath, mDefaultAlarmAlertFilename)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    needToSetSettings = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// New file, insert it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Directories need to be inserted before the files they contain, so they&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// get priority when bulk inserting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// If the rowId of the inserted file is needed, it gets inserted immediately,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// bypassing the bulk inserter.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (inserter == null || needToSetSettings) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (inserter != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                inserter.flushAll();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            result = mMediaProvider.insert(mPackageName, tableUri, values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.mFormat == MtpConstants.FORMAT_ASSOCIATION) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inserter.insertwithPriority(tableUri, values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            inserter.insert(tableUri, values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rowId = ContentUris.parseId(result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            entry.mRowId = rowId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// updated file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = ContentUris.withAppendedId(tableUri, rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// path should never change, and we want to avoid replacing mixed cased paths&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// with squashed lower case paths&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.remove(MediaStore.MediaColumns.DATA);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mediaType = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!MediaScanner.isNoMediaPath(entry.mPath)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fileType = MediaFile.getFileTypeForMimeType(mMimeType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isAudioFileType(fileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mediaType = FileColumns.MEDIA_TYPE_AUDIO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isVideoFileType(fileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mediaType = FileColumns.MEDIA_TYPE_VIDEO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isImageFileType(fileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mediaType = FileColumns.MEDIA_TYPE_IMAGE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (MediaFile.isPlayListFileType(fileType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mediaType = FileColumns.MEDIA_TYPE_PLAYLIST;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            values.put(FileColumns.MEDIA_TYPE, mediaType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaProvider.update(mPackageName, result, values, null, null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(needToSetSettings) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (notifications) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setSettingIfNotSet(Settings.System.NOTIFICATION_SOUND, tableUri, rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDefaultNotificationSet = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ringtones) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setSettingIfNotSet(Settings.System.RINGTONE, tableUri, rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDefaultRingtoneSet = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (alarms) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setSettingIfNotSet(Settings.System.ALARM_ALERT, tableUri, rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mDefaultAlarmSet = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;processDirectory&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x6D41;&amp;#x7A0B;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x5B8C;&amp;#x6BD5;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x975E;&amp;#x89C6;&amp;#x9891;&amp;#x97F3;&amp;#x9891;&amp;#x56FE;&amp;#x50CF;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x5DF2;&amp;#x7ECF;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;&amp;#x626B;&amp;#x63CF;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FD8;&amp;#x5FFD;&amp;#x7565;&amp;#x4E86;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x4ECB;&amp;#x7ECD;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x97F3;&amp;#x9891;&amp;#xFF0C;&amp;#x89C6;&amp;#x9891;&amp;#xFF0C;&amp;#x56FE;&amp;#x50CF;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x5904;&amp;#x7406;&quot;&gt;&lt;a href=&quot;#&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x5904;&amp;#x7406;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x5904;&amp;#x7406;:&quot;&gt;&lt;/a&gt;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x5904;&amp;#x7406;:&lt;/h4&gt;&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;beginFile&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8BF4;&amp;#x5230;&amp;#x5728;&amp;#x4E3B;&amp;#x626B;&amp;#x63CF;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5E76;&amp;#x4E0D;&amp;#x5BF9;&amp;#x626B;&amp;#x63CF;&amp;#x5230;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x53EA;&amp;#x662F;&amp;#x5C06;&amp;#x5176;&amp;#x653E;&amp;#x5230;mPlayLists&amp;#x4E2D;&amp;#x3002;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD9;&amp;#x4E9B;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x5904;&amp;#x7406;&amp;#x5462;&amp;#xFF1F;&amp;#x53C8;&amp;#x5C06;&amp;#x5982;&amp;#x4F55;&amp;#x5904;&amp;#x7406;&amp;#x8FD9;&amp;#x4E9B;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#xFF1F;&amp;#x5728;MediaScanner&amp;#x4E2D;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x4F4D;&amp;#x4E8E;postscan&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x5DF2;&amp;#x7ECF;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x5B58;&amp;#x50A8;&amp;#x5668;&amp;#x4E2D;&amp;#x6709;&amp;#x54EA;&amp;#x4E9B;&amp;#x591A;&amp;#x5A92;&amp;#x4F53;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&amp;#x5728;processPlayLists&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x53EA;&amp;#x5904;&amp;#x7406;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x548C;&amp;#x4E0A;&amp;#x6B21;&amp;#x626B;&amp;#x63CF;&amp;#x4EE5;&amp;#x540E;&amp;#x4FEE;&amp;#x6539;&amp;#x540E;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x518D;&amp;#x6839;&amp;#x636E;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5904;&amp;#x7406;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;postscan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] directories)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; RemoteException &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// handle playlists last, after we know what media files are on the storage.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x626B;&amp;#x63CF;&amp;#x8DEF;&amp;#x5F84;&amp;#x4E3A;&amp;#x5916;&amp;#x90E8;&amp;#x5B58;&amp;#x50A8;&amp;#x8DEF;&amp;#x5F84;&amp;#x5219;&amp;#xFF0C;&amp;#x5219;&amp;#x5904;&amp;#x7406;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mProcessPlaylists) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x53EA;&amp;#x5904;&amp;#x7406;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x548C;&amp;#x4E0A;&amp;#x6B21;&amp;#x626B;&amp;#x63CF;&amp;#x4EE5;&amp;#x540E;&amp;#x4FEE;&amp;#x6539;&amp;#x540E;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x4EE5;&amp;#x53CA;&amp;#x6700;&amp;#x540E;&amp;#x7684;&amp;#x4FEE;&amp;#x6539;&amp;#x65F6;&amp;#x95F4;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5E76;&amp;#x6839;&amp;#x636E;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5904;&amp;#x7406;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processPlayLists();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mOriginalCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mImagesUri.equals(Images.Media.getContentUri(&lt;span class=&quot;string&quot;&gt;&amp;quot;external&amp;quot;&lt;/span&gt;)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pruneDeadThumbnailFiles();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// allow GC to clean up&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlayLists = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMediaProvider = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;processPlayLists&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;&amp;#x5168;&amp;#x90E8;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5E76;&amp;#x4F7F;&amp;#x7528;&amp;#x5168;&amp;#x90E8;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x4F20;&amp;#x5165;processPlayList&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5728;&amp;#x540E;&amp;#x7EED;&amp;#x5C06;&amp;#x4F1A;&amp;#x4ECB;&amp;#x7ECD;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x4E4B;&amp;#x6240;&amp;#x4EE5;&amp;#x4F20;&amp;#x5165;&amp;#x5168;&amp;#x90E8;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x83B7;&amp;#x53D6;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;Playlist Member&amp;#xFF08;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6210;&amp;#x5458;&amp;#x6B4C;&amp;#x66F2;&amp;#xFF09;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; processPlayLists() throws &lt;span class=&quot;type&quot;&gt;RemoteException&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Iterator&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;FileEntry&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;iterator&lt;/span&gt; = mPlayLists.&lt;span class=&quot;keyword&quot;&gt;iterator&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Cursor&lt;/span&gt; fileList = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // use the files uri &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; projection because we need the format column,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            // but restrict the query to just audio files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            /&amp;#x83B7;&amp;#x53D6;&amp;#x5168;&amp;#x90E8;&amp;#x7684;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fileList = mMediaProvider.query(mPackageName, mFilesUri, &lt;span class=&quot;type&quot;&gt;FILES_PRESCAN_PROJECTION&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&amp;quot;media_type=2&amp;quot;&lt;/span&gt;, null, null, null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;iterator&lt;/span&gt;.hasNext()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;FileEntry&lt;/span&gt; entry = &lt;span class=&quot;keyword&quot;&gt;iterator&lt;/span&gt;.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // only process playlist files &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; they are new &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; have been modified since the last scan&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // &amp;#x53EA;&amp;#x5904;&amp;#x7406;&amp;#x6700;&amp;#x65B0;&amp;#x7684;&amp;#x548C;&amp;#x4E0A;&amp;#x6B21;&amp;#x626B;&amp;#x63CF;&amp;#x4EE5;&amp;#x540E;&amp;#x4FEE;&amp;#x6539;&amp;#x540E;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.mLastModifiedChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    processPlayList(entry, fileList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } catch (&lt;span class=&quot;type&quot;&gt;RemoteException&lt;/span&gt; e1) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileList != null) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fileList.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;&amp;#x5904;&amp;#x7406;&amp;#x524D;&amp;#x5FC5;&amp;#x987B;&amp;#x786E;&amp;#x4FDD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x901A;&amp;#x8FC7;&amp;#x67E5;&amp;#x627E;MediaStore.Audio.Playlists.NAME&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x503C;&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x5219;&amp;#x4ECE;MediaStore.MediaColumns.TITLE&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FD8;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x503C;&amp;#xFF0C;&amp;#x5C31;&amp;#x518D;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x6587;&amp;#x4EF6;&amp;#x540D;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x662F;&amp;#x65B0;&amp;#x589E;&amp;#x7684;&amp;#x5219;&amp;#x5F80;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x63D2;&amp;#x5165;&amp;#x65B0;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5E76;&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6210;&amp;#x5458;&amp;#x7684;Uri&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x8BDD;&amp;#x5C31;&amp;#x66F4;&amp;#x65B0;&amp;#x5176;&amp;#x5185;&amp;#x5BB9;&amp;#x5E76;&amp;#x4E14;&amp;#x5220;&amp;#x9664;&amp;#x539F;&amp;#x6765;&amp;#x7684;member Uri&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x7684;&amp;#x7C7B;&amp;#x578B;&amp;#xFF0C;&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight dart&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; processPlayList(FileEntry entry, Cursor fileList) throws RemoteException {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; path = entry.mPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ContentValues values = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ContentValues();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lastSlash = path.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastSlash &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;bad path &amp;quot;&lt;/span&gt; + path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt; uri, membersUri;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x4ECE;FileEnty&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;rowId&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    long rowId = entry.mRowId;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x786E;&amp;#x4FDD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x67E5;&amp;#x770B;MediaStore.Audio.Playlists.NAME&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x518D;&amp;#x67E5;&amp;#x770B;MediaStore.MediaColumns.TITLE &amp;#x5982;&amp;#x679C;&amp;#x8FD8;&amp;#x662F;&amp;#x4E3A;&amp;#x7A7A;&amp;#x5219;&amp;#x83B7;&amp;#x53D6;&amp;#x6700;&amp;#x540E;&amp;#x7684;.&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x5B57;&amp;#x7B26;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; name = values.getAsString(MediaStore.Audio.Playlists.NAME);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        name = values.getAsString(MediaStore.MediaColumns.TITLE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (name == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// &amp;#x4ECE;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x540D;&amp;#x5B57;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lastDot = path.lastIndexOf(&lt;span class=&quot;string&quot;&gt;&amp;apos;.&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name = (lastDot &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? path.substring(lastSlash + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;): &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   path.substring(lastSlash + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, lastDot));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#x548C;&amp;#x4FEE;&amp;#x6539;&amp;#x65F6;&amp;#x95F4;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    values.put(MediaStore.Audio.Playlists.NAME, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    values.put(MediaStore.Audio.Playlists.DATE_MODIFIED, entry.mLastModified);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (rowId == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x8BDD;&amp;#x63D2;&amp;#x5165;&amp;#x65B0;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        values.put(MediaStore.Audio.Playlists.DATA, path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;value&amp;#x5305;&amp;#x542B;NAME  DATA  DATE_MODIFIED&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uri = mMediaProvider.insert(mPackageName, mPlaylistsUri, values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        rowId = ContentUris.parseId(uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;&amp;#x63D2;&amp;#x5165;&amp;#x7684;&amp;#x884C;id &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x5F97;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6210;&amp;#x5458;&amp;#x7684;Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        membersUri = &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt;.withAppendedPath(uri, Playlists.Members.CONTENT_DIRECTORY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5B58;&amp;#x5728;&amp;#x7684;&amp;#x8BDD;&amp;#x5C31;&amp;#x66F4;&amp;#x65B0;&amp;#x5E76;&amp;#x4E14;&amp;#x5220;&amp;#x9664;&amp;#x539F;&amp;#x6765;&amp;#x7684;member Uri&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        uri = ContentUris.withAppendedId(mPlaylistsUri, rowId);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaProvider.update(mPackageName, uri, values, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        membersUri = &lt;span class=&quot;built_in&quot;&gt;Uri&lt;/span&gt;.withAppendedPath(uri, Playlists.Members.CONTENT_DIRECTORY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mMediaProvider.delete(mPackageName, membersUri, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x76EE;&amp;#x5F55;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;String&lt;/span&gt; playListDirectory = path.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, lastSlash + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MediaFile.MediaFileType mediaFileType = MediaFile.getFileType(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; fileType = (mediaFileType == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : mediaFileType.fileType);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x6839;&amp;#x636E;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x6587;&amp;#x4EF6;&amp;#x7C7B;&amp;#x578B;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x8C03;&amp;#x7528;&amp;#x4E0D;&amp;#x540C;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileType == MediaFile.FILE_TYPE_M3U) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processM3uPlayList(path, playListDirectory, membersUri, values, fileList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileType == MediaFile.FILE_TYPE_PLS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processPlsPlayList(path, playListDirectory, membersUri, values, fileList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fileType == MediaFile.FILE_TYPE_WPL) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        processWplPlayList(path, playListDirectory, membersUri, values, fileList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;M3U&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#xFF1A;&amp;#x5219;&amp;#x8C03;&amp;#x7528;processM3uPlayList&amp;#x65B9;&amp;#x6CD5;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;br&gt;&amp;#x5728;processM3uPlayList&amp;#x65B9;&amp;#x6CD5;&amp;#x6253;&amp;#x5F00;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#xFF0C;&amp;#x5E76;&amp;#x8BFB;&amp;#x53D6;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x5185;&amp;#x5BB9;&amp;#xFF0C;&amp;#x5C06;&amp;#x8BFB;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6210;&amp;#x5458;&amp;#x8BB0;&amp;#x5F55;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPlsylist&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;processCachedPlaylist&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; processM3uPlayList(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; playListDirectory, Uri uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ContentValues values, Cursor fileList) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BufferedReader&lt;/span&gt; reader = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File f = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x5224;&amp;#x65AD;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x662F;&amp;#x5426;&amp;#x5B58;&amp;#x5728;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5B58;&amp;#x5728;&amp;#x5219;&amp;#x8C03;&amp;#x7528;cachePlaylistEntry&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BFB;&amp;#x53D6;&amp;#x540E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPlsylist&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;processCachedPlaylist&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f.exists()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BufferedReader&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(f)), &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = reader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x6E05;&amp;#x9664;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7F13;&amp;#x51B2;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlaylistEntries.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &amp;#x5FFD;&amp;#x7565;&amp;#x6CE8;&amp;#x91CA;&amp;#x884C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.length() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&amp;apos;#&amp;apos;&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x662F;&amp;#x6CE8;&amp;#x91CA;&amp;#x884C;&amp;#xFF0C;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x4E3A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5219;&amp;#x5C06;&amp;#x5176;&amp;#x5904;&amp;#x7406;&amp;#x540E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPlsylist&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    cachePlaylistEntry(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, playListDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = reader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processCachedPlaylist(fileList, values, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (reader != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                reader.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;PLS&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x5219;&amp;#x5C06;&amp;#x5305;&amp;#x542B;&amp;#x201C;File = &amp;#x201D;&amp;#x5F00;&amp;#x5934;&amp;#x7684;&amp;#x884C;&amp;#xFF0C;&amp;#x5219;&amp;#x5C06;&amp;#x7B49;&amp;#x53F7;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x8BFB;&amp;#x53D6;&amp;#x51FA;&amp;#x6765;&amp;#xFF08;&amp;#x8FD9;&amp;#x4E9B;&amp;#x5C31;&amp;#x662F;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6210;&amp;#x5458;&amp;#x7684;&amp;#x8BB0;&amp;#x5F55;&amp;#xFF09;&amp;#x5E76;&amp;#x5B58;&amp;#x50A8;&amp;#x5230;mPlsylist&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x8C03;&amp;#x7528;processCachedPlaylist&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; processPlsPlayList(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; playListDirectory, Uri uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ContentValues values, Cursor fileList) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BufferedReader&lt;/span&gt; reader = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File f = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f.exists()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            reader = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;BufferedReader&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InputStreamReader(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(f)), &lt;span class=&quot;number&quot;&gt;8192&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = reader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlaylistEntries.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x662F;File&amp;#x5F00;&amp;#x5934;&amp;#x7684;&amp;#x884C;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x662F;PLS&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x4FE1;&amp;#x606F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.startsWith(&lt;span class=&quot;string&quot;&gt;&amp;quot;File&amp;quot;&lt;/span&gt;)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; equals = &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.indexOf(&lt;span class=&quot;string&quot;&gt;&amp;apos;=&amp;apos;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (equals &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;=&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPlsylist&amp;#x4E2D;&amp;#xFF0C;&amp;#x8C03;&amp;#x7528;processCachedPlaylist&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        cachePlaylistEntry(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.substring(equals + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), playListDirectory);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = reader.readLine();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processCachedPlaylist(fileList, values, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (reader != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                reader.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x662F;WPL&amp;#x683C;&amp;#x5F0F;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x5219;&amp;#x4F7F;&amp;#x7528;Xml&amp;#x89E3;&amp;#x6790;&amp;#x5668;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#x3002;&amp;#x540C;&amp;#x6837;&amp;#x6700;&amp;#x540E;&amp;#x4E5F;&amp;#x662F;&amp;#x8C03;&amp;#x7528;processCachedPlaylist&amp;#x5BF9;&amp;#x5176;&amp;#x4E2D;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; processWplPlayList(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; path, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; playListDirectory, Uri uri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ContentValues values, Cursor fileList) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Xlog.i(TAG,&lt;span class=&quot;string&quot;&gt;&amp;quot;MediaScanner#processWplPlayList()&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    FileInputStream fis = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        File f = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f.exists()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fis = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; FileInputStream(f);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPlaylistEntries.&lt;span class=&quot;built_in&quot;&gt;clear&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Xml.parse(fis, Xml.findEncodingByName(&lt;span class=&quot;string&quot;&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WplHandler(playListDirectory, uri, fileList).getContentHandler());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            processCachedPlaylist(fileList, values, uri);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SAXException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fis != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                fis.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (IOException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Xlog.e(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;IOException in MediaScanner.processWplPlayList()&amp;quot;&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;cachePlaylistEntry&amp;#x8D1F;&amp;#x8D23;&amp;#x8BB2;&amp;#x4ECE;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x8BFB;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x884C;&amp;#x8FDB;&amp;#x884C;&amp;#x5904;&amp;#x7406;&amp;#x540E;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mPlaylistEntries&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; cachePlaylistEntry(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; playListDirectory) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PlaylistEntry entry = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; PlaylistEntry();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x53BB;&amp;#x9664;&amp;#x5C3E;&amp;#x90E8;&amp;#x7684;&amp;#x7A7A;&amp;#x767D;&amp;#x7B26;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; entryLength = &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (entryLength &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; Character.isWhitespace(&lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.charAt(entryLength - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;))) entryLength--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entryLength &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5C0F;&amp;#x4E8E;&amp;#x4E09;&amp;#x4E2A;&amp;#x5B57;&amp;#x7B26;&amp;#x5219;&amp;#x4E0D;&amp;#x5408;&amp;#x6CD5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entryLength &amp;lt; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.length()) &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, entryLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;entryLength&amp;#x5C0F;&amp;#x4E8E;line.length()&amp;#x8868;&amp;#x793A;&amp;#x5C3E;&amp;#x90E8;&amp;#x6709;&amp;#x7A7A;&amp;#x683C;&amp;#x5219;&amp;#x5220;&amp;#x9664;&amp;#x5C3E;&amp;#x90E8;&amp;#x7684;&amp;#x7A7A;&amp;#x767D;&amp;#x7B26;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F53;&amp;#x524D;&amp;#x8DEF;&amp;#x5F84;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x7EDD;&amp;#x5BF9;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF1F;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;char&lt;/span&gt; ch1 = &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.charAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; fullPath = (ch1 == &lt;span class=&quot;string&quot;&gt;&amp;apos;/&amp;apos;&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            (Character.isLetter(ch1) &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.charAt(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&amp;apos;:&amp;apos;&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;.charAt(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&amp;apos;\\&amp;apos;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x76F8;&amp;#x5BF9;&amp;#x8DEF;&amp;#x5F84;&amp;#xFF0C;&amp;#x5219;&amp;#x901A;&amp;#x8FC7;&amp;#x548C;playListDirectory&amp;#x8FDB;&amp;#x884C;&amp;#x5408;&amp;#x5E76;&amp;#x6784;&amp;#x6210;&amp;#x5168;&amp;#x8DEF;&amp;#x5F84;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!fullPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt; = playListDirectory + &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    entry.path = &lt;span class=&quot;built_in&quot;&gt;line&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;#x5C06;&amp;#x5168;&amp;#x8DEF;&amp;#x5F84;&amp;#x4FDD;&amp;#x5B58;&amp;#x5230;mPlaylistEntries&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaylistEntries.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(entry);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;processCachedPlaylist&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C06;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5168;&amp;#x90E8;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x6570;&amp;#x636E;&amp;#x4E0E;&amp;#x5B58;&amp;#x50A8;&amp;#x5728;mPlaylistEntries&amp;#x7684;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x6B4C;&amp;#x66F2;&amp;#x8BB0;&amp;#x5F55;&amp;#x8FDB;&amp;#x884C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x5339;&amp;#x914D;&amp;#x8FC7;&amp;#x7A0B;&amp;#x662F;&amp;#x8C03;&amp;#x7528;matchEntries&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x4F7F;&amp;#x7528;&amp;#x5168;&amp;#x90E8;&amp;#x97F3;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x4E0E;mPlaylistEntries&amp;#x4E2D;&amp;#x672A;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x9879;&amp;#x8FDB;&amp;#x884C;&amp;#x5BF9;&amp;#x6BD4;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8DEF;&amp;#x5F84;&amp;#x76F8;&amp;#x540C;&amp;#x5219;&amp;#x8BA4;&amp;#x4E3A;&amp;#x627E;&amp;#x5230;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x5B8C;&amp;#x5168;&amp;#x4E00;&amp;#x81F4;&amp;#x5C31;&amp;#x901A;&amp;#x8FC7;&amp;#x5BF9;&amp;#x6BD4;&amp;#x8DEF;&amp;#x5F84;&amp;#x7684;&amp;#x5404;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#xFF0C;&amp;#x5BFB;&amp;#x627E;&amp;#x6700;&amp;#x5339;&amp;#x914D;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;&amp;#x3002; &amp;#x5982;&amp;#x679C;mPlaylistEntries&amp;#x4E2D;&amp;#x5168;&amp;#x90E8;&amp;#x9879;&amp;#x90FD;&amp;#x5339;&amp;#x914D;&amp;#x4E86;&amp;#xFF0C;&amp;#x5219;&amp;#x8FD4;&amp;#x56DE;true&amp;#x3002;&amp;#x6700;&amp;#x540E;&amp;#x5C06;mPlaylistEntries&amp;#x4E2D;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;playlist member&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;processCachedPlaylist&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Cursor fileList, ContentValues values, Uri playlistUri)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fileList.moveToPosition(-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (fileList.moveToNext()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; rowId = fileList.getLong(FILES_PRESCAN_ID_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        String data = fileList.getString(FILES_PRESCAN_PATH_COLUMN_INDEX);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// mPlaylistEntries&amp;#x4E2D;&amp;#x5168;&amp;#x90E8;&amp;#x9879;&amp;#x90FD;&amp;#x5339;&amp;#x914D;&amp;#x4E86;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (matchEntries(rowId, data)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; len = mPlaylistEntries.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; len; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PlaylistEntry entry = mPlaylistEntries.get(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (entry.bestmatchlevel &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;mPlaylistEntries&amp;#x4E2D;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5F53;&amp;#x524D;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;playlist member&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(MediaStore.Audio.Playlists.Members.PLAY_ORDER, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Integer.valueOf(index));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                values.put(MediaStore.Audio.Playlists.Members.AUDIO_ID, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Long.valueOf(entry.bestmatchid));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mMediaProvider.insert(mPackageName, playlistUri, values);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                index++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPlaylistEntries.clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean &lt;/span&gt;matchEntries(long rowId, &lt;span class=&quot;keyword&quot;&gt;String &lt;/span&gt;&lt;span class=&quot;preprocessor&quot;&gt;data&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int len = mPlaylistEntries.size()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;boolean &lt;/span&gt;done = true&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (int i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i &amp;lt; len; i++) {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        PlaylistEntry &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt; = mPlaylistEntries.get(i)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x5982;&amp;#x679C;&lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchlevel &lt;/span&gt;== Integer.MAX_VALUE &amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x5DF2;&amp;#x7ECF;&amp;#x88AB;&amp;#x5339;&amp;#x914D;&amp;#x4E86;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x4E0E;mPlaylistEntries&amp;#x7684;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x8F83;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchlevel &lt;/span&gt;== Integer.MAX_VALUE) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            continue&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x5F00;&amp;#x59CB;&amp;#x6BD4;&amp;#x8F83;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5148;&amp;#x5C06;done&amp;#x7F6E;&amp;#x4E3A;false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        done = false&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&lt;span class=&quot;preprocessor&quot;&gt;data&lt;/span&gt;&amp;#x5B57;&amp;#x6BB5;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5339;&amp;#x914D;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x8DEF;&amp;#x5F84;&amp;#x5339;&amp;#x914D;&amp;#x4E86;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;preprocessor&quot;&gt;data&lt;/span&gt;.equalsIgnoreCase(&lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.path)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchid &lt;/span&gt;= rowId&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchlevel &lt;/span&gt;= Integer.MAX_VALUE&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            continue&lt;span class=&quot;comment&quot;&gt;; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //&amp;#x901A;&amp;#x8FC7;&amp;#x6BD4;&amp;#x5BF9;&amp;#x8DEF;&amp;#x5F84;&amp;#x7684;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5B57;&amp;#x6BB5;&amp;#x5BFB;&amp;#x627E;&amp;#x6700;&amp;#x6BD4;&amp;#x914D;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int matchLength = matchPaths(&lt;span class=&quot;preprocessor&quot;&gt;data&lt;/span&gt;, &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.path)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (matchLength &amp;gt; &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchlevel) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchid &lt;/span&gt;= rowId&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;preprocessor&quot;&gt;entry&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;bestmatchlevel &lt;/span&gt;= matchLength&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return done&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#x4EE5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x7684;&amp;#x5904;&amp;#x7406;&amp;#x662F;&amp;#x5C06;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x8FDB;&amp;#x884C;&amp;#x89E3;&amp;#x6790;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x64AD;&amp;#x653E;&amp;#x5217;&amp;#x8868;&amp;#x6587;&amp;#x4EF6;&amp;#x4E2D;&amp;#x7684;&amp;#x6210;&amp;#x5458;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BB9;&amp;#x5668;&amp;#x4E2D;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5BF9;&amp;#x5BB9;&amp;#x5668;&amp;#x8FDB;&amp;#x884C;&amp;#x904D;&amp;#x5386;&amp;#xFF0C;&amp;#x5E76;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5BF9;&amp;#x5176;&amp;#x8FDB;&amp;#x884C;&amp;#x5339;&amp;#x914D;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5339;&amp;#x914D;&amp;#x5219;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;Playlist Member&amp;#x4E2D;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x5904;&amp;#x7406;&amp;#xFF1A;&lt;/h4&gt;&lt;p&gt;&amp;#x5728;MediaScanner&amp;#x4E2D;&amp;#x5BF9;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x5904;&amp;#x7406;&amp;#x4E5F;&amp;#x662F;&amp;#x4F4D;&amp;#x4E8E;Postscan&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x3002;&amp;#x5728;pruneDeadThumbnailFiles&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;DCIM/thumbnails&amp;#x76EE;&amp;#x5F55;&amp;#x4E0B;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x6587;&amp;#x4EF6;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6587;&amp;#x4EF6;&amp;#x5939;&amp;#x4E0B;&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x662F;&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#xFF0C;&amp;#x800C;&amp;#x540E;&amp;#x518D;&amp;#x67E5;&amp;#x770B;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x7684;&amp;#x89C6;&amp;#x9891;&amp;#x548C;&amp;#x56FE;&amp;#x50CF;&amp;#x7684;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5728;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x5B58;&amp;#x5728;&amp;#x8BE5;&amp;#x8BB0;&amp;#x5F55;&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x8BE5;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x6709;&amp;#x7528;&amp;#xFF0C;&amp;#x4ECE;existingFiles&amp;#x4E2D;&amp;#x79FB;&amp;#x9664;&amp;#xFF0C;&amp;#x5230;&amp;#x6700;&amp;#x540E;existingFiles&amp;#x4E2D;&amp;#x5269;&amp;#x4F59;&amp;#x7684;&amp;#x5C31;&amp;#x662F;&amp;#x90A3;&amp;#x4E9B;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#x4E2D;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x7684;&amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x53EF;&amp;#x4EE5;&amp;#x4ECE;DCIM/.thumbnails&amp;#x4E2D;&amp;#x5220;&amp;#x9664;&amp;#xFF0C;&amp;#x6700;&amp;#x540E;&amp;#x5220;&amp;#x9664;Mini &amp;#x7F29;&amp;#x7565;&amp;#x56FE;&amp;#x6587;&amp;#x4EF6;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; pruneDeadThumbnailFiles() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    HashSet&amp;lt;&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;&amp;gt; existingFiles = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashSet&amp;lt;&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; directory = &lt;span class=&quot;string&quot;&gt;&amp;quot;/sdcard/DCIM/.thumbnails&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; [] files = (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(directory)).list();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Cursor c = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (files == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        files = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; files.length; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; fullPathString = directory + &lt;span class=&quot;string&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; + files[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        existingFiles.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(fullPathString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        c = mMediaProvider.query(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPackageName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mThumbsUri,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; [] { &lt;span class=&quot;string&quot;&gt;&amp;quot;_data&amp;quot;&lt;/span&gt; },&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.v(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;pruneDeadThumbnailFiles... &amp;quot;&lt;/span&gt; + c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; c.moveToFirst()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            do {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; fullPathString = c.getString(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                existingFiles.remove(fullPathString);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (c.moveToNext());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; fileToDelete : existingFiles) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.v(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;fileToDelete is &amp;quot;&lt;/span&gt; + fileToDelete);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; File(fileToDelete)).delete();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (SecurityException ex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.v(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;/pruneDeadThumbnailFiles... &amp;quot;&lt;/span&gt; + c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (RemoteException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We will soon be killed...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            c.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h5 id=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot;&gt;&lt;a href=&quot;#&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&quot;&gt;&lt;/a&gt;&amp;#x97F3;&amp;#x9891;&amp;#x89C6;&amp;#x9891;&amp;#x6587;&amp;#x4EF6;&amp;#x5E27;&amp;#x4FE1;&amp;#x606F;&amp;#x7684;&amp;#x83B7;&amp;#x53D6;&lt;/h5&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x6BD4;&amp;#x8F83;&amp;#x590D;&amp;#x6742;&amp;#x6211;&amp;#x4EEC;&amp;#x5C06;&amp;#x653E;&amp;#x5728;&amp;#x4E0B;&amp;#x4E00;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x4ECB;&amp;#x7ECD;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;MediaScanner&amp;#x5A92;&amp;#x4F53;&amp;#x626B;&amp;#x63CF;&amp;#x5668;&amp;#x987E;&amp;#x540D;&amp;#x601D;&amp;#x4E49;&amp;#x5C31;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x626B;&amp;#x63CF;&amp;#x62
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之Binder</title>
    <link href="http://yoursite.com/2016/07/28/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BBinder/"/>
    <id>http://yoursite.com/2016/07/28/Android-源码分析之Binder/</id>
    <published>2016-07-28T04:30:33.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4FE9;&amp;#x5F20;&amp;#x662F;&amp;#x6839;&amp;#x636E;Android&amp;#x6846;&amp;#x67B6;&amp;#x63ED;&amp;#x79D8;&amp;#x6539;&amp;#x7F16;&amp;#xFF0C;&amp;#x8FD9;&amp;#x672C;&amp;#x4E66;&amp;#x5F88;&amp;#x9002;&amp;#x5408;&amp;#x521D;&amp;#x5B66;&amp;#x8005;&amp;#x5FEB;&amp;#x901F;&amp;#x4E86;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x7684;&amp;#x5927;&amp;#x4F53;&amp;#x7ED3;&amp;#x6784;&amp;#xFF0C;&amp;#x5F88;&amp;#x5F62;&amp;#x8C61;&amp;#x751F;&amp;#x52A8;&amp;#xFF0C;&amp;#x770B;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x53EF;&amp;#x4EE5;&amp;#x5BF9;&amp;#x7740;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x56FE;&amp;#x8FDB;&amp;#x884C;&amp;#x9605;&amp;#x8BFB;&amp;#x4F1A;&amp;#x52A0;&amp;#x6DF1;&amp;#x7406;&amp;#x89E3;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E24;&amp;#x5F20;&amp;#x56FE;&amp;#x5C31;&amp;#x5F53;&amp;#x4F5C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x7684;&amp;#x540E;&amp;#x7EED;&amp;#x5199;&amp;#x4F5C;&amp;#x7EB2;&amp;#x8981;&amp;#x5427;&amp;#x3002;&amp;#x8FD9;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;&amp;#x6709;&amp;#x70B9;&amp;#x5FD9;&amp;#x3002;&amp;#x53EA;&amp;#x80FD;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6784;&amp;#x601D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Binder/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Binder/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Binder/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Binder/4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4FE9;&amp;#x5F20;&amp;#x662F;&amp;#x6839;&amp;#x636E;Android&amp;#x6846;&amp;#x67B6;&amp;#x63ED;&amp;#x79D8;&amp;#x6539;&amp;#x7F16;&amp;#xFF0C;&amp;#x8FD9;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之AsyncTask</title>
    <link href="http://yoursite.com/2016/07/28/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BAsyncTask/"/>
    <id>http://yoursite.com/2016/07/28/Android-源码分析之AsyncTask/</id>
    <published>2016-07-28T04:28:09.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x4E86;Handler&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x4E3B;&amp;#x7EBF;&amp;#x5176;&amp;#x5B9E;&amp;#x5C31;&amp;#x662F;UI&amp;#x754C;&amp;#x9762;&amp;#x7684;&amp;#x5B88;&amp;#x62A4;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x5B83;&amp;#x624D;&amp;#x80FD;&amp;#x4FEE;&amp;#x6539;UI&amp;#x754C;&amp;#x9762;&amp;#x4E0A;&amp;#x7684;&amp;#x5143;&amp;#x7D20;&amp;#xFF0C;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x66F4;&amp;#x65B0;&amp;#x754C;&amp;#x9762;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;Handler&amp;#x6765;&amp;#x66F4;&amp;#x65B0;&amp;#xFF0C;&amp;#x540E;&amp;#x6765;&amp;#x4E3A;&amp;#x4E86;&amp;#x66F4;&amp;#x52A0;&amp;#x65B9;&amp;#x4FBF;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x66F4;&amp;#x65B0;UI&amp;#x5143;&amp;#x7D20;&amp;#xFF0C;Android&amp;#x5F15;&amp;#x5165;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;AsyncTask&amp;#x7C7B;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5B83;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x65B9;&amp;#x4FBF;&amp;#x5730;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x548C;UI&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E4B;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x5207;&amp;#x6362;&amp;#x3002;&amp;#x6781;&amp;#x5927;&amp;#x5F97;&amp;#x7B80;&amp;#x4FBF;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x65E5;&amp;#x5E38;&amp;#x5F00;&amp;#x53D1;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTask&lt;/span&gt;&lt;span class=&quot;inheritance&quot;&gt;&amp;lt;&lt;span class=&quot;parent&quot;&gt;Params&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Progress&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Result&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;AsyncTask&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x62BD;&amp;#x8C61;&amp;#x7C7B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x4F7F;&amp;#x7528;&amp;#x9700;&amp;#x8981;&amp;#x7EE7;&amp;#x627F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x7C7B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x9700;&amp;#x8981;&amp;#x518D;&amp;#x63D0;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E09;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x7684;&amp;#x542B;&amp;#x4E49;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Params &amp;#x8868;&amp;#x793A;&amp;#x5728;&amp;#x542F;&amp;#x52A8;AsyncTask&amp;#x65F6;&amp;#x4F20;&amp;#x5165;&amp;#x7684;&amp;#x53C2;&amp;#x6570;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4F5C;&amp;#x4E3A;&amp;#x8F93;&amp;#x5165;&amp;#x6570;&amp;#x636E;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x4EFB;&amp;#x4F55;&amp;#x53C2;&amp;#x6570;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F20;&amp;#x5165;Void&lt;/li&gt;
&lt;li&gt;Progress &amp;#x7528;&amp;#x4E8E;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x4EFB;&amp;#x52A1;&amp;#x5728;&amp;#x6267;&amp;#x884C;&amp;#x65F6;&amp;#x8C03;&amp;#x7528;onProgressUpdate&amp;#x65B9;&amp;#x6CD5;&amp;#x5728;&amp;#x754C;&amp;#x9762;&amp;#x4E0A;&amp;#x663E;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x8FDB;&amp;#x5EA6;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;Result &amp;#x8868;&amp;#x793A;&amp;#x5F53;&amp;#x524D;&amp;#x540E;&amp;#x53F0;&amp;#x4EFB;&amp;#x52A1;&amp;#x5B8C;&amp;#x6210;&amp;#x540E;&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5177;&amp;#x4F53;&amp;#x7684;&amp;#x7528;&amp;#x6CD5;&amp;#x89C1;Android&amp;#x8FDB;&amp;#x9636;&amp;#x4E4B;&amp;#x591A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6280;&amp;#x672F;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x4E0D;&amp;#x518D;&amp;#x4F5C;&amp;#x5C55;&amp;#x5F00;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x4EE5;&amp;#x4E00;&amp;#x4E2A;&amp;#x573A;&amp;#x666F;&amp;#x6765;&amp;#x5C55;&amp;#x5F00;&amp;#x4ECB;&amp;#x7ECD;&lt;/p&gt;
&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DownloadAsyncTask&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AsyncTask&amp;lt;Void&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;Boolean&amp;gt;&lt;/span&gt; {&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void onPreExecute() {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        downloadProgressDialog.show();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Boolean&lt;/span&gt; doInBackground(&lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;... params) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                int process = downloadTask();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                publishProgress(process);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (process &amp;gt;= &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; e) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.e(&lt;span class=&quot;type&quot;&gt;TAG&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;There is something error !&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void onProgressUpdate(&lt;span class=&quot;type&quot;&gt;Integer&lt;/span&gt;... values) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        downloadProgressDialog.setMessage(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x4E0B;&amp;#x8F7D;&amp;#x8FDB;&amp;#x5EA6;&amp;#xFF1A;&amp;quot;&lt;/span&gt; + values[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] + &lt;span class=&quot;string&quot;&gt;&amp;quot;%&amp;quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; void onPostExecute(&lt;span class=&quot;type&quot;&gt;Boolean&lt;/span&gt; result) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        downloadProgressDialog.dismiss();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (result) {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Toast&lt;/span&gt;.makeText(context, &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x4E0B;&amp;#x8F7D;&amp;#x6210;&amp;#x529F;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Toast&lt;/span&gt;.makeText(context, &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x4E0B;&amp;#x8F7D;&amp;#x5931;&amp;#x8D25;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Toast&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;LENGTH_SHORT&lt;/span&gt;).show();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6BD4;&amp;#x8F83;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x6A21;&amp;#x62DF;&amp;#x4E0B;&amp;#x8F7D;&amp;#x7684;&amp;#x793A;&amp;#x4F8B;&amp;#xFF0C;&amp;#x5728;downloadTask&amp;#x6211;&amp;#x4EEC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E00;&amp;#x4E2A;&amp;#x7B80;&amp;#x5355;&amp;#x7684;sleep&amp;#x540E;&amp;#x66F4;&amp;#x65B0;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#xFF0C;&amp;#x6211;&amp;#x5011;&amp;#x5148;&amp;#x4F86;&amp;#x770B;&amp;#x4E0B;AsycTask&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;type&quot;&gt;AsyncTask&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWorker = new &lt;span class=&quot;type&quot;&gt;WorkerRunnable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Params&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt;&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        public &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; call() throws &lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mTaskInvoked.&lt;span class=&quot;type&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Process&lt;/span&gt;.setThreadPriority(&lt;span class=&quot;type&quot;&gt;Process&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;THREAD_PRIORITY_BACKGROUND&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            //noinspection unchecked&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = doInBackground(mParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;Binder&lt;/span&gt;.flushPendingCommands();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; postResult(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFuture = new &lt;span class=&quot;type&quot;&gt;FutureTask&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt;&amp;gt;(mWorker) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        protected &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; done() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                postResultIfNotInvoked(get());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } catch (&lt;span class=&quot;type&quot;&gt;InterruptedException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                android.util.&lt;span class=&quot;type&quot;&gt;Log&lt;/span&gt;.w(&lt;span class=&quot;type&quot;&gt;LOG_TAG&lt;/span&gt;, e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } catch (&lt;span class=&quot;type&quot;&gt;ExecutionException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                throw new &lt;span class=&quot;type&quot;&gt;RuntimeException&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;An error occurred while executing doInBackground()&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        e.getCause());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } catch (&lt;span class=&quot;type&quot;&gt;CancellationException&lt;/span&gt; e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                postResultIfNotInvoked(null);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;WorkerRunnable&amp;#x5BF9;&amp;#x8C61;&amp;#x4EE5;&amp;#x53CA;FutureTask&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x7EE7;&amp;#x7EED;&amp;#x6DF1;&amp;#x5165;&amp;#x4EE3;&amp;#x7801;&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x7C7B;&amp;#x6709;&amp;#x5927;&amp;#x6982;&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;WorkerRunnable&amp;#x5B9E;&amp;#x73B0;&amp;#x4E86;Callable&amp;#x63A5;&amp;#x53E3;,&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6709;&amp;#x8FD4;&amp;#x56DE;&amp;#x503C;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x8FD4;&amp;#x56DE;&amp;#x7ED3;&amp;#x679C;&amp;#x5C31;&amp;#x662F;Result&amp;#xFF0C;FutureTask&amp;#x53EF;&amp;#x4EE5;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x6267;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#x5E76;&amp;#x4E14;&amp;#x53EF;&amp;#x4EE5;&amp;#x53D6;&amp;#x6D88;&amp;#x6267;&amp;#x884C;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x4F20;&amp;#x5165;Runnable&amp;#x6216;&amp;#x8005;Callable&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED9;FutureTask&amp;#xFF0C;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;&amp;#x5176;run&amp;#x65B9;&amp;#x6CD5;&amp;#x6216;&amp;#x8005;&amp;#x653E;&amp;#x5165;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6C60;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x4E4B;&amp;#x540E;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x5916;&amp;#x90E8;&amp;#x901A;&amp;#x8FC7;FutureTask&amp;#x7684;get&amp;#x65B9;&amp;#x6CD5;&amp;#x5F02;&amp;#x6B65;&amp;#x83B7;&amp;#x53D6;&amp;#x6267;&amp;#x884C;&amp;#x7ED3;&amp;#x679C;&amp;#xFF0C;FutureTask&amp;#x975E;&amp;#x5E38;&amp;#x9002;&amp;#x5408;&amp;#x7528;&amp;#x4E8E;&amp;#x8017;&amp;#x65F6;&amp;#x7684;&amp;#x8BA1;&amp;#x7B97;&amp;#xFF0C;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x5728;&amp;#x5B8C;&amp;#x6210;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x540E;&amp;#xFF0C;&amp;#x518D;&amp;#x53BB;&amp;#x83B7;&amp;#x53D6;&amp;#x7ED3;&amp;#x679C;&amp;#x3002;&amp;#x53E6;&amp;#x5916;&amp;#xFF0C;FutureTask&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x786E;&amp;#x4FDD;&amp;#x5373;&amp;#x4F7F;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&amp;#x591A;&amp;#x6B21;run&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x90FD;&amp;#x53EA;&amp;#x4F1A;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x6B21;Runnable&amp;#x6216;&amp;#x8005;Callable&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x901A;&amp;#x8FC7;cancel&amp;#x53D6;&amp;#x6D88;FutureTask&amp;#x7684;&amp;#x6267;&amp;#x884C;&amp;#x7B49;&amp;#x3002;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x63CF;&amp;#x8FF0;&amp;#x662F;&amp;#x5426;&amp;#x770B;&amp;#x5230;&amp;#x4E86;AyncTask&amp;#x7684;&amp;#x96CF;&amp;#x5F62;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x7C7B;&amp;#x60F3;&amp;#x8981;&amp;#x6709;&amp;#x66F4;&amp;#x591A;&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x4E24;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x6765;&amp;#x4E86;&amp;#x89E3;&amp;#xFF0C;&amp;#x4E5F;&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x8BE5;&amp;#x81EA;&amp;#x5DF1;&amp;#x7559;&amp;#x4E2A;&amp;#x5751;&amp;#x540E;&amp;#x7EED;&amp;#x518D;&amp;#x6DF1;&amp;#x5165;&amp;#x4E86;&amp;#x89E3;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/linchunquan/article/details/22382487&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/linchunquan/article/details/22382487&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/jackchen95/article/details/13631761&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/jackchen95/article/details/13631761&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x8BB2;&amp;#x5230;&amp;#x6211;&amp;#x4EEC;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;WorkerRunnable&amp;#x5BF9;&amp;#x8C61;&amp;#x540E;&amp;#x653E;&amp;#x5230;FutureTask&amp;#x4E2D;&amp;#x8FD0;&amp;#x884C;&amp;#x3002;&amp;#x90A3;&amp;#x4E48;&amp;#x6574;&amp;#x4E2A;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x5C31;&amp;#x7ED3;&amp;#x675F;&amp;#x4E86;&amp;#xFF0C;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x8C03;&amp;#x7528;execute&amp;#x65B9;&amp;#x6CD5;&amp;#x542F;&amp;#x52A8;&amp;#x4EFB;&amp;#x52A1;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight lasso&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@MainThread&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; final AsyncTask&amp;lt;&lt;span class=&quot;keyword&quot;&gt;Params&lt;/span&gt;, Progress, Result&amp;gt; execute(&lt;span class=&quot;keyword&quot;&gt;Params&lt;/span&gt;&lt;span class=&quot;attribute&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; executeOnExecut&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;(sDefaultExecut&lt;span class=&quot;subst&quot;&gt;or&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;params&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;executeOnExecutor&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;annotation&quot;&gt;@MainThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; AsyncTask&amp;lt;Params, Progress, Result&amp;gt; executeOnExecutor(Executor exec,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Params... params) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mStatus != Status.PENDING) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mStatus) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; RUNNING:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Cannot execute task:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        + &lt;span class=&quot;string&quot;&gt;&amp;quot; the task is already running.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; FINISHED:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Cannot execute task:&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        + &lt;span class=&quot;string&quot;&gt;&amp;quot; the task has already been executed &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        + &lt;span class=&quot;string&quot;&gt;&amp;quot;(a task can be executed only once)&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = Status.RUNNING;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onPreExecute();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mWorker.mParams = params;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exec.execute(mFuture);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F20;&amp;#x5165;&amp;#x7684;exec&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;sDefaultExecutor&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4E0B;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;volatile&lt;/span&gt; Executor sDefaultExecutor = SERIAL_EXECUTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Executor SERIAL_EXECUTOR = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SerialExecutor();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;SerialExecutor&amp;#xFF0C;&amp;#x770B;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x6709;&amp;#x5982;&amp;#x4E0B;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF1A;&lt;br&gt;&amp;#x8BF4;&amp;#x660E;&amp;#x8FD9;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E32;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;&amp;#x53EA;&amp;#x80FD;&amp;#x6267;&amp;#x884C;&amp;#x4E00;&amp;#x4E2A;&amp;#xFF0C;&amp;#x5F53;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x7ED3;&amp;#x675F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x5141;&amp;#x8BB8;&amp;#x6267;&amp;#x884C;&amp;#x4E0B;&amp;#x4E00;&amp;#x4E2A;&amp;#x3002;&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x5F88;&amp;#x591A;&amp;#x65F6;&amp;#x5019;&amp;#x63D0;&amp;#x5230;&amp;#x7684;AyncTask&amp;#x7684;&amp;#x5F0A;&amp;#x7AEF;&amp;#x3002;&amp;#x6211;&amp;#x95E8;&amp;#x8FD9;&amp;#x91CC;&amp;#x5148;&amp;#x4E0D;&amp;#x8BB2;&amp;#x8FD9;&amp;#x4E9B;&amp;#x3002;&amp;#x7EE7;&amp;#x7EED;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight puppet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* &lt;span class=&quot;name&quot;&gt;An&lt;/span&gt; {@&lt;span class=&quot;literal&quot;&gt;link&lt;/span&gt; Executor} &lt;span class=&quot;name&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;executes&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;tasks&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;name&quot;&gt;serial&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* order.  This serialization is global to a particular process.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;executeOnExecutor&amp;#x4E2D;&amp;#x4F1A;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#x8FD9;&amp;#x91CC;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;AysnTask&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x5355;&amp;#x6B21;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#xFF0C;&amp;#x4E00;&amp;#x65E6;&amp;#x6267;&amp;#x884C;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x518D;&amp;#x8C03;&amp;#x7528;excute&amp;#x5C31;&amp;#x4F1A;&amp;#x629B;&amp;#x51FA;&amp;#x9519;&amp;#x8BEF;&amp;#xFF0C;&amp;#x5FC5;&amp;#x987B;&amp;#x91CD;&amp;#x65B0;new&amp;#x4E00;&amp;#x4E2A;&amp;#x3002;&amp;#x5728;&amp;#x72B6;&amp;#x6001;&amp;#x4E3A;PENDING&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x8BF4;&amp;#x660E;&amp;#x5F53;&amp;#x524D;&amp;#x7684;AsyncTask&amp;#x5C1A;&amp;#x672A;&amp;#x6267;&amp;#x884C;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x72B6;&amp;#x6001;&amp;#x7F6E;&amp;#x4E3A;Status.RUNNING&lt;br&gt;&amp;#x5E76;&amp;#x5728;&amp;#x8C03;&amp;#x7528;onPreExecute&amp;#x540E;&amp;#x8C03;&amp;#x7528;SerialExecutor&amp;#x7684;execute&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SerialExecutor&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Executor&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ArrayDeque&amp;lt;Runnable&amp;gt; mTasks = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayDeque&amp;lt;Runnable&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Runnable mActive;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Runnable r)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTasks.offer(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Runnable() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    r.run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    scheduleNext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        });&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mActive == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scheduleNext();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;scheduleNext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mActive = mTasks.poll()) != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            THREAD_POOL_EXECUTOR.execute(mActive);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;SerialExecutor&amp;#x7684;execute&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;FutureTask &amp;#x7684; run()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF08;FutureTask &amp;#x4EE3;&amp;#x7801;&amp;#x4E0D;&amp;#x5728;framework&amp;#x5C42;&amp;#x4E2D;&amp;#x800C;&amp;#x662F;&amp;#x5728;libcore&amp;#x4E0B;&amp;#xFF09;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (state != &lt;span class=&quot;type&quot;&gt;NEW&lt;/span&gt; ||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        !U.compareAndSwapObject(this, &lt;span class=&quot;type&quot;&gt;RUNNER&lt;/span&gt;, null, &lt;span class=&quot;type&quot;&gt;Thread&lt;/span&gt;.currentThread()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Callable&lt;/span&gt;&amp;lt;V&amp;gt; c = callable;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c != null &amp;amp;&amp;amp; state == &lt;span class=&quot;type&quot;&gt;NEW&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            V &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            boolean ran;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = c.call();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ran = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } catch (&lt;span class=&quot;type&quot;&gt;Throwable&lt;/span&gt; ex) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ran = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                setException(ex);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ran)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;type&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // runner must be non-null until state &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; settled to&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // prevent concurrent calls to run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        runner = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // state must be re-read after nulling runner to prevent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // leaked interrupts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt; s = state;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (s &amp;gt;= &lt;span class=&quot;type&quot;&gt;INTERRUPTING&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handlePossibleCancellationInterrupt(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = c.call()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x4ECB;&amp;#x7ECD;&amp;#x6784;&amp;#x9020;&amp;#x51FD;&amp;#x6570;&amp;#x65F6;&amp;#x63D0;&amp;#x5230;&amp;#x7684;WorkRunable&amp;#xFF0C;&amp;#x4E3A;&amp;#x4E86;&amp;#x907F;&amp;#x514D;&amp;#x5927;&amp;#x5BB6;&amp;#x5728;&amp;#x8FD9;&amp;#x5173;&amp;#x952E;&amp;#x5173;&amp;#x5934;&amp;#x7FFB;&amp;#x4EE3;&amp;#x7801;&amp;#x6211;&amp;#x76F4;&amp;#x63A5;&amp;#x518D;&amp;#x6B21;&amp;#x8D34;&amp;#x5728;&amp;#x4E0B;&amp;#x9762;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mWorker = new &lt;span class=&quot;type&quot;&gt;WorkerRunnable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Params&lt;/span&gt;, &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt;&amp;gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; call() throws &lt;span class=&quot;type&quot;&gt;Exception&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mTaskInvoked.&lt;span class=&quot;type&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Process&lt;/span&gt;.setThreadPriority(&lt;span class=&quot;type&quot;&gt;Process&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;THREAD_PRIORITY_BACKGROUND&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        //noinspection unchecked&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = doInBackground(mParams);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;Binder&lt;/span&gt;.flushPendingCommands();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; postResult(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x5927;&amp;#x5BB6;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x770B;&amp;#x5230;&amp;#x4E86;doInBackground&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1F;&amp;#x90A3;&amp;#x4E48;&amp;#x6267;&amp;#x884C;&amp;#x5B8C;&amp;#x7ED3;&amp;#x679C;&amp;#x600E;&amp;#x4E48;&amp;#x8FD4;&amp;#x56DE;&amp;#x5230;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x6CE8;&amp;#x610F;&amp;#x5230;&amp;#x6700;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;postResult&amp;#x6765;&amp;#x5C06;&amp;#x7ED3;&amp;#x679C;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; postResult(&lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;SuppressWarnings&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;unchecked&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt; message = getHandler().obtainMessage(&lt;span class=&quot;type&quot;&gt;MESSAGE_POST_RESULT&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new &lt;span class=&quot;type&quot;&gt;AsyncTaskResult&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt;&amp;gt;(this, &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    message.sendToTarget();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x7EE7;&amp;#x7EED;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E86;Handler&amp;#x7684;&amp;#x5F71;&amp;#x5B50;&amp;#x3002;&amp;#x5B83;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;getHandler&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;Handler&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;Handler&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x5C31;&amp;#x662F;MainHandler&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x62ED;&amp;#x76EE;&amp;#x4EE5;&amp;#x5F85;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Handler &lt;span class=&quot;title&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (AsyncTask.class) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sHandler == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; InternalHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; class &lt;span class=&quot;type&quot;&gt;InternalHandler&lt;/span&gt; extends &lt;span class=&quot;type&quot;&gt;Handler&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;InternalHandler&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        super(&lt;span class=&quot;type&quot;&gt;Looper&lt;/span&gt;.getMainLooper());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;SuppressWarnings&lt;/span&gt;({&lt;span class=&quot;string&quot;&gt;&amp;quot;unchecked&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;RawUseOfParameterizedType&amp;quot;&lt;/span&gt;})&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; handleMessage(&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt; msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;type&quot;&gt;AsyncTaskResult&lt;/span&gt;&amp;lt;?&amp;gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt; = (&lt;span class=&quot;type&quot;&gt;AsyncTaskResult&lt;/span&gt;&amp;lt;?&amp;gt;) msg.obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        switch (msg.what) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MESSAGE_POST_RESULT&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                // &lt;span class=&quot;type&quot;&gt;There&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; only one &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mTask.finish(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mData[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;MESSAGE_POST_PROGRESS&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mTask.onProgressUpdate(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mData);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x770B;&amp;#x5230;&amp;#x4E86;&amp;#x5427;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;InternalHandler&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5C06;getMainLooper&amp;#x4F20;&amp;#x5165;&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;Handler&amp;#x5C06;MESSAGE_POST_RESULT&amp;#x6D88;&amp;#x606F;&amp;#x53D1;&amp;#x9001;&amp;#x7ED9;MainLooper&amp;#xFF0C;&amp;#x5728;&amp;#x6D88;&amp;#x606F;&amp;#x5FAA;&amp;#x73AF;&amp;#x4E2D;&amp;#x6267;&amp;#x884C;&amp;#x5230;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x8C03;&amp;#x7528;InternalHandler&amp;#x7684;handleMessage&amp;#xFF0C;&amp;#x8FDB;&amp;#x800C;&amp;#x8C03;&amp;#x7528;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mTask.finish(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;.mData[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x662F;&amp;#x8C03;&amp;#x7528;finish&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;result&amp;#x4F5C;&amp;#x4E3A;&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x5165;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private &lt;span class=&quot;type&quot;&gt;void&lt;/span&gt; finish(&lt;span class=&quot;type&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isCancelled()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onCancelled(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        onPostExecute(&lt;span class=&quot;literal&quot;&gt;result&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mStatus = &lt;span class=&quot;type&quot;&gt;Status&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;FINISHED&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x5C31;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;onPostExecute&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x518D;&amp;#x770B;&amp;#x4E0B;publishProgress&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@WorkerThread&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;publishProgress&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Progress... values)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isCancelled()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        getHandler().obtainMessage(MESSAGE_POST_PROGRESS,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AsyncTaskResult&amp;lt;Progress&amp;gt;(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;, values)).sendToTarget();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5176;&amp;#x5B9E;&amp;#x5982;&amp;#x679C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x5F97;&amp;#x61C2;&amp;#x7684;&amp;#x8BDD;&amp;#x8FD9;&amp;#x91CC;&amp;#x53EA;&amp;#x8981;&amp;#x8D34;&amp;#x51FA;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x77E5;&amp;#x9053;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E86;&amp;#xFF1A;&amp;#x5C31;&amp;#x662F;&amp;#x5F80;MainLooper&amp;#x4E0A;&amp;#x53D1;&amp;#x9001;MESSAGE_POST_PROGRESS&amp;#x6D88;&amp;#x606F;InternalHandler&amp;#x6536;&amp;#x5230;&amp;#x6D88;&amp;#x606F;&amp;#x540E;&amp;#x8C03;&amp;#x7528;onProgressUpdate&amp;#x6267;&amp;#x884C;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x5176;&amp;#x5B9E;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x6D89;&amp;#x53CA;&amp;#x5230;SerialExecutor&amp;#x7684;&amp;#x4E32;&amp;#x884C;&amp;#x6267;&amp;#x884C;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C06;&amp;#x653E;&amp;#x5728;&amp;#x540E;&amp;#x9762;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x4ECB;&amp;#x7ECD;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x8FC7;&amp;#x4E86;Handler&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之HandlerThread</title>
    <link href="http://yoursite.com/2016/07/28/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BHandlerThread/"/>
    <id>http://yoursite.com/2016/07/28/Android-源码分析之HandlerThread/</id>
    <published>2016-07-28T03:55:15.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x4E0A;&amp;#x4E00;&amp;#x7BC7;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;Handler &amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x4E00;&amp;#x822C;&amp;#x7684;&amp;#x5DE5;&amp;#x4F5C;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x9ED8;&amp;#x8BA4;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x6D88;&amp;#x606F;&amp;#x5904;&amp;#x7406;&amp;#x80FD;&amp;#x529B;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8981;&amp;#x5904;&amp;#x7406;&amp;#x6D88;&amp;#x606F;&amp;#x9700;&amp;#x8981;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x6765;&amp;#x7ED9;&amp;#x666E;&amp;#x901A;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Looper&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NonMainThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      public &lt;span class=&quot;type&quot;&gt;Handler&lt;/span&gt; mHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      public void run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Looper&lt;/span&gt;.prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Handler&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              public void handleMessage(&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt; msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;comment&quot;&gt;// process incoming messages here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Looper&lt;/span&gt;.loop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x770B;&amp;#x4E0A;&amp;#x53BB;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x590D;&amp;#x6742;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;Android&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x66F4;&amp;#x4E3A;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x65B9;&amp;#x5F0F;&amp;#x2013;HandlerThread&lt;br&gt;&amp;#x9996;&amp;#x5148;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x662F;&amp;#x5148;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x5B83;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x65B9;&amp;#x5F0F;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mHandlerThread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HandlerThread(&lt;span class=&quot;string&quot;&gt;&amp;quot;WorkThread&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mHandlerThread.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mThreadHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler(mHandlerThread.getLooper()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.handleMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;comment&quot;&gt;//&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&amp;#x3002;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x6765;&amp;#x5206;&amp;#x6790;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x63A5;&amp;#x53D7;&amp;#x4E00;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x8FD9;&amp;#x4E2A;HandlerThread&amp;#x7684;&amp;#x540D;&amp;#x5B57;&amp;#xFF0C;&amp;#x63A5;&amp;#x7740;&amp;#x4E3A;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandlerThread&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPriority = Process.THREAD_PRIORITY_DEFAULT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x60F3;&amp;#x4F7F;&amp;#x7528;&amp;#x9ED8;&amp;#x8BA4;&amp;#x7684;&amp;#x4F18;&amp;#x5148;&amp;#x7EA7;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HandlerThread&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; priority)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mPriority = priority;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5728;&amp;#x8C03;&amp;#x7528;start&amp;#x65B9;&amp;#x6CD5;&amp;#x540E;&amp;#xFF0C;run&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4F1A;&amp;#x8FD0;&amp;#x884C;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public void run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTid = Process.myTid()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.prepare()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    synchronized (this) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLooper = Looper.myLooper()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyAll()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Process.setThreadPriority(mPriority)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    onLooperPrepared()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.loop()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mTid = -1&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x6BB5;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x719F;&amp;#x6089;&amp;#x5427;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x8BE5;&amp;#x535A;&amp;#x5BA2;&amp;#x5F00;&amp;#x5934;&amp;#x63D0;&amp;#x5230;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;onLooperPrepared()&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x7A7A;&amp;#x7684;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5982;&amp;#x679C;&amp;#x9700;&amp;#x8981;&amp;#x5728;Looper&amp;#x5FAA;&amp;#x73AF;&amp;#x5F00;&amp;#x59CB;&amp;#x524D;&amp;#x505A;&amp;#x4E9B;&amp;#x5176;&amp;#x4ED6;&amp;#x5904;&amp;#x7406;&amp;#x53EF;&amp;#x4EE5;&amp;#x8986;&amp;#x5199;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x8C03;&amp;#x7528;getLooper&amp;#x65B9;&amp;#x6CD5;&amp;#x8FD4;&amp;#x56DE;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5904;&amp;#x4E8E;loop&amp;#x72B6;&amp;#x6001;&amp;#x7684;Looper&amp;#x4E86;&amp;#xFF0C;&amp;#x4E5F;&amp;#x6709;&amp;#x4E86;MessageQueue&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x521B;&amp;#x5EFA;Handler&amp;#x5904;&amp;#x7406;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53D1;&amp;#x8FC7;&amp;#x6765;&amp;#x7684;&amp;#x6D88;&amp;#x606F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6CE8;&amp;#x610F;&amp;#x7684;&amp;#x662F;&amp;#x8FD9;&amp;#x91CC;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BA9;&amp;#x975E;UI&amp;#x7EBF;&amp;#x7A0B;&amp;#x62E5;&amp;#x6709;&amp;#x5904;&amp;#x7406;&amp;#x5176;&amp;#x4ED6;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53D1;&amp;#x9001;&amp;#x8FC7;&amp;#x6765;&amp;#x6D88;&amp;#x606F;&amp;#x80FD;&amp;#x529B;&amp;#x624D;&amp;#x4F7F;&amp;#x7528;HandlerThread&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x5177;&amp;#x6709;&amp;#x6D88;&amp;#x606F;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x5C31;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4E00;&amp;#x5B9A;&amp;#x8981;&amp;#x6E05;&amp;#x695A;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Looper &lt;span class=&quot;title&quot;&gt;getLooper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!isAlive()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// If the thread has been started, wait until the looper has been created.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (isAlive() &amp;amp;&amp;amp; mLooper == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                wait();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mLooper;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4E0A;&amp;#x4E00;&amp;#x7BC7;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;Handler &amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x4E86;&amp;#x4E00;&amp;#x822C;&amp;#x7684;&amp;
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 源码分析之Handler MessageQueue Looper</title>
    <link href="http://yoursite.com/2016/07/28/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BHandler-MessageQueue-Looper/"/>
    <id>http://yoursite.com/2016/07/28/Android-源码分析之Handler-MessageQueue-Looper/</id>
    <published>2016-07-28T03:19:57.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x65E5;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4F8B;&amp;#x5B50;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x542F;&amp;#x52A8;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x4E0A;&amp;#x4F5C;&amp;#x4E00;&amp;#x4E9B;&amp;#x8017;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF0C;&amp;#x5728;&amp;#x64CD;&amp;#x4F5C;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;Handler&amp;#x5411;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53D1;&amp;#x9001;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x66F4;&amp;#x65B0;&amp;#x6587;&amp;#x672C;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x7740;&amp;#x8FD9;&amp;#x4E2A;&amp;#x60C5;&amp;#x666F;&amp;#x5BF9;Handler&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x8FDB;&amp;#x884C;&amp;#x5B66;&amp;#x4E60;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Handler &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Handler() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg.what == CHANGE_TEXT) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            textView.setText(String.valueOf(msg.obj));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.handleMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;};&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Thread() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x4E00;&amp;#x4E9B;&amp;#x8017;&amp;#x65F6;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Message msg = Message.obtain();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.what = CHANGE_TEXT;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.obj = &lt;span class=&quot;string&quot;&gt;&amp;quot;Hello Handle&amp;quot;&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;handler&lt;/span&gt;.sendMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (InterruptedException e) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            e.printStackTrace();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}.start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Handler&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5728;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x6BD4;&amp;#x8F83;&amp;#x6709;&amp;#x4EF7;&amp;#x503C;&amp;#x7684;&amp;#x63D0;&amp;#x793A;&amp;#xFF1A;&amp;#x5C31;&amp;#x662F;&amp;#x5982;&amp;#x679C;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6CA1;&amp;#x6709;Looper&amp;#x90A3;&amp;#x4E48;&amp;#x5B83;&amp;#x5C06;&amp;#x4E0D;&amp;#x5177;&amp;#x5907;&amp;#x63A5;&amp;#x53D7;Message&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x5B8C;&amp;#x8FD9;&amp;#x79CD;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;post&amp;#x6D88;&amp;#x606F;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x4F1A;&amp;#x6709;&amp;#x5F02;&amp;#x5E38;&amp;#x629B;&amp;#x51FA;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Default constructor associates this handler with the {&lt;span class=&quot;doctag&quot;&gt;@link&lt;/span&gt; Looper} for the&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * current thread.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * If this thread does not have a looper, this handler won&amp;apos;t be able to receive messages&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * so an exception is thrown.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Handler&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x5B9E;&amp;#x9645;&amp;#x4E0A;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;Handler&amp;#x7684;&amp;#x53E6;&amp;#x4E00;&amp;#x4E2A;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight monkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Handler(Callback callback, boolean async) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (FIND_POTENTIAL_LEAKS) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt;&amp;lt;? &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Handler&lt;/span&gt;&amp;gt; &lt;span class=&quot;title&quot;&gt;klass&lt;/span&gt; = &lt;span class=&quot;title&quot;&gt;getClass&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((klass.isAnonymousClass() || klass.isMemberClass() || klass.isLocalClass()) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (klass.getModifiers() &amp;amp; Modifier.STATIC) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;Log&lt;/span&gt;.w(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;The following Handler class should be static or leaks might occur: &amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                klass.getCanonicalName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mLooper = Looper.myLooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mLooper == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&amp;quot;Can&amp;apos;t create handler inside thread that has not called Looper.prepare()&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mQueue = mLooper.mQueue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mCallback = callback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mAsynchronous = async;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x5F00;&amp;#x59CB;&amp;#x90E8;&amp;#x5206;&amp;#x4F1A;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x7684;Handler&amp;#x7C7B;&amp;#x662F;&amp;#x5426;&amp;#x662F;&amp;#x533F;&amp;#x540D;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x9759;&amp;#x6001;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#xFF0C;&amp;#x6210;&amp;#x5458;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x8FD9;&amp;#x4E9B;&amp;#x7684;&amp;#x8BDD;&amp;#x9700;&amp;#x8981;&amp;#x5C06;Handler&amp;#x58F0;&amp;#x660E;&amp;#x6210;static&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x5185;&amp;#x5B58;&amp;#x4F18;&amp;#x5316;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E2D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x63D0;&amp;#x5230;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x662F;&amp;#x975E;&amp;#x9759;&amp;#x6001;&amp;#x7684;&amp;#x90A3;&amp;#x4E48;&amp;#x5C06;&amp;#x4F1A;&amp;#x6301;&amp;#x6709;&amp;#x5916;&amp;#x90E8;&amp;#x7C7B;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x5F88;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x9020;&amp;#x6210;&amp;#x5185;&amp;#x5B58;&amp;#x6CC4;&amp;#x9732;&amp;#x3002;&lt;br&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Looper.&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;myLooper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x5426;&amp;#x6709;Looper&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E00;&amp;#x70B9;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x5DF2;&amp;#x7ECF;&amp;#x63D0;&amp;#x5230;&amp;#x4E86;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;Looper&amp;#x5C31;&amp;#x6CA1;&amp;#x6709;&amp;#x5904;&amp;#x7406;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x3002;&amp;#x90A3;&amp;#x4E48;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x624D;&amp;#x6709;Looper&amp;#x5462;&amp;#xFF1F;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;myLooper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Return the Looper object associated with the current thread.  Returns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * null if the calling thread is not associated with a Looper.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;annotation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;Looper &lt;span class=&quot;title&quot;&gt;myLooper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sThreadLocal.&lt;span class=&quot;title&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x6CE8;&amp;#x91CA;&amp;#x4E0A;&amp;#x770B;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x5F88;&amp;#x660E;&amp;#x663E;&amp;#x770B;&amp;#x51FA;&amp;#x5B83;&amp;#x662F;&amp;#x7528;&amp;#x4E8E;&amp;#x83B7;&amp;#x53D6;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x7684;Looper&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x8FD9;&amp;#x4E2A;Looper&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x8BBE;&amp;#x7F6E;&amp;#x7684;&amp;#x5462;&amp;#xFF1F; &amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepare&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;boolean quitAllowed&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sThreadLocal.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;() != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Only one Looper may be created per thread&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    sThreadLocal.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Looper(quitAllowed));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x4F1A;&amp;#x5148;&amp;#x5224;&amp;#x65AD;&amp;#x5F53;&amp;#x524D;&amp;#x7EBF;&amp;#x7A0B;&amp;#x662F;&amp;#x5426;&amp;#x5DF2;&amp;#x7ECF;&amp;#x6709;Looper&amp;#x4E86;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x6DFB;&amp;#x52A0;&amp;#x4E00;&amp;#x4E2A;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5C31;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x4E00;&amp;#x4E2A;&amp;#x7EBF;&amp;#x7A0B;&amp;#x81F3;&amp;#x591A;&amp;#x53EA;&amp;#x80FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;Looper&amp;#x3002;&lt;br&gt;&amp;#x90A3;&amp;#x4E48;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x8C03;&amp;#x7528;&amp;#x8FD9;&amp;#x4E2A;prepare&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x6CA1;&amp;#x6709;&amp;#x62A5;&amp;#x9519;&amp;#xFF0C;&amp;#x539F;&amp;#x56E0;&amp;#x5728;&amp;#x4E8E;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5728;&amp;#x521B;&amp;#x5EFA;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x5DF2;&amp;#x7ECF;&amp;#x968F;&amp;#x5373;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;MainLooper&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;prepare&amp;#x65B9;&amp;#x6CD5;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;prepareMainLooper&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;prepareMainLooper&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    prepare(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (Looper.class) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sMainLooper != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;span class=&quot;string&quot;&gt;&amp;quot;The main Looper has already been prepared.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sMainLooper = myLooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5B83;&amp;#x4F1A;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Looper&amp;#x540E;&amp;#x5C06;&amp;#x5176;&amp;#x8D4B;&amp;#x7ED9;sMainLooper&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x641C;&amp;#x7D22;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x5728;&amp;#x54EA;&amp;#x91CC;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;AcitivityThread.java&amp;#x4E2D;&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6709;&amp;#x8C03;&amp;#x7528;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.prepareMainLooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ActivityThread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActivityThread();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    thread.attach(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (sMainThreadHandler == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sMainThreadHandler = thread.getHandler();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Looper.myLooper().setMessageLogging(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                LogPrinter(Log.DEBUG, &lt;span class=&quot;string&quot;&gt;&amp;quot;ActivityThread&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// End of event ActivityThreadMain.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Looper.&lt;span class=&quot;built_in&quot;&gt;loop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Main thread loop unexpectedly exited&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;Looper&amp;#x5E76;&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;sThreadLocal&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x53D1;&amp;#x9001;Message&amp;#xFF1A;&lt;br&gt;Handler&amp;#x53D1;&amp;#x9001;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x79CD;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;&amp;#x6700;&amp;#x7B80;&amp;#x5355;&amp;#x7684;sendMessage(Message msg)&amp;#x6765;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5206;&amp;#x6790;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg)&lt;/span&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMessageDelayed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;sendMessageDelayed(Message msg, long delayMillis)&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x4E3A;&amp;#x5EF6;&amp;#x8FDF;&amp;#x65F6;&amp;#x95F4;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMessageDelayed&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; delayMillis)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (delayMillis &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        delayMillis = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sendMessageAtTime(msg, SystemClock.uptimeMillis() + delayMillis);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;sendMessageAtTime &amp;#x4F1A;&amp;#x8C03;&amp;#x7528;enqueueMessage&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x6D88;&amp;#x606F;&amp;#x5165;&amp;#x961F;&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sendMessageAtTime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; uptimeMillis)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    MessageQueue queue = mQueue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (queue == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        RuntimeException e = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&amp;quot; sendMessageAtTime() called with no mQueue&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Log.w(&lt;span class=&quot;string&quot;&gt;&amp;quot;Looper&amp;quot;&lt;/span&gt;, e.getMessage(), e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;enqueueMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(queue, msg, uptimeMillis)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;enqueueMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(MessageQueue queue, Message msg, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; uptimeMillis)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    msg.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAsynchronous) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.setAsynchronous(&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; queue.&lt;span class=&quot;title&quot;&gt;enqueueMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(msg, uptimeMillis)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;boolean &lt;span class=&quot;title&quot;&gt;enqueueMessage&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;Message msg, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg.target == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;string&quot;&gt;&amp;quot;Message must have a target.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg.isInUse()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(msg + &lt;span class=&quot;string&quot;&gt;&amp;quot; This message is already in use.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    synchronized (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQuitting) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            IllegalStateException e = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IllegalStateException(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg.target + &lt;span class=&quot;string&quot;&gt;&amp;quot; sending message to a Handler on a dead thread&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.w(TAG, e.getMessage(), e);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.recycle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.markInUse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Message p = mMessages;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean needWake;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; &amp;lt; p.&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// New head, wake up the event queue if blocked.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.next = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mMessages = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            needWake = mBlocked;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Inserted within the middle of the queue.  Usually we don&amp;apos;t have to wake&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// up the event queue unless there is a barrier at the head of the queue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// and the message is the earliest asynchronous message in the queue.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            needWake = mBlocked &amp;amp;&amp;amp; p.target == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; msg.isAsynchronous();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Message prev;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                prev = p;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                p = p.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || &lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt; &amp;lt; p.&lt;span class=&quot;keyword&quot;&gt;when&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (needWake &amp;amp;&amp;amp; p.isAsynchronous()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    needWake = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            msg.next = p; &lt;span class=&quot;comment&quot;&gt;// invariant: p == prev.next&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            prev.next = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We can assume mPtr != 0 because mQuitting is false.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (needWake) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            nativeWake(mPtr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x5F53;&amp;#x6536;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;Message&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x904D;&amp;#x5386;&amp;#x6574;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x5E76;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x6D88;&amp;#x606F;&amp;#x63D2;&amp;#x5165;&amp;#x6309;&amp;#x7167;&amp;#x65F6;&amp;#x95F4;&amp;#x6392;&amp;#x5E8F;&amp;#x597D;&amp;#x7684;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;&amp;#x6D88;&amp;#x606F;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8FDB;&amp;#x5165;&amp;#x961F;&amp;#x5217;&amp;#x4E86;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x4EC0;&amp;#x4E48;&amp;#x65F6;&amp;#x5019;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x5462;&amp;#xFF1F;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x770B;AcitivityThread.java&amp;#x4E2D;&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x9664;&amp;#x4E86;prepareMainLooer&amp;#x5916;&amp;#x5728;&amp;#x6700;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;loop&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5176;&amp;#x5B9E;&amp;#x5C31;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Looper me = myLooper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (me == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; RuntimeException(&lt;span class=&quot;string&quot;&gt;&amp;quot;No Looper; Looper.prepare() wasn&amp;apos;t called on this thread.&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; MessageQueue queue = me.mQueue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Make sure the identity of this thread is that of the local process,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// and keep track of what that identity token actually is.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Binder.clearCallingIdentity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ident = Binder.clearCallingIdentity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Message msg = queue.next(); &lt;span class=&quot;comment&quot;&gt;// might block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// No message indicates that the message queue is quitting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This must be in a local variable, in case a UI event sets the logger&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Printer logging = me.mLogging;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (logging != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Dispatching to &amp;quot;&lt;/span&gt; + msg.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; +&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg.callback + &lt;span class=&quot;string&quot;&gt;&amp;quot;: &amp;quot;&lt;/span&gt; + msg.what);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.dispatchMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (logging != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.println(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; Finished to &amp;quot;&lt;/span&gt; + msg.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt; + &lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; + msg.callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Make sure that during the course of dispatching the&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// identity of the thread wasn&amp;apos;t corrupted.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; newIdent = Binder.clearCallingIdentity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ident != newIdent) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.wtf(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;Thread identity changed from 0x&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + Long.toHexString(ident) + &lt;span class=&quot;string&quot;&gt;&amp;quot; to 0x&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + Long.toHexString(newIdent) + &lt;span class=&quot;string&quot;&gt;&amp;quot; while dispatching to &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + msg.&lt;span class=&quot;keyword&quot;&gt;target&lt;/span&gt;.getClass().getName() + &lt;span class=&quot;string&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    + msg.callback + &lt;span class=&quot;string&quot;&gt;&amp;quot; what=&amp;quot;&lt;/span&gt; + msg.what);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        msg.recycleUnchecked();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5176;&amp;#x5B9E;&amp;#x4E0D;&amp;#x96BE;&amp;#xFF0C;&amp;#x5F88;&amp;#x5BB9;&amp;#x6613;&amp;#x627E;&amp;#x5230;&amp;#x5173;&amp;#x952E;&amp;#x4EE3;&amp;#x7801;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.target&lt;/span&gt;&lt;span class=&quot;class&quot;&gt;.dispatchMessage&lt;/span&gt;(&lt;span class=&quot;tag&quot;&gt;msg&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;msg.target &amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#xFF1F;&amp;#x5176;&amp;#x5B9E;&amp;#x5B83;&amp;#x5C31;&amp;#x662F;&amp;#x5F80;MessageQueue&amp;#x4E2D;post&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;Handler&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x8BF4;Looper&amp;#x4F1A;&amp;#x904D;&amp;#x5386;&amp;#x6574;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x627E;&amp;#x5230;&amp;#x6D88;&amp;#x606F;&amp;#x7684;Target&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;&amp;#x5B83;&amp;#x7684;dispatchMessage&amp;#xFF0C;&amp;#x4E0B;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;dispatchMessage&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5728;dispatchMessage&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x7684;&amp;#x662F;handleMessage&amp;#x8FD9;&amp;#x4E2A;&amp;#x56DE;&amp;#x8C03;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x5199;&amp;#x7684;&amp;#x90A3;&amp;#x4E2A;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dispatchMessage&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Message msg)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg.callback != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleCallback(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCallback != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mCallback.handleMessage(msg)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        handleMessage(msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8BFB;&amp;#x5230;&amp;#x8FD9;&amp;#x91CC;&amp;#x53EF;&amp;#x80FD;&amp;#x7EC6;&amp;#x5FC3;&amp;#x7684;&amp;#x540C;&amp;#x5B66;&amp;#x4F1A;&amp;#x7559;&amp;#x610F;&amp;#x5230;&amp;#x90FD;&amp;#x6CA1;&amp;#x4ECB;&amp;#x7ECD;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#x600E;&amp;#x4E48;&amp;#x51B3;&amp;#x5B9A;&amp;#x67D0;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x4F55;&amp;#x65F6;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;&amp;#x662F;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5176;&amp;#x5B9E;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x5728;loop&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;queue.next&amp;#x8FDB;&amp;#x884C;&amp;#x51B3;&amp;#x5B9A;&amp;#x7684;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Message &lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Return here if the message loop has already quit and been disposed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// This can happen if the application tries to restart a looper after quit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// which is not supported.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; ptr = mPtr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (ptr == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pendingIdleHandlerCount = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// -1 only during first iteration&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nextPollTimeoutMillis = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (;;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nextPollTimeoutMillis != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Binder.flushPendingCommands();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nativePollOnce(ptr, nextPollTimeoutMillis);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Try to retrieve the next message.  Return if found.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; now = SystemClock.uptimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Message prevMsg = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Message msg = mMessages;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; msg.target == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Stalled by a barrier.  Find the next asynchronous message in the queue.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    prevMsg = msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg = msg.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (msg != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !msg.isAsynchronous());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (msg != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (now &amp;lt; msg.when) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Next message is not ready.  Set a timeout to wake up when it is ready.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    nextPollTimeoutMillis = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.min(msg.when - now, Integer.MAX_VALUE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Got a message.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mBlocked = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prevMsg != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        prevMsg.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt; = msg.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        mMessages = msg.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg.&lt;span class=&quot;keyword&quot;&gt;next&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (DEBUG) Log.v(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;Returning message: &amp;quot;&lt;/span&gt; + msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    msg.markInUse();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// No more messages.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                nextPollTimeoutMillis = -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Process the quit message now that all pending messages have been handled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mQuitting) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dispose();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// If first time idle, then get the number of idlers to run.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Idle handles only run if the queue is empty or if the first message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// in the queue (possibly a barrier) is due to be handled in the future.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pendingIdleHandlerCount &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;amp;&amp;amp; (mMessages == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; || now &amp;lt; mMessages.when)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                pendingIdleHandlerCount = mIdleHandlers.&lt;span class=&quot;keyword&quot;&gt;size&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (pendingIdleHandlerCount &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// No idle handlers to run.  Loop and wait some more.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mBlocked = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mPendingIdleHandlers == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mPendingIdleHandlers = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; IdleHandler[Math.max(pendingIdleHandlerCount, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingIdleHandlers = mIdleHandlers.toArray(mPendingIdleHandlers);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Run the idle handlers.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// We only ever reach this code block during the first iteration.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; pendingIdleHandlerCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; IdleHandler idler = mPendingIdleHandlers[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mPendingIdleHandlers[i] = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// release the reference to the handler&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; keep = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                keep = idler.queueIdle();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                Log.wtf(TAG, &lt;span class=&quot;string&quot;&gt;&amp;quot;IdleHandler threw exception&amp;quot;&lt;/span&gt;, t);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!keep) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;synchronized&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mIdleHandlers.remove(idler);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Reset the idle handler count to 0 so we do not run them again.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pendingIdleHandlerCount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// While calling an idle handler, a new message could have been delivered&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// so go back and look again for a pending message without waiting.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        nextPollTimeoutMillis = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5F88;&amp;#x957F;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5176;&amp;#x5B9E;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x4E0D;&amp;#x96BE;&amp;#xFF0C;&amp;#x5B83;&amp;#x5C31;&amp;#x662F;&amp;#x5728;&amp;#x4E00;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;&amp;#x5185;&amp;#x4F1A;&amp;#x53BB;&amp;#x7F16;&amp;#x5386;&amp;#x6574;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#xFF0C;&amp;#x67E5;&amp;#x770B;Message&amp;#x4E2D;&amp;#x7684;when&amp;#x5B57;&amp;#x6BB5;&amp;#xFF0C;&amp;#x5E76;&amp;#x548C;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x8FDB;&amp;#x884C;&amp;#x6BD4;&amp;#x5BF9;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x8FBE;&amp;#x5230;&amp;#x8981;&amp;#x53D1;&amp;#x9001;&amp;#x7684;&amp;#x65F6;&amp;#x523B;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x8FD4;&amp;#x56DE;&amp;#x8FD9;&amp;#x4E2A;Message&amp;#x7ED9;Looper&amp;#x3002;&amp;#x5230;&amp;#x6B64;&amp;#x6574;&amp;#x4E2A;Handler&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x5B66;&amp;#x4E60;&amp;#x544A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5C0F;&amp;#x6BB5;&amp;#x843D;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x56DE;&amp;#x987E;&amp;#x4E0B;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x5728;AcitivityThread.java&amp;#x7684;main&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;Looper.prepareMainLooper();&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;MainLooper&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x8C03;&amp;#x7528;Looper.loop();&amp;#x5F00;&amp;#x542F;&amp;#x6D88;&amp;#x606F;&amp;#x5FAA;&amp;#x73AF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5141;&amp;#x8BB8;Hanlder&amp;#x5F80;&amp;#x4E3B;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x6295;&amp;#x9012;&amp;#x6D88;&amp;#x606F;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x4E3B;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x521B;&amp;#x5EFA;Hanlder&amp;#xFF0C;&amp;#x5728;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5904;&amp;#x7406;&amp;#x5B8C;&amp;#x8017;&amp;#x65F6;&amp;#x64CD;&amp;#x4F5C;&amp;#x540E;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E2A;Handler&amp;#x5B8C;MainLooper&amp;#x4E2D;sentMessage&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6D88;&amp;#x606F;&amp;#x4F1A;&amp;#x901A;&amp;#x8FC7;&amp;#x8C03;&amp;#x7528;enqueueMessage&amp;#x52A0;&amp;#x5165;&amp;#x5230;&amp;#x6D88;&amp;#x606F;&amp;#x961F;&amp;#x5217;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6CE8;&amp;#x610F;&amp;#x8FD9;&amp;#x91CC;&amp;#x7684;Message&amp;#x6301;&amp;#x6709;Handler&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x9700;&amp;#x8981;&amp;#x5C06;&amp;#x533F;&amp;#x540D;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#xFF0C;&amp;#x9759;&amp;#x6001;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#x7684;Handler&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;static&amp;#x7684;&amp;#x539F;&amp;#x56E0;&amp;#x4E86;&amp;#xFF0C;&amp;#x5426;&amp;#x5219;Handler&amp;#x4F1A;&amp;#x6301;&amp;#x6709;&amp;#x5916;&amp;#x90E8;&amp;#x7C7B;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x53EA;&amp;#x8981;&amp;#x6D88;&amp;#x606F;&amp;#x6CA1;&amp;#x53CA;&amp;#x65F6;&amp;#x5904;&amp;#x7406;&amp;#xFF0C;Handler&amp;#x6240;&amp;#x5728;&amp;#x7684;Activity&amp;#x6216;&amp;#x8005;Service&amp;#x4E00;&amp;#x65E6;&amp;#x9000;&amp;#x51FA;&amp;#x4E86;&amp;#x5C31;&amp;#x4F1A;&amp;#x9020;&amp;#x6210;&amp;#x5185;&amp;#x5B58;&amp;#x6CC4;&amp;#x9732;&amp;#x3002;&lt;br&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5728;Looper.looper&amp;#x4E2D;&amp;#x4F1A;&amp;#x5B9A;&amp;#x671F;&amp;#x67E5;&amp;#x770B;&amp;#x6BCF;&amp;#x4E2A;&amp;#x6D88;&amp;#x606F;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x65F6;&amp;#x95F4;&amp;#x5230;&amp;#x4E86;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;&amp;#x6D88;&amp;#x606F;&amp;#x6240;&amp;#x7ED1;&amp;#x5B9A;Handler&amp;#x7684;dispatchMessage&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x5728;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x8C03;&amp;#x7528;&amp;#x6211;&amp;#x4EEC;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;handleMessage&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#x56FE;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Handler-MessageQueue-Looper/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x518D;&amp;#x6765;&amp;#x7AD9;&amp;#x5728;&amp;#x5168;&amp;#x5C40;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6;&amp;#x6765;&amp;#x4E00;&amp;#x5F20;&amp;#x56FE;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/28/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;Handler-MessageQueue-Looper/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x53EF;&amp;#x4EE5;&amp;#x6709;&amp;#x5904;&amp;#x7406;&amp;#x6D88;&amp;#x606F;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x5417;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x95EE;&amp;#x9898;&amp;#x6211;&amp;#x4EEC;&amp;#x5176;&amp;#x5B9E;&amp;#x5728;&amp;#x4E0A;&amp;#x9762;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8BF4;&amp;#x8FC7;&amp;#x4E86;&amp;#xFF0C;&amp;#x9ED8;&amp;#x8BA4;&amp;#x60C5;&amp;#x51B5;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x7684;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x6CA1;&amp;#x6709;Looper&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;&amp;#x7EBF;&amp;#x7A0B;&amp;#x521B;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;Looper&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x6709;&amp;#x4E86;&amp;#x6D88;&amp;#x606F;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x80FD;&amp;#x529B;&amp;#x4E86;&amp;#x3002;&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NonMainThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; {&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      public &lt;span class=&quot;type&quot;&gt;Handler&lt;/span&gt; mHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      public void run() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Looper&lt;/span&gt;.prepare();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          mHandler = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Handler&lt;/span&gt;() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              public void handleMessage(&lt;span class=&quot;type&quot;&gt;Message&lt;/span&gt; msg) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;comment&quot;&gt;// process incoming messages here&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          };&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;type&quot;&gt;Looper&lt;/span&gt;.loop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  }&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x65E5;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#xFF1A;&lt;br&gt;&amp;#x4E
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android-源码分析之ListView</title>
    <link href="http://yoursite.com/2016/07/27/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BListView/"/>
    <id>http://yoursite.com/2016/07/27/Android-源码分析之ListView/</id>
    <published>2016-07-27T02:52:44.000Z</published>
    <updated>2016-08-05T15:55:00.290Z</updated>
    
    <content type="html">&lt;p&gt;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;ListView&amp;#x548C;Adapter&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x4E4B;&amp;#x524D;&amp;#x7BC7;&amp;#x6587;&amp;#x7AE0;&amp;#x53EA;&amp;#x662F;&amp;#x7740;&amp;#x773C;&amp;#x4E8E;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x8BB2;&amp;#x5230;&amp;#x5177;&amp;#x4F53;&amp;#x7684;&amp;#x80CC;&amp;#x540E;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x5C06;&amp;#x4F1A;&amp;#x4EE3;&amp;#x5927;&amp;#x5BB6;&amp;#x8FC7;&amp;#x4E0B;ListView&amp;#x7684;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8BA9;&amp;#x5927;&amp;#x5BB6;&amp;#x4E86;&amp;#x89E3;&amp;#x4E0B;&amp;#x6574;&amp;#x4E2A;&amp;#x539F;&amp;#x7406;&amp;#xFF1A;&amp;#x91CD;&amp;#x70B9;&amp;#x662F;ListView &amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&lt;/p&gt;
&lt;h5 id=&quot;ListView-&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&quot;&gt;&lt;a href=&quot;#ListView-&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&quot; class=&quot;headerlink&quot; title=&quot;ListView &amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&quot;&gt;&lt;/a&gt;ListView &amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&lt;/h5&gt;&lt;h6 id=&quot;RecycleBin&amp;#x539F;&amp;#x7406;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;a href=&quot;#RecycleBin&amp;#x539F;&amp;#x7406;&amp;#x6982;&amp;#x8FF0;&quot; class=&quot;headerlink&quot; title=&quot;RecycleBin&amp;#x539F;&amp;#x7406;&amp;#x6982;&amp;#x8FF0;&quot;&gt;&lt;/a&gt;RecycleBin&amp;#x539F;&amp;#x7406;&amp;#x6982;&amp;#x8FF0;&lt;/h6&gt;&lt;p&gt;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;RecycleBin&amp;#x539F;&amp;#x7406;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E24;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;ActiveView&amp;#x548C;ScrapView&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;ListView&amp;#x4E2D;&amp;#x5305;&amp;#x542B;&amp;#x4E24;&amp;#x7C7B;&amp;#x5B50;View&amp;#xFF0C;&amp;#x4E00;&amp;#x7C7B;&amp;#x662F;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#xFF0C;&amp;#x663E;&amp;#x793A;&amp;#x5728;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E0A;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C31;&amp;#x662F;ActiveView&amp;#xFF0C;&amp;#x53E6;&amp;#x4E00;&amp;#x7C7B;&amp;#x662F;&amp;#x4E0D;&amp;#x53EF;&amp;#x89C1;&amp;#x7684;&amp;#x8FD9;&amp;#x4E9B;&amp;#x88AB;&amp;#x79F0;&amp;#x4E3A;ScrapView&amp;#xFF08;Scrap&amp;#x8868;&amp;#x793A;&amp;#x5E9F;&amp;#x5F03;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#xFF09;ListView&amp;#x4F1A;&amp;#x628A;ScrapView&amp;#x5220;&amp;#x9664;&amp;#x7684;&amp;#x540C;&amp;#x65F6;&amp;#x653E;&amp;#x5165;&amp;#x5230;RecycleBin&amp;#x4E2D;&amp;#x7F13;&amp;#x5B58;&amp;#x8D77;&amp;#x6765;&amp;#x3002;&amp;#x5F53;&amp;#x6211;&amp;#x4EEC;&amp;#x6ED1;&amp;#x52A8;ListView&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x5BFC;&amp;#x81F4;&amp;#x6709;&amp;#x4E00;&amp;#x90E8;&amp;#x5206;&amp;#x5143;&amp;#x7D20;&amp;#x8FDB;&amp;#x5165;&amp;#x5C4F;&amp;#x5E55;&amp;#xFF0C;&amp;#x4E00;&amp;#x4E9B;item&amp;#x4ECE;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E2D;&amp;#x79FB;&amp;#x51FA;&amp;#xFF0C;&amp;#x5728;&amp;#x79FB;&amp;#x5165;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x4ECE;RecycleBin&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;ScrapView&amp;#xFF0C;&amp;#x5C06;&amp;#x5176;&amp;#x4F5C;&amp;#x4E3A;convertView&amp;#x53C2;&amp;#x6570;&amp;#x4F20;&amp;#x9012;&amp;#x7ED9;Adapter&amp;#x7684;getView&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x8FBE;&amp;#x5230;View&amp;#x590D;&amp;#x7528;&amp;#x7684;&amp;#x76EE;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x4E0D;&amp;#x5FC5;&amp;#x5728;Adapter&amp;#x7684;getView&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x6267;&amp;#x884C; LayoutInflater.inflate()&amp;#x65B9;&amp;#x6CD5;&amp;#x4E86;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x5927;&amp;#x5927;&amp;#x63D0;&amp;#x9AD8;&amp;#x6574;&amp;#x4E2A;&amp;#x6027;&amp;#x80FD;&amp;#xFF0C;&amp;#x5728;&amp;#x7F16;&amp;#x7A0B;&amp;#x7684;&amp;#x4E16;&amp;#x754C;&amp;#x4E2D;&amp;#x6709;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E1C;&amp;#x897F;&amp;#x4E00;&amp;#x76F4;&amp;#x662F;&amp;#x77DB;&amp;#x76FE;&amp;#x7684;&amp;#x90A3;&amp;#x5C31;&amp;#x662F;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x7A7A;&amp;#x95F4;&amp;#xFF0C;&amp;#x800C;ListView&amp;#x4E2D;&amp;#x5728;&amp;#x8FD9;&amp;#x4E24;&amp;#x8005;&amp;#x4E4B;&amp;#x95F4;&amp;#x505A;&amp;#x4E86;&amp;#x5F88;&amp;#x597D;&amp;#x7684;&amp;#x5E73;&amp;#x8861;&amp;#xFF0C;&amp;#x4E2A;&amp;#x4EBA;&amp;#x89C9;&amp;#x5F97;&amp;#x4E4B;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x505A;&amp;#x5230;&amp;#x8FD9;&amp;#x70B9;&amp;#x8FD8;&amp;#x4F9D;&amp;#x8D56;&amp;#x4E8E;ListView item&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7279;&amp;#x6027;&amp;#xFF0C;&amp;#x90A3;&amp;#x5C31;&amp;#x662F;&amp;#x6BCF;&amp;#x4E2A;item&amp;#x7684;&amp;#x5E03;&amp;#x5C40;&amp;#x662F;&amp;#x4E00;&amp;#x81F4;&amp;#x7684;&amp;#x53EA;&amp;#x4E0D;&amp;#x8FC7;&amp;#x6362;&amp;#x4E86;&amp;#x5185;&amp;#x5BB9;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/27/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;ListView/1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight zephir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;RecycleBin&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//.....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Views that were on screen at the start of layout. This array is populated at the start of&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Views in mActiveViews represent a contiguous range of Views, with position of the first&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * view store in mFirstActivePosition.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; View[] mActiveViews = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Unsorted views that can be used by the adapter as a convert view.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ArrayList&amp;lt;View&amp;gt;[] mScrapViews;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.....&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Fill ActiveViews with all of the children of the AbsListView.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; childCount The minimum number of views mActiveViews should hold&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; firstActivePosition The position of the first view that will be stored in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *        mActiveViews&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void fillActiveViews(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childCount, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; firstActivePosition) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mActiveViews.length &amp;lt; childCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mActiveViews = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; View[childCount];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstActivePosition = firstActivePosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//noinspection MismatchedReadAndWriteOfArray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View[] activeViews = mActiveViews;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; childCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            View child = getChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AbsListView.LayoutParams lp = (AbsListView.LayoutParams) child.getLayoutParams();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t put header or footer views into the scrap heap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lp != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; lp.viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;Note:&lt;/span&gt;  We do place AdapterView.ITEM_VIEW_TYPE_IGNORE in active views.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//        However, we will NOT place them into scrap views.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                activeViews[i] = child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Remember the position so that setupChild() doesn&amp;apos;t reset state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                lp.scrappedFromPosition = firstActivePosition + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Get the view corresponding to the specified position. The view will be removed from&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * mActiveViews if it is found.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; position The position to look up in mActiveViews&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; The view if it is found, null otherwise&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View getActiveView(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = position - mFirstActivePosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View[] activeViews = mActiveViews;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index &amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; index &amp;lt; activeViews.length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View match = activeViews[index];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            activeViews[index] = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; match;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; A view from the ScrapViews collection. These are unordered.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View getScrapView(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; whichScrap = mAdapter.getItemViewType(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (whichScrap &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mViewTypeCount == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; retrieveFromScrap(mCurrentScrap, position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (whichScrap &amp;lt; mScrapViews.length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; retrieveFromScrap(mScrapViews[whichScrap], position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * Puts a view into the list of scrap views.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * If the list data hasn&amp;apos;t changed or the adapter has stable IDs, views&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * with transient state will be preserved for later retrieval.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; scrap The view to add&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; position The view&amp;apos;s position within its parent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void addScrapView(View scrap, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; AbsListView.LayoutParams lp = (AbsListView.LayoutParams) scrap.getLayoutParams();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lp == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Can&amp;apos;t recycle, but we don&amp;apos;t know anything about the view.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Ignore it completely.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lp.scrappedFromPosition = position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Remove but don&amp;apos;t scrap header or footer views, or views that&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// should otherwise not be recycled.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; viewType = lp.viewType;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!shouldRecycleViewType(viewType)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Can&amp;apos;t recycle. If it&amp;apos;s not a header or footer, which have&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// special handling and should be ignored, then skip the scrap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// heap and we&amp;apos;ll fully detach the view later.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (viewType != ITEM_VIEW_TYPE_HEADER_OR_FOOTER) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getSkippedScrap().add(scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scrap.dispatchStartTemporaryDetach();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// The the accessibility state of the view may change while temporary&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// detached and we do not allow detached views to fire accessibility&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// events. So we are announcing that the subtree changed giving a chance&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// to clients holding on to a view in this subtree to refresh it.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyViewAccessibilityStateChangedIfNeeded(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                AccessibilityEvent.CONTENT_CHANGE_TYPE_SUBTREE);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Don&amp;apos;t scrap views that have transient state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; scrapHasTransientState = scrap.hasTransientState();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrapHasTransientState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mAdapter != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; mAdapterHasStableIds) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If the adapter has stable IDs, we can reuse the view for&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// the same data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTransientStateViewsById == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTransientStateViewsById = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; LongSparseArray&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTransientStateViewsById.put(lp.itemId, scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mDataChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// If the data hasn&amp;apos;t changed, we can reuse the views at&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// their old positions.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mTransientStateViews == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mTransientStateViews = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SparseArray&amp;lt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mTransientStateViews.put(position, scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Otherwise, we&amp;apos;ll have to remove the view and start over.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getSkippedScrap().add(scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mViewTypeCount == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mCurrentScrap.add(scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mScrapViews[viewType].add(scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mRecyclerListener != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                mRecyclerListener.onMovedToScrapHeap(scrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;RecycleBin&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4E0D;&amp;#x662F;&amp;#x5F88;&amp;#x5927;&amp;#x4F46;&amp;#x662F;&amp;#x5168;&amp;#x90E8;&amp;#x5728;&amp;#x535A;&amp;#x5BA2;&amp;#x8BB2;&amp;#x89E3;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EC6;&amp;#x8282;&amp;#x4E00;&amp;#x6765;&amp;#x81EA;&amp;#x5DF1;&amp;#x4E5F;&amp;#x4E0D;&amp;#x662F;&amp;#x5B8C;&amp;#x5168;&amp;#x61C2;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x800C;&amp;#x4E14;&amp;#x592A;&amp;#x5173;&amp;#x6CE8;&amp;#x7EC6;&amp;#x8282;&amp;#x6211;&amp;#x4EEC;&amp;#x5E38;&amp;#x5E38;&amp;#x4F1A;&amp;#x9677;&amp;#x5165;&amp;#x7EC6;&amp;#x8282;&amp;#x800C;&amp;#x770B;&amp;#x4E0D;&amp;#x5230;&amp;#x6574;&amp;#x4E2A;&amp;#x539F;&amp;#x7406;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x5206;&amp;#x6790;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x4E0D;&amp;#x8981;&amp;#x592A;&amp;#x7EA0;&amp;#x7ED3;&amp;#x7EC6;&amp;#x8282;&amp;#xFF0C;&amp;#x7B49;&amp;#x5230;&amp;#x540E;&amp;#x9762;&amp;#x6709;&amp;#x7591;&amp;#x95EE;&amp;#x6216;&amp;#x8005;&amp;#x9047;&amp;#x5230;&amp;#x95EE;&amp;#x9898;&amp;#x9700;&amp;#x8981;&amp;#x89E3;&amp;#x51B3;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5728;&amp;#x8BA4;&amp;#x771F;&amp;#x5206;&amp;#x6790;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x7EC6;&amp;#x8282;&amp;#x3002;&lt;br&gt;&amp;#x597D;&amp;#x4E86;&amp;#x8A00;&amp;#x5F52;&amp;#x6B63;&amp;#x4F20;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0A;&amp;#x9762;&amp;#x8D34;&amp;#x51FA;&amp;#x4E86;RecycleBin&amp;#x7684;&amp;#x5173;&amp;#x952E;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x6B63;&amp;#x5982;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;RecycleBin&amp;#x5305;&amp;#x542B;mActiveViews&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;mScrapViews&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x4E3B;&amp;#x8981;&amp;#x6210;&amp;#x5458;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x518D;&amp;#x63D2;&amp;#x5165;&amp;#x4E00;&amp;#x4E2A;&amp;#x5206;&amp;#x6790;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x5C31;&amp;#x662F;&amp;#xFF1A;&amp;#x5728;&amp;#x5B66;&amp;#x4E60;&amp;#x6E90;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5148;&amp;#x770B;&amp;#x82F1;&amp;#x6587;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF0C;&amp;#x4E00;&amp;#x822C;Android&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x5927;&amp;#x90E8;&amp;#x5206;&amp;#x90FD;&amp;#x6709;&amp;#x6BD4;&amp;#x8F83;&amp;#x8BE6;&amp;#x7EC6;&amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#x7684;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x8FD9;&amp;#x4E9B;&amp;#x6CE8;&amp;#x91CA;&amp;#x5F80;&amp;#x5F80;&amp;#x4F1A;&amp;#x5FEB;&amp;#x901F;&amp;#x4E86;&amp;#x89E3;&amp;#x8FD9;&amp;#x4E1C;&amp;#x897F;&amp;#x5230;&amp;#x5E95;&amp;#x662F;&amp;#x5E72;&amp;#x5417;&amp;#x7684;&amp;#xFF0C;&amp;#x5230;&amp;#x5E95;&amp;#x8981;&amp;#x4E0D;&amp;#x8981;&amp;#x7EE7;&amp;#x7EED;&amp;#x6DF1;&amp;#x5165;&amp;#x770B;&amp;#x4E0B;&amp;#x53BB;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;mActiveViews &amp;#x7684;&amp;#x6CE8;&amp;#x91CA;&amp;#xFF1A;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Views that were on screen at the start of layout. This array is populated at the start of layout, and at the end of layout all view in mActiveViews are moved to mScrapViews.Views in mActiveViews represent a contiguous range of Views, with position of the first view store in mFirstActivePosition.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x5927;&amp;#x4F53;&amp;#x7684;&amp;#x610F;&amp;#x601D;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x7528;&amp;#x4E8E;&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x662F;&amp;#x5728;&amp;#x6BCF;&amp;#x6B21;&amp;#x5F00;&amp;#x59CB;&amp;#x5E03;&amp;#x5C40;&amp;#x4E4B;&amp;#x524D;&amp;#x4F4D;&amp;#x4E8E;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E0A;&amp;#x7684;&amp;#x90A3;&amp;#x4E9B;item View&amp;#xFF0C;&amp;#x5728;&amp;#x5E03;&amp;#x5C40;&amp;#x7ED3;&amp;#x675F;&amp;#x540E;&amp;#x6240;&amp;#x6709;&amp;#x5B58;&amp;#x5728;&amp;#x4E8E;mActiveViews&amp;#x7684;item View&amp;#x90FD;&amp;#x4F1A;&amp;#x79FB;&amp;#x5230;mScrapViews&amp;#xFF0C;mActiveViews&amp;#x5B58;&amp;#x653E;&amp;#x7684;&amp;#x5185;&amp;#x5BB9;&amp;#x662F;&amp;#x8FDE;&amp;#x7EED;&amp;#x7684;&amp;#x4ECE;mFirstActivePosition&amp;#x4F4D;&amp;#x7F6E;&amp;#x5F00;&amp;#x59CB;&amp;#x5230;&amp;#x5C4F;&amp;#x5E55;&amp;#x6240;&amp;#x80FD;&amp;#x663E;&amp;#x793A;&amp;#x4E0B;&amp;#x7684;&amp;#x6700;&amp;#x5927;item&amp;#x6570;&amp;#x76EE;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x90A3;&amp;#x4E48;mScrapViews &amp;#x53C8;&amp;#x662F;&amp;#x4EC0;&amp;#x4E48;&amp;#x5462;&amp;#xFF1F;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unsorted views that can be used by the adapter as a convert view.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;#x4ECE;&amp;#x6CE8;&amp;#x91CA;&amp;#x4E2D;&amp;#x53EF;&amp;#x4EE5;&amp;#x4E86;&amp;#x89E3;&amp;#x5230;&amp;#x5B83;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x65E0;&amp;#x5E8F;&amp;#x6392;&amp;#x5217;&amp;#x7684;&amp;#x5217;&amp;#x8868;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x89C6;&amp;#x56FE;&amp;#x53EF;&amp;#x4EE5;&amp;#x88AB;&amp;#x4F20;&amp;#x5165;Adapter&amp;#x4E2D;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;convert view.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fillActiveViews &amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x7528;&amp;#x4E8E;&amp;#x5C06;AbsListView&amp;#x6240;&amp;#x6709;&amp;#x7684;&amp;#x5B50;item &amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ActiveViews&amp;#x4E2D;&amp;#xFF0C;&amp;#x5B83;&amp;#x63A5;&amp;#x6536;&amp;#x4E24;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;childCount&amp;#x8868;&amp;#x793A;&amp;#x5C4F;&amp;#x5E55;&amp;#x663E;&amp;#x793A;&amp;#x7684;&amp;#x5B50;item&amp;#x7684;&amp;#x6570;&amp;#x76EE;&amp;#xFF0C;firstActivePosition&amp;#x8868;&amp;#x793A;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E0A;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;item&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x3002;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;getActiveView &amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x4F1A;&amp;#x4F20;&amp;#x5165;&amp;#x4F4D;&amp;#x7F6E;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x4F1A;&amp;#x4ECE;mActiveViews&amp;#x4E2D;&amp;#x5BFB;&amp;#x627E;&amp;#x5E76;&amp;#x53D6;&amp;#x51FA;item View&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x627E;&amp;#x5230;&amp;#x5728;mActiveViews&amp;#x4E2D;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F4D;&amp;#x7F6E;View&amp;#x5C06;&amp;#x4F1A;&amp;#x88AB;&amp;#x7F6E;&amp;#x4E3A;null&lt;/li&gt;
&lt;li&gt;addScrapView &amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x6BD4;&amp;#x8F83;&amp;#x591A;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6240;&amp;#x5904;&amp;#x7406;&amp;#x7684;&amp;#x4EFB;&amp;#x52A1;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x5C06;&amp;#x5E9F;&amp;#x5F03;&amp;#x7684;View&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;mScrapViews&amp;#x4E2D;&amp;#xFF0C;getScrapView&amp;#x76F8;&amp;#x53CD;&amp;#x5C31;&amp;#x662F;&amp;#x4ECE;ScrapView&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;view&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x5927;&amp;#x5BB6;&amp;#x770B;&amp;#x5B8C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x548C;&amp;#x6211;&amp;#x6709;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x611F;&amp;#x89C9;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4EE3;&amp;#x7801;&amp;#x6709;&amp;#x5565;&amp;#x8425;&amp;#x517B;&amp;#xFF1F;&amp;#x786E;&amp;#x5B9E;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x7ED3;&amp;#x5408;ListView&amp;#x4EE3;&amp;#x7801;&amp;#x6765;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x662F;&amp;#x5B8C;&amp;#x5168;&amp;#x770B;&amp;#x4E0D;&amp;#x51FA;RecycleBin&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#x7684;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x4E86;&amp;#x89E3;&amp;#x5230;RecycleBin&amp;#x4E2D;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E4B;&amp;#x540E;&amp;#x7686;&amp;#x6765;&amp;#x6765;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x770B;&amp;#x5B83;&amp;#x600E;&amp;#x4E48;&amp;#x5728;Listview&amp;#x4E2D;&amp;#x8D77;&amp;#x5230;&amp;#x4E00;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x5C31;&amp;#x6765;&amp;#x8BB2;&amp;#x89E3;&amp;#x4E0B;ListView&amp;#x548C;RecycleBin&amp;#x5982;&amp;#x4F55;&amp;#x4EA4;&amp;#x4E92;&amp;#x5B9E;&amp;#x73B0;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3B;&amp;#x8981;&amp;#x5173;&amp;#x6CE8;&amp;#x5982;&amp;#x4E0B;&amp;#x4E24;&amp;#x4E2A;&amp;#x60C5;&amp;#x51B5;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ListView&amp;#x7684;item View &amp;#x56DE;&amp;#x6536;&amp;#x5230; RecycleBin&lt;/li&gt;
&lt;li&gt;&amp;#x4ECE;RecycleBin&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;View&amp;#x4F5C;&amp;#x4E3A;ListView&amp;#x7684;item View&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x4ECE;&amp;#x7ED8;&amp;#x5236;&amp;#x7684;&amp;#x89D2;&amp;#x5EA6;&amp;#x51FA;&amp;#x53D1;&amp;#xFF0C;&amp;#x89C2;&amp;#x5BDF;&amp;#x5B83;&amp;#x662F;&amp;#x5982;&amp;#x4F55;&amp;#x5728;&amp;#x7ED8;&amp;#x5236;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x5B9E;&amp;#x73B0;&amp;#x5B50;View&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x9996;&amp;#x5148;&amp;#x5728;&amp;#x5206;&amp;#x6790;&amp;#x4EE3;&amp;#x7801;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x6765;&amp;#x4E86;&amp;#x89E3;&amp;#x4E0B;ListView&amp;#x7684;&amp;#x7EE7;&amp;#x627F;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x6709;&amp;#x5229;&amp;#x4E8E;&amp;#x6211;&amp;#x4EEC;&amp;#x5BF9;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;&amp;#x4E86;&amp;#x89E3;&amp;#xFF08;&amp;#x8BF4;&amp;#x767D;&amp;#x4E86;&amp;#x5C31;&amp;#x662F;&amp;#x77E5;&amp;#x9053;&amp;#x5728;&amp;#x5B50;&amp;#x7C7B;&amp;#x627E;&amp;#x4E0D;&amp;#x5230;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x77E5;&amp;#x9053;&amp;#x5982;&amp;#x4F55;&amp;#x987A;&amp;#x7740;&amp;#x7EE7;&amp;#x627F;&amp;#x5173;&amp;#x7CFB;&amp;#x627E;&amp;#xFF09;&lt;/p&gt;
&lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;ListView&lt;/span&gt;-&amp;gt; &lt;span class=&quot;type&quot;&gt;AbsListView&lt;/span&gt; -&amp;gt;&lt;span class=&quot;type&quot;&gt;AdapterView&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;ViewGroup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onLayout&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; changed, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; t, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; r, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onLayout(changed, l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInLayout = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childCount = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (changed) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; childCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            getChildAt(i).forceLayout();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRecycler.markChildrenDirty();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layoutChildren();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mInLayout = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mOverscrollMax = (b - t) / OVERSCROLL_LIMIT_DIVISOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &lt;span class=&quot;doctag&quot;&gt;TODO:&lt;/span&gt; Move somewhere sane. This doesn&amp;apos;t belong in onLayout().&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFastScroll != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFastScroll.onItemCountChanged(getChildCount(), mItemCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;onlayout&amp;#x65B9;&amp;#x6CD5;&amp;#x662F;&amp;#x5728;AbsListView&amp;#x4E2D;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#xFF0C;ListView&amp;#x4E2D;&amp;#x5E76;&amp;#x6CA1;&amp;#x6709;&amp;#x5B9E;&amp;#x73B0;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x662F;&amp;#x56E0;&amp;#x4E3A;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x5C5E;&amp;#x4E8E;GridView&amp;#x4EE5;&amp;#x53CA;ListView&amp;#x901A;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5C06;&amp;#x5176;&amp;#x653E;&amp;#x5728;&amp;#x7236;&amp;#x7C7B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x5728;&amp;#x5E03;&amp;#x5C40;&amp;#x5927;&amp;#x5C0F;&amp;#x6216;&amp;#x8005;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7B49;&amp;#x53D1;&amp;#x751F;&amp;#x53D8;&amp;#x5316;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C06;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;onLayout()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x5F3A;&amp;#x5236;&amp;#x8981;&amp;#x6C42;&amp;#x6240;&amp;#x6709;&amp;#x5B50;item&amp;#x8FDB;&amp;#x884C;&amp;#x91CD;&amp;#x7ED8;&amp;#x3002;&amp;#x4F46;&amp;#x662F;&amp;#x5982;&amp;#x679C;&amp;#x4ED4;&amp;#x7EC6;&amp;#x770B;&amp;#x4F1A;&amp;#x53D1;&amp;#x73B0;layoutChildren()&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@Override&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; layoutChildren() {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childrenTop = mListPadding.top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childrenBottom = mBottom - mTop - mListPadding.bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childCount = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; delta = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View sel;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View oldSel = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View oldFirst = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View newSel = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Remember stuff we will need down below&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mLayoutMode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; LAYOUT_MOVE_SELECTION:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Remember the previously selected view&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = mSelectedPosition - mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;lt; childCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                oldSel = getChildAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Remember the previous first child&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            oldFirst = getChildAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mNextSelectedPosition &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                delta = mNextSelectedPosition - mSelectedPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Caution: newSel might be null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            newSel = getChildAt(&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; + delta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; dataChanged = mDataChanged;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dataChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            handleDataChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; firstPosition = mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; RecycleBin recycleBin = mRecycler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dataChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; childCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                recycleBin.addScrapView(getChildAt(i), firstPosition+i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            recycleBin.fillActiveViews(childCount, firstPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Clear out old views&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        detachAllViewsFromParent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recycleBin.removeSkippedScrap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (mLayoutMode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStackFromBottom) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position = lookForSelectablePosition(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    setSelectedPositionInt(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sel = fillFromTop(childrenTop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position = lookForSelectablePosition(mItemCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    setSelectedPositionInt(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sel = fillUp(mItemCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, childrenBottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSelectedPosition &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; mSelectedPosition &amp;lt; mItemCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sel = fillSpecific(mSelectedPosition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            oldSel == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? childrenTop : oldSel.getTop());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mFirstPosition &amp;lt; mItemCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sel = fillSpecific(mFirstPosition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            oldFirst == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt; ? childrenTop : oldFirst.getTop());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sel = fillSpecific(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, childrenTop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Flush any cached views that did not get reused above&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recycleBin.scrapActiveViews();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x770B;&amp;#x4E0B;&amp;#x5982;&amp;#x4E0B;&amp;#x4EE3;&amp;#x7801;&amp;#x7247;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight oxygene&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; int firstPosition = mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; RecycleBin recycleBin = mRecycler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (dataChanged) &lt;span class=&quot;comment&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (int i = 0; i &amp;lt; childCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        recycleBin.addScrapView(getChildAt(i), firstPosition+i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;} &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    recycleBin.fillActiveViews(childCount, firstPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x4E86;&amp;#x89E3;&amp;#x4E0B;dataChanged&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x600E;&amp;#x4E48;&amp;#x63A7;&amp;#x5236;&amp;#x7684;&amp;#xFF0C;&amp;#x5176;&amp;#x5B9E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x53D8;&amp;#x91CF;&amp;#x662F;&amp;#x5728;Adapter&amp;#x8C03;&amp;#x7528;&amp;#x4E86;notifyDataSetChanged&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x901A;&amp;#x77E5;Adapter&amp;#x7684;&amp;#x6570;&amp;#x636E;&amp;#x6E90;&amp;#x53D1;&amp;#x751F;&amp;#x4E86;&amp;#x53D8;&amp;#x5316;&amp;#xFF0C;&amp;#x6B64;&amp;#x65F6;dataChanged&amp;#x53D8;&amp;#x91CF;&amp;#x5C31;&amp;#x4E3A;true&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x5C06;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x53EF;&amp;#x89C6;item &amp;#x901A;&amp;#x8FC7;RecycleBin&amp;#x7684;addScrapView&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x5176;&amp;#x653E;&amp;#x5165;RecycleBin&amp;#x7684;&amp;#x5E9F;&amp;#x5F03;List&amp;#x4E2D;&amp;#xFF0C;&amp;#x4F9B;&amp;#x540E;&amp;#x7EED;&amp;#x590D;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x8BA9;&amp;#x5927;&amp;#x5BB6;&amp;#x5730;&amp;#x66F4;&amp;#x6E05;&amp;#x695A;&amp;#x6211;&amp;#x628A;&amp;#x90A3;&amp;#x4E9B;&amp;#x65E0;&amp;#x7528;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5220;&amp;#x9664;&amp;#x6389;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5148;&amp;#x4ECE;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;layout&amp;#x7684;&amp;#x60C5;&amp;#x5F62;&amp;#x8FDB;&amp;#x884C;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;layout&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5E03;&amp;#x5C40;&amp;#x4E0A;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x5B50;&amp;#x5143;&amp;#x7D20;&amp;#x7684;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;dataChanged = false&amp;#xFF0C;childCount = 0&amp;#x6240;&amp;#x4EE5;fillActiveViews&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4E5F;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x4EFB;&amp;#x4F55;&amp;#x4F5C;&amp;#x7528;&amp;#x7684;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x5173;&amp;#x952E;&amp;#x4EE3;&amp;#x7801;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mStackFromBottom) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position = lookForSelectablePosition(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setSelectedPositionInt(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sel = fillFromTop(childrenTop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        final &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position = lookForSelectablePosition(mItemCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setSelectedPositionInt(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sel = fillUp(mItemCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, childrenBottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x5C31;&amp;#x662F;&amp;#x6839;&amp;#x636E;&amp;#x5B9E;&amp;#x9645;&amp;#x7684;&amp;#x65B9;&amp;#x5411;&amp;#x6765;&amp;#x8C03;&amp;#x7528;fillFromTop&amp;#x8FD8;&amp;#x662F;fillUp&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x5176;&amp;#x5B9E;&amp;#x529F;&amp;#x80FD;&amp;#x90FD;&amp;#x5DEE;&amp;#x4E0D;&amp;#x591A;&amp;#xFF0C;&amp;#x533A;&amp;#x522B;&amp;#x53EA;&amp;#x662F;&amp;#x5728;&amp;#x4E8E;&amp;#x65B9;&amp;#x5411;&amp;#x800C;&amp;#x5DF2;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4EE5;fillFromTop&amp;#x6765;&amp;#x5206;&amp;#x6790;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; Fills the list from top to bottom, starting with mFirstPosition&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;@param nextTop The location where the top of the first item should be&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;        drawn&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;@return The view that is currently selected&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;*&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private View fillFromTop(int nextTop) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstPosition = Math.min(mFirstPosition, mSelectedPosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mFirstPosition = Math.min(mFirstPosition, mItemCount - 1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (mFirstPosition &lt;span class=&quot;variable&quot;&gt;&amp;lt; 0) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstPosition = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return fillDown(mFirstPosition, nextTop);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x7247;&amp;#x6BB5;&amp;#x6CA1;&amp;#x5B9E;&amp;#x5728;&amp;#x7684;&amp;#x4F5C;&amp;#x7528;&amp;#xFF0C;&amp;#x5B9E;&amp;#x9645;&amp;#x7684;&amp;#x529F;&amp;#x80FD;&amp;#x4F4D;&amp;#x4E8E;fillDown&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;label&quot;&gt;private&lt;/span&gt; View fillDown(int pos, int nextTop) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View &lt;span class=&quot;keyword&quot;&gt;selectedView &lt;/span&gt;= null&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int &lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt; = (mBottom - mTop)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt; -= mListPadding.&lt;span class=&quot;keyword&quot;&gt;bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;preprocessor&quot;&gt;while&lt;/span&gt; (nextTop &amp;lt; &lt;span class=&quot;preprocessor&quot;&gt;end&lt;/span&gt; &amp;amp;&amp;amp; pos &amp;lt; mItemCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // is this the &lt;span class=&quot;keyword&quot;&gt;selected &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;item?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;selected &lt;/span&gt;= pos == mSelectedPosition&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View child = makeAndAddView(pos, nextTop, true, mListPadding.left, &lt;span class=&quot;keyword&quot;&gt;selected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        nextTop = child.getBottom() + mDividerHeight&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;preprocessor&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;selected) &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;selectedView &lt;/span&gt;= child&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pos++&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setVisibleRangeHint(mFirstPosition, mFirstPosition + getChildCount() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;keyword&quot;&gt;selectedView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;fillDown&amp;#x4E2D;&amp;#x4F1A;&amp;#x4ECE;&amp;#x5C4F;&amp;#x5E55;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x904D;&amp;#x5386;&amp;#x586B;&amp;#x5145;&amp;#x6BCF;&amp;#x4E2A;&amp;#x5143;&amp;#x7D20;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x662F;makeAndAddView&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;View &lt;span class=&quot;title&quot;&gt;makeAndAddView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; flow, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childrenLeft,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; selected)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mDataChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Try to use an existing view for this position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        child = mRecycler.getActiveView(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (child != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Found it -- we&amp;apos;re using an existing child&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This just needs to be positioned&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setupChild(child, position, y, flow, childrenLeft, selected, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Make a new view for this position, or convert an unused view if possible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    child = obtainView(position, mIsScrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// This needs to be positioned and measured&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setupChild(child, position, y, flow, childrenLeft, selected, mIsScrap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5728;makeAndAddView&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x4ECE;RecycleBin&amp;#x5F53;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;ActiveView&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5728;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x5E03;&amp;#x5C40;&amp;#x65F6;&amp;#x5019;RecycleBin&amp;#x662F;&amp;#x7A7A;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;null&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;obtainView&amp;#x65B9;&amp;#x6CD5;&amp;#x521B;&amp;#x5EFA;&amp;#x6216;&amp;#x8005;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;ScropView&amp;#x4E2D;&amp;#x6216;&amp;#x5176;&amp;#x4E00;&amp;#x4E2A;&amp;#x5B50;View&amp;#x6765;&amp;#x590D;&amp;#x7528;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;ScropView&amp;#x6570;&amp;#x7EC4;&amp;#x4E5F;&amp;#x662F;&amp;#x7A7A;&amp;#x7684;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EA;&amp;#x80FD;&amp;#x65B0;&amp;#x5EFA;&amp;#x4E00;&amp;#x4E2A;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C31;&amp;#x662F;&amp;#x5728;obtainView&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x5B9E;&amp;#x73B0;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x4E86;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x73B0;&amp;#x5728;&amp;#x8FD9;&amp;#x91CC;&amp;#x63D0;&amp;#x4E0B;&amp;#xFF0C;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x5C31;&amp;#x5C06;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7684;&amp;#x5B50;View&amp;#x901A;&amp;#x8FC7;setupChild&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ListView&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x56E0;&amp;#x6B64;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x5173;&amp;#x6CE8;&amp;#x4E0B;obtainView&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;View &lt;span class=&quot;title&quot;&gt;obtainView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt;[] isScrap)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View scrapView = mRecycler.getScrapView(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View child = mAdapter.getView(position, scrapView, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrapView != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (child != scrapView) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Failed to re-bind the data, return scrap to the heap.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mRecycler.addScrapView(scrapView, position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isScrap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Finish the temporary detach started in addScrapView().&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            child.dispatchFinishTemporaryDetach();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//.......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;obtainView&amp;#x65B9;&amp;#x6CD5;&amp;#x4E5F;&amp;#x662F;&amp;#x53C8;&amp;#x81ED;&amp;#x53C8;&amp;#x957F;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x53EA;&amp;#x770B;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x3002;&amp;#x5B83;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;getScrapView&amp;#x4ECE;mRecycler&amp;#x7684;ScrapView&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x53EF;&amp;#x4EE5;&amp;#x590D;&amp;#x7528;&amp;#x7684;scrapView&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x73B0;&amp;#x5728;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;&amp;#x4EC0;&amp;#x4E48;&amp;#x90FD;&amp;#x6CA1;&amp;#x6709;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;scrapView&amp;#x4E3A;null&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5927;&amp;#x5BB6;&amp;#x719F;&amp;#x6089;&amp;#x4E86;&amp;#x628A;&amp;#xFF0C;&lt;br&gt;&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View child = mAdapter.getView(position, scrapView, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E0D;&amp;#x719F;&amp;#x6089;&amp;#xFF1F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5C31;&amp;#x662F;&amp;#x8C03;&amp;#x7528;Adapter&amp;#x7684;getView&amp;#x65B9;&amp;#x6CD5;&amp;#x554A;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x5C31;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x7ECF;&amp;#x5E38;&amp;#x63D0;&amp;#x5230;&amp;#x7684;convertView&amp;#x3002;&amp;#x60F3;&amp;#x5FC5;&amp;#x770B;&amp;#x4E86;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x5927;&amp;#x5BB6;&amp;#x90FD;&amp;#x4F1A;&amp;#x6709;&amp;#x5370;&amp;#x8C61;&amp;#x5427;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View getView(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; position, View convertView, ViewGroup parent) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewHolder holder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (convertView == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ViewHolder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView = mInflater.inflate(R.layout.vlist2, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.img = (ImageView)convertView.findViewById(R.id.img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.title = (TextView)convertView.findViewById(R.id.title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.info = (TextView)convertView.findViewById(R.id.info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.viewBtn =(Button)convertView.findViewById(R.id.view_btn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView.setTag(holder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder = (ViewHolder)convertView.getTag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.img.setBackgroundResource((Integer)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;img&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.title.setText((&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.info.setText((&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;info&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; convertView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;layout&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;convertView&amp;#x4E3A;&amp;#x7A7A;&amp;#x90A3;&amp;#x4E48;&amp;#x5C31;&amp;#x4F1A;inflate&amp;#x4E00;&amp;#x4E2A;&amp;#x4F5C;&amp;#x4E3A;convertView&amp;#x5E76;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;makeAndAddView#setupChild&amp;#x5C31;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E2A;convertView&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;&amp;#x5E03;&amp;#x5C40;&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setupChild&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View child, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y, boolean flowDown, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childrenLeft,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        boolean selected, boolean recycled)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((recycled &amp;amp;&amp;amp; !p.forceAdd) || (p.recycledHeaderFooter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;amp;&amp;amp; p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER)) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        attachViewToParent(child, flowDown ? -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p.forceAdd = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            p.recycledHeaderFooter = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addViewInLayout(child, flowDown ? -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, p, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&lt;span class=&quot;comment&quot;&gt;//......&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;setupChild&amp;#x65B9;&amp;#x6CD5;&amp;#x5F88;&amp;#x7B80;&amp;#x5355;&amp;#x5C31;&amp;#x662F;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;addViewInLayout&amp;#x5C06;convertView&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ListView&amp;#x4E2D;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2016/07/27/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;ListView/2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x5728;&amp;#x7ECF;&amp;#x8FC7;&amp;#x7B2C;&amp;#x4E00;&amp;#x6B21;layout&amp;#x540E;&amp;#xFF0C;&amp;#x5F80;&amp;#x540E;&amp;#x7684;&amp;#x5E03;&amp;#x5C40;&amp;#x548C;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x5E03;&amp;#x5C40;&amp;#x6709;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x7684;&amp;#x5730;&amp;#x65B9;&amp;#x3002;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x662F;&amp;#x4ECE;layoutChildren&amp;#x5F00;&amp;#x59CB;&amp;#xFF0C;&amp;#x8FD9;&amp;#x91CC;&amp;#x548C;&amp;#x4E0A;&amp;#x9762;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#x662F;&amp;#x7531;&amp;#x4E8E;childCount&amp;#x4E0D;&amp;#x4E3A;0&amp;#x6240;&amp;#x4EE5;fillActiveViews&amp;#x4F1A;&amp;#x5C06;Child Item&amp;#x6DFB;&amp;#x52A0;&amp;#x5230;ActiviteView&amp;#x6570;&amp;#x7EC4;&amp;#x4E2D;&amp;#xFF0C;&lt;br&gt;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;fillSpecific&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4F1A;&amp;#x4ECE;&amp;#x6307;&amp;#x5B9A;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5F00;&amp;#x59CB;&amp;#x52A0;&amp;#x8F7D;Child item&amp;#x3002;&amp;#x7D27;&amp;#x63A5;&amp;#x7740;&amp;#x8C03;&amp;#x7528;makeAndAddView&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;makeAndAddView&amp;#x8DD1;&amp;#x7684;&amp;#x903B;&amp;#x8F91;&amp;#x5C31;&amp;#x548C;&amp;#x4E4B;&amp;#x524D;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#x4E86;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;mDataChanged&amp;#x4E3A;false&amp;#xFF08;&amp;#x5047;&amp;#x8BBE;&amp;#x5F53;&amp;#x524D;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x6BCF;&amp;#x53D8;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x5BF9;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x8FDB;&amp;#x884C;&amp;#x589E;&amp;#x5220;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#xFF09;&amp;#x8FD9;&amp;#x6B21;&amp;#x8C03;&amp;#x7528;mRecycler.getActiveView&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x5C31;&amp;#x4E0D;&amp;#x662F;&amp;#x7A7A;&amp;#x4E86;&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x524D;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;RecycleBin&amp;#x7684;fillActiveViews()&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x7F13;&amp;#x5B58;ChildView&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x5C31;&amp;#x4E0D;&amp;#x4F1A;&amp;#x518D;&amp;#x8FDB;&amp;#x5165;obtainView()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x4F1A;&amp;#x76F4;&amp;#x63A5;&amp;#x8C03;&amp;#x7528;setupChild()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x91CD;&amp;#x65B0;inflate&amp;#x3002;&lt;br&gt;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;setupChild()&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x8FD9;&amp;#x4E4B;&amp;#x524D;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;detachAllViewsFromParent&amp;#x6240;&amp;#x4EE5;&amp;#x5B50;View&amp;#x5E94;&amp;#x8BE5;&amp;#x8C03;&amp;#x7528;attachViewToParent()&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&amp;#x800C;&amp;#x4E0D;&amp;#x662F;&amp;#x524D;&amp;#x9762;&amp;#x63D0;&amp;#x5230;&amp;#x7684;addViewInLayout&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;br&gt;&lt;img src=&quot;/2016/07/27/Android-&amp;#x6E90;&amp;#x7801;&amp;#x5206;&amp;#x6790;&amp;#x4E4B;ListView/3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x597D;&amp;#x4E86;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5B8C;&amp;#x4E0A;&amp;#x9762;&amp;#x4EE3;&amp;#x7801;&amp;#x53EF;&amp;#x80FD;&amp;#x89C9;&amp;#x5F97;&amp;#x8FD8;&amp;#x662F;&amp;#x6CA1;&amp;#x6709;&amp;#x63A5;&amp;#x89E6;&amp;#x5230;&amp;#x6700;&amp;#x6838;&amp;#x5FC3;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#xFF0C;&amp;#x6700;&amp;#x5173;&amp;#x952E;&amp;#x7684;&amp;#x90E8;&amp;#x5206;&amp;#x662F;&amp;#x5728;&amp;#x6ED1;&amp;#x52A8;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5982;&amp;#x4F55;&amp;#x7F13;&amp;#x5B58;&amp;#x7684;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;br&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x6211;&amp;#x4EEC;&amp;#x7684;&amp;#x4EA4;&amp;#x4E92;&amp;#x4E8B;&amp;#x4EF6;&amp;#x90FD;&amp;#x4F1A;&amp;#x88AB;&amp;#x4F20;&amp;#x9012;&amp;#x5230;onTouchEvent&amp;#x4E2D;&amp;#xFF0C;&amp;#x5728;ListView&amp;#x4E5F;&amp;#x4E0D;&amp;#x4F8B;&amp;#x5916;&amp;#xFF0C;onTouchEvent&amp;#x6709;&amp;#x5F88;&amp;#x591A;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5173;&amp;#x6CE8;ACTION_MOVE,&amp;#x5728;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x6211;&amp;#x4EEC;&amp;#x91CD;&amp;#x70B9;&amp;#x5173;&amp;#x6CE8;trackMotionScroll&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x987E;&amp;#x540D;&amp;#x601D;&amp;#x4E49;&amp;#x5C31;&amp;#x662F;&amp;#x8DDF;&amp;#x8E2A;&amp;#x6ED1;&amp;#x52A8;&amp;#x4E8B;&amp;#x4EF6;&amp;#xFF1A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x4EE3;&amp;#x7801;&amp;#x4E5F;&amp;#x5F88;&amp;#x957F;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x662F;&amp;#x4ECE;&amp;#x4E2D;&amp;#x5173;&amp;#x6CE8;&amp;#x91CD;&amp;#x70B9;&amp;#x3002;&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; trackMotionScroll(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; deltaY, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; incrementalDeltaY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; childCount = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childCount == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; firstTop = getChildAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getTop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lastBottom = getChildAt(childCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).getBottom();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Rect listPadding = mListPadding;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// &amp;quot;effective padding&amp;quot; In this case is the amount of padding that affects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// how much space should not be filled by items. If we don&amp;apos;t clip to padding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// there is no effective padding.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; effectivePaddingTop = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; effectivePaddingBottom = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        effectivePaddingTop = listPadding.top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        effectivePaddingBottom = listPadding.bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;// FIXME account for grid vertical spacing too?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; spaceAbove = effectivePaddingTop - firstTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; end = getHeight() - effectivePaddingBottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; spaceBelow = lastBottom - end;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;height&lt;/span&gt; = getHeight() - mPaddingBottom - mPaddingTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (deltaY &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deltaY = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(-(&lt;span class=&quot;variable&quot;&gt;height&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), deltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        deltaY = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;height&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, deltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (incrementalDeltaY &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        incrementalDeltaY = Math.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;(-(&lt;span class=&quot;variable&quot;&gt;height&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), incrementalDeltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        incrementalDeltaY = Math.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;(&lt;span class=&quot;variable&quot;&gt;height&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, incrementalDeltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; firstPosition = mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Update our guesses for where the first and last views are&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (firstPosition == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstPositionDistanceGuess = firstTop - listPadding.top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstPositionDistanceGuess += incrementalDeltaY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (firstPosition + childCount == mItemCount) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastPositionDistanceGuess = lastBottom + listPadding.bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mLastPositionDistanceGuess += incrementalDeltaY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; cannotScrollDown = (firstPosition == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            firstTop &amp;gt;= listPadding.top &amp;amp;&amp;amp; incrementalDeltaY &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; cannotScrollUp = (firstPosition + childCount == mItemCount &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastBottom &amp;lt;= getHeight() - listPadding.bottom &amp;amp;&amp;amp; incrementalDeltaY &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cannotScrollDown || cannotScrollUp) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; incrementalDeltaY != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; down = incrementalDeltaY &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; inTouchMode = isInTouchMode();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (inTouchMode) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hideSelector();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; headerViewsCount = getHeaderViewsCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; footerViewsStart = mItemCount - getFooterViewsCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; start = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (down) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; top = -incrementalDeltaY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            top += listPadding.top;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; childCount; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View child = getChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (child.getBottom() &amp;gt;= top) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; position = firstPosition + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (position &amp;gt;= headerViewsCount &amp;amp;&amp;amp; position &amp;lt; footerViewsStart) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// The view will be rebound to new data, clear any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// system-managed transient state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    child.clearAccessibilityFocus();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mRecycler.addScrapView(child, position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; bottom = getHeight() - incrementalDeltaY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            bottom -= listPadding.bottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; i = childCount - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View child = getChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (child.getTop() &amp;lt;= bottom) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                start = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; position = firstPosition + i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (position &amp;gt;= headerViewsCount &amp;amp;&amp;amp; position &amp;lt; footerViewsStart) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// The view will be rebound to new data, clear any&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// system-managed transient state.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    child.clearAccessibilityFocus();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    mRecycler.addScrapView(child, position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mMotionViewNewTop = mMotionViewOriginalTop + deltaY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBlockLayoutRequests = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (count &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        detachViewsFromParent(start, count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mRecycler.removeSkippedScrap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// invalidate before moving the children to avoid unnecessary invalidate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// calls to bubble up from the children all the way to the top&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!awakenScrollBars()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       invalidate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    offsetChildrenTopAndBottom(incrementalDeltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (down) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mFirstPosition += count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; absIncrementalDeltaY = Math.&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(incrementalDeltaY);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (spaceAbove &amp;lt; absIncrementalDeltaY || spaceBelow &amp;lt; absIncrementalDeltaY) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fillGap(down);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!inTouchMode &amp;amp;&amp;amp; mSelectedPosition != INVALID_POSITION) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; childIndex = mSelectedPosition - mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childIndex &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; childIndex &amp;lt; getChildCount()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            positionSelector(mSelectedPosition, getChildAt(childIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mSelectorPosition != INVALID_POSITION) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; childIndex = mSelectorPosition - mFirstPosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (childIndex &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; childIndex &amp;lt; getChildCount()) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            positionSelector(INVALID_POSITION, getChildAt(childIndex));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mSelectorRect.setEmpty();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBlockLayoutRequests = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    invokeOnItemScrollListener();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4F20;&amp;#x5165;&amp;#x4E24;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;deltaY&amp;#x8868;&amp;#x793A;&amp;#x4ECE;&amp;#x624B;&amp;#x6307;&amp;#x6700;&amp;#x521D;&amp;#x6309;&amp;#x4E0B;&amp;#x65F6;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5230;&amp;#x5F53;&amp;#x524D;&amp;#x624B;&amp;#x6307;&amp;#x6240;&amp;#x5904;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#xFF0C;incrementalDeltaY&amp;#x5219;&amp;#x8868;&amp;#x793A;&amp;#x76F8;&amp;#x90BB;&amp;#x4E24;&amp;#x6B21;&amp;#x5728;Y&amp;#x65B9;&amp;#x5411;&amp;#x4E0A;&amp;#x4F4D;&amp;#x7F6E;&amp;#x7684;&amp;#x6539;&amp;#x53D8;&amp;#x91CF;&amp;#xFF0C;incrementalDeltaY&amp;#x7684;&amp;#x6B63;&amp;#x8D1F;&amp;#x503C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5224;&amp;#x65AD;&amp;#x6211;&amp;#x4EEC;&amp;#x5F53;&amp;#x524D;&amp;#x7684;&amp;#x6ED1;&amp;#x52A8;&amp;#x65B9;&amp;#x5411;&amp;#x4E86;&amp;#x3002;&amp;#xFF08;incrementalDeltaY&amp;#x5C0F;&amp;#x4E8E;0&amp;#xFF0C;&amp;#x8868;&amp;#x793A;&amp;#x5411;&amp;#x4E0B;&amp;#x6ED1;&amp;#x52A8;&amp;#xFF0C;&amp;#x5927;&amp;#x4E8E;0&amp;#x5C31;&amp;#x662F;&amp;#x5411;&amp;#x4E0A;&amp;#x6ED1;&amp;#x52A8;&amp;#xFF09;&amp;#x5728;&amp;#x8FD9;&amp;#x4E2A;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#x4E2D;&amp;#x5C06;&amp;#x4F1A;&amp;#x6839;&amp;#x636E;&amp;#x8FB9;&amp;#x7F18;&amp;#x4F5C;&amp;#x4E3A;&amp;#x5224;&amp;#x65AD;&amp;#x4F9D;&amp;#x636E;&amp;#x5982;&amp;#x679C;&amp;#x5B50;View&amp;#x7684;bottom&amp;#x503C;&amp;#x5C0F;&amp;#x4E8E;top&amp;#x503C;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x8BF4;&amp;#x660E;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5B50;View&amp;#x79FB;&amp;#x51FA;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;RecycleBin&amp;#x7684;addScrapView()&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x8FD9;&amp;#x4E2A;View&amp;#x52A0;&amp;#x5165;&amp;#x5230;&amp;#x5E9F;&amp;#x5F03;&amp;#x7F13;&amp;#x5B58;&amp;#x5F53;&amp;#x4E2D;&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;&amp;#x79FB;&amp;#x51FA;&amp;#x5C4F;&amp;#x5E55;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x754C;&amp;#x9762;&amp;#x663E;&amp;#x793A;&amp;#x7684;&amp;#x5B50;View&amp;#x662F;&amp;#x56FA;&amp;#x5B9A;&amp;#x7684;&amp;#x6240;&amp;#x4EE5;&amp;#x6709;&amp;#x79FB;&amp;#x51FA;&amp;#x5C31;&amp;#x6709;&amp;#x79FB;&amp;#x5165;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x903B;&amp;#x8F91;&amp;#xFF1A;&lt;br&gt;&amp;#x5982;&amp;#x679C;ListView&amp;#x4E2D;&amp;#x6700;&amp;#x540E;&amp;#x4E00;&amp;#x4E2A;View&amp;#x7684;&amp;#x5E95;&amp;#x90E8;&amp;#x5DF2;&amp;#x7ECF;&amp;#x79FB;&amp;#x5165;&amp;#x4E86;&amp;#x5C4F;&amp;#x5E55;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;ListView&amp;#x4E2D;&amp;#x7B2C;&amp;#x4E00;&amp;#x4E2A;View&amp;#x7684;&amp;#x9876;&amp;#x90E8;&amp;#x79FB;&amp;#x5165;&amp;#x4E86;&amp;#x5C4F;&amp;#x5E55;&amp;#xFF0C;&amp;#x5C31;&amp;#x4F1A;&amp;#x8C03; &amp;#x7528;fillGap()&amp;#x65B9;&amp;#x6CD5;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; fillGap(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; down) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; = getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (down) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; paddingTop = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            paddingTop = getListPaddingTop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startOffset = &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? getChildAt(&lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).getBottom() + mDividerHeight :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                paddingTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fillDown(mFirstPosition + &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt;, startOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        correctTooHigh(getChildCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    } &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; paddingBottom = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((mGroupFlags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            paddingBottom = getListPaddingBottom();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; startOffset = &lt;span class=&quot;keyword&quot;&gt;count&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? getChildAt(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).getTop() - mDividerHeight :&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getHeight() - paddingBottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fillUp(mFirstPosition - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, startOffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        correctTooLow(getChildCount());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x989D;&amp;#xFF0C;&amp;#x53C8;&amp;#x56DE;&amp;#x5230;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x6D41;&amp;#x7A0B;&amp;#xFF0C;&amp;#x5728;fillGap&amp;#x53C8;&amp;#x8C03;&amp;#x7528;&amp;#x4E86;fillDown/fillUp&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x77E5;&amp;#x9053;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;makeAndAddView&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;&amp;#x7684;makeAndAddView&amp;#x6D41;&amp;#x7A0B;&amp;#x53C8;&amp;#x548C;&amp;#x4E0A;&amp;#x9762;&amp;#x4E0D;&amp;#x5927;&amp;#x4E00;&amp;#x6837;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x65F6;&amp;#x5019;mRecycler.getActiveView&amp;#x8FD4;&amp;#x56DE;&amp;#x7684;&amp;#x662F;null&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;View &lt;span class=&quot;title&quot;&gt;makeAndAddView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; flow, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; childrenLeft,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; selected)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!mDataChanged) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Try to use an existing view for this position&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        child = mRecycler.getActiveView(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (child != &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Found it -- we&amp;apos;re using an existing child&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// This just needs to be positioned&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            setupChild(child, position, y, flow, childrenLeft, selected, &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Make a new view for this position, or convert an unused view if possible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    child = obtainView(position, mIsScrap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// This needs to be positioned and measured&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setupChild(child, position, y, flow, childrenLeft, selected, mIsScrap[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;null&amp;#x6211;&amp;#x4EEC;&amp;#x518D;&amp;#x6765;&amp;#x770B;&amp;#x4E0B;getActiveView&amp;#xFF1A;&lt;br&gt;&lt;figure class=&quot;highlight axapta&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;View getActiveView(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; = position - mFirstActivePosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View[] activeViews = mActiveViews;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;gt;=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt; &amp;lt; activeViews.length) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; View match = activeViews[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        activeViews[&lt;span class=&quot;keyword&quot;&gt;index&lt;/span&gt;] = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; match;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x4E4B;&amp;#x524D;&amp;#x8FD9;&amp;#x4E2A;&amp;#x65B9;&amp;#x6CD5;&amp;#x5DF2;&amp;#x7ECF;&amp;#x88AB;&amp;#x8C03;&amp;#x7528;&amp;#x8FC7;&amp;#x4E86;&amp;#x5B83;&amp;#x4F1A;&amp;#x5C06;activeViews[index]&amp;#x7F6E;&amp;#x4E3A;null&amp;#x6240;&amp;#x4EE5;&amp;#x8FD8;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;obtainView&amp;#xFF0C;&amp;#x4E0A;&amp;#x9762;&amp;#x5DF2;&amp;#x7ECF;&amp;#x5BF9;&amp;#x8BE5;&amp;#x65B9;&amp;#x6CD5;&amp;#x505A;&amp;#x4E86;&amp;#x5206;&amp;#x6790;&amp;#xFF0C;&amp;#x5B83;&amp;#x4F1A;&amp;#x8C03;&amp;#x7528;getScrapView()&amp;#x65B9;&amp;#x6CD5;&amp;#x6765;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4ECE;&amp;#x5E9F;&amp;#x5F03;&amp;#x7F13;&amp;#x5B58;&amp;#x4E2D;&amp;#x83B7;&amp;#x53D6;&amp;#x4E00;&amp;#x4E2A;View&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6CA1;&amp;#x6709;&amp;#x7684;&amp;#x8BDD;&amp;#x5219;&amp;#x4F1A;inflate&amp;#x4E00;&amp;#x4E2A;&amp;#x8FD4;&amp;#x56DE;&amp;#x3002;&lt;/p&gt;
&lt;h5 id=&quot;ListView&amp;#x7684;&amp;#x4F18;&amp;#x5316;&quot;&gt;&lt;a href=&quot;#ListView&amp;#x7684;&amp;#x4F18;&amp;#x5316;&quot; class=&quot;headerlink&quot; title=&quot;ListView&amp;#x7684;&amp;#x4F18;&amp;#x5316;&quot;&gt;&lt;/a&gt;ListView&amp;#x7684;&amp;#x4F18;&amp;#x5316;&lt;/h5&gt;&lt;p&gt;&amp;#x4E0A;&amp;#x9762;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x53EA;&amp;#x662F;ListView&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#xFF0C;&amp;#x4E86;&amp;#x89E3;&amp;#x4E86;&amp;#x6574;&amp;#x4E2A;&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x540E;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x5145;&amp;#x5206;&amp;#x5229;&amp;#x7528;convertView&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;inflate&amp;#x4E86;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6574;&amp;#x4E2A;ListView&amp;#x53EA;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x5C4F;&amp;#x7684;&amp;#x5E03;&amp;#x5C40;&amp;#xFF0C;&amp;#x4E4B;&amp;#x540E;&amp;#x6ED1;&amp;#x52A8;&amp;#x51FA;&amp;#x6765;&amp;#x7684;item&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;&amp;#x4E4B;&amp;#x524D;&amp;#x5DF2;&amp;#x7ECF;&amp;#x52A0;&amp;#x8F7D;&amp;#x7684;&amp;#x5E03;&amp;#x5C40;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x4E0B;&amp;#x4E0B;&amp;#x9762;&amp;#x7684;getView&amp;#x6211;&amp;#x4EEC;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;ViewHolder&amp;#xFF0C;&amp;#x8FD8;&amp;#x6709;set/getTag&amp;#x8FD9;&amp;#x662F;&amp;#x5E72;&amp;#x5565;&amp;#x7528;&amp;#x7684;&amp;#xFF1F;&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View getView(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; position, View convertView, ViewGroup parent) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewHolder holder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (convertView == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ViewHolder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView = mInflater.inflate(R.layout.vlist2, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.img = (ImageView)convertView.findViewById(R.id.img);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.title = (TextView)convertView.findViewById(R.id.title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.info = (TextView)convertView.findViewById(R.id.info);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder.viewBtn =(Button)convertView.findViewById(R.id.view_btn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView.setTag(holder);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        holder = (ViewHolder)convertView.getTag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.img.setBackgroundResource((Integer)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;img&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.title.setText((&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    holder.info.setText((&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;)mData.&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(position).&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;info&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; convertView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5176;&amp;#x5B9E;&amp;#x4F7F;&amp;#x7528;ViewHolder&amp;#xFF0C;&amp;#x8FD8;&amp;#x6709;set/getTag&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x8282;&amp;#x7701;findViewById&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;ViewHolder&amp;#xFF0C;&amp;#x6BCF;&amp;#x6B21;getView&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x90FD;&amp;#x9700;&amp;#x8981;&amp;#x5F97;&amp;#x5230;&amp;#x4E00;&amp;#x6B21;&amp;#x5B50;&amp;#x5E03;&amp;#x5C40;&amp;#xFF0C;&amp;#x800C;&amp;#x8FD9;&amp;#x4E5F;&amp;#x662F;&amp;#x5F88;&amp;#x8017;&amp;#x65F6;&amp;#x5E76;&amp;#x4E14;&amp;#x8017;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4F7F;&amp;#x7528;&amp;#x4E86;ViewHolder&amp;#x4F5C;&amp;#x4E3A;&amp;#x5B50;&amp;#x5E03;&amp;#x5C40;&amp;#x7684;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x4F7F;&amp;#x7528;View&amp;#x7684;setTag&amp;#x65B9;&amp;#x6CD5;&amp;#x5C06;&amp;#x7F13;&amp;#x5B58;&amp;#x4E0E;&amp;#x6BCF;&amp;#x4E2A;item&amp;#x7ED1;&amp;#x5B9A;&amp;#xFF0C;&amp;#x5219;&amp;#x4E5F;&amp;#x53EF;&amp;#x4EE5;&amp;#x7701;&amp;#x53BB;&amp;#x4E86;findViewById&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#xFF08;&amp;#x8FD9;&amp;#x91CC;&amp;#x6211;&amp;#x4E2A;&amp;#x4EBA;&amp;#x7684;&amp;#x7406;&amp;#x89E3;&amp;#x662F;&amp;#x5C06;id&amp;#x4E0E;ViewHolder&amp;#x4E2D;&amp;#x7684;View&amp;#x7ED1;&amp;#x5B9A;&amp;#x8D77;&amp;#x6765;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x6709;&amp;#x7406;&amp;#x89E3;&amp;#x9519;&amp;#x8BEF;&amp;#x6B22;&amp;#x8FCE;&amp;#x66F4;&amp;#x6B63;&amp;#xFF09;&lt;br&gt;&amp;#x8FD9;&amp;#x91CC;&amp;#x8FD8;&amp;#x9700;&amp;#x8981;&amp;#x6CE8;&amp;#x610F;&amp;#x4E00;&amp;#x70B9;&amp;#x6211;&amp;#x4EEC;&amp;#x4E00;&amp;#x822C;&amp;#x9700;&amp;#x8981;&amp;#x5C06;ViewHolder&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x9759;&amp;#x6001;&amp;#x7684;&amp;#x56E0;&amp;#x4E3A;&amp;#x56E0;&amp;#x4E3A;&amp;#x9759;&amp;#x6001;&amp;#x5185;&amp;#x90E8;&amp;#x7C7B;&amp;#xFF0C;&amp;#x4E0D;&amp;#x6301;&amp;#x6709;&amp;#x5916;&amp;#x90E8;&amp;#x7C7B;&amp;#x7684;&amp;#x5F15;&amp;#x7528;&amp;#xFF0C;&amp;#x4ECE;&amp;#x800C;&amp;#x907F;&amp;#x514D;&amp;#x5185;&amp;#x5B58;&amp;#x6CC4;&amp;#x9732;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x4F18;&amp;#x5316;&amp;#x65B9;&amp;#x5F0F;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;ConvertView&amp;#x590D;&amp;#x7528;&amp;#x673A;&amp;#x5236;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;ViewHolder&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;set/getTag&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ListView Item&amp;#x5E26;&amp;#x6709;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x5728;&amp;#x5F00;&amp;#x53D1;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F1A;&amp;#x9047;&amp;#x5230;ListView&amp;#x4E2D;&amp;#x6BCF;&amp;#x4E2A;item&amp;#x90FD;&amp;#x6709;&amp;#x4E00;&amp;#x4E2A;Image&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5728;Music&amp;#x5E94;&amp;#x7528;&amp;#x4E2D;&amp;#x5341;&amp;#x5206;&amp;#x5E38;&amp;#x89C1;&amp;#xFF0C;&lt;br&gt;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x4E00;&amp;#x822C;&amp;#x5BF9;&amp;#x8FD9;&amp;#x4E9B;&amp;#x56FE;&amp;#x50CF;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x4F7F;&amp;#x7528;&amp;#x56FE;&amp;#x7247;&amp;#x7F13;&amp;#x5B58;&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x5728;&amp;#x52A0;&amp;#x8F7D;&amp;#x8FD9;&amp;#x4E9B;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x4F7F;&amp;#x7528;&amp;#x5F02;&amp;#x6B65;&amp;#x52A0;&amp;#x8F7D;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x4E5F;&amp;#x9762;&amp;#x4E34;&amp;#x8FD9;&amp;#x7A7A;&amp;#x95F4;&amp;#x548C;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x5E73;&amp;#x8861;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;br&gt;&amp;#x8FD9;&amp;#x79CD;&amp;#x60C5;&amp;#x51B5;&amp;#x8FD8;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x65B9;&amp;#x6CD5;&amp;#x5C31;&amp;#x662F;&amp;#x9488;&amp;#x5BF9;&amp;#x56FE;&amp;#x7247;&amp;#x8D44;&amp;#x6E90;&amp;#x8FDB;&amp;#x884C;&amp;#x4F18;&amp;#x5316;&amp;#x6BD4;&amp;#x5982;&amp;#x5728;&amp;#x56FE;&amp;#x7247;&amp;#x89E3;&amp;#x7801;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x964D;&amp;#x4F4E;&amp;#x50CF;&amp;#x7D20;&amp;#x989C;&amp;#x8272;&amp;#x4FE1;&amp;#x606F;&amp;#xFF0C;&amp;#x53BB;&amp;#x6389;&amp;#x900F;&amp;#x660E;&amp;#x5EA6;&amp;#x7B49;&amp;#xFF0C;&amp;#x6216;&amp;#x8005;&amp;#x5728;&amp;#x8BBE;&amp;#x8BA1;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C3D;&amp;#x91CF;&amp;#x51CF;&amp;#x5C0F;&amp;#x56FE;&amp;#x7247;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x5C3A;&amp;#x5BF8;&amp;#x3002;&lt;/p&gt;
&lt;p&gt;&amp;#x4E3A;&amp;#x4E86;&amp;#x907F;&amp;#x514D;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x52A0;&amp;#x8F7D;&amp;#x5728;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x53EF;&amp;#x4EE5;&amp;#x8BBE;&amp;#x7F6E;&amp;#x5728;&amp;#x6ED1;&amp;#x52A8;&amp;#x4E0D;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#x6ED1;&amp;#x52A8;&amp;#x505C;&amp;#x6B62;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5BF9;&amp;#x5E94;&amp;#x7684;&amp;#x5B9E;&amp;#x73B0;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF1A;&lt;br&gt;&amp;#x8F6C;&amp;#x8F7D;&amp;#x81EA; &lt;a href=&quot;http://blog.csdn.net/yy1300326388/article/details/45153813&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/yy1300326388/article/details/45153813&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x5B9A;&amp;#x4E49;&amp;#x5F53;&amp;#x524D;listview&amp;#x662F;&amp;#x5426;&amp;#x5728;&amp;#x6ED1;&amp;#x52A8;&amp;#x72B6;&amp;#x6001;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;  &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; scrollState=&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setScrollState&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; scrollState)&lt;/span&gt; &lt;/span&gt;{&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.scrollState = scrollState;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight actionscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x5B9E;&amp;#x4F53;&amp;#x7C7B;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UserEnity userEnity=lists.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(position);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!scrollState){&lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x4E0D;&amp;#x662F;&amp;#x6ED1;&amp;#x52A8;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x586B;&amp;#x5145;&amp;#x771F;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x586B;&amp;#x5145;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.tv_name.setText(userEnity.getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;Tag&amp;#x4E2D;&amp;#x6570;&amp;#x636E;&amp;#x4E3A;&amp;#x7A7A;&amp;#x8868;&amp;#x793A;&amp;#x6570;&amp;#x636E;&amp;#x5DF2;&amp;#x586B;&amp;#x5145;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.tv_name.setTag(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageLoader.getInstance().displayImage(img_url,viewHolder.iv_icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;tag&amp;#x4E3A;1&amp;#x8868;&amp;#x793A;&amp;#x5DF2;&amp;#x52A0;&amp;#x8F7D;&amp;#x8FC7;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.iv_icon.setTag(&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;{&lt;span class=&quot;comment&quot;&gt;//&amp;#x5982;&amp;#x679C;&amp;#x5F53;&amp;#x524D;&amp;#x662F;&amp;#x6ED1;&amp;#x52A8;&amp;#x7684;&amp;#x72B6;&amp;#x6001;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x586B;&amp;#x5145;&amp;#x5047;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.tv_name.setText(&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E2D;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x6570;&amp;#x636E;name&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;Tag&amp;#x5F53;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.tv_name.setTag(userEnity.getName());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x5C06;&amp;#x6570;&amp;#x636E;image_url&amp;#x4FDD;&amp;#x5B58;&amp;#x5728;Tag&amp;#x5F53;&amp;#x4E2D;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.iv_icon.setTag(img_url);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x9ED8;&amp;#x8BA4;&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&amp;#xFF08;&amp;#x6700;&amp;#x597D;&amp;#x662F;&amp;#x672C;&amp;#x5730;&amp;#x8D44;&amp;#x6E90;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#xFF09;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.iv_icon.setImageResource(R.mipmap.ic_launcher);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#x8BBE;&amp;#x7F6E;&amp;#x76D1;&amp;#x542C;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;annotation&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;typename&quot;&gt;void&lt;/span&gt; onScrollStateChanged(AbsListView view, &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; scrollState) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (scrollState){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AbsListView.OnScrollListener.&lt;span class=&quot;string&quot;&gt;SCROLL_STATE_IDLE:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x505C;&amp;#x6B62;&amp;#x6EDA;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x505C;&amp;#x6B62;&amp;#x6EDA;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myAdapter.setScrollState(&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x5F53;&amp;#x524D;&amp;#x5C4F;&amp;#x5E55;&amp;#x4E2D;listview&amp;#x7684;&amp;#x5B50;&amp;#x9879;&amp;#x7684;&amp;#x4E2A;&amp;#x6570;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; count = view.getChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Log.e(&lt;span class=&quot;string&quot;&gt;&amp;quot;MainActivity&amp;quot;&lt;/span&gt;,count+&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;typename&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5230;item&amp;#x7684;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                TextView tv_name = (TextView) view.getChildAt(i).findViewById(R.id.main_item_tv_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//&amp;#x83B7;&amp;#x53D6;&amp;#x5230;item&amp;#x7684;&amp;#x5934;&amp;#x50CF;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ImageView iv_show= (ImageView) view.getChildAt(i).findViewById(R.id.main_item_iv_icon);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (tv_name.getTag() != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) { &lt;span class=&quot;comment&quot;&gt;//&amp;#x975E;null&amp;#x8BF4;&amp;#x660E;&amp;#x9700;&amp;#x8981;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tv_name.setText(tv_name.getTag().toString());&lt;span class=&quot;comment&quot;&gt;//&amp;#x76F4;&amp;#x63A5;&amp;#x4ECE;Tag&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x6211;&amp;#x4EEC;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x6570;&amp;#x636E;name&amp;#x5E76;&amp;#x4E14;&amp;#x8D4B;&amp;#x503C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tv_name.setTag(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x5DF2;&amp;#x52A0;&amp;#x8F7D;&amp;#x8FC7;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!iv_show.getTag().equals(&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;)){&lt;span class=&quot;comment&quot;&gt;//!=&amp;quot;1&amp;quot;&amp;#x8BF4;&amp;#x660E;&amp;#x9700;&amp;#x8981;&amp;#x52A0;&amp;#x8F7D;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    String image_url=iv_show.getTag().toString();&lt;span class=&quot;comment&quot;&gt;//&amp;#x76F4;&amp;#x63A5;&amp;#x4ECE;Tag&amp;#x4E2D;&amp;#x53D6;&amp;#x51FA;&amp;#x6211;&amp;#x4EEC;&amp;#x5B58;&amp;#x50A8;&amp;#x7684;&amp;#x6570;&amp;#x636E;image&amp;#x2014;&amp;#x2014;url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ImageLoader.getInstance().displayImage(image_url, iv_show);&lt;span class=&quot;comment&quot;&gt;//&amp;#x663E;&amp;#x793A;&amp;#x56FE;&amp;#x7247;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    iv_show.setTag(&lt;span class=&quot;string&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x5DF2;&amp;#x52A0;&amp;#x8F7D;&amp;#x8FC7;&amp;#x6570;&amp;#x636E;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AbsListView.OnScrollListener.&lt;span class=&quot;string&quot;&gt;SCROLL_STATE_FLING:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x6EDA;&amp;#x52A8;&amp;#x505A;&amp;#x51FA;&amp;#x4E86;&amp;#x629B;&amp;#x7684;&amp;#x52A8;&amp;#x4F5C;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x6B63;&amp;#x5728;&amp;#x6EDA;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myAdapter.setScrollState(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; AbsListView.OnScrollListener.&lt;span class=&quot;string&quot;&gt;SCROLL_STATE_TOUCH_SCROLL:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#x6B63;&amp;#x5728;&amp;#x6EDA;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        {&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E3A;&amp;#x6B63;&amp;#x5728;&amp;#x6EDA;&amp;#x52A8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            myAdapter.setScrollState(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;#x5C40;&amp;#x90E8;&amp;#x66F4;&amp;#x65B0;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/nupt123456789/article/details/39432781&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/nupt123456789/article/details/39432781&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/liuling/p/2015-10-20-01.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/liuling/p/2015-10-20-01.html&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; void updateProgressPartly(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; progress,&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;position&lt;/span&gt;){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; firstVisiblePosition = listview.getFirstVisiblePosition();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; lastVisiblePosition = listview.getLastVisiblePosition();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;position&lt;/span&gt;&amp;gt;=firstVisiblePosition &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;position&lt;/span&gt;&amp;lt;=lastVisiblePosition){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View view = listview.getChildAt(&lt;span class=&quot;keyword&quot;&gt;position&lt;/span&gt; - firstVisiblePosition);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(view.getTag() instanceof ViewHolder){&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ViewHolder vh = (ViewHolder)view.getTag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            vh.pb.setProgress(progress);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    }&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;}&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x603B;&amp;#x7ED3;&amp;#x4E00;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;p&gt;&amp;#x5176;&amp;#x5B9E;ListView&amp;#x4F18;&amp;#x5316;&amp;#x7684;&amp;#x6700;&amp;#x6839;&amp;#x672C;&amp;#x9014;&amp;#x5F84;&amp;#x5728;&amp;#x4E8E;getView&amp;#x65B9;&amp;#x6CD5;&amp;#x7684;&amp;#x4F18;&amp;#x5316;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x6211;&amp;#x4EEC;&amp;#x4F18;&amp;#x5316;&amp;#x5C31;&amp;#x9700;&amp;#x8981;&amp;#x5C06;&amp;#x4E00;&amp;#x5207;&amp;#x8017;&amp;#x65F6;&amp;#x7684;&amp;#x64CD;&amp;#x4F5C;&amp;#x4ECE;getView&amp;#x4E2D;&amp;#x62BD;&amp;#x79BB;&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#xFF0C;&amp;#x7F51;&amp;#x7EDC;&amp;#x6570;&amp;#x636E;&amp;#x52A0;&amp;#x8F7D;&amp;#xFF0C;&amp;#x6587;&amp;#x4EF6;&amp;#x52A0;&amp;#x8F7D;&amp;#x3002;&lt;br&gt;&amp;#x56E0;&amp;#x6B64;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x51E0;&amp;#x79CD;&amp;#x9014;&amp;#x5F84;&amp;#x6765;&amp;#x4F18;&amp;#x5316;&amp;#xFF1A;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;#x542F;&amp;#x52A8;&amp;#x7EBF;&amp;#x7A0B;&amp;#x6765;&amp;#x5F02;&amp;#x6B65;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#xFF0C;&amp;#x5728;&amp;#x56FE;&amp;#x7247;&amp;#x5C1A;&amp;#x672A;&amp;#x52A0;&amp;#x8F7D;&amp;#x5B8C;&amp;#x6210;&amp;#x4E4B;&amp;#x524D;&amp;#x5148;&amp;#x7528;&amp;#x7A7A;&amp;#x767D;&amp;#x56FE;&amp;#x7247;&amp;#x5360;&amp;#x4F4D;&lt;/li&gt;
&lt;li&gt;&amp;#x6ED1;&amp;#x52A8;&amp;#x65F6;&amp;#x4E0D;&amp;#x52A0;&amp;#x8F7D;&amp;#x56FE;&amp;#x7247;&amp;#xFF0C;&amp;#x505C;&amp;#x6B62;&amp;#x6ED1;&amp;#x52A8;&amp;#x65F6;&amp;#x52A0;&amp;#x8F7D;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;&amp;#x7F13;&amp;#x5B58;&amp;#x673A;&amp;#x5236;&amp;#x5C06;&amp;#x5176;&amp;#x7F13;&amp;#x5B58;&amp;#x5230;&amp;#x5185;&amp;#x5B58;&amp;#x4E2D;&amp;#xFF08;&amp;#x6CE8;&amp;#x610F;&amp;#x4F7F;&amp;#x7528;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#xFF09;&lt;/li&gt;
&lt;li&gt;&amp;#x5C40;&amp;#x90E8;&amp;#x5237;&amp;#x65B0;&lt;/li&gt;
&lt;li&gt;Item&amp;#x4E2D;&amp;#x7684;&amp;#x63A7;&amp;#x4EF6;&amp;#x5BBD;&amp;#x9AD8;&amp;#x5C3D;&amp;#x91CF;&amp;#x5199;&amp;#x6210;&amp;#x56FA;&amp;#x5B9A;&amp;#x7684;&amp;#x503C;&amp;#x6216;&amp;#x8005;math_parent&amp;#xFF0C;&amp;#x907F;&amp;#x514D;&amp;#x5F71;&amp;#x54CD;&amp;#x5176;&amp;#x4ED6;&amp;#x63A7;&amp;#x4EF6;&amp;#x7684;&amp;#x4F4D;&amp;#x7F6E;&amp;#x5BFC;&amp;#x81F4;&amp;#x91CD;&amp;#x65B0;&amp;#x7ED8;&amp;#x5236;&lt;/li&gt;
&lt;li&gt;&amp;#x51CF;&amp;#x5C11;&amp;#x5E03;&amp;#x5C40;&amp;#x5C42;&amp;#x6B21;&amp;#xFF0C;&amp;#x7F29;&amp;#x77ED;&amp;#x7ED8;&amp;#x5236;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x614E;&amp;#x7528; layout_weight &amp;#x7C7B;&amp;#x4F3C;&amp;#x5C5E;&amp;#x6027;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4FBF;&amp;#x7F29;&amp;#x77ED;&amp;#x5E03;&amp;#x5C40;&amp;#x7684; Measure &amp;#x65F6;&amp;#x95F4;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x4F7F;&amp;#x7528;RecyclerView&amp;#xFF0C;RecyclerView&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x539F;&amp;#x751F;&amp;#x7684;&amp;#x5C40;&amp;#x90E8;&amp;#x5237;&amp;#x65B0;&amp;#x529F;&amp;#x80FD;&lt;/li&gt;
&lt;li&gt;&amp;#x5728;&amp;#x52A0;&amp;#x8F7D;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x4E3A;ImageView&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;Tag&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;imageView.setTag(image_url),&amp;#x4E0B;&amp;#x4E00;&amp;#x6B21;&amp;#x518D;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E4B;&amp;#x524D;&amp;#xFF0C;&amp;#x9996;&amp;#x5148;&amp;#x83B7;&amp;#x53D6;Tag&amp;#xFF0C;&amp;#x6BD4;&amp;#x5982;imageUrl = imageView.getTag(),&amp;#x5982;&amp;#x679C;&amp;#x6B64;&amp;#x65F6;&amp;#x7684;&amp;#x5730;&amp;#x5740;&amp;#x548C;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x5730;&amp;#x5740;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x5C31;&amp;#x4E0D;&amp;#x9700;&amp;#x8981;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E86;&amp;#xFF0C;&amp;#x5982;&amp;#x679C;&amp;#x4E0D;&amp;#x4E00;&amp;#x6837;&amp;#xFF0C;&amp;#x518D;&amp;#x52A0;&amp;#x8F7D;&amp;#x3002;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;#x6700;&amp;#x540E;&amp;#x662F;&amp;#x4E4B;&amp;#x524D;&amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#x9047;&amp;#x5230;&amp;#x7684;&amp;#x4E24;&amp;#x79CD;ListView&amp;#x9519;&amp;#x4F4D;&amp;#x7684;&amp;#x95EE;&amp;#x9898;&amp;#xFF1A;&lt;br&gt;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x5F53;&amp;#x65F6;&amp;#x7684;&amp;#x53C2;&amp;#x8003;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6848;&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x6709;&amp;#x7A7A;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x518D;&amp;#x5BF9;&amp;#x8FD9;&amp;#x90E8;&amp;#x5206;&amp;#x8FDB;&amp;#x884C;&amp;#x4E13;&amp;#x95E8;&amp;#x603B;&amp;#x7ED3;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://www.cnblogs.com/lesliefang/p/3619223.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/lesliefang/p/3619223.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.runoob.com/w3cnote/android-tutorial-listview-checkbox.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.runoob.com/w3cnote/android-tutorial-listview-checkbox.html&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.trinea.cn/android/android-listview-display-error-image-when-scroll/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.trinea.cn/android/android-listview-display-error-image-when-scroll/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x5728;&amp;#x4E4B;&amp;#x524D;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x5DF2;&amp;#x7ECF;&amp;#x4ECB;&amp;#x7ECD;&amp;#x4E86;ListView&amp;#x548C;Adapter&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#
    
    </summary>
    
      <category term="Android 源码分析" scheme="http://yoursite.com/categories/Android-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    
    
      <category term="AOSP 源码" scheme="http://yoursite.com/tags/AOSP-%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Android 进阶之软引用和弱引用</title>
    <link href="http://yoursite.com/2016/07/26/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E8%BD%AF%E5%BC%95%E7%94%A8%E5%92%8C%E5%BC%B1%E5%BC%95%E7%94%A8/"/>
    <id>http://yoursite.com/2016/07/26/Android-进阶之软引用和弱引用/</id>
    <published>2016-07-26T02:56:36.000Z</published>
    <updated>2016-08-05T15:55:00.286Z</updated>
    
    <content type="html">&lt;h4 id=&quot;&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&quot;&gt;&lt;a href=&quot;#&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&quot;&gt;&lt;/a&gt;&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&lt;/h4&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&amp;#x5F15;&amp;#x7528;&amp;#x7C7B;&amp;#x578B;&lt;/th&gt;
&lt;th&gt;&amp;#x56DE;&amp;#x6536;&amp;#x65F6;&amp;#x671F;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#x5F3A;&amp;#x5F15;&amp;#x7528;&lt;/td&gt;
&lt;td&gt;&amp;#x5F53;&amp;#x4EE3;&amp;#x7801;&amp;#x4E2D;&amp;#x663E;&amp;#x793A;&amp;#x6807;&amp;#x793A;&amp;#x8FD9;&amp;#x4E2A;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0D;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&lt;/td&gt;
&lt;td&gt;&amp;#x5185;&amp;#x5B58;&amp;#x4E0D;&amp;#x8DB3;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&lt;/td&gt;
&lt;td&gt;&amp;#x4E0D;&amp;#x7BA1;&amp;#x5185;&amp;#x5B58;&amp;#x662F;&amp;#x5426;&amp;#x5145;&amp;#x8DB3;&amp;#xFF0C;&amp;#x53EA;&amp;#x8981;&amp;#x6267;&amp;#x884C;gc&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x5C31;&amp;#x6709;&amp;#x53EF;&amp;#x80FD;&amp;#x88AB;&amp;#x56DE;&amp;#x6536;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;#x901A;&amp;#x8FC7;&amp;#x4E0A;&amp;#x9762;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x51FA;&amp;#x9664;&amp;#x4E86;&amp;#x5F3A;&amp;#x5F15;&amp;#x7528;&amp;#x5916;&amp;#x5176;&amp;#x4ED6;&amp;#x4E24;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5728;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#x90FD;&amp;#x9700;&amp;#x8981;&amp;#x5224;&amp;#x65AD;&amp;#x662F;&amp;#x5426;&amp;#x88AB;&amp;#x56DE;&amp;#x6536;&amp;#x3002;&lt;/p&gt;
&lt;h4 id=&quot;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x4E0A;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&quot;&gt;&lt;a href=&quot;#&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x4E0A;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x4E0A;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&quot;&gt;&lt;/a&gt;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x548C;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x7684;&amp;#x4F7F;&amp;#x7528;&amp;#x573A;&amp;#x666F;&amp;#x4E0A;&amp;#x7684;&amp;#x533A;&amp;#x522B;&amp;#xFF1A;&lt;/h4&gt;&lt;p&gt;&amp;#x5982;&amp;#x679C;&amp;#x53EA;&amp;#x662F;&amp;#x60F3;&amp;#x907F;&amp;#x514D;OutOfMemory&amp;#x5F02;&amp;#x5E38;&amp;#x7684;&amp;#x53D1;&amp;#x751F;&amp;#xFF0C;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x5BF9;&amp;#x4E8E;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x6027;&amp;#x80FD;&amp;#x66F4;&amp;#x5728;&amp;#x610F;&amp;#xFF0C;&amp;#x60F3;&amp;#x5C3D;&amp;#x5FEB;&amp;#x56DE;&amp;#x6536;&amp;#x4E00;&amp;#x4E9B;&amp;#x5360;&amp;#x7528;&amp;#x5185;&amp;#x5B58;&amp;#x6BD4;&amp;#x8F83;&amp;#x5927;&amp;#x7684;&amp;#x5BF9;&amp;#x8C61;&amp;#xFF0C;&amp;#x5219;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F7F;&amp;#x7528;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;br&gt;&amp;#x53E6;&amp;#x5916;&amp;#x53EF;&amp;#x4EE5;&amp;#x6839;&amp;#x636E;&amp;#x5BF9;&amp;#x8C61;&amp;#x662F;&amp;#x5426;&amp;#x7ECF;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&amp;#x6765;&amp;#x5224;&amp;#x65AD;&amp;#x9009;&amp;#x62E9;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x8FD8;&amp;#x662F;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8BE5;&amp;#x5BF9;&amp;#x8C61;&amp;#x53EF;&amp;#x80FD;&amp;#x4F1A;&amp;#x7ECF;&amp;#x5E38;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#xFF0C;&amp;#x5C31;&amp;#x5C3D;&amp;#x91CF;&amp;#x7528;&amp;#x8F6F;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&amp;#x5982;&amp;#x679C;&amp;#x8BE5;&amp;#x5BF9;&amp;#x8C61;&amp;#x4E0D;&amp;#x88AB;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x53EF;&amp;#x80FD;&amp;#x6027;&amp;#x66F4;&amp;#x5927;&amp;#x4E9B;&amp;#xFF0C;&amp;#x5C31;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x5F31;&amp;#x5F15;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&quot;&gt;&lt;a href=&quot;#&amp;#x4E09;&amp;#x79CD;&amp;#x5F15;&amp;#x7528;&amp;#x5BF9;&amp;#x6BD4;&quot; class=&quot;headerlink&quot; tit
    
    </summary>
    
      <category term="Android进阶" scheme="http://yoursite.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="编程技巧" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Android 进阶之加快启动速度</title>
    <link href="http://yoursite.com/2016/07/25/Android-%E8%BF%9B%E9%98%B6%E4%B9%8B%E5%8A%A0%E5%BF%AB%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6/"/>
    <id>http://yoursite.com/2016/07/25/Android-进阶之加快启动速度/</id>
    <published>2016-07-25T03:10:48.000Z</published>
    <updated>2016-07-28T04:10:37.214Z</updated>
    
    <content type="html">&lt;h4 id=&quot;&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;/a&gt;&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&lt;/h4&gt;&lt;p&gt;&amp;#x5728;Android&amp;#x7CFB;&amp;#x7EDF;&amp;#x4E2D;&amp;#x6709;&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&amp;#x5206;&amp;#x522B;&amp;#x4E3A;&amp;#x51B7;&amp;#x542F;&amp;#x52A8;&amp;#x548C;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#xFF0C;&amp;#x5B9A;&amp;#x4E49;&amp;#x5982;&amp;#x4E0B;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x51B7;&amp;#x542F;&amp;#x52A8;&amp;#xFF1A;&amp;#x51B7;&amp;#x542F;&amp;#x52A8;&amp;#x5C31;&amp;#x662F;&amp;#x901A;&amp;#x8FC7;&amp;#x70B9;&amp;#x51FB;&amp;#x684C;&amp;#x9762;&amp;#x56FE;&amp;#x6807;&amp;#x542F;&amp;#x52A8;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&amp;#x7531;&amp;#x4E8E;&amp;#x540E;&amp;#x53F0;&amp;#x6CA1;&amp;#x6709;&amp;#x8BE5;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x7CFB;&amp;#x7EDF;&amp;#x4F1A;&amp;#x4ECE;Zygote&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;fork&amp;#x521B;&amp;#x5EFA;&amp;#x51FA;&amp;#x4E00;&amp;#x4E2A;&amp;#x65B0;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x5206;&amp;#x914D;&amp;#x7ED9;&amp;#x8BE5;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x4E4B;&amp;#x540E;&amp;#x4F1A;&amp;#x4F9D;&amp;#x6B21;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;Application&amp;#x7C7B;&amp;#x3001;&amp;#x521B;&amp;#x5EFA;MainActivity&amp;#x7C7B;&amp;#x3001;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E3B;&amp;#x9898;&amp;#x6837;&amp;#x5F0F;Theme&amp;#x4E2D;&amp;#x7684;windowBackground&amp;#x7B49;&amp;#x5C5E;&amp;#x6027;&amp;#x8BBE;&amp;#x7F6E;&amp;#x7ED9;MainActivity&amp;#x4EE5;&amp;#x53CA;&amp;#x914D;&amp;#x7F6E;Activity&amp;#x5C42;&amp;#x7EA7;&amp;#x4E0A;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x5C5E;&amp;#x6027;&amp;#x3001;&amp;#x518D;inflate&amp;#x5E03;&amp;#x5C40;&amp;#x3001;&amp;#x5F53;onCreate/onStart/onResume&amp;#x65B9;&amp;#x6CD5;&amp;#x90FD;&amp;#x8D70;&amp;#x5B8C;&amp;#x4E86;&amp;#x540E;&amp;#x6700;&amp;#x540E;&amp;#x624D;&amp;#x8FDB;&amp;#x884C;contentView&amp;#x7684;measure/layout/draw&amp;#x663E;&amp;#x793A;&amp;#x5728;&amp;#x754C;&amp;#x9762;&amp;#x4E0A;&amp;#x3002;&lt;br&gt;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5982;&amp;#x4E0B;&amp;#x6240;&amp;#x793A;&amp;#xFF1A;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Application&amp;#x6784;&amp;#x9020; &amp;#x2014;&amp;#x2014;&amp;gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;attachBaseContext&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#x2014;&amp;#x2014;&amp;gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#x2014;&amp;#x2014;&amp;gt;Activity&amp;#x7684;&amp;#x6784;&amp;#x9020;&amp;#x65B9;&amp;#x6CD5;&amp;#x2014;&amp;#x2014;&amp;gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onCreate&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#x2014;&amp;#x2014;&amp;gt;&amp;#x914D;&amp;#x7F6E;&amp;#x4E3B;&amp;#x9898;&amp;#x4E2D;&amp;#x80CC;&amp;#x666F;&amp;#x7B49;&amp;#x5C5E;&amp;#x6027;&amp;#x2014;&amp;#x2014;&amp;gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onStart&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#x2014;&amp;#x2014;&amp;gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;onResume&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#x2014;&amp;#x2014;&amp;gt;&amp;#x6D4B;&amp;#x91CF;&amp;#x5E03;&amp;#x5C40;&amp;#x7ED8;&amp;#x5236;&amp;#x663E;&amp;#x793A;&amp;#x5728;&amp;#x754C;&amp;#x9762;&amp;#x4E0A;&amp;#x3002;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#xFF1A;&amp;#x5F53;&amp;#x542F;&amp;#x52A8;&amp;#x5E94;&amp;#x7528;&amp;#x65F6;&amp;#xFF0C;&amp;#x540E;&amp;#x53F0;&amp;#x5DF2;&amp;#x6709;&amp;#x8BE5;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x5728;&amp;#x5DF2;&amp;#x6709;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x60C5;&amp;#x51B5;&amp;#x4E0B;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x4F1A;&amp;#x4ECE;&amp;#x5DF2;&amp;#x6709;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6765;&amp;#x542F;&amp;#x52A8;&amp;#x5E94;&amp;#x7528;&amp;#xFF0C;&amp;#x8FD9;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x53EB;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#x3002;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#x56E0;&amp;#x4E3A;&amp;#x4F1A;&amp;#x4ECE;&amp;#x5DF2;&amp;#x6709;&amp;#x7684;&amp;#x8FDB;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6765;&amp;#x542F;&amp;#x52A8;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#x5C31;&amp;#x4E0D;&amp;#x4F1A;&amp;#x8D70;Application&amp;#x8FD9;&amp;#x6B65;&amp;#x4E86;&amp;#xFF0C;&amp;#x800C;&amp;#x662F;&amp;#x76F4;&amp;#x63A5;&amp;#x8D70;MainActivity&amp;#xFF08;&amp;#x5305;&amp;#x62EC;&amp;#x4E00;&amp;#x7CFB;&amp;#x5217;&amp;#x7684;&amp;#x6D4B;&amp;#x91CF;&amp;#x3001;&amp;#x5E03;&amp;#x5C40;&amp;#x3001;&amp;#x7ED8;&amp;#x5236;&amp;#xFF09;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x70ED;&amp;#x542F;&amp;#x52A8;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E00;&amp;#x4E2A;MainActivity&amp;#x5C31;&amp;#x884C;&amp;#x4E86;&amp;#xFF0C;&amp;#x800C;&amp;#x4E0D;&amp;#x5FC5;&amp;#x521B;&amp;#x5EFA;&amp;#x548C;&amp;#x521D;&amp;#x59CB;&amp;#x5316;Application&amp;#xFF0C;&amp;#x56E0;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5E94;&amp;#x7528;&amp;#x4ECE;&amp;#x65B0;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x521B;&amp;#x5EFA;&amp;#x5230;&amp;#x8FDB;&amp;#x7A0B;&amp;#x7684;&amp;#x9500;&amp;#x6BC1;&amp;#xFF0C;Application&amp;#x53EA;&amp;#x4F1A;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x4E00;&amp;#x6B21;&amp;#x3002;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x6D4B;&amp;#x91CF;&quot;&gt;&lt;a href=&quot;#&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x6D4B;&amp;#x91CF;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x6D4B;&amp;#x91CF;&quot;&gt;&lt;/a&gt;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x548C;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x6D4B;&amp;#x91CF;&lt;/h4&gt;&lt;p&gt;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x6307;&amp;#x7684;&amp;#x662F;&amp;#x4ECE;&amp;#x70B9;&amp;#x51FB;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x542F;&amp;#x52A8;&amp;#x56FE;&amp;#x6807;&amp;#x5F00;&amp;#x59CB;&amp;#x76F4;&amp;#x5230;&amp;#x6211;&amp;#x4EEC;&amp;#x770B;&amp;#x5230;&amp;#x4E86;&amp;#x754C;&amp;#x9762;&amp;#x7684;&amp;#x7B2C;&amp;#x4E00;&amp;#x5E27;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;&amp;#x5C31;&amp;#x662F;&amp;#x5E94;&amp;#x7528;&amp;#x7684;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x3002;&amp;#x5E94;&amp;#x7528;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x5982;&amp;#x4E0B;&amp;#x65B9;&amp;#x5F0F;&amp;#x8FDB;&amp;#x884C;&amp;#x6D4B;&amp;#x91CF;&amp;#xFF1A;&lt;/p&gt;
&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell am start -W &lt;span class=&quot;string&quot;&gt;[packageName]&lt;/span&gt;/&lt;span class=&quot;string&quot;&gt;[packageName.MainActivity]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;&amp;#x51CF;&amp;#x5C0F;&amp;#x5E94;&amp;#x7528;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&quot;&gt;&lt;a href=&quot;#&amp;#x51CF;&amp;#x5C0F;&amp;#x5E94;&amp;#x7528;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x51CF;&amp;#x5C0F;&amp;#x5E94;&amp;#x7528;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&quot;&gt;&lt;/a&gt;&amp;#x51CF;&amp;#x5C0F;&amp;#x5E94;&amp;#x7528;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&amp;#x5728;Application&amp;#x7684;onCreate()&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x4E0D;&amp;#x8981;&amp;#x8FDB;&amp;#x884C;&amp;#x8017;&amp;#x65F6;&amp;#x64CD;&amp;#x4F5C;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#xFF0C;&amp;#x5C3D;&amp;#x91CF;&amp;#x5C06;&amp;#x8017;&amp;#x65F6;&amp;#x95F4;&amp;#x64CD;&amp;#x4F5C;&amp;#x653E;&amp;#x5728;&amp;#x540E;&amp;#x53F0;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5F02;&amp;#x6B65;&amp;#x5904;&amp;#x7406;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x5BF9;&amp;#x4E8E;MainActivity&amp;#xFF0C;&amp;#x7531;&amp;#x4E8E;&amp;#x5728;&amp;#x83B7;&amp;#x53D6;&amp;#x5230;&amp;#x7B2C;&amp;#x4E00;&amp;#x5E27;&amp;#x524D;&amp;#xFF0C;&amp;#x9700;&amp;#x8981;&amp;#x5BF9;&amp;#x5E03;&amp;#x5C40;&amp;#x8FDB;&amp;#x884C;&amp;#x6D4B;&amp;#x91CF;&amp;#x7ED8;&amp;#x5236;&amp;#x64CD;&amp;#x4F5C;&amp;#x6240;&amp;#x4EE5;&amp;#x5C3D;&amp;#x91CF;&amp;#x51CF;&amp;#x5C11;&amp;#x5E03;&amp;#x5C40;&amp;#x7684;&amp;#x5C42;&amp;#x6B21;&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x91C7;&amp;#x7528;ViewStab&amp;#x5EF6;&amp;#x8FDF;&amp;#x52A0;&amp;#x8F7D;&amp;#x7B56;&amp;#x7565;&amp;#xFF0C;&amp;#x5E76;&amp;#x5728;onCreate&amp;#x3001;onStart&amp;#x3001;onResume&amp;#x65B9;&amp;#x6CD5;&amp;#x4E2D;&amp;#x907F;&amp;#x514D;&amp;#x505A;&amp;#x8017;&amp;#x65F6;&amp;#x64CD;&amp;#x4F5C;&amp;#x3002;&lt;/li&gt;
&lt;li&gt;&amp;#x7531;&amp;#x4E8E;&amp;#x5728;&amp;#x51B7;&amp;#x542F;&amp;#x52A8;&amp;#x65F6;&amp;#x523B;&amp;#xFF0C;WindowManager&amp;#x4F1A;&amp;#x5148;&amp;#x52A0;&amp;#x8F7D;app&amp;#x4E3B;&amp;#x9898;&amp;#x6837;&amp;#x5F0F;&amp;#x4E2D;&amp;#x7684;windowBackground&amp;#x505A;&amp;#x4E3A;app&amp;#x7684;&amp;#x9884;&amp;#x89C8;&amp;#x5143;&amp;#x7D20;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x518D;&amp;#x771F;&amp;#x6B63;&amp;#x53BB;&amp;#x52A0;&amp;#x8F7D;activity&amp;#x7684;layout&amp;#x5E03;&amp;#x5C40;&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x4EE5;&amp;#x901A;&amp;#x8FC7;&amp;#x7ED9;windowBackground&amp;#x8BBE;&amp;#x7F6E;&amp;#x4E00;&amp;#x4E2A;&amp;#x56FE;&amp;#x7247;&amp;#x5728;&amp;#x89C6;&amp;#x89C9;&amp;#x4E0A;&amp;#x6765;&amp;#x9A97;&amp;#x8FC7;&amp;#x7528;&amp;#x6237;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;#x63A8;&amp;#x8350;&amp;#x4F7F;&amp;#x7528;&amp;#x5982;&amp;#x4E0B;&amp;#x7684;&amp;#x89E3;&amp;#x51B3;&amp;#x65B9;&amp;#x6848;&amp;#xFF0C;&amp;#x6211;&amp;#x8FD9;&amp;#x8FB9;&amp;#x5C1D;&amp;#x8BD5;&amp;#x4E86;&amp;#x4E0B;&amp;#x8FD8;&amp;#x662F;&amp;#x6709;&amp;#x6548;&amp;#x679C;&amp;#x7684;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x5982;&amp;#x679C;&amp;#x672C;&amp;#x8EAB;&amp;#x5E94;&amp;#x7528;&amp;#x5728;&amp;#x8FD9;&amp;#x6BB5;&amp;#x65F6;&amp;#x95F4;&amp;#x5982;&amp;#x679C;&amp;#x5C31;&amp;#x6CA1;&amp;#x5904;&amp;#x7406;&amp;#x4EC0;&amp;#x4E48;&amp;#x4E8B;&amp;#x60C5;&amp;#xFF0C;&amp;#x5C31;&amp;#x6BD4;&amp;#x8F83;&amp;#x96BE;&amp;#x770B;&amp;#x51FA;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6548;&amp;#x679C;&amp;#x4E86;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;https://github.com/DreaminginCodeZH/MaterialColdStart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/DreaminginCodeZH/MaterialColdStart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;#x82F1;&amp;#x6587;&amp;#x4E0D;&amp;#x597D;&amp;#x7684;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x4E0B;&amp;#x4E0B;&amp;#x9762;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#xFF1A;&lt;br&gt;&lt;a href=&quot;http://blog.csdn.net/ccsutofly/article/details/49990939&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/ccsutofly/article/details/49990939&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&quot;&gt;&lt;a href=&quot;#&amp;#x4E24;&amp;#x79CD;&amp;#x542F;&amp;#x52A8;&amp;#x65B9;&amp;#x5F0F;&quot; class=&quot;headerlink&quot; tit
    
    </summary>
    
      <category term="Android进阶" scheme="http://yoursite.com/categories/Android%E8%BF%9B%E9%98%B6/"/>
    
    
      <category term="Android性能优化" scheme="http://yoursite.com/tags/Android%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
